// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VideofilterProfileFortiguardCategory struct {
	// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
	Filters []VideofilterProfileFortiguardCategoryFilter `pulumi:"filters"`
}

// VideofilterProfileFortiguardCategoryInput is an input type that accepts VideofilterProfileFortiguardCategoryArgs and VideofilterProfileFortiguardCategoryOutput values.
// You can construct a concrete instance of `VideofilterProfileFortiguardCategoryInput` via:
//
//	VideofilterProfileFortiguardCategoryArgs{...}
type VideofilterProfileFortiguardCategoryInput interface {
	pulumi.Input

	ToVideofilterProfileFortiguardCategoryOutput() VideofilterProfileFortiguardCategoryOutput
	ToVideofilterProfileFortiguardCategoryOutputWithContext(context.Context) VideofilterProfileFortiguardCategoryOutput
}

type VideofilterProfileFortiguardCategoryArgs struct {
	// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
	Filters VideofilterProfileFortiguardCategoryFilterArrayInput `pulumi:"filters"`
}

func (VideofilterProfileFortiguardCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterProfileFortiguardCategory)(nil)).Elem()
}

func (i VideofilterProfileFortiguardCategoryArgs) ToVideofilterProfileFortiguardCategoryOutput() VideofilterProfileFortiguardCategoryOutput {
	return i.ToVideofilterProfileFortiguardCategoryOutputWithContext(context.Background())
}

func (i VideofilterProfileFortiguardCategoryArgs) ToVideofilterProfileFortiguardCategoryOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterProfileFortiguardCategoryOutput)
}

func (i VideofilterProfileFortiguardCategoryArgs) ToVideofilterProfileFortiguardCategoryPtrOutput() VideofilterProfileFortiguardCategoryPtrOutput {
	return i.ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (i VideofilterProfileFortiguardCategoryArgs) ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterProfileFortiguardCategoryOutput).ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(ctx)
}

// VideofilterProfileFortiguardCategoryPtrInput is an input type that accepts VideofilterProfileFortiguardCategoryArgs, VideofilterProfileFortiguardCategoryPtr and VideofilterProfileFortiguardCategoryPtrOutput values.
// You can construct a concrete instance of `VideofilterProfileFortiguardCategoryPtrInput` via:
//
//	        VideofilterProfileFortiguardCategoryArgs{...}
//
//	or:
//
//	        nil
type VideofilterProfileFortiguardCategoryPtrInput interface {
	pulumi.Input

	ToVideofilterProfileFortiguardCategoryPtrOutput() VideofilterProfileFortiguardCategoryPtrOutput
	ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(context.Context) VideofilterProfileFortiguardCategoryPtrOutput
}

type videofilterProfileFortiguardCategoryPtrType VideofilterProfileFortiguardCategoryArgs

func VideofilterProfileFortiguardCategoryPtr(v *VideofilterProfileFortiguardCategoryArgs) VideofilterProfileFortiguardCategoryPtrInput {
	return (*videofilterProfileFortiguardCategoryPtrType)(v)
}

func (*videofilterProfileFortiguardCategoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideofilterProfileFortiguardCategory)(nil)).Elem()
}

func (i *videofilterProfileFortiguardCategoryPtrType) ToVideofilterProfileFortiguardCategoryPtrOutput() VideofilterProfileFortiguardCategoryPtrOutput {
	return i.ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (i *videofilterProfileFortiguardCategoryPtrType) ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterProfileFortiguardCategoryPtrOutput)
}

type VideofilterProfileFortiguardCategoryOutput struct{ *pulumi.OutputState }

func (VideofilterProfileFortiguardCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterProfileFortiguardCategory)(nil)).Elem()
}

func (o VideofilterProfileFortiguardCategoryOutput) ToVideofilterProfileFortiguardCategoryOutput() VideofilterProfileFortiguardCategoryOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryOutput) ToVideofilterProfileFortiguardCategoryOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryOutput) ToVideofilterProfileFortiguardCategoryPtrOutput() VideofilterProfileFortiguardCategoryPtrOutput {
	return o.ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (o VideofilterProfileFortiguardCategoryOutput) ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideofilterProfileFortiguardCategory) *VideofilterProfileFortiguardCategory {
		return &v
	}).(VideofilterProfileFortiguardCategoryPtrOutput)
}

// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
func (o VideofilterProfileFortiguardCategoryOutput) Filters() VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return o.ApplyT(func(v VideofilterProfileFortiguardCategory) []VideofilterProfileFortiguardCategoryFilter {
		return v.Filters
	}).(VideofilterProfileFortiguardCategoryFilterArrayOutput)
}

type VideofilterProfileFortiguardCategoryPtrOutput struct{ *pulumi.OutputState }

func (VideofilterProfileFortiguardCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideofilterProfileFortiguardCategory)(nil)).Elem()
}

func (o VideofilterProfileFortiguardCategoryPtrOutput) ToVideofilterProfileFortiguardCategoryPtrOutput() VideofilterProfileFortiguardCategoryPtrOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryPtrOutput) ToVideofilterProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryPtrOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryPtrOutput) Elem() VideofilterProfileFortiguardCategoryOutput {
	return o.ApplyT(func(v *VideofilterProfileFortiguardCategory) VideofilterProfileFortiguardCategory {
		if v != nil {
			return *v
		}
		var ret VideofilterProfileFortiguardCategory
		return ret
	}).(VideofilterProfileFortiguardCategoryOutput)
}

// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
func (o VideofilterProfileFortiguardCategoryPtrOutput) Filters() VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return o.ApplyT(func(v *VideofilterProfileFortiguardCategory) []VideofilterProfileFortiguardCategoryFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(VideofilterProfileFortiguardCategoryFilterArrayOutput)
}

type VideofilterProfileFortiguardCategoryFilter struct {
	// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
	Action *string `pulumi:"action"`
	// Category ID.
	CategoryId *int `pulumi:"categoryId"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// VideofilterProfileFortiguardCategoryFilterInput is an input type that accepts VideofilterProfileFortiguardCategoryFilterArgs and VideofilterProfileFortiguardCategoryFilterOutput values.
// You can construct a concrete instance of `VideofilterProfileFortiguardCategoryFilterInput` via:
//
//	VideofilterProfileFortiguardCategoryFilterArgs{...}
type VideofilterProfileFortiguardCategoryFilterInput interface {
	pulumi.Input

	ToVideofilterProfileFortiguardCategoryFilterOutput() VideofilterProfileFortiguardCategoryFilterOutput
	ToVideofilterProfileFortiguardCategoryFilterOutputWithContext(context.Context) VideofilterProfileFortiguardCategoryFilterOutput
}

type VideofilterProfileFortiguardCategoryFilterArgs struct {
	// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Category ID.
	CategoryId pulumi.IntPtrInput `pulumi:"categoryId"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (VideofilterProfileFortiguardCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (i VideofilterProfileFortiguardCategoryFilterArgs) ToVideofilterProfileFortiguardCategoryFilterOutput() VideofilterProfileFortiguardCategoryFilterOutput {
	return i.ToVideofilterProfileFortiguardCategoryFilterOutputWithContext(context.Background())
}

func (i VideofilterProfileFortiguardCategoryFilterArgs) ToVideofilterProfileFortiguardCategoryFilterOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterProfileFortiguardCategoryFilterOutput)
}

// VideofilterProfileFortiguardCategoryFilterArrayInput is an input type that accepts VideofilterProfileFortiguardCategoryFilterArray and VideofilterProfileFortiguardCategoryFilterArrayOutput values.
// You can construct a concrete instance of `VideofilterProfileFortiguardCategoryFilterArrayInput` via:
//
//	VideofilterProfileFortiguardCategoryFilterArray{ VideofilterProfileFortiguardCategoryFilterArgs{...} }
type VideofilterProfileFortiguardCategoryFilterArrayInput interface {
	pulumi.Input

	ToVideofilterProfileFortiguardCategoryFilterArrayOutput() VideofilterProfileFortiguardCategoryFilterArrayOutput
	ToVideofilterProfileFortiguardCategoryFilterArrayOutputWithContext(context.Context) VideofilterProfileFortiguardCategoryFilterArrayOutput
}

type VideofilterProfileFortiguardCategoryFilterArray []VideofilterProfileFortiguardCategoryFilterInput

func (VideofilterProfileFortiguardCategoryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VideofilterProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (i VideofilterProfileFortiguardCategoryFilterArray) ToVideofilterProfileFortiguardCategoryFilterArrayOutput() VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return i.ToVideofilterProfileFortiguardCategoryFilterArrayOutputWithContext(context.Background())
}

func (i VideofilterProfileFortiguardCategoryFilterArray) ToVideofilterProfileFortiguardCategoryFilterArrayOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterProfileFortiguardCategoryFilterArrayOutput)
}

type VideofilterProfileFortiguardCategoryFilterOutput struct{ *pulumi.OutputState }

func (VideofilterProfileFortiguardCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (o VideofilterProfileFortiguardCategoryFilterOutput) ToVideofilterProfileFortiguardCategoryFilterOutput() VideofilterProfileFortiguardCategoryFilterOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryFilterOutput) ToVideofilterProfileFortiguardCategoryFilterOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryFilterOutput {
	return o
}

// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
func (o VideofilterProfileFortiguardCategoryFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideofilterProfileFortiguardCategoryFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Category ID.
func (o VideofilterProfileFortiguardCategoryFilterOutput) CategoryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VideofilterProfileFortiguardCategoryFilter) *int { return v.CategoryId }).(pulumi.IntPtrOutput)
}

// ID.
func (o VideofilterProfileFortiguardCategoryFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VideofilterProfileFortiguardCategoryFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o VideofilterProfileFortiguardCategoryFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideofilterProfileFortiguardCategoryFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type VideofilterProfileFortiguardCategoryFilterArrayOutput struct{ *pulumi.OutputState }

func (VideofilterProfileFortiguardCategoryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VideofilterProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (o VideofilterProfileFortiguardCategoryFilterArrayOutput) ToVideofilterProfileFortiguardCategoryFilterArrayOutput() VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryFilterArrayOutput) ToVideofilterProfileFortiguardCategoryFilterArrayOutputWithContext(ctx context.Context) VideofilterProfileFortiguardCategoryFilterArrayOutput {
	return o
}

func (o VideofilterProfileFortiguardCategoryFilterArrayOutput) Index(i pulumi.IntInput) VideofilterProfileFortiguardCategoryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VideofilterProfileFortiguardCategoryFilter {
		return vs[0].([]VideofilterProfileFortiguardCategoryFilter)[vs[1].(int)]
	}).(VideofilterProfileFortiguardCategoryFilterOutput)
}

type VideofilterYoutubechannelfilterEntry struct {
	// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
	Action *string `pulumi:"action"`
	// Channel ID.
	ChannelId *string `pulumi:"channelId"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
}

// VideofilterYoutubechannelfilterEntryInput is an input type that accepts VideofilterYoutubechannelfilterEntryArgs and VideofilterYoutubechannelfilterEntryOutput values.
// You can construct a concrete instance of `VideofilterYoutubechannelfilterEntryInput` via:
//
//	VideofilterYoutubechannelfilterEntryArgs{...}
type VideofilterYoutubechannelfilterEntryInput interface {
	pulumi.Input

	ToVideofilterYoutubechannelfilterEntryOutput() VideofilterYoutubechannelfilterEntryOutput
	ToVideofilterYoutubechannelfilterEntryOutputWithContext(context.Context) VideofilterYoutubechannelfilterEntryOutput
}

type VideofilterYoutubechannelfilterEntryArgs struct {
	// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Channel ID.
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (VideofilterYoutubechannelfilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterYoutubechannelfilterEntry)(nil)).Elem()
}

func (i VideofilterYoutubechannelfilterEntryArgs) ToVideofilterYoutubechannelfilterEntryOutput() VideofilterYoutubechannelfilterEntryOutput {
	return i.ToVideofilterYoutubechannelfilterEntryOutputWithContext(context.Background())
}

func (i VideofilterYoutubechannelfilterEntryArgs) ToVideofilterYoutubechannelfilterEntryOutputWithContext(ctx context.Context) VideofilterYoutubechannelfilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterYoutubechannelfilterEntryOutput)
}

// VideofilterYoutubechannelfilterEntryArrayInput is an input type that accepts VideofilterYoutubechannelfilterEntryArray and VideofilterYoutubechannelfilterEntryArrayOutput values.
// You can construct a concrete instance of `VideofilterYoutubechannelfilterEntryArrayInput` via:
//
//	VideofilterYoutubechannelfilterEntryArray{ VideofilterYoutubechannelfilterEntryArgs{...} }
type VideofilterYoutubechannelfilterEntryArrayInput interface {
	pulumi.Input

	ToVideofilterYoutubechannelfilterEntryArrayOutput() VideofilterYoutubechannelfilterEntryArrayOutput
	ToVideofilterYoutubechannelfilterEntryArrayOutputWithContext(context.Context) VideofilterYoutubechannelfilterEntryArrayOutput
}

type VideofilterYoutubechannelfilterEntryArray []VideofilterYoutubechannelfilterEntryInput

func (VideofilterYoutubechannelfilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VideofilterYoutubechannelfilterEntry)(nil)).Elem()
}

func (i VideofilterYoutubechannelfilterEntryArray) ToVideofilterYoutubechannelfilterEntryArrayOutput() VideofilterYoutubechannelfilterEntryArrayOutput {
	return i.ToVideofilterYoutubechannelfilterEntryArrayOutputWithContext(context.Background())
}

func (i VideofilterYoutubechannelfilterEntryArray) ToVideofilterYoutubechannelfilterEntryArrayOutputWithContext(ctx context.Context) VideofilterYoutubechannelfilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterYoutubechannelfilterEntryArrayOutput)
}

type VideofilterYoutubechannelfilterEntryOutput struct{ *pulumi.OutputState }

func (VideofilterYoutubechannelfilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideofilterYoutubechannelfilterEntry)(nil)).Elem()
}

func (o VideofilterYoutubechannelfilterEntryOutput) ToVideofilterYoutubechannelfilterEntryOutput() VideofilterYoutubechannelfilterEntryOutput {
	return o
}

func (o VideofilterYoutubechannelfilterEntryOutput) ToVideofilterYoutubechannelfilterEntryOutputWithContext(ctx context.Context) VideofilterYoutubechannelfilterEntryOutput {
	return o
}

// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
func (o VideofilterYoutubechannelfilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideofilterYoutubechannelfilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Channel ID.
func (o VideofilterYoutubechannelfilterEntryOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideofilterYoutubechannelfilterEntry) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// Comment.
func (o VideofilterYoutubechannelfilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideofilterYoutubechannelfilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o VideofilterYoutubechannelfilterEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VideofilterYoutubechannelfilterEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type VideofilterYoutubechannelfilterEntryArrayOutput struct{ *pulumi.OutputState }

func (VideofilterYoutubechannelfilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VideofilterYoutubechannelfilterEntry)(nil)).Elem()
}

func (o VideofilterYoutubechannelfilterEntryArrayOutput) ToVideofilterYoutubechannelfilterEntryArrayOutput() VideofilterYoutubechannelfilterEntryArrayOutput {
	return o
}

func (o VideofilterYoutubechannelfilterEntryArrayOutput) ToVideofilterYoutubechannelfilterEntryArrayOutputWithContext(ctx context.Context) VideofilterYoutubechannelfilterEntryArrayOutput {
	return o
}

func (o VideofilterYoutubechannelfilterEntryArrayOutput) Index(i pulumi.IntInput) VideofilterYoutubechannelfilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VideofilterYoutubechannelfilterEntry {
		return vs[0].([]VideofilterYoutubechannelfilterEntry)[vs[1].(int)]
	}).(VideofilterYoutubechannelfilterEntryOutput)
}

type VoipProfileMsrp struct {
	// Enable/disable logging of MSRP violations. Valid values: `disable`, `enable`.
	LogViolations *string `pulumi:"logViolations"`
	// Maximum allowable MSRP message size (1-65535).
	MaxMsgSize *int `pulumi:"maxMsgSize"`
	// Action for violation of max-msg-size. Valid values: `pass`, `block`, `reset`, `monitor`.
	MaxMsgSizeAction *string `pulumi:"maxMsgSizeAction"`
	// Enable/disable MSRP. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// VoipProfileMsrpInput is an input type that accepts VoipProfileMsrpArgs and VoipProfileMsrpOutput values.
// You can construct a concrete instance of `VoipProfileMsrpInput` via:
//
//	VoipProfileMsrpArgs{...}
type VoipProfileMsrpInput interface {
	pulumi.Input

	ToVoipProfileMsrpOutput() VoipProfileMsrpOutput
	ToVoipProfileMsrpOutputWithContext(context.Context) VoipProfileMsrpOutput
}

type VoipProfileMsrpArgs struct {
	// Enable/disable logging of MSRP violations. Valid values: `disable`, `enable`.
	LogViolations pulumi.StringPtrInput `pulumi:"logViolations"`
	// Maximum allowable MSRP message size (1-65535).
	MaxMsgSize pulumi.IntPtrInput `pulumi:"maxMsgSize"`
	// Action for violation of max-msg-size. Valid values: `pass`, `block`, `reset`, `monitor`.
	MaxMsgSizeAction pulumi.StringPtrInput `pulumi:"maxMsgSizeAction"`
	// Enable/disable MSRP. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VoipProfileMsrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileMsrp)(nil)).Elem()
}

func (i VoipProfileMsrpArgs) ToVoipProfileMsrpOutput() VoipProfileMsrpOutput {
	return i.ToVoipProfileMsrpOutputWithContext(context.Background())
}

func (i VoipProfileMsrpArgs) ToVoipProfileMsrpOutputWithContext(ctx context.Context) VoipProfileMsrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileMsrpOutput)
}

func (i VoipProfileMsrpArgs) ToVoipProfileMsrpPtrOutput() VoipProfileMsrpPtrOutput {
	return i.ToVoipProfileMsrpPtrOutputWithContext(context.Background())
}

func (i VoipProfileMsrpArgs) ToVoipProfileMsrpPtrOutputWithContext(ctx context.Context) VoipProfileMsrpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileMsrpOutput).ToVoipProfileMsrpPtrOutputWithContext(ctx)
}

// VoipProfileMsrpPtrInput is an input type that accepts VoipProfileMsrpArgs, VoipProfileMsrpPtr and VoipProfileMsrpPtrOutput values.
// You can construct a concrete instance of `VoipProfileMsrpPtrInput` via:
//
//	        VoipProfileMsrpArgs{...}
//
//	or:
//
//	        nil
type VoipProfileMsrpPtrInput interface {
	pulumi.Input

	ToVoipProfileMsrpPtrOutput() VoipProfileMsrpPtrOutput
	ToVoipProfileMsrpPtrOutputWithContext(context.Context) VoipProfileMsrpPtrOutput
}

type voipProfileMsrpPtrType VoipProfileMsrpArgs

func VoipProfileMsrpPtr(v *VoipProfileMsrpArgs) VoipProfileMsrpPtrInput {
	return (*voipProfileMsrpPtrType)(v)
}

func (*voipProfileMsrpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileMsrp)(nil)).Elem()
}

func (i *voipProfileMsrpPtrType) ToVoipProfileMsrpPtrOutput() VoipProfileMsrpPtrOutput {
	return i.ToVoipProfileMsrpPtrOutputWithContext(context.Background())
}

func (i *voipProfileMsrpPtrType) ToVoipProfileMsrpPtrOutputWithContext(ctx context.Context) VoipProfileMsrpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileMsrpPtrOutput)
}

type VoipProfileMsrpOutput struct{ *pulumi.OutputState }

func (VoipProfileMsrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileMsrp)(nil)).Elem()
}

func (o VoipProfileMsrpOutput) ToVoipProfileMsrpOutput() VoipProfileMsrpOutput {
	return o
}

func (o VoipProfileMsrpOutput) ToVoipProfileMsrpOutputWithContext(ctx context.Context) VoipProfileMsrpOutput {
	return o
}

func (o VoipProfileMsrpOutput) ToVoipProfileMsrpPtrOutput() VoipProfileMsrpPtrOutput {
	return o.ToVoipProfileMsrpPtrOutputWithContext(context.Background())
}

func (o VoipProfileMsrpOutput) ToVoipProfileMsrpPtrOutputWithContext(ctx context.Context) VoipProfileMsrpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VoipProfileMsrp) *VoipProfileMsrp {
		return &v
	}).(VoipProfileMsrpPtrOutput)
}

// Enable/disable logging of MSRP violations. Valid values: `disable`, `enable`.
func (o VoipProfileMsrpOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileMsrp) *string { return v.LogViolations }).(pulumi.StringPtrOutput)
}

// Maximum allowable MSRP message size (1-65535).
func (o VoipProfileMsrpOutput) MaxMsgSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileMsrp) *int { return v.MaxMsgSize }).(pulumi.IntPtrOutput)
}

// Action for violation of max-msg-size. Valid values: `pass`, `block`, `reset`, `monitor`.
func (o VoipProfileMsrpOutput) MaxMsgSizeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileMsrp) *string { return v.MaxMsgSizeAction }).(pulumi.StringPtrOutput)
}

// Enable/disable MSRP. Valid values: `disable`, `enable`.
func (o VoipProfileMsrpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileMsrp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VoipProfileMsrpPtrOutput struct{ *pulumi.OutputState }

func (VoipProfileMsrpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileMsrp)(nil)).Elem()
}

func (o VoipProfileMsrpPtrOutput) ToVoipProfileMsrpPtrOutput() VoipProfileMsrpPtrOutput {
	return o
}

func (o VoipProfileMsrpPtrOutput) ToVoipProfileMsrpPtrOutputWithContext(ctx context.Context) VoipProfileMsrpPtrOutput {
	return o
}

func (o VoipProfileMsrpPtrOutput) Elem() VoipProfileMsrpOutput {
	return o.ApplyT(func(v *VoipProfileMsrp) VoipProfileMsrp {
		if v != nil {
			return *v
		}
		var ret VoipProfileMsrp
		return ret
	}).(VoipProfileMsrpOutput)
}

// Enable/disable logging of MSRP violations. Valid values: `disable`, `enable`.
func (o VoipProfileMsrpPtrOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileMsrp) *string {
		if v == nil {
			return nil
		}
		return v.LogViolations
	}).(pulumi.StringPtrOutput)
}

// Maximum allowable MSRP message size (1-65535).
func (o VoipProfileMsrpPtrOutput) MaxMsgSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileMsrp) *int {
		if v == nil {
			return nil
		}
		return v.MaxMsgSize
	}).(pulumi.IntPtrOutput)
}

// Action for violation of max-msg-size. Valid values: `pass`, `block`, `reset`, `monitor`.
func (o VoipProfileMsrpPtrOutput) MaxMsgSizeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileMsrp) *string {
		if v == nil {
			return nil
		}
		return v.MaxMsgSizeAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable MSRP. Valid values: `disable`, `enable`.
func (o VoipProfileMsrpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileMsrp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type VoipProfileSccp struct {
	// Enable/disable block multicast RTP connections. Valid values: `disable`, `enable`.
	BlockMcast *string `pulumi:"blockMcast"`
	// Enable/disable log summary of SCCP calls. Valid values: `disable`, `enable`.
	LogCallSummary *string `pulumi:"logCallSummary"`
	// Enable/disable logging of SCCP violations. Valid values: `disable`, `enable`.
	LogViolations *string `pulumi:"logViolations"`
	// Maximum calls per minute per SCCP client (max 65535).
	MaxCalls *int `pulumi:"maxCalls"`
	// Enable/disable SCCP. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Enable/disable verify SCCP header content. Valid values: `disable`, `enable`.
	VerifyHeader *string `pulumi:"verifyHeader"`
}

// VoipProfileSccpInput is an input type that accepts VoipProfileSccpArgs and VoipProfileSccpOutput values.
// You can construct a concrete instance of `VoipProfileSccpInput` via:
//
//	VoipProfileSccpArgs{...}
type VoipProfileSccpInput interface {
	pulumi.Input

	ToVoipProfileSccpOutput() VoipProfileSccpOutput
	ToVoipProfileSccpOutputWithContext(context.Context) VoipProfileSccpOutput
}

type VoipProfileSccpArgs struct {
	// Enable/disable block multicast RTP connections. Valid values: `disable`, `enable`.
	BlockMcast pulumi.StringPtrInput `pulumi:"blockMcast"`
	// Enable/disable log summary of SCCP calls. Valid values: `disable`, `enable`.
	LogCallSummary pulumi.StringPtrInput `pulumi:"logCallSummary"`
	// Enable/disable logging of SCCP violations. Valid values: `disable`, `enable`.
	LogViolations pulumi.StringPtrInput `pulumi:"logViolations"`
	// Maximum calls per minute per SCCP client (max 65535).
	MaxCalls pulumi.IntPtrInput `pulumi:"maxCalls"`
	// Enable/disable SCCP. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable verify SCCP header content. Valid values: `disable`, `enable`.
	VerifyHeader pulumi.StringPtrInput `pulumi:"verifyHeader"`
}

func (VoipProfileSccpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileSccp)(nil)).Elem()
}

func (i VoipProfileSccpArgs) ToVoipProfileSccpOutput() VoipProfileSccpOutput {
	return i.ToVoipProfileSccpOutputWithContext(context.Background())
}

func (i VoipProfileSccpArgs) ToVoipProfileSccpOutputWithContext(ctx context.Context) VoipProfileSccpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSccpOutput)
}

func (i VoipProfileSccpArgs) ToVoipProfileSccpPtrOutput() VoipProfileSccpPtrOutput {
	return i.ToVoipProfileSccpPtrOutputWithContext(context.Background())
}

func (i VoipProfileSccpArgs) ToVoipProfileSccpPtrOutputWithContext(ctx context.Context) VoipProfileSccpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSccpOutput).ToVoipProfileSccpPtrOutputWithContext(ctx)
}

// VoipProfileSccpPtrInput is an input type that accepts VoipProfileSccpArgs, VoipProfileSccpPtr and VoipProfileSccpPtrOutput values.
// You can construct a concrete instance of `VoipProfileSccpPtrInput` via:
//
//	        VoipProfileSccpArgs{...}
//
//	or:
//
//	        nil
type VoipProfileSccpPtrInput interface {
	pulumi.Input

	ToVoipProfileSccpPtrOutput() VoipProfileSccpPtrOutput
	ToVoipProfileSccpPtrOutputWithContext(context.Context) VoipProfileSccpPtrOutput
}

type voipProfileSccpPtrType VoipProfileSccpArgs

func VoipProfileSccpPtr(v *VoipProfileSccpArgs) VoipProfileSccpPtrInput {
	return (*voipProfileSccpPtrType)(v)
}

func (*voipProfileSccpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileSccp)(nil)).Elem()
}

func (i *voipProfileSccpPtrType) ToVoipProfileSccpPtrOutput() VoipProfileSccpPtrOutput {
	return i.ToVoipProfileSccpPtrOutputWithContext(context.Background())
}

func (i *voipProfileSccpPtrType) ToVoipProfileSccpPtrOutputWithContext(ctx context.Context) VoipProfileSccpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSccpPtrOutput)
}

type VoipProfileSccpOutput struct{ *pulumi.OutputState }

func (VoipProfileSccpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileSccp)(nil)).Elem()
}

func (o VoipProfileSccpOutput) ToVoipProfileSccpOutput() VoipProfileSccpOutput {
	return o
}

func (o VoipProfileSccpOutput) ToVoipProfileSccpOutputWithContext(ctx context.Context) VoipProfileSccpOutput {
	return o
}

func (o VoipProfileSccpOutput) ToVoipProfileSccpPtrOutput() VoipProfileSccpPtrOutput {
	return o.ToVoipProfileSccpPtrOutputWithContext(context.Background())
}

func (o VoipProfileSccpOutput) ToVoipProfileSccpPtrOutputWithContext(ctx context.Context) VoipProfileSccpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VoipProfileSccp) *VoipProfileSccp {
		return &v
	}).(VoipProfileSccpPtrOutput)
}

// Enable/disable block multicast RTP connections. Valid values: `disable`, `enable`.
func (o VoipProfileSccpOutput) BlockMcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *string { return v.BlockMcast }).(pulumi.StringPtrOutput)
}

// Enable/disable log summary of SCCP calls. Valid values: `disable`, `enable`.
func (o VoipProfileSccpOutput) LogCallSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *string { return v.LogCallSummary }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SCCP violations. Valid values: `disable`, `enable`.
func (o VoipProfileSccpOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *string { return v.LogViolations }).(pulumi.StringPtrOutput)
}

// Maximum calls per minute per SCCP client (max 65535).
func (o VoipProfileSccpOutput) MaxCalls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *int { return v.MaxCalls }).(pulumi.IntPtrOutput)
}

// Enable/disable SCCP. Valid values: `disable`, `enable`.
func (o VoipProfileSccpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable verify SCCP header content. Valid values: `disable`, `enable`.
func (o VoipProfileSccpOutput) VerifyHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSccp) *string { return v.VerifyHeader }).(pulumi.StringPtrOutput)
}

type VoipProfileSccpPtrOutput struct{ *pulumi.OutputState }

func (VoipProfileSccpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileSccp)(nil)).Elem()
}

func (o VoipProfileSccpPtrOutput) ToVoipProfileSccpPtrOutput() VoipProfileSccpPtrOutput {
	return o
}

func (o VoipProfileSccpPtrOutput) ToVoipProfileSccpPtrOutputWithContext(ctx context.Context) VoipProfileSccpPtrOutput {
	return o
}

func (o VoipProfileSccpPtrOutput) Elem() VoipProfileSccpOutput {
	return o.ApplyT(func(v *VoipProfileSccp) VoipProfileSccp {
		if v != nil {
			return *v
		}
		var ret VoipProfileSccp
		return ret
	}).(VoipProfileSccpOutput)
}

// Enable/disable block multicast RTP connections. Valid values: `disable`, `enable`.
func (o VoipProfileSccpPtrOutput) BlockMcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *string {
		if v == nil {
			return nil
		}
		return v.BlockMcast
	}).(pulumi.StringPtrOutput)
}

// Enable/disable log summary of SCCP calls. Valid values: `disable`, `enable`.
func (o VoipProfileSccpPtrOutput) LogCallSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *string {
		if v == nil {
			return nil
		}
		return v.LogCallSummary
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SCCP violations. Valid values: `disable`, `enable`.
func (o VoipProfileSccpPtrOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *string {
		if v == nil {
			return nil
		}
		return v.LogViolations
	}).(pulumi.StringPtrOutput)
}

// Maximum calls per minute per SCCP client (max 65535).
func (o VoipProfileSccpPtrOutput) MaxCalls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *int {
		if v == nil {
			return nil
		}
		return v.MaxCalls
	}).(pulumi.IntPtrOutput)
}

// Enable/disable SCCP. Valid values: `disable`, `enable`.
func (o VoipProfileSccpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Enable/disable verify SCCP header content. Valid values: `disable`, `enable`.
func (o VoipProfileSccpPtrOutput) VerifyHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSccp) *string {
		if v == nil {
			return nil
		}
		return v.VerifyHeader
	}).(pulumi.StringPtrOutput)
}

type VoipProfileSip struct {
	// ACK request rate limit (per second, per policy).
	AckRate *int `pulumi:"ackRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	AckRateTrack *string `pulumi:"ackRateTrack"`
	// Enable/disable block ACK requests. Valid values: `disable`, `enable`.
	BlockAck *string `pulumi:"blockAck"`
	// Enable/disable block BYE requests. Valid values: `disable`, `enable`.
	BlockBye *string `pulumi:"blockBye"`
	// Enable/disable block CANCEL requests. Valid values: `disable`, `enable`.
	BlockCancel *string `pulumi:"blockCancel"`
	// Enable/disable block OPTIONS requests, but OPTIONS requests still notify for redundancy. Valid values: `disable`, `enable`.
	BlockGeoRedOptions *string `pulumi:"blockGeoRedOptions"`
	// Enable/disable block INFO requests. Valid values: `disable`, `enable`.
	BlockInfo *string `pulumi:"blockInfo"`
	// Enable/disable block INVITE requests. Valid values: `disable`, `enable`.
	BlockInvite *string `pulumi:"blockInvite"`
	// Enable/disable block requests with headers exceeding max-line-length. Valid values: `disable`, `enable`.
	BlockLongLines *string `pulumi:"blockLongLines"`
	// Enable/disable block MESSAGE requests. Valid values: `disable`, `enable`.
	BlockMessage *string `pulumi:"blockMessage"`
	// Enable/disable block NOTIFY requests. Valid values: `disable`, `enable`.
	BlockNotify *string `pulumi:"blockNotify"`
	// Enable/disable block OPTIONS requests and no OPTIONS as notifying message for redundancy either. Valid values: `disable`, `enable`.
	BlockOptions *string `pulumi:"blockOptions"`
	// Enable/disable block prack requests. Valid values: `disable`, `enable`.
	BlockPrack *string `pulumi:"blockPrack"`
	// Enable/disable block PUBLISH requests. Valid values: `disable`, `enable`.
	BlockPublish *string `pulumi:"blockPublish"`
	// Enable/disable block REFER requests. Valid values: `disable`, `enable`.
	BlockRefer *string `pulumi:"blockRefer"`
	// Enable/disable block REGISTER requests. Valid values: `disable`, `enable`.
	BlockRegister *string `pulumi:"blockRegister"`
	// Enable/disable block SUBSCRIBE requests. Valid values: `disable`, `enable`.
	BlockSubscribe *string `pulumi:"blockSubscribe"`
	// Block unrecognized SIP requests (enabled by default). Valid values: `disable`, `enable`.
	BlockUnknown *string `pulumi:"blockUnknown"`
	// Enable/disable block UPDATE requests. Valid values: `disable`, `enable`.
	BlockUpdate *string `pulumi:"blockUpdate"`
	// BYE request rate limit (per second, per policy).
	ByeRate *int `pulumi:"byeRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	ByeRateTrack *string `pulumi:"byeRateTrack"`
	// Continue tracking calls with no RTP for this many minutes.
	CallKeepalive *int `pulumi:"callKeepalive"`
	// CANCEL request rate limit (per second, per policy).
	CancelRate *int `pulumi:"cancelRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	CancelRateTrack *string `pulumi:"cancelRateTrack"`
	// Fixup contact anyway even if contact's IP:port doesn't match session's IP:port. Valid values: `disable`, `enable`.
	ContactFixup *string `pulumi:"contactFixup"`
	// Enable/disable restrict RTP source IP to be the same as SIP source IP when HNT is enabled. Valid values: `disable`, `enable`.
	HntRestrictSourceIp *string `pulumi:"hntRestrictSourceIp"`
	// Hosted NAT Traversal (HNT). Valid values: `disable`, `enable`.
	HostedNatTraversal *string `pulumi:"hostedNatTraversal"`
	// INFO request rate limit (per second, per policy).
	InfoRate *int `pulumi:"infoRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	InfoRateTrack *string `pulumi:"infoRateTrack"`
	// INVITE request rate limit (per second, per policy).
	InviteRate *int `pulumi:"inviteRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	InviteRateTrack *string `pulumi:"inviteRateTrack"`
	// Enable/disable allow IPS on RTP. Valid values: `disable`, `enable`.
	IpsRtp *string `pulumi:"ipsRtp"`
	// Enable/disable logging of SIP call summary. Valid values: `disable`, `enable`.
	LogCallSummary *string `pulumi:"logCallSummary"`
	// Enable/disable logging of SIP violations. Valid values: `disable`, `enable`.
	LogViolations *string `pulumi:"logViolations"`
	// Action for malformed Allow header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderAllow *string `pulumi:"malformedHeaderAllow"`
	// Action for malformed Call-ID header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderCallId *string `pulumi:"malformedHeaderCallId"`
	// Action for malformed Contact header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContact *string `pulumi:"malformedHeaderContact"`
	// Action for malformed Content-Length header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContentLength *string `pulumi:"malformedHeaderContentLength"`
	// Action for malformed Content-Type header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContentType *string `pulumi:"malformedHeaderContentType"`
	// Action for malformed CSeq header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderCseq *string `pulumi:"malformedHeaderCseq"`
	// Action for malformed Expires header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderExpires *string `pulumi:"malformedHeaderExpires"`
	// Action for malformed From header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderFrom *string `pulumi:"malformedHeaderFrom"`
	// Action for malformed Max-Forwards header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderMaxForwards *string `pulumi:"malformedHeaderMaxForwards"`
	// Action for malformed SIP messages without Proxy-Require header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderNoProxyRequire *string `pulumi:"malformedHeaderNoProxyRequire"`
	// Action for malformed SIP messages without Require header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderNoRequire *string `pulumi:"malformedHeaderNoRequire"`
	// Action for malformed P-Asserted-Identity header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderPAssertedIdentity *string `pulumi:"malformedHeaderPAssertedIdentity"`
	// Action for malformed RAck header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRack *string `pulumi:"malformedHeaderRack"`
	// Action for malformed Record-Route header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRecordRoute *string `pulumi:"malformedHeaderRecordRoute"`
	// Action for malformed Route header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRoute *string `pulumi:"malformedHeaderRoute"`
	// Action for malformed RSeq header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRseq *string `pulumi:"malformedHeaderRseq"`
	// Action for malformed SDP a line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpA *string `pulumi:"malformedHeaderSdpA"`
	// Action for malformed SDP b line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpB *string `pulumi:"malformedHeaderSdpB"`
	// Action for malformed SDP c line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpC *string `pulumi:"malformedHeaderSdpC"`
	// Action for malformed SDP i line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpI *string `pulumi:"malformedHeaderSdpI"`
	// Action for malformed SDP k line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpK *string `pulumi:"malformedHeaderSdpK"`
	// Action for malformed SDP m line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpM *string `pulumi:"malformedHeaderSdpM"`
	// Action for malformed SDP o line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpO *string `pulumi:"malformedHeaderSdpO"`
	// Action for malformed SDP r line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpR *string `pulumi:"malformedHeaderSdpR"`
	// Action for malformed SDP s line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpS *string `pulumi:"malformedHeaderSdpS"`
	// Action for malformed SDP t line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpT *string `pulumi:"malformedHeaderSdpT"`
	// Action for malformed SDP v line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpV *string `pulumi:"malformedHeaderSdpV"`
	// Action for malformed SDP z line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpZ *string `pulumi:"malformedHeaderSdpZ"`
	// Action for malformed To header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderTo *string `pulumi:"malformedHeaderTo"`
	// Action for malformed VIA header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderVia *string `pulumi:"malformedHeaderVia"`
	// Action for malformed request line. Valid values: `discard`, `pass`, `respond`.
	MalformedRequestLine *string `pulumi:"malformedRequestLine"`
	// Maximum SIP message body length (0 meaning no limit).
	MaxBodyLength *int `pulumi:"maxBodyLength"`
	// Maximum number of concurrent calls/dialogs (per policy).
	MaxDialogs *int `pulumi:"maxDialogs"`
	// Maximum number established but idle dialogs to retain (per policy).
	MaxIdleDialogs *int `pulumi:"maxIdleDialogs"`
	// Maximum SIP header line length (78-4096).
	MaxLineLength *int `pulumi:"maxLineLength"`
	// MESSAGE request rate limit (per second, per policy).
	MessageRate *int `pulumi:"messageRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	MessageRateTrack *string `pulumi:"messageRateTrack"`
	// RTP NAT port range.
	NatPortRange *string `pulumi:"natPortRange"`
	// Enable/disable preservation of original IP in SDP i line. Valid values: `disable`, `enable`.
	NatTrace *string `pulumi:"natTrace"`
	// Enable/disable no SDP fix-up. Valid values: `disable`, `enable`.
	NoSdpFixup *string `pulumi:"noSdpFixup"`
	// NOTIFY request rate limit (per second, per policy).
	NotifyRate *int `pulumi:"notifyRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	NotifyRateTrack *string `pulumi:"notifyRateTrack"`
	// Enable/disable open pinhole for non-REGISTER Contact port. Valid values: `disable`, `enable`.
	OpenContactPinhole *string `pulumi:"openContactPinhole"`
	// Enable/disable open pinhole for Record-Route port. Valid values: `disable`, `enable`.
	OpenRecordRoutePinhole *string `pulumi:"openRecordRoutePinhole"`
	// Enable/disable open pinhole for REGISTER Contact port. Valid values: `disable`, `enable`.
	OpenRegisterPinhole *string `pulumi:"openRegisterPinhole"`
	// Enable/disable open pinhole for Via port. Valid values: `disable`, `enable`.
	OpenViaPinhole *string `pulumi:"openViaPinhole"`
	// OPTIONS request rate limit (per second, per policy).
	OptionsRate *int `pulumi:"optionsRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	OptionsRateTrack *string `pulumi:"optionsRateTrack"`
	// PRACK request rate limit (per second, per policy).
	PrackRate *int `pulumi:"prackRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	PrackRateTrack *string `pulumi:"prackRateTrack"`
	// Override i line to preserve original IPS (default: append). Valid values: `disable`, `enable`.
	PreserveOverride *string `pulumi:"preserveOverride"`
	// Expiry time for provisional INVITE (10 - 3600 sec).
	ProvisionalInviteExpiryTime *int `pulumi:"provisionalInviteExpiryTime"`
	// PUBLISH request rate limit (per second, per policy).
	PublishRate *int `pulumi:"publishRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	PublishRateTrack *string `pulumi:"publishRateTrack"`
	// REFER request rate limit (per second, per policy).
	ReferRate *int `pulumi:"referRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	ReferRateTrack *string `pulumi:"referRateTrack"`
	// Enable/disable trace original IP/port within the contact header of REGISTER requests. Valid values: `disable`, `enable`.
	RegisterContactTrace *string `pulumi:"registerContactTrace"`
	// REGISTER request rate limit (per second, per policy).
	RegisterRate *int `pulumi:"registerRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	RegisterRateTrack *string `pulumi:"registerRateTrack"`
	// Enable/disable support via branch compliant with RFC 2543. Valid values: `disable`, `enable`.
	Rfc2543Branch *string `pulumi:"rfc2543Branch"`
	// Enable/disable create pinholes for RTP traffic to traverse firewall. Valid values: `disable`, `enable`.
	Rtp *string `pulumi:"rtp"`
	// Relative strength of encryption algorithms accepted in negotiation. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// Require a client certificate and authenticate it with the peer/peergrp.
	SslAuthClient *string `pulumi:"sslAuthClient"`
	// Authenticate the server's certificate with the peer/peergrp.
	SslAuthServer *string `pulumi:"sslAuthServer"`
	// Name of Certificate to offer to server if requested.
	SslClientCertificate *string `pulumi:"sslClientCertificate"`
	// Allow/block client renegotiation by server. Valid values: `allow`, `deny`, `secure`.
	SslClientRenegotiation *string `pulumi:"sslClientRenegotiation"`
	// Highest SSL/TLS version to negotiate.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version to negotiate.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// SSL/TLS mode for encryption & decryption of traffic. Valid values: `off`, `full`.
	SslMode *string `pulumi:"sslMode"`
	// SSL Perfect Forward Secrecy. Valid values: `require`, `deny`, `allow`.
	SslPfs *string `pulumi:"sslPfs"`
	// Send empty fragments to avoid attack on CBC IV (SSL 3.0 & TLS 1.0 only). Valid values: `enable`, `disable`.
	SslSendEmptyFrags *string `pulumi:"sslSendEmptyFrags"`
	// Name of Certificate return to the client in every SSL connection.
	SslServerCertificate *string `pulumi:"sslServerCertificate"`
	// Enable/disable SIP. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Enable/disable only allow the registrar to connect. Valid values: `disable`, `enable`.
	StrictRegister *string `pulumi:"strictRegister"`
	// SUBSCRIBE request rate limit (per second, per policy).
	SubscribeRate *int `pulumi:"subscribeRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	SubscribeRateTrack *string `pulumi:"subscribeRateTrack"`
	// Action for unknown SIP header. Valid values: `discard`, `pass`, `respond`.
	UnknownHeader *string `pulumi:"unknownHeader"`
	// UPDATE request rate limit (per second, per policy).
	UpdateRate *int `pulumi:"updateRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	UpdateRateTrack *string `pulumi:"updateRateTrack"`
}

// VoipProfileSipInput is an input type that accepts VoipProfileSipArgs and VoipProfileSipOutput values.
// You can construct a concrete instance of `VoipProfileSipInput` via:
//
//	VoipProfileSipArgs{...}
type VoipProfileSipInput interface {
	pulumi.Input

	ToVoipProfileSipOutput() VoipProfileSipOutput
	ToVoipProfileSipOutputWithContext(context.Context) VoipProfileSipOutput
}

type VoipProfileSipArgs struct {
	// ACK request rate limit (per second, per policy).
	AckRate pulumi.IntPtrInput `pulumi:"ackRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	AckRateTrack pulumi.StringPtrInput `pulumi:"ackRateTrack"`
	// Enable/disable block ACK requests. Valid values: `disable`, `enable`.
	BlockAck pulumi.StringPtrInput `pulumi:"blockAck"`
	// Enable/disable block BYE requests. Valid values: `disable`, `enable`.
	BlockBye pulumi.StringPtrInput `pulumi:"blockBye"`
	// Enable/disable block CANCEL requests. Valid values: `disable`, `enable`.
	BlockCancel pulumi.StringPtrInput `pulumi:"blockCancel"`
	// Enable/disable block OPTIONS requests, but OPTIONS requests still notify for redundancy. Valid values: `disable`, `enable`.
	BlockGeoRedOptions pulumi.StringPtrInput `pulumi:"blockGeoRedOptions"`
	// Enable/disable block INFO requests. Valid values: `disable`, `enable`.
	BlockInfo pulumi.StringPtrInput `pulumi:"blockInfo"`
	// Enable/disable block INVITE requests. Valid values: `disable`, `enable`.
	BlockInvite pulumi.StringPtrInput `pulumi:"blockInvite"`
	// Enable/disable block requests with headers exceeding max-line-length. Valid values: `disable`, `enable`.
	BlockLongLines pulumi.StringPtrInput `pulumi:"blockLongLines"`
	// Enable/disable block MESSAGE requests. Valid values: `disable`, `enable`.
	BlockMessage pulumi.StringPtrInput `pulumi:"blockMessage"`
	// Enable/disable block NOTIFY requests. Valid values: `disable`, `enable`.
	BlockNotify pulumi.StringPtrInput `pulumi:"blockNotify"`
	// Enable/disable block OPTIONS requests and no OPTIONS as notifying message for redundancy either. Valid values: `disable`, `enable`.
	BlockOptions pulumi.StringPtrInput `pulumi:"blockOptions"`
	// Enable/disable block prack requests. Valid values: `disable`, `enable`.
	BlockPrack pulumi.StringPtrInput `pulumi:"blockPrack"`
	// Enable/disable block PUBLISH requests. Valid values: `disable`, `enable`.
	BlockPublish pulumi.StringPtrInput `pulumi:"blockPublish"`
	// Enable/disable block REFER requests. Valid values: `disable`, `enable`.
	BlockRefer pulumi.StringPtrInput `pulumi:"blockRefer"`
	// Enable/disable block REGISTER requests. Valid values: `disable`, `enable`.
	BlockRegister pulumi.StringPtrInput `pulumi:"blockRegister"`
	// Enable/disable block SUBSCRIBE requests. Valid values: `disable`, `enable`.
	BlockSubscribe pulumi.StringPtrInput `pulumi:"blockSubscribe"`
	// Block unrecognized SIP requests (enabled by default). Valid values: `disable`, `enable`.
	BlockUnknown pulumi.StringPtrInput `pulumi:"blockUnknown"`
	// Enable/disable block UPDATE requests. Valid values: `disable`, `enable`.
	BlockUpdate pulumi.StringPtrInput `pulumi:"blockUpdate"`
	// BYE request rate limit (per second, per policy).
	ByeRate pulumi.IntPtrInput `pulumi:"byeRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	ByeRateTrack pulumi.StringPtrInput `pulumi:"byeRateTrack"`
	// Continue tracking calls with no RTP for this many minutes.
	CallKeepalive pulumi.IntPtrInput `pulumi:"callKeepalive"`
	// CANCEL request rate limit (per second, per policy).
	CancelRate pulumi.IntPtrInput `pulumi:"cancelRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	CancelRateTrack pulumi.StringPtrInput `pulumi:"cancelRateTrack"`
	// Fixup contact anyway even if contact's IP:port doesn't match session's IP:port. Valid values: `disable`, `enable`.
	ContactFixup pulumi.StringPtrInput `pulumi:"contactFixup"`
	// Enable/disable restrict RTP source IP to be the same as SIP source IP when HNT is enabled. Valid values: `disable`, `enable`.
	HntRestrictSourceIp pulumi.StringPtrInput `pulumi:"hntRestrictSourceIp"`
	// Hosted NAT Traversal (HNT). Valid values: `disable`, `enable`.
	HostedNatTraversal pulumi.StringPtrInput `pulumi:"hostedNatTraversal"`
	// INFO request rate limit (per second, per policy).
	InfoRate pulumi.IntPtrInput `pulumi:"infoRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	InfoRateTrack pulumi.StringPtrInput `pulumi:"infoRateTrack"`
	// INVITE request rate limit (per second, per policy).
	InviteRate pulumi.IntPtrInput `pulumi:"inviteRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	InviteRateTrack pulumi.StringPtrInput `pulumi:"inviteRateTrack"`
	// Enable/disable allow IPS on RTP. Valid values: `disable`, `enable`.
	IpsRtp pulumi.StringPtrInput `pulumi:"ipsRtp"`
	// Enable/disable logging of SIP call summary. Valid values: `disable`, `enable`.
	LogCallSummary pulumi.StringPtrInput `pulumi:"logCallSummary"`
	// Enable/disable logging of SIP violations. Valid values: `disable`, `enable`.
	LogViolations pulumi.StringPtrInput `pulumi:"logViolations"`
	// Action for malformed Allow header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderAllow pulumi.StringPtrInput `pulumi:"malformedHeaderAllow"`
	// Action for malformed Call-ID header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderCallId pulumi.StringPtrInput `pulumi:"malformedHeaderCallId"`
	// Action for malformed Contact header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContact pulumi.StringPtrInput `pulumi:"malformedHeaderContact"`
	// Action for malformed Content-Length header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContentLength pulumi.StringPtrInput `pulumi:"malformedHeaderContentLength"`
	// Action for malformed Content-Type header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderContentType pulumi.StringPtrInput `pulumi:"malformedHeaderContentType"`
	// Action for malformed CSeq header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderCseq pulumi.StringPtrInput `pulumi:"malformedHeaderCseq"`
	// Action for malformed Expires header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderExpires pulumi.StringPtrInput `pulumi:"malformedHeaderExpires"`
	// Action for malformed From header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderFrom pulumi.StringPtrInput `pulumi:"malformedHeaderFrom"`
	// Action for malformed Max-Forwards header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderMaxForwards pulumi.StringPtrInput `pulumi:"malformedHeaderMaxForwards"`
	// Action for malformed SIP messages without Proxy-Require header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderNoProxyRequire pulumi.StringPtrInput `pulumi:"malformedHeaderNoProxyRequire"`
	// Action for malformed SIP messages without Require header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderNoRequire pulumi.StringPtrInput `pulumi:"malformedHeaderNoRequire"`
	// Action for malformed P-Asserted-Identity header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderPAssertedIdentity pulumi.StringPtrInput `pulumi:"malformedHeaderPAssertedIdentity"`
	// Action for malformed RAck header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRack pulumi.StringPtrInput `pulumi:"malformedHeaderRack"`
	// Action for malformed Record-Route header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRecordRoute pulumi.StringPtrInput `pulumi:"malformedHeaderRecordRoute"`
	// Action for malformed Route header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRoute pulumi.StringPtrInput `pulumi:"malformedHeaderRoute"`
	// Action for malformed RSeq header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderRseq pulumi.StringPtrInput `pulumi:"malformedHeaderRseq"`
	// Action for malformed SDP a line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpA pulumi.StringPtrInput `pulumi:"malformedHeaderSdpA"`
	// Action for malformed SDP b line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpB pulumi.StringPtrInput `pulumi:"malformedHeaderSdpB"`
	// Action for malformed SDP c line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpC pulumi.StringPtrInput `pulumi:"malformedHeaderSdpC"`
	// Action for malformed SDP i line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpI pulumi.StringPtrInput `pulumi:"malformedHeaderSdpI"`
	// Action for malformed SDP k line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpK pulumi.StringPtrInput `pulumi:"malformedHeaderSdpK"`
	// Action for malformed SDP m line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpM pulumi.StringPtrInput `pulumi:"malformedHeaderSdpM"`
	// Action for malformed SDP o line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpO pulumi.StringPtrInput `pulumi:"malformedHeaderSdpO"`
	// Action for malformed SDP r line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpR pulumi.StringPtrInput `pulumi:"malformedHeaderSdpR"`
	// Action for malformed SDP s line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpS pulumi.StringPtrInput `pulumi:"malformedHeaderSdpS"`
	// Action for malformed SDP t line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpT pulumi.StringPtrInput `pulumi:"malformedHeaderSdpT"`
	// Action for malformed SDP v line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpV pulumi.StringPtrInput `pulumi:"malformedHeaderSdpV"`
	// Action for malformed SDP z line. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderSdpZ pulumi.StringPtrInput `pulumi:"malformedHeaderSdpZ"`
	// Action for malformed To header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderTo pulumi.StringPtrInput `pulumi:"malformedHeaderTo"`
	// Action for malformed VIA header. Valid values: `discard`, `pass`, `respond`.
	MalformedHeaderVia pulumi.StringPtrInput `pulumi:"malformedHeaderVia"`
	// Action for malformed request line. Valid values: `discard`, `pass`, `respond`.
	MalformedRequestLine pulumi.StringPtrInput `pulumi:"malformedRequestLine"`
	// Maximum SIP message body length (0 meaning no limit).
	MaxBodyLength pulumi.IntPtrInput `pulumi:"maxBodyLength"`
	// Maximum number of concurrent calls/dialogs (per policy).
	MaxDialogs pulumi.IntPtrInput `pulumi:"maxDialogs"`
	// Maximum number established but idle dialogs to retain (per policy).
	MaxIdleDialogs pulumi.IntPtrInput `pulumi:"maxIdleDialogs"`
	// Maximum SIP header line length (78-4096).
	MaxLineLength pulumi.IntPtrInput `pulumi:"maxLineLength"`
	// MESSAGE request rate limit (per second, per policy).
	MessageRate pulumi.IntPtrInput `pulumi:"messageRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	MessageRateTrack pulumi.StringPtrInput `pulumi:"messageRateTrack"`
	// RTP NAT port range.
	NatPortRange pulumi.StringPtrInput `pulumi:"natPortRange"`
	// Enable/disable preservation of original IP in SDP i line. Valid values: `disable`, `enable`.
	NatTrace pulumi.StringPtrInput `pulumi:"natTrace"`
	// Enable/disable no SDP fix-up. Valid values: `disable`, `enable`.
	NoSdpFixup pulumi.StringPtrInput `pulumi:"noSdpFixup"`
	// NOTIFY request rate limit (per second, per policy).
	NotifyRate pulumi.IntPtrInput `pulumi:"notifyRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	NotifyRateTrack pulumi.StringPtrInput `pulumi:"notifyRateTrack"`
	// Enable/disable open pinhole for non-REGISTER Contact port. Valid values: `disable`, `enable`.
	OpenContactPinhole pulumi.StringPtrInput `pulumi:"openContactPinhole"`
	// Enable/disable open pinhole for Record-Route port. Valid values: `disable`, `enable`.
	OpenRecordRoutePinhole pulumi.StringPtrInput `pulumi:"openRecordRoutePinhole"`
	// Enable/disable open pinhole for REGISTER Contact port. Valid values: `disable`, `enable`.
	OpenRegisterPinhole pulumi.StringPtrInput `pulumi:"openRegisterPinhole"`
	// Enable/disable open pinhole for Via port. Valid values: `disable`, `enable`.
	OpenViaPinhole pulumi.StringPtrInput `pulumi:"openViaPinhole"`
	// OPTIONS request rate limit (per second, per policy).
	OptionsRate pulumi.IntPtrInput `pulumi:"optionsRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	OptionsRateTrack pulumi.StringPtrInput `pulumi:"optionsRateTrack"`
	// PRACK request rate limit (per second, per policy).
	PrackRate pulumi.IntPtrInput `pulumi:"prackRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	PrackRateTrack pulumi.StringPtrInput `pulumi:"prackRateTrack"`
	// Override i line to preserve original IPS (default: append). Valid values: `disable`, `enable`.
	PreserveOverride pulumi.StringPtrInput `pulumi:"preserveOverride"`
	// Expiry time for provisional INVITE (10 - 3600 sec).
	ProvisionalInviteExpiryTime pulumi.IntPtrInput `pulumi:"provisionalInviteExpiryTime"`
	// PUBLISH request rate limit (per second, per policy).
	PublishRate pulumi.IntPtrInput `pulumi:"publishRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	PublishRateTrack pulumi.StringPtrInput `pulumi:"publishRateTrack"`
	// REFER request rate limit (per second, per policy).
	ReferRate pulumi.IntPtrInput `pulumi:"referRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	ReferRateTrack pulumi.StringPtrInput `pulumi:"referRateTrack"`
	// Enable/disable trace original IP/port within the contact header of REGISTER requests. Valid values: `disable`, `enable`.
	RegisterContactTrace pulumi.StringPtrInput `pulumi:"registerContactTrace"`
	// REGISTER request rate limit (per second, per policy).
	RegisterRate pulumi.IntPtrInput `pulumi:"registerRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	RegisterRateTrack pulumi.StringPtrInput `pulumi:"registerRateTrack"`
	// Enable/disable support via branch compliant with RFC 2543. Valid values: `disable`, `enable`.
	Rfc2543Branch pulumi.StringPtrInput `pulumi:"rfc2543Branch"`
	// Enable/disable create pinholes for RTP traffic to traverse firewall. Valid values: `disable`, `enable`.
	Rtp pulumi.StringPtrInput `pulumi:"rtp"`
	// Relative strength of encryption algorithms accepted in negotiation. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// Require a client certificate and authenticate it with the peer/peergrp.
	SslAuthClient pulumi.StringPtrInput `pulumi:"sslAuthClient"`
	// Authenticate the server's certificate with the peer/peergrp.
	SslAuthServer pulumi.StringPtrInput `pulumi:"sslAuthServer"`
	// Name of Certificate to offer to server if requested.
	SslClientCertificate pulumi.StringPtrInput `pulumi:"sslClientCertificate"`
	// Allow/block client renegotiation by server. Valid values: `allow`, `deny`, `secure`.
	SslClientRenegotiation pulumi.StringPtrInput `pulumi:"sslClientRenegotiation"`
	// Highest SSL/TLS version to negotiate.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version to negotiate.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// SSL/TLS mode for encryption & decryption of traffic. Valid values: `off`, `full`.
	SslMode pulumi.StringPtrInput `pulumi:"sslMode"`
	// SSL Perfect Forward Secrecy. Valid values: `require`, `deny`, `allow`.
	SslPfs pulumi.StringPtrInput `pulumi:"sslPfs"`
	// Send empty fragments to avoid attack on CBC IV (SSL 3.0 & TLS 1.0 only). Valid values: `enable`, `disable`.
	SslSendEmptyFrags pulumi.StringPtrInput `pulumi:"sslSendEmptyFrags"`
	// Name of Certificate return to the client in every SSL connection.
	SslServerCertificate pulumi.StringPtrInput `pulumi:"sslServerCertificate"`
	// Enable/disable SIP. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable only allow the registrar to connect. Valid values: `disable`, `enable`.
	StrictRegister pulumi.StringPtrInput `pulumi:"strictRegister"`
	// SUBSCRIBE request rate limit (per second, per policy).
	SubscribeRate pulumi.IntPtrInput `pulumi:"subscribeRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	SubscribeRateTrack pulumi.StringPtrInput `pulumi:"subscribeRateTrack"`
	// Action for unknown SIP header. Valid values: `discard`, `pass`, `respond`.
	UnknownHeader pulumi.StringPtrInput `pulumi:"unknownHeader"`
	// UPDATE request rate limit (per second, per policy).
	UpdateRate pulumi.IntPtrInput `pulumi:"updateRate"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
	UpdateRateTrack pulumi.StringPtrInput `pulumi:"updateRateTrack"`
}

func (VoipProfileSipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileSip)(nil)).Elem()
}

func (i VoipProfileSipArgs) ToVoipProfileSipOutput() VoipProfileSipOutput {
	return i.ToVoipProfileSipOutputWithContext(context.Background())
}

func (i VoipProfileSipArgs) ToVoipProfileSipOutputWithContext(ctx context.Context) VoipProfileSipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSipOutput)
}

func (i VoipProfileSipArgs) ToVoipProfileSipPtrOutput() VoipProfileSipPtrOutput {
	return i.ToVoipProfileSipPtrOutputWithContext(context.Background())
}

func (i VoipProfileSipArgs) ToVoipProfileSipPtrOutputWithContext(ctx context.Context) VoipProfileSipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSipOutput).ToVoipProfileSipPtrOutputWithContext(ctx)
}

// VoipProfileSipPtrInput is an input type that accepts VoipProfileSipArgs, VoipProfileSipPtr and VoipProfileSipPtrOutput values.
// You can construct a concrete instance of `VoipProfileSipPtrInput` via:
//
//	        VoipProfileSipArgs{...}
//
//	or:
//
//	        nil
type VoipProfileSipPtrInput interface {
	pulumi.Input

	ToVoipProfileSipPtrOutput() VoipProfileSipPtrOutput
	ToVoipProfileSipPtrOutputWithContext(context.Context) VoipProfileSipPtrOutput
}

type voipProfileSipPtrType VoipProfileSipArgs

func VoipProfileSipPtr(v *VoipProfileSipArgs) VoipProfileSipPtrInput {
	return (*voipProfileSipPtrType)(v)
}

func (*voipProfileSipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileSip)(nil)).Elem()
}

func (i *voipProfileSipPtrType) ToVoipProfileSipPtrOutput() VoipProfileSipPtrOutput {
	return i.ToVoipProfileSipPtrOutputWithContext(context.Background())
}

func (i *voipProfileSipPtrType) ToVoipProfileSipPtrOutputWithContext(ctx context.Context) VoipProfileSipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoipProfileSipPtrOutput)
}

type VoipProfileSipOutput struct{ *pulumi.OutputState }

func (VoipProfileSipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoipProfileSip)(nil)).Elem()
}

func (o VoipProfileSipOutput) ToVoipProfileSipOutput() VoipProfileSipOutput {
	return o
}

func (o VoipProfileSipOutput) ToVoipProfileSipOutputWithContext(ctx context.Context) VoipProfileSipOutput {
	return o
}

func (o VoipProfileSipOutput) ToVoipProfileSipPtrOutput() VoipProfileSipPtrOutput {
	return o.ToVoipProfileSipPtrOutputWithContext(context.Background())
}

func (o VoipProfileSipOutput) ToVoipProfileSipPtrOutputWithContext(ctx context.Context) VoipProfileSipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VoipProfileSip) *VoipProfileSip {
		return &v
	}).(VoipProfileSipPtrOutput)
}

// ACK request rate limit (per second, per policy).
func (o VoipProfileSipOutput) AckRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.AckRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) AckRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.AckRateTrack }).(pulumi.StringPtrOutput)
}

// Enable/disable block ACK requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockAck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockAck }).(pulumi.StringPtrOutput)
}

// Enable/disable block BYE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockBye() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockBye }).(pulumi.StringPtrOutput)
}

// Enable/disable block CANCEL requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockCancel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockCancel }).(pulumi.StringPtrOutput)
}

// Enable/disable block OPTIONS requests, but OPTIONS requests still notify for redundancy. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockGeoRedOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockGeoRedOptions }).(pulumi.StringPtrOutput)
}

// Enable/disable block INFO requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockInfo }).(pulumi.StringPtrOutput)
}

// Enable/disable block INVITE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockInvite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockInvite }).(pulumi.StringPtrOutput)
}

// Enable/disable block requests with headers exceeding max-line-length. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockLongLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockLongLines }).(pulumi.StringPtrOutput)
}

// Enable/disable block MESSAGE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockMessage }).(pulumi.StringPtrOutput)
}

// Enable/disable block NOTIFY requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockNotify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockNotify }).(pulumi.StringPtrOutput)
}

// Enable/disable block OPTIONS requests and no OPTIONS as notifying message for redundancy either. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockOptions }).(pulumi.StringPtrOutput)
}

// Enable/disable block prack requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockPrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockPrack }).(pulumi.StringPtrOutput)
}

// Enable/disable block PUBLISH requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockPublish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockPublish }).(pulumi.StringPtrOutput)
}

// Enable/disable block REFER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockRefer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockRefer }).(pulumi.StringPtrOutput)
}

// Enable/disable block REGISTER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockRegister() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockRegister }).(pulumi.StringPtrOutput)
}

// Enable/disable block SUBSCRIBE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockSubscribe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockSubscribe }).(pulumi.StringPtrOutput)
}

// Block unrecognized SIP requests (enabled by default). Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockUnknown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockUnknown }).(pulumi.StringPtrOutput)
}

// Enable/disable block UPDATE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) BlockUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.BlockUpdate }).(pulumi.StringPtrOutput)
}

// BYE request rate limit (per second, per policy).
func (o VoipProfileSipOutput) ByeRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.ByeRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) ByeRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.ByeRateTrack }).(pulumi.StringPtrOutput)
}

// Continue tracking calls with no RTP for this many minutes.
func (o VoipProfileSipOutput) CallKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.CallKeepalive }).(pulumi.IntPtrOutput)
}

// CANCEL request rate limit (per second, per policy).
func (o VoipProfileSipOutput) CancelRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.CancelRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) CancelRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.CancelRateTrack }).(pulumi.StringPtrOutput)
}

// Fixup contact anyway even if contact's IP:port doesn't match session's IP:port. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) ContactFixup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.ContactFixup }).(pulumi.StringPtrOutput)
}

// Enable/disable restrict RTP source IP to be the same as SIP source IP when HNT is enabled. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) HntRestrictSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.HntRestrictSourceIp }).(pulumi.StringPtrOutput)
}

// Hosted NAT Traversal (HNT). Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) HostedNatTraversal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.HostedNatTraversal }).(pulumi.StringPtrOutput)
}

// INFO request rate limit (per second, per policy).
func (o VoipProfileSipOutput) InfoRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.InfoRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) InfoRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.InfoRateTrack }).(pulumi.StringPtrOutput)
}

// INVITE request rate limit (per second, per policy).
func (o VoipProfileSipOutput) InviteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.InviteRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) InviteRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.InviteRateTrack }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPS on RTP. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) IpsRtp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.IpsRtp }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SIP call summary. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) LogCallSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.LogCallSummary }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SIP violations. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.LogViolations }).(pulumi.StringPtrOutput)
}

// Action for malformed Allow header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderAllow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderAllow }).(pulumi.StringPtrOutput)
}

// Action for malformed Call-ID header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderCallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderCallId }).(pulumi.StringPtrOutput)
}

// Action for malformed Contact header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderContact }).(pulumi.StringPtrOutput)
}

// Action for malformed Content-Length header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderContentLength }).(pulumi.StringPtrOutput)
}

// Action for malformed Content-Type header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderContentType }).(pulumi.StringPtrOutput)
}

// Action for malformed CSeq header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderCseq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderCseq }).(pulumi.StringPtrOutput)
}

// Action for malformed Expires header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderExpires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderExpires }).(pulumi.StringPtrOutput)
}

// Action for malformed From header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderFrom }).(pulumi.StringPtrOutput)
}

// Action for malformed Max-Forwards header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderMaxForwards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderMaxForwards }).(pulumi.StringPtrOutput)
}

// Action for malformed SIP messages without Proxy-Require header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderNoProxyRequire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderNoProxyRequire }).(pulumi.StringPtrOutput)
}

// Action for malformed SIP messages without Require header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderNoRequire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderNoRequire }).(pulumi.StringPtrOutput)
}

// Action for malformed P-Asserted-Identity header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderPAssertedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderPAssertedIdentity }).(pulumi.StringPtrOutput)
}

// Action for malformed RAck header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderRack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderRack }).(pulumi.StringPtrOutput)
}

// Action for malformed Record-Route header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderRecordRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderRecordRoute }).(pulumi.StringPtrOutput)
}

// Action for malformed Route header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderRoute }).(pulumi.StringPtrOutput)
}

// Action for malformed RSeq header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderRseq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderRseq }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP a line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpA }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP b line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpB }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP c line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpC }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP i line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpI }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP k line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpK() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpK }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP m line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpM() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpM }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP o line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpO() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpO }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP r line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpR }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP s line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpS() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpS }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP t line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpT() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpT }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP v line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpV() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpV }).(pulumi.StringPtrOutput)
}

// Action for malformed SDP z line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderSdpZ() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderSdpZ }).(pulumi.StringPtrOutput)
}

// Action for malformed To header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderTo }).(pulumi.StringPtrOutput)
}

// Action for malformed VIA header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedHeaderVia() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedHeaderVia }).(pulumi.StringPtrOutput)
}

// Action for malformed request line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) MalformedRequestLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MalformedRequestLine }).(pulumi.StringPtrOutput)
}

// Maximum SIP message body length (0 meaning no limit).
func (o VoipProfileSipOutput) MaxBodyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.MaxBodyLength }).(pulumi.IntPtrOutput)
}

// Maximum number of concurrent calls/dialogs (per policy).
func (o VoipProfileSipOutput) MaxDialogs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.MaxDialogs }).(pulumi.IntPtrOutput)
}

// Maximum number established but idle dialogs to retain (per policy).
func (o VoipProfileSipOutput) MaxIdleDialogs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.MaxIdleDialogs }).(pulumi.IntPtrOutput)
}

// Maximum SIP header line length (78-4096).
func (o VoipProfileSipOutput) MaxLineLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.MaxLineLength }).(pulumi.IntPtrOutput)
}

// MESSAGE request rate limit (per second, per policy).
func (o VoipProfileSipOutput) MessageRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.MessageRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) MessageRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.MessageRateTrack }).(pulumi.StringPtrOutput)
}

// RTP NAT port range.
func (o VoipProfileSipOutput) NatPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.NatPortRange }).(pulumi.StringPtrOutput)
}

// Enable/disable preservation of original IP in SDP i line. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) NatTrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.NatTrace }).(pulumi.StringPtrOutput)
}

// Enable/disable no SDP fix-up. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) NoSdpFixup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.NoSdpFixup }).(pulumi.StringPtrOutput)
}

// NOTIFY request rate limit (per second, per policy).
func (o VoipProfileSipOutput) NotifyRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.NotifyRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) NotifyRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.NotifyRateTrack }).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for non-REGISTER Contact port. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) OpenContactPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.OpenContactPinhole }).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for Record-Route port. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) OpenRecordRoutePinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.OpenRecordRoutePinhole }).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for REGISTER Contact port. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) OpenRegisterPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.OpenRegisterPinhole }).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for Via port. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) OpenViaPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.OpenViaPinhole }).(pulumi.StringPtrOutput)
}

// OPTIONS request rate limit (per second, per policy).
func (o VoipProfileSipOutput) OptionsRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.OptionsRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) OptionsRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.OptionsRateTrack }).(pulumi.StringPtrOutput)
}

// PRACK request rate limit (per second, per policy).
func (o VoipProfileSipOutput) PrackRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.PrackRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) PrackRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.PrackRateTrack }).(pulumi.StringPtrOutput)
}

// Override i line to preserve original IPS (default: append). Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) PreserveOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.PreserveOverride }).(pulumi.StringPtrOutput)
}

// Expiry time for provisional INVITE (10 - 3600 sec).
func (o VoipProfileSipOutput) ProvisionalInviteExpiryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.ProvisionalInviteExpiryTime }).(pulumi.IntPtrOutput)
}

// PUBLISH request rate limit (per second, per policy).
func (o VoipProfileSipOutput) PublishRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.PublishRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) PublishRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.PublishRateTrack }).(pulumi.StringPtrOutput)
}

// REFER request rate limit (per second, per policy).
func (o VoipProfileSipOutput) ReferRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.ReferRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) ReferRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.ReferRateTrack }).(pulumi.StringPtrOutput)
}

// Enable/disable trace original IP/port within the contact header of REGISTER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) RegisterContactTrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.RegisterContactTrace }).(pulumi.StringPtrOutput)
}

// REGISTER request rate limit (per second, per policy).
func (o VoipProfileSipOutput) RegisterRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.RegisterRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) RegisterRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.RegisterRateTrack }).(pulumi.StringPtrOutput)
}

// Enable/disable support via branch compliant with RFC 2543. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) Rfc2543Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.Rfc2543Branch }).(pulumi.StringPtrOutput)
}

// Enable/disable create pinholes for RTP traffic to traverse firewall. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) Rtp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.Rtp }).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted in negotiation. Valid values: `high`, `medium`, `low`.
func (o VoipProfileSipOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// Require a client certificate and authenticate it with the peer/peergrp.
func (o VoipProfileSipOutput) SslAuthClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslAuthClient }).(pulumi.StringPtrOutput)
}

// Authenticate the server's certificate with the peer/peergrp.
func (o VoipProfileSipOutput) SslAuthServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslAuthServer }).(pulumi.StringPtrOutput)
}

// Name of Certificate to offer to server if requested.
func (o VoipProfileSipOutput) SslClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslClientCertificate }).(pulumi.StringPtrOutput)
}

// Allow/block client renegotiation by server. Valid values: `allow`, `deny`, `secure`.
func (o VoipProfileSipOutput) SslClientRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslClientRenegotiation }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version to negotiate.
func (o VoipProfileSipOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version to negotiate.
func (o VoipProfileSipOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// SSL/TLS mode for encryption & decryption of traffic. Valid values: `off`, `full`.
func (o VoipProfileSipOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslMode }).(pulumi.StringPtrOutput)
}

// SSL Perfect Forward Secrecy. Valid values: `require`, `deny`, `allow`.
func (o VoipProfileSipOutput) SslPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslPfs }).(pulumi.StringPtrOutput)
}

// Send empty fragments to avoid attack on CBC IV (SSL 3.0 & TLS 1.0 only). Valid values: `enable`, `disable`.
func (o VoipProfileSipOutput) SslSendEmptyFrags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslSendEmptyFrags }).(pulumi.StringPtrOutput)
}

// Name of Certificate return to the client in every SSL connection.
func (o VoipProfileSipOutput) SslServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SslServerCertificate }).(pulumi.StringPtrOutput)
}

// Enable/disable SIP. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable only allow the registrar to connect. Valid values: `disable`, `enable`.
func (o VoipProfileSipOutput) StrictRegister() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.StrictRegister }).(pulumi.StringPtrOutput)
}

// SUBSCRIBE request rate limit (per second, per policy).
func (o VoipProfileSipOutput) SubscribeRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.SubscribeRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) SubscribeRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.SubscribeRateTrack }).(pulumi.StringPtrOutput)
}

// Action for unknown SIP header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipOutput) UnknownHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.UnknownHeader }).(pulumi.StringPtrOutput)
}

// UPDATE request rate limit (per second, per policy).
func (o VoipProfileSipOutput) UpdateRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *int { return v.UpdateRate }).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipOutput) UpdateRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VoipProfileSip) *string { return v.UpdateRateTrack }).(pulumi.StringPtrOutput)
}

type VoipProfileSipPtrOutput struct{ *pulumi.OutputState }

func (VoipProfileSipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoipProfileSip)(nil)).Elem()
}

func (o VoipProfileSipPtrOutput) ToVoipProfileSipPtrOutput() VoipProfileSipPtrOutput {
	return o
}

func (o VoipProfileSipPtrOutput) ToVoipProfileSipPtrOutputWithContext(ctx context.Context) VoipProfileSipPtrOutput {
	return o
}

func (o VoipProfileSipPtrOutput) Elem() VoipProfileSipOutput {
	return o.ApplyT(func(v *VoipProfileSip) VoipProfileSip {
		if v != nil {
			return *v
		}
		var ret VoipProfileSip
		return ret
	}).(VoipProfileSipOutput)
}

// ACK request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) AckRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.AckRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) AckRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.AckRateTrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block ACK requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockAck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockAck
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block BYE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockBye() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockBye
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block CANCEL requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockCancel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockCancel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block OPTIONS requests, but OPTIONS requests still notify for redundancy. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockGeoRedOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockGeoRedOptions
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block INFO requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockInfo
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block INVITE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockInvite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockInvite
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block requests with headers exceeding max-line-length. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockLongLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockLongLines
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block MESSAGE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockMessage
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block NOTIFY requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockNotify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockNotify
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block OPTIONS requests and no OPTIONS as notifying message for redundancy either. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockOptions
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block prack requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockPrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockPrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block PUBLISH requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockPublish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockPublish
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block REFER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockRefer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockRefer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block REGISTER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockRegister() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockRegister
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block SUBSCRIBE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockSubscribe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockSubscribe
	}).(pulumi.StringPtrOutput)
}

// Block unrecognized SIP requests (enabled by default). Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockUnknown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockUnknown
	}).(pulumi.StringPtrOutput)
}

// Enable/disable block UPDATE requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) BlockUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.BlockUpdate
	}).(pulumi.StringPtrOutput)
}

// BYE request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) ByeRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.ByeRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) ByeRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.ByeRateTrack
	}).(pulumi.StringPtrOutput)
}

// Continue tracking calls with no RTP for this many minutes.
func (o VoipProfileSipPtrOutput) CallKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.CallKeepalive
	}).(pulumi.IntPtrOutput)
}

// CANCEL request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) CancelRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.CancelRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) CancelRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.CancelRateTrack
	}).(pulumi.StringPtrOutput)
}

// Fixup contact anyway even if contact's IP:port doesn't match session's IP:port. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) ContactFixup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.ContactFixup
	}).(pulumi.StringPtrOutput)
}

// Enable/disable restrict RTP source IP to be the same as SIP source IP when HNT is enabled. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) HntRestrictSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.HntRestrictSourceIp
	}).(pulumi.StringPtrOutput)
}

// Hosted NAT Traversal (HNT). Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) HostedNatTraversal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.HostedNatTraversal
	}).(pulumi.StringPtrOutput)
}

// INFO request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) InfoRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.InfoRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) InfoRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.InfoRateTrack
	}).(pulumi.StringPtrOutput)
}

// INVITE request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) InviteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.InviteRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) InviteRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.InviteRateTrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPS on RTP. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) IpsRtp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.IpsRtp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SIP call summary. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) LogCallSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.LogCallSummary
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of SIP violations. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) LogViolations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.LogViolations
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Allow header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderAllow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderAllow
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Call-ID header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderCallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderCallId
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Contact header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderContact
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Content-Length header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderContentLength
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Content-Type header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderContentType
	}).(pulumi.StringPtrOutput)
}

// Action for malformed CSeq header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderCseq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderCseq
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Expires header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderExpires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderExpires
	}).(pulumi.StringPtrOutput)
}

// Action for malformed From header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderFrom
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Max-Forwards header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderMaxForwards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderMaxForwards
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SIP messages without Proxy-Require header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderNoProxyRequire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderNoProxyRequire
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SIP messages without Require header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderNoRequire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderNoRequire
	}).(pulumi.StringPtrOutput)
}

// Action for malformed P-Asserted-Identity header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderPAssertedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderPAssertedIdentity
	}).(pulumi.StringPtrOutput)
}

// Action for malformed RAck header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderRack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderRack
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Record-Route header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderRecordRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderRecordRoute
	}).(pulumi.StringPtrOutput)
}

// Action for malformed Route header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderRoute
	}).(pulumi.StringPtrOutput)
}

// Action for malformed RSeq header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderRseq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderRseq
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP a line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpA
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP b line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpB
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP c line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpC
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP i line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpI
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP k line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpK() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpK
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP m line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpM() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpM
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP o line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpO() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpO
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP r line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpR
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP s line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpS() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpS
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP t line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpT() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpT
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP v line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpV() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpV
	}).(pulumi.StringPtrOutput)
}

// Action for malformed SDP z line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderSdpZ() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderSdpZ
	}).(pulumi.StringPtrOutput)
}

// Action for malformed To header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderTo
	}).(pulumi.StringPtrOutput)
}

// Action for malformed VIA header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedHeaderVia() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedHeaderVia
	}).(pulumi.StringPtrOutput)
}

// Action for malformed request line. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) MalformedRequestLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MalformedRequestLine
	}).(pulumi.StringPtrOutput)
}

// Maximum SIP message body length (0 meaning no limit).
func (o VoipProfileSipPtrOutput) MaxBodyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.MaxBodyLength
	}).(pulumi.IntPtrOutput)
}

// Maximum number of concurrent calls/dialogs (per policy).
func (o VoipProfileSipPtrOutput) MaxDialogs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.MaxDialogs
	}).(pulumi.IntPtrOutput)
}

// Maximum number established but idle dialogs to retain (per policy).
func (o VoipProfileSipPtrOutput) MaxIdleDialogs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleDialogs
	}).(pulumi.IntPtrOutput)
}

// Maximum SIP header line length (78-4096).
func (o VoipProfileSipPtrOutput) MaxLineLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.MaxLineLength
	}).(pulumi.IntPtrOutput)
}

// MESSAGE request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) MessageRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.MessageRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) MessageRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.MessageRateTrack
	}).(pulumi.StringPtrOutput)
}

// RTP NAT port range.
func (o VoipProfileSipPtrOutput) NatPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.NatPortRange
	}).(pulumi.StringPtrOutput)
}

// Enable/disable preservation of original IP in SDP i line. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) NatTrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.NatTrace
	}).(pulumi.StringPtrOutput)
}

// Enable/disable no SDP fix-up. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) NoSdpFixup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.NoSdpFixup
	}).(pulumi.StringPtrOutput)
}

// NOTIFY request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) NotifyRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.NotifyRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) NotifyRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.NotifyRateTrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for non-REGISTER Contact port. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) OpenContactPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.OpenContactPinhole
	}).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for Record-Route port. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) OpenRecordRoutePinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.OpenRecordRoutePinhole
	}).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for REGISTER Contact port. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) OpenRegisterPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.OpenRegisterPinhole
	}).(pulumi.StringPtrOutput)
}

// Enable/disable open pinhole for Via port. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) OpenViaPinhole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.OpenViaPinhole
	}).(pulumi.StringPtrOutput)
}

// OPTIONS request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) OptionsRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.OptionsRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) OptionsRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.OptionsRateTrack
	}).(pulumi.StringPtrOutput)
}

// PRACK request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) PrackRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.PrackRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) PrackRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.PrackRateTrack
	}).(pulumi.StringPtrOutput)
}

// Override i line to preserve original IPS (default: append). Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) PreserveOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.PreserveOverride
	}).(pulumi.StringPtrOutput)
}

// Expiry time for provisional INVITE (10 - 3600 sec).
func (o VoipProfileSipPtrOutput) ProvisionalInviteExpiryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.ProvisionalInviteExpiryTime
	}).(pulumi.IntPtrOutput)
}

// PUBLISH request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) PublishRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.PublishRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) PublishRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.PublishRateTrack
	}).(pulumi.StringPtrOutput)
}

// REFER request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) ReferRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.ReferRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) ReferRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.ReferRateTrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable trace original IP/port within the contact header of REGISTER requests. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) RegisterContactTrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.RegisterContactTrace
	}).(pulumi.StringPtrOutput)
}

// REGISTER request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) RegisterRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) RegisterRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.RegisterRateTrack
	}).(pulumi.StringPtrOutput)
}

// Enable/disable support via branch compliant with RFC 2543. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) Rfc2543Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.Rfc2543Branch
	}).(pulumi.StringPtrOutput)
}

// Enable/disable create pinholes for RTP traffic to traverse firewall. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) Rtp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.Rtp
	}).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted in negotiation. Valid values: `high`, `medium`, `low`.
func (o VoipProfileSipPtrOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Require a client certificate and authenticate it with the peer/peergrp.
func (o VoipProfileSipPtrOutput) SslAuthClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslAuthClient
	}).(pulumi.StringPtrOutput)
}

// Authenticate the server's certificate with the peer/peergrp.
func (o VoipProfileSipPtrOutput) SslAuthServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslAuthServer
	}).(pulumi.StringPtrOutput)
}

// Name of Certificate to offer to server if requested.
func (o VoipProfileSipPtrOutput) SslClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Allow/block client renegotiation by server. Valid values: `allow`, `deny`, `secure`.
func (o VoipProfileSipPtrOutput) SslClientRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslClientRenegotiation
	}).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version to negotiate.
func (o VoipProfileSipPtrOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslMaxVersion
	}).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version to negotiate.
func (o VoipProfileSipPtrOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslMinVersion
	}).(pulumi.StringPtrOutput)
}

// SSL/TLS mode for encryption & decryption of traffic. Valid values: `off`, `full`.
func (o VoipProfileSipPtrOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslMode
	}).(pulumi.StringPtrOutput)
}

// SSL Perfect Forward Secrecy. Valid values: `require`, `deny`, `allow`.
func (o VoipProfileSipPtrOutput) SslPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslPfs
	}).(pulumi.StringPtrOutput)
}

// Send empty fragments to avoid attack on CBC IV (SSL 3.0 & TLS 1.0 only). Valid values: `enable`, `disable`.
func (o VoipProfileSipPtrOutput) SslSendEmptyFrags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslSendEmptyFrags
	}).(pulumi.StringPtrOutput)
}

// Name of Certificate return to the client in every SSL connection.
func (o VoipProfileSipPtrOutput) SslServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SslServerCertificate
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SIP. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Enable/disable only allow the registrar to connect. Valid values: `disable`, `enable`.
func (o VoipProfileSipPtrOutput) StrictRegister() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.StrictRegister
	}).(pulumi.StringPtrOutput)
}

// SUBSCRIBE request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) SubscribeRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.SubscribeRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) SubscribeRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.SubscribeRateTrack
	}).(pulumi.StringPtrOutput)
}

// Action for unknown SIP header. Valid values: `discard`, `pass`, `respond`.
func (o VoipProfileSipPtrOutput) UnknownHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.UnknownHeader
	}).(pulumi.StringPtrOutput)
}

// UPDATE request rate limit (per second, per policy).
func (o VoipProfileSipPtrOutput) UpdateRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *int {
		if v == nil {
			return nil
		}
		return v.UpdateRate
	}).(pulumi.IntPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`.
func (o VoipProfileSipPtrOutput) UpdateRateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoipProfileSip) *string {
		if v == nil {
			return nil
		}
		return v.UpdateRateTrack
	}).(pulumi.StringPtrOutput)
}

type VpnOcvpnForticlientAccess struct {
	// FortiClient user authentication groups. The structure of `authGroups` block is documented below.
	AuthGroups []VpnOcvpnForticlientAccessAuthGroup `pulumi:"authGroups"`
	// Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret *string `pulumi:"psksecret"`
	// Enable/disable FortiClient to access OCVPN networks. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// VpnOcvpnForticlientAccessInput is an input type that accepts VpnOcvpnForticlientAccessArgs and VpnOcvpnForticlientAccessOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessInput` via:
//
//	VpnOcvpnForticlientAccessArgs{...}
type VpnOcvpnForticlientAccessInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessOutput() VpnOcvpnForticlientAccessOutput
	ToVpnOcvpnForticlientAccessOutputWithContext(context.Context) VpnOcvpnForticlientAccessOutput
}

type VpnOcvpnForticlientAccessArgs struct {
	// FortiClient user authentication groups. The structure of `authGroups` block is documented below.
	AuthGroups VpnOcvpnForticlientAccessAuthGroupArrayInput `pulumi:"authGroups"`
	// Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringPtrInput `pulumi:"psksecret"`
	// Enable/disable FortiClient to access OCVPN networks. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VpnOcvpnForticlientAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccess)(nil)).Elem()
}

func (i VpnOcvpnForticlientAccessArgs) ToVpnOcvpnForticlientAccessOutput() VpnOcvpnForticlientAccessOutput {
	return i.ToVpnOcvpnForticlientAccessOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessArgs) ToVpnOcvpnForticlientAccessOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessOutput)
}

func (i VpnOcvpnForticlientAccessArgs) ToVpnOcvpnForticlientAccessPtrOutput() VpnOcvpnForticlientAccessPtrOutput {
	return i.ToVpnOcvpnForticlientAccessPtrOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessArgs) ToVpnOcvpnForticlientAccessPtrOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessOutput).ToVpnOcvpnForticlientAccessPtrOutputWithContext(ctx)
}

// VpnOcvpnForticlientAccessPtrInput is an input type that accepts VpnOcvpnForticlientAccessArgs, VpnOcvpnForticlientAccessPtr and VpnOcvpnForticlientAccessPtrOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessPtrInput` via:
//
//	        VpnOcvpnForticlientAccessArgs{...}
//
//	or:
//
//	        nil
type VpnOcvpnForticlientAccessPtrInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessPtrOutput() VpnOcvpnForticlientAccessPtrOutput
	ToVpnOcvpnForticlientAccessPtrOutputWithContext(context.Context) VpnOcvpnForticlientAccessPtrOutput
}

type vpnOcvpnForticlientAccessPtrType VpnOcvpnForticlientAccessArgs

func VpnOcvpnForticlientAccessPtr(v *VpnOcvpnForticlientAccessArgs) VpnOcvpnForticlientAccessPtrInput {
	return (*vpnOcvpnForticlientAccessPtrType)(v)
}

func (*vpnOcvpnForticlientAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnOcvpnForticlientAccess)(nil)).Elem()
}

func (i *vpnOcvpnForticlientAccessPtrType) ToVpnOcvpnForticlientAccessPtrOutput() VpnOcvpnForticlientAccessPtrOutput {
	return i.ToVpnOcvpnForticlientAccessPtrOutputWithContext(context.Background())
}

func (i *vpnOcvpnForticlientAccessPtrType) ToVpnOcvpnForticlientAccessPtrOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessPtrOutput)
}

type VpnOcvpnForticlientAccessOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccess)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessOutput) ToVpnOcvpnForticlientAccessOutput() VpnOcvpnForticlientAccessOutput {
	return o
}

func (o VpnOcvpnForticlientAccessOutput) ToVpnOcvpnForticlientAccessOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessOutput {
	return o
}

func (o VpnOcvpnForticlientAccessOutput) ToVpnOcvpnForticlientAccessPtrOutput() VpnOcvpnForticlientAccessPtrOutput {
	return o.ToVpnOcvpnForticlientAccessPtrOutputWithContext(context.Background())
}

func (o VpnOcvpnForticlientAccessOutput) ToVpnOcvpnForticlientAccessPtrOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnOcvpnForticlientAccess) *VpnOcvpnForticlientAccess {
		return &v
	}).(VpnOcvpnForticlientAccessPtrOutput)
}

// FortiClient user authentication groups. The structure of `authGroups` block is documented below.
func (o VpnOcvpnForticlientAccessOutput) AuthGroups() VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccess) []VpnOcvpnForticlientAccessAuthGroup { return v.AuthGroups }).(VpnOcvpnForticlientAccessAuthGroupArrayOutput)
}

// Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
func (o VpnOcvpnForticlientAccessOutput) Psksecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccess) *string { return v.Psksecret }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient to access OCVPN networks. Valid values: `enable`, `disable`.
func (o VpnOcvpnForticlientAccessOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccess) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VpnOcvpnForticlientAccessPtrOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnOcvpnForticlientAccess)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessPtrOutput) ToVpnOcvpnForticlientAccessPtrOutput() VpnOcvpnForticlientAccessPtrOutput {
	return o
}

func (o VpnOcvpnForticlientAccessPtrOutput) ToVpnOcvpnForticlientAccessPtrOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessPtrOutput {
	return o
}

func (o VpnOcvpnForticlientAccessPtrOutput) Elem() VpnOcvpnForticlientAccessOutput {
	return o.ApplyT(func(v *VpnOcvpnForticlientAccess) VpnOcvpnForticlientAccess {
		if v != nil {
			return *v
		}
		var ret VpnOcvpnForticlientAccess
		return ret
	}).(VpnOcvpnForticlientAccessOutput)
}

// FortiClient user authentication groups. The structure of `authGroups` block is documented below.
func (o VpnOcvpnForticlientAccessPtrOutput) AuthGroups() VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return o.ApplyT(func(v *VpnOcvpnForticlientAccess) []VpnOcvpnForticlientAccessAuthGroup {
		if v == nil {
			return nil
		}
		return v.AuthGroups
	}).(VpnOcvpnForticlientAccessAuthGroupArrayOutput)
}

// Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
func (o VpnOcvpnForticlientAccessPtrOutput) Psksecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnOcvpnForticlientAccess) *string {
		if v == nil {
			return nil
		}
		return v.Psksecret
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient to access OCVPN networks. Valid values: `enable`, `disable`.
func (o VpnOcvpnForticlientAccessPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnOcvpnForticlientAccess) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type VpnOcvpnForticlientAccessAuthGroup struct {
	// Authentication user group for FortiClient access.
	AuthGroup *string `pulumi:"authGroup"`
	// Group name.
	Name *string `pulumi:"name"`
	// OCVPN overlays to allow access to. The structure of `overlays` block is documented below.
	Overlays []VpnOcvpnForticlientAccessAuthGroupOverlay `pulumi:"overlays"`
}

// VpnOcvpnForticlientAccessAuthGroupInput is an input type that accepts VpnOcvpnForticlientAccessAuthGroupArgs and VpnOcvpnForticlientAccessAuthGroupOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessAuthGroupInput` via:
//
//	VpnOcvpnForticlientAccessAuthGroupArgs{...}
type VpnOcvpnForticlientAccessAuthGroupInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessAuthGroupOutput() VpnOcvpnForticlientAccessAuthGroupOutput
	ToVpnOcvpnForticlientAccessAuthGroupOutputWithContext(context.Context) VpnOcvpnForticlientAccessAuthGroupOutput
}

type VpnOcvpnForticlientAccessAuthGroupArgs struct {
	// Authentication user group for FortiClient access.
	AuthGroup pulumi.StringPtrInput `pulumi:"authGroup"`
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OCVPN overlays to allow access to. The structure of `overlays` block is documented below.
	Overlays VpnOcvpnForticlientAccessAuthGroupOverlayArrayInput `pulumi:"overlays"`
}

func (VpnOcvpnForticlientAccessAuthGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroup)(nil)).Elem()
}

func (i VpnOcvpnForticlientAccessAuthGroupArgs) ToVpnOcvpnForticlientAccessAuthGroupOutput() VpnOcvpnForticlientAccessAuthGroupOutput {
	return i.ToVpnOcvpnForticlientAccessAuthGroupOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessAuthGroupArgs) ToVpnOcvpnForticlientAccessAuthGroupOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessAuthGroupOutput)
}

// VpnOcvpnForticlientAccessAuthGroupArrayInput is an input type that accepts VpnOcvpnForticlientAccessAuthGroupArray and VpnOcvpnForticlientAccessAuthGroupArrayOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessAuthGroupArrayInput` via:
//
//	VpnOcvpnForticlientAccessAuthGroupArray{ VpnOcvpnForticlientAccessAuthGroupArgs{...} }
type VpnOcvpnForticlientAccessAuthGroupArrayInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessAuthGroupArrayOutput() VpnOcvpnForticlientAccessAuthGroupArrayOutput
	ToVpnOcvpnForticlientAccessAuthGroupArrayOutputWithContext(context.Context) VpnOcvpnForticlientAccessAuthGroupArrayOutput
}

type VpnOcvpnForticlientAccessAuthGroupArray []VpnOcvpnForticlientAccessAuthGroupInput

func (VpnOcvpnForticlientAccessAuthGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnForticlientAccessAuthGroup)(nil)).Elem()
}

func (i VpnOcvpnForticlientAccessAuthGroupArray) ToVpnOcvpnForticlientAccessAuthGroupArrayOutput() VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return i.ToVpnOcvpnForticlientAccessAuthGroupArrayOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessAuthGroupArray) ToVpnOcvpnForticlientAccessAuthGroupArrayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessAuthGroupArrayOutput)
}

type VpnOcvpnForticlientAccessAuthGroupOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessAuthGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroup)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessAuthGroupOutput) ToVpnOcvpnForticlientAccessAuthGroupOutput() VpnOcvpnForticlientAccessAuthGroupOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupOutput) ToVpnOcvpnForticlientAccessAuthGroupOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOutput {
	return o
}

// Authentication user group for FortiClient access.
func (o VpnOcvpnForticlientAccessAuthGroupOutput) AuthGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccessAuthGroup) *string { return v.AuthGroup }).(pulumi.StringPtrOutput)
}

// Group name.
func (o VpnOcvpnForticlientAccessAuthGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccessAuthGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OCVPN overlays to allow access to. The structure of `overlays` block is documented below.
func (o VpnOcvpnForticlientAccessAuthGroupOutput) Overlays() VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccessAuthGroup) []VpnOcvpnForticlientAccessAuthGroupOverlay {
		return v.Overlays
	}).(VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput)
}

type VpnOcvpnForticlientAccessAuthGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessAuthGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnForticlientAccessAuthGroup)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessAuthGroupArrayOutput) ToVpnOcvpnForticlientAccessAuthGroupArrayOutput() VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupArrayOutput) ToVpnOcvpnForticlientAccessAuthGroupArrayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupArrayOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupArrayOutput) Index(i pulumi.IntInput) VpnOcvpnForticlientAccessAuthGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnOcvpnForticlientAccessAuthGroup {
		return vs[0].([]VpnOcvpnForticlientAccessAuthGroup)[vs[1].(int)]
	}).(VpnOcvpnForticlientAccessAuthGroupOutput)
}

type VpnOcvpnForticlientAccessAuthGroupOverlay struct {
	// Overlay name.
	OverlayName *string `pulumi:"overlayName"`
}

// VpnOcvpnForticlientAccessAuthGroupOverlayInput is an input type that accepts VpnOcvpnForticlientAccessAuthGroupOverlayArgs and VpnOcvpnForticlientAccessAuthGroupOverlayOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessAuthGroupOverlayInput` via:
//
//	VpnOcvpnForticlientAccessAuthGroupOverlayArgs{...}
type VpnOcvpnForticlientAccessAuthGroupOverlayInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessAuthGroupOverlayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayOutput
	ToVpnOcvpnForticlientAccessAuthGroupOverlayOutputWithContext(context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayOutput
}

type VpnOcvpnForticlientAccessAuthGroupOverlayArgs struct {
	// Overlay name.
	OverlayName pulumi.StringPtrInput `pulumi:"overlayName"`
}

func (VpnOcvpnForticlientAccessAuthGroupOverlayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupOverlay)(nil)).Elem()
}

func (i VpnOcvpnForticlientAccessAuthGroupOverlayArgs) ToVpnOcvpnForticlientAccessAuthGroupOverlayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayOutput {
	return i.ToVpnOcvpnForticlientAccessAuthGroupOverlayOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessAuthGroupOverlayArgs) ToVpnOcvpnForticlientAccessAuthGroupOverlayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessAuthGroupOverlayOutput)
}

// VpnOcvpnForticlientAccessAuthGroupOverlayArrayInput is an input type that accepts VpnOcvpnForticlientAccessAuthGroupOverlayArray and VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput values.
// You can construct a concrete instance of `VpnOcvpnForticlientAccessAuthGroupOverlayArrayInput` via:
//
//	VpnOcvpnForticlientAccessAuthGroupOverlayArray{ VpnOcvpnForticlientAccessAuthGroupOverlayArgs{...} }
type VpnOcvpnForticlientAccessAuthGroupOverlayArrayInput interface {
	pulumi.Input

	ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput
	ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutputWithContext(context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput
}

type VpnOcvpnForticlientAccessAuthGroupOverlayArray []VpnOcvpnForticlientAccessAuthGroupOverlayInput

func (VpnOcvpnForticlientAccessAuthGroupOverlayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnForticlientAccessAuthGroupOverlay)(nil)).Elem()
}

func (i VpnOcvpnForticlientAccessAuthGroupOverlayArray) ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput {
	return i.ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutputWithContext(context.Background())
}

func (i VpnOcvpnForticlientAccessAuthGroupOverlayArray) ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput)
}

type VpnOcvpnForticlientAccessAuthGroupOverlayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessAuthGroupOverlayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupOverlay)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessAuthGroupOverlayOutput) ToVpnOcvpnForticlientAccessAuthGroupOverlayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupOverlayOutput) ToVpnOcvpnForticlientAccessAuthGroupOverlayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayOutput {
	return o
}

// Overlay name.
func (o VpnOcvpnForticlientAccessAuthGroupOverlayOutput) OverlayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnForticlientAccessAuthGroupOverlay) *string { return v.OverlayName }).(pulumi.StringPtrOutput)
}

type VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnForticlientAccessAuthGroupOverlay)(nil)).Elem()
}

func (o VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput) ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput() VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput) ToVpnOcvpnForticlientAccessAuthGroupOverlayArrayOutputWithContext(ctx context.Context) VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput {
	return o
}

func (o VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput) Index(i pulumi.IntInput) VpnOcvpnForticlientAccessAuthGroupOverlayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnOcvpnForticlientAccessAuthGroupOverlay {
		return vs[0].([]VpnOcvpnForticlientAccessAuthGroupOverlay)[vs[1].(int)]
	}).(VpnOcvpnForticlientAccessAuthGroupOverlayOutput)
}

type VpnOcvpnOverlay struct {
	// Enable/disable client address assignment. Valid values: `enable`, `disable`.
	AssignIp *string `pulumi:"assignIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Allow or deny traffic from other overlays. Valid values: `allow`, `deny`.
	InterOverlay *string `pulumi:"interOverlay"`
	// End of client IPv4 range.
	Ipv4EndIp *string `pulumi:"ipv4EndIp"`
	// Start of client IPv4 range.
	Ipv4StartIp *string `pulumi:"ipv4StartIp"`
	// Overlay name.
	Name *string `pulumi:"name"`
	// Overlay name.
	OverlayName *string `pulumi:"overlayName"`
	// Internal subnets to register with OCVPN service. The structure of `subnets` block is documented below.
	Subnets []VpnOcvpnOverlaySubnet `pulumi:"subnets"`
}

// VpnOcvpnOverlayInput is an input type that accepts VpnOcvpnOverlayArgs and VpnOcvpnOverlayOutput values.
// You can construct a concrete instance of `VpnOcvpnOverlayInput` via:
//
//	VpnOcvpnOverlayArgs{...}
type VpnOcvpnOverlayInput interface {
	pulumi.Input

	ToVpnOcvpnOverlayOutput() VpnOcvpnOverlayOutput
	ToVpnOcvpnOverlayOutputWithContext(context.Context) VpnOcvpnOverlayOutput
}

type VpnOcvpnOverlayArgs struct {
	// Enable/disable client address assignment. Valid values: `enable`, `disable`.
	AssignIp pulumi.StringPtrInput `pulumi:"assignIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Allow or deny traffic from other overlays. Valid values: `allow`, `deny`.
	InterOverlay pulumi.StringPtrInput `pulumi:"interOverlay"`
	// End of client IPv4 range.
	Ipv4EndIp pulumi.StringPtrInput `pulumi:"ipv4EndIp"`
	// Start of client IPv4 range.
	Ipv4StartIp pulumi.StringPtrInput `pulumi:"ipv4StartIp"`
	// Overlay name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Overlay name.
	OverlayName pulumi.StringPtrInput `pulumi:"overlayName"`
	// Internal subnets to register with OCVPN service. The structure of `subnets` block is documented below.
	Subnets VpnOcvpnOverlaySubnetArrayInput `pulumi:"subnets"`
}

func (VpnOcvpnOverlayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnOverlay)(nil)).Elem()
}

func (i VpnOcvpnOverlayArgs) ToVpnOcvpnOverlayOutput() VpnOcvpnOverlayOutput {
	return i.ToVpnOcvpnOverlayOutputWithContext(context.Background())
}

func (i VpnOcvpnOverlayArgs) ToVpnOcvpnOverlayOutputWithContext(ctx context.Context) VpnOcvpnOverlayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnOverlayOutput)
}

// VpnOcvpnOverlayArrayInput is an input type that accepts VpnOcvpnOverlayArray and VpnOcvpnOverlayArrayOutput values.
// You can construct a concrete instance of `VpnOcvpnOverlayArrayInput` via:
//
//	VpnOcvpnOverlayArray{ VpnOcvpnOverlayArgs{...} }
type VpnOcvpnOverlayArrayInput interface {
	pulumi.Input

	ToVpnOcvpnOverlayArrayOutput() VpnOcvpnOverlayArrayOutput
	ToVpnOcvpnOverlayArrayOutputWithContext(context.Context) VpnOcvpnOverlayArrayOutput
}

type VpnOcvpnOverlayArray []VpnOcvpnOverlayInput

func (VpnOcvpnOverlayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnOverlay)(nil)).Elem()
}

func (i VpnOcvpnOverlayArray) ToVpnOcvpnOverlayArrayOutput() VpnOcvpnOverlayArrayOutput {
	return i.ToVpnOcvpnOverlayArrayOutputWithContext(context.Background())
}

func (i VpnOcvpnOverlayArray) ToVpnOcvpnOverlayArrayOutputWithContext(ctx context.Context) VpnOcvpnOverlayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnOverlayArrayOutput)
}

type VpnOcvpnOverlayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnOverlayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnOverlay)(nil)).Elem()
}

func (o VpnOcvpnOverlayOutput) ToVpnOcvpnOverlayOutput() VpnOcvpnOverlayOutput {
	return o
}

func (o VpnOcvpnOverlayOutput) ToVpnOcvpnOverlayOutputWithContext(ctx context.Context) VpnOcvpnOverlayOutput {
	return o
}

// Enable/disable client address assignment. Valid values: `enable`, `disable`.
func (o VpnOcvpnOverlayOutput) AssignIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.AssignIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnOcvpnOverlayOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Allow or deny traffic from other overlays. Valid values: `allow`, `deny`.
func (o VpnOcvpnOverlayOutput) InterOverlay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.InterOverlay }).(pulumi.StringPtrOutput)
}

// End of client IPv4 range.
func (o VpnOcvpnOverlayOutput) Ipv4EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.Ipv4EndIp }).(pulumi.StringPtrOutput)
}

// Start of client IPv4 range.
func (o VpnOcvpnOverlayOutput) Ipv4StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.Ipv4StartIp }).(pulumi.StringPtrOutput)
}

// Overlay name.
func (o VpnOcvpnOverlayOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Overlay name.
func (o VpnOcvpnOverlayOutput) OverlayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) *string { return v.OverlayName }).(pulumi.StringPtrOutput)
}

// Internal subnets to register with OCVPN service. The structure of `subnets` block is documented below.
func (o VpnOcvpnOverlayOutput) Subnets() VpnOcvpnOverlaySubnetArrayOutput {
	return o.ApplyT(func(v VpnOcvpnOverlay) []VpnOcvpnOverlaySubnet { return v.Subnets }).(VpnOcvpnOverlaySubnetArrayOutput)
}

type VpnOcvpnOverlayArrayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnOverlayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnOverlay)(nil)).Elem()
}

func (o VpnOcvpnOverlayArrayOutput) ToVpnOcvpnOverlayArrayOutput() VpnOcvpnOverlayArrayOutput {
	return o
}

func (o VpnOcvpnOverlayArrayOutput) ToVpnOcvpnOverlayArrayOutputWithContext(ctx context.Context) VpnOcvpnOverlayArrayOutput {
	return o
}

func (o VpnOcvpnOverlayArrayOutput) Index(i pulumi.IntInput) VpnOcvpnOverlayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnOcvpnOverlay {
		return vs[0].([]VpnOcvpnOverlay)[vs[1].(int)]
	}).(VpnOcvpnOverlayOutput)
}

type VpnOcvpnOverlaySubnet struct {
	// ID.
	Id *int `pulumi:"id"`
	// LAN interface.
	Interface *string `pulumi:"interface"`
	// IPv4 address and subnet mask.
	Subnet *string `pulumi:"subnet"`
	// Subnet type. Valid values: `subnet`, `interface`.
	Type *string `pulumi:"type"`
}

// VpnOcvpnOverlaySubnetInput is an input type that accepts VpnOcvpnOverlaySubnetArgs and VpnOcvpnOverlaySubnetOutput values.
// You can construct a concrete instance of `VpnOcvpnOverlaySubnetInput` via:
//
//	VpnOcvpnOverlaySubnetArgs{...}
type VpnOcvpnOverlaySubnetInput interface {
	pulumi.Input

	ToVpnOcvpnOverlaySubnetOutput() VpnOcvpnOverlaySubnetOutput
	ToVpnOcvpnOverlaySubnetOutputWithContext(context.Context) VpnOcvpnOverlaySubnetOutput
}

type VpnOcvpnOverlaySubnetArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// LAN interface.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv4 address and subnet mask.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Subnet type. Valid values: `subnet`, `interface`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnOcvpnOverlaySubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnOverlaySubnet)(nil)).Elem()
}

func (i VpnOcvpnOverlaySubnetArgs) ToVpnOcvpnOverlaySubnetOutput() VpnOcvpnOverlaySubnetOutput {
	return i.ToVpnOcvpnOverlaySubnetOutputWithContext(context.Background())
}

func (i VpnOcvpnOverlaySubnetArgs) ToVpnOcvpnOverlaySubnetOutputWithContext(ctx context.Context) VpnOcvpnOverlaySubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnOverlaySubnetOutput)
}

// VpnOcvpnOverlaySubnetArrayInput is an input type that accepts VpnOcvpnOverlaySubnetArray and VpnOcvpnOverlaySubnetArrayOutput values.
// You can construct a concrete instance of `VpnOcvpnOverlaySubnetArrayInput` via:
//
//	VpnOcvpnOverlaySubnetArray{ VpnOcvpnOverlaySubnetArgs{...} }
type VpnOcvpnOverlaySubnetArrayInput interface {
	pulumi.Input

	ToVpnOcvpnOverlaySubnetArrayOutput() VpnOcvpnOverlaySubnetArrayOutput
	ToVpnOcvpnOverlaySubnetArrayOutputWithContext(context.Context) VpnOcvpnOverlaySubnetArrayOutput
}

type VpnOcvpnOverlaySubnetArray []VpnOcvpnOverlaySubnetInput

func (VpnOcvpnOverlaySubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnOverlaySubnet)(nil)).Elem()
}

func (i VpnOcvpnOverlaySubnetArray) ToVpnOcvpnOverlaySubnetArrayOutput() VpnOcvpnOverlaySubnetArrayOutput {
	return i.ToVpnOcvpnOverlaySubnetArrayOutputWithContext(context.Background())
}

func (i VpnOcvpnOverlaySubnetArray) ToVpnOcvpnOverlaySubnetArrayOutputWithContext(ctx context.Context) VpnOcvpnOverlaySubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnOverlaySubnetArrayOutput)
}

type VpnOcvpnOverlaySubnetOutput struct{ *pulumi.OutputState }

func (VpnOcvpnOverlaySubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnOverlaySubnet)(nil)).Elem()
}

func (o VpnOcvpnOverlaySubnetOutput) ToVpnOcvpnOverlaySubnetOutput() VpnOcvpnOverlaySubnetOutput {
	return o
}

func (o VpnOcvpnOverlaySubnetOutput) ToVpnOcvpnOverlaySubnetOutputWithContext(ctx context.Context) VpnOcvpnOverlaySubnetOutput {
	return o
}

// ID.
func (o VpnOcvpnOverlaySubnetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlaySubnet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// LAN interface.
func (o VpnOcvpnOverlaySubnetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlaySubnet) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv4 address and subnet mask.
func (o VpnOcvpnOverlaySubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlaySubnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Subnet type. Valid values: `subnet`, `interface`.
func (o VpnOcvpnOverlaySubnetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnOverlaySubnet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnOcvpnOverlaySubnetArrayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnOverlaySubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnOverlaySubnet)(nil)).Elem()
}

func (o VpnOcvpnOverlaySubnetArrayOutput) ToVpnOcvpnOverlaySubnetArrayOutput() VpnOcvpnOverlaySubnetArrayOutput {
	return o
}

func (o VpnOcvpnOverlaySubnetArrayOutput) ToVpnOcvpnOverlaySubnetArrayOutputWithContext(ctx context.Context) VpnOcvpnOverlaySubnetArrayOutput {
	return o
}

func (o VpnOcvpnOverlaySubnetArrayOutput) Index(i pulumi.IntInput) VpnOcvpnOverlaySubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnOcvpnOverlaySubnet {
		return vs[0].([]VpnOcvpnOverlaySubnet)[vs[1].(int)]
	}).(VpnOcvpnOverlaySubnetOutput)
}

type VpnOcvpnWanInterface struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// VpnOcvpnWanInterfaceInput is an input type that accepts VpnOcvpnWanInterfaceArgs and VpnOcvpnWanInterfaceOutput values.
// You can construct a concrete instance of `VpnOcvpnWanInterfaceInput` via:
//
//	VpnOcvpnWanInterfaceArgs{...}
type VpnOcvpnWanInterfaceInput interface {
	pulumi.Input

	ToVpnOcvpnWanInterfaceOutput() VpnOcvpnWanInterfaceOutput
	ToVpnOcvpnWanInterfaceOutputWithContext(context.Context) VpnOcvpnWanInterfaceOutput
}

type VpnOcvpnWanInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnOcvpnWanInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnWanInterface)(nil)).Elem()
}

func (i VpnOcvpnWanInterfaceArgs) ToVpnOcvpnWanInterfaceOutput() VpnOcvpnWanInterfaceOutput {
	return i.ToVpnOcvpnWanInterfaceOutputWithContext(context.Background())
}

func (i VpnOcvpnWanInterfaceArgs) ToVpnOcvpnWanInterfaceOutputWithContext(ctx context.Context) VpnOcvpnWanInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnWanInterfaceOutput)
}

// VpnOcvpnWanInterfaceArrayInput is an input type that accepts VpnOcvpnWanInterfaceArray and VpnOcvpnWanInterfaceArrayOutput values.
// You can construct a concrete instance of `VpnOcvpnWanInterfaceArrayInput` via:
//
//	VpnOcvpnWanInterfaceArray{ VpnOcvpnWanInterfaceArgs{...} }
type VpnOcvpnWanInterfaceArrayInput interface {
	pulumi.Input

	ToVpnOcvpnWanInterfaceArrayOutput() VpnOcvpnWanInterfaceArrayOutput
	ToVpnOcvpnWanInterfaceArrayOutputWithContext(context.Context) VpnOcvpnWanInterfaceArrayOutput
}

type VpnOcvpnWanInterfaceArray []VpnOcvpnWanInterfaceInput

func (VpnOcvpnWanInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnWanInterface)(nil)).Elem()
}

func (i VpnOcvpnWanInterfaceArray) ToVpnOcvpnWanInterfaceArrayOutput() VpnOcvpnWanInterfaceArrayOutput {
	return i.ToVpnOcvpnWanInterfaceArrayOutputWithContext(context.Background())
}

func (i VpnOcvpnWanInterfaceArray) ToVpnOcvpnWanInterfaceArrayOutputWithContext(ctx context.Context) VpnOcvpnWanInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnOcvpnWanInterfaceArrayOutput)
}

type VpnOcvpnWanInterfaceOutput struct{ *pulumi.OutputState }

func (VpnOcvpnWanInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnOcvpnWanInterface)(nil)).Elem()
}

func (o VpnOcvpnWanInterfaceOutput) ToVpnOcvpnWanInterfaceOutput() VpnOcvpnWanInterfaceOutput {
	return o
}

func (o VpnOcvpnWanInterfaceOutput) ToVpnOcvpnWanInterfaceOutputWithContext(ctx context.Context) VpnOcvpnWanInterfaceOutput {
	return o
}

// Interface name.
func (o VpnOcvpnWanInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnOcvpnWanInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnOcvpnWanInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VpnOcvpnWanInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnOcvpnWanInterface)(nil)).Elem()
}

func (o VpnOcvpnWanInterfaceArrayOutput) ToVpnOcvpnWanInterfaceArrayOutput() VpnOcvpnWanInterfaceArrayOutput {
	return o
}

func (o VpnOcvpnWanInterfaceArrayOutput) ToVpnOcvpnWanInterfaceArrayOutputWithContext(ctx context.Context) VpnOcvpnWanInterfaceArrayOutput {
	return o
}

func (o VpnOcvpnWanInterfaceArrayOutput) Index(i pulumi.IntInput) VpnOcvpnWanInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnOcvpnWanInterface {
		return vs[0].([]VpnOcvpnWanInterface)[vs[1].(int)]
	}).(VpnOcvpnWanInterfaceOutput)
}

type VpncertificateSettingCrlVerification struct {
	// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
	ChainCrlAbsence *string `pulumi:"chainCrlAbsence"`
	// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
	Expiry *string `pulumi:"expiry"`
	// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
	LeafCrlAbsence *string `pulumi:"leafCrlAbsence"`
}

// VpncertificateSettingCrlVerificationInput is an input type that accepts VpncertificateSettingCrlVerificationArgs and VpncertificateSettingCrlVerificationOutput values.
// You can construct a concrete instance of `VpncertificateSettingCrlVerificationInput` via:
//
//	VpncertificateSettingCrlVerificationArgs{...}
type VpncertificateSettingCrlVerificationInput interface {
	pulumi.Input

	ToVpncertificateSettingCrlVerificationOutput() VpncertificateSettingCrlVerificationOutput
	ToVpncertificateSettingCrlVerificationOutputWithContext(context.Context) VpncertificateSettingCrlVerificationOutput
}

type VpncertificateSettingCrlVerificationArgs struct {
	// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
	ChainCrlAbsence pulumi.StringPtrInput `pulumi:"chainCrlAbsence"`
	// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
	LeafCrlAbsence pulumi.StringPtrInput `pulumi:"leafCrlAbsence"`
}

func (VpncertificateSettingCrlVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpncertificateSettingCrlVerification)(nil)).Elem()
}

func (i VpncertificateSettingCrlVerificationArgs) ToVpncertificateSettingCrlVerificationOutput() VpncertificateSettingCrlVerificationOutput {
	return i.ToVpncertificateSettingCrlVerificationOutputWithContext(context.Background())
}

func (i VpncertificateSettingCrlVerificationArgs) ToVpncertificateSettingCrlVerificationOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpncertificateSettingCrlVerificationOutput)
}

func (i VpncertificateSettingCrlVerificationArgs) ToVpncertificateSettingCrlVerificationPtrOutput() VpncertificateSettingCrlVerificationPtrOutput {
	return i.ToVpncertificateSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (i VpncertificateSettingCrlVerificationArgs) ToVpncertificateSettingCrlVerificationPtrOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpncertificateSettingCrlVerificationOutput).ToVpncertificateSettingCrlVerificationPtrOutputWithContext(ctx)
}

// VpncertificateSettingCrlVerificationPtrInput is an input type that accepts VpncertificateSettingCrlVerificationArgs, VpncertificateSettingCrlVerificationPtr and VpncertificateSettingCrlVerificationPtrOutput values.
// You can construct a concrete instance of `VpncertificateSettingCrlVerificationPtrInput` via:
//
//	        VpncertificateSettingCrlVerificationArgs{...}
//
//	or:
//
//	        nil
type VpncertificateSettingCrlVerificationPtrInput interface {
	pulumi.Input

	ToVpncertificateSettingCrlVerificationPtrOutput() VpncertificateSettingCrlVerificationPtrOutput
	ToVpncertificateSettingCrlVerificationPtrOutputWithContext(context.Context) VpncertificateSettingCrlVerificationPtrOutput
}

type vpncertificateSettingCrlVerificationPtrType VpncertificateSettingCrlVerificationArgs

func VpncertificateSettingCrlVerificationPtr(v *VpncertificateSettingCrlVerificationArgs) VpncertificateSettingCrlVerificationPtrInput {
	return (*vpncertificateSettingCrlVerificationPtrType)(v)
}

func (*vpncertificateSettingCrlVerificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpncertificateSettingCrlVerification)(nil)).Elem()
}

func (i *vpncertificateSettingCrlVerificationPtrType) ToVpncertificateSettingCrlVerificationPtrOutput() VpncertificateSettingCrlVerificationPtrOutput {
	return i.ToVpncertificateSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (i *vpncertificateSettingCrlVerificationPtrType) ToVpncertificateSettingCrlVerificationPtrOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpncertificateSettingCrlVerificationPtrOutput)
}

type VpncertificateSettingCrlVerificationOutput struct{ *pulumi.OutputState }

func (VpncertificateSettingCrlVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpncertificateSettingCrlVerification)(nil)).Elem()
}

func (o VpncertificateSettingCrlVerificationOutput) ToVpncertificateSettingCrlVerificationOutput() VpncertificateSettingCrlVerificationOutput {
	return o
}

func (o VpncertificateSettingCrlVerificationOutput) ToVpncertificateSettingCrlVerificationOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationOutput {
	return o
}

func (o VpncertificateSettingCrlVerificationOutput) ToVpncertificateSettingCrlVerificationPtrOutput() VpncertificateSettingCrlVerificationPtrOutput {
	return o.ToVpncertificateSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (o VpncertificateSettingCrlVerificationOutput) ToVpncertificateSettingCrlVerificationPtrOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpncertificateSettingCrlVerification) *VpncertificateSettingCrlVerification {
		return &v
	}).(VpncertificateSettingCrlVerificationPtrOutput)
}

// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationOutput) ChainCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpncertificateSettingCrlVerification) *string { return v.ChainCrlAbsence }).(pulumi.StringPtrOutput)
}

// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpncertificateSettingCrlVerification) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationOutput) LeafCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpncertificateSettingCrlVerification) *string { return v.LeafCrlAbsence }).(pulumi.StringPtrOutput)
}

type VpncertificateSettingCrlVerificationPtrOutput struct{ *pulumi.OutputState }

func (VpncertificateSettingCrlVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpncertificateSettingCrlVerification)(nil)).Elem()
}

func (o VpncertificateSettingCrlVerificationPtrOutput) ToVpncertificateSettingCrlVerificationPtrOutput() VpncertificateSettingCrlVerificationPtrOutput {
	return o
}

func (o VpncertificateSettingCrlVerificationPtrOutput) ToVpncertificateSettingCrlVerificationPtrOutputWithContext(ctx context.Context) VpncertificateSettingCrlVerificationPtrOutput {
	return o
}

func (o VpncertificateSettingCrlVerificationPtrOutput) Elem() VpncertificateSettingCrlVerificationOutput {
	return o.ApplyT(func(v *VpncertificateSettingCrlVerification) VpncertificateSettingCrlVerification {
		if v != nil {
			return *v
		}
		var ret VpncertificateSettingCrlVerification
		return ret
	}).(VpncertificateSettingCrlVerificationOutput)
}

// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationPtrOutput) ChainCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpncertificateSettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.ChainCrlAbsence
	}).(pulumi.StringPtrOutput)
}

// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationPtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpncertificateSettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o VpncertificateSettingCrlVerificationPtrOutput) LeafCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpncertificateSettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.LeafCrlAbsence
	}).(pulumi.StringPtrOutput)
}

type VpnipsecConcentratorMember struct {
	// Member name.
	Name *string `pulumi:"name"`
}

// VpnipsecConcentratorMemberInput is an input type that accepts VpnipsecConcentratorMemberArgs and VpnipsecConcentratorMemberOutput values.
// You can construct a concrete instance of `VpnipsecConcentratorMemberInput` via:
//
//	VpnipsecConcentratorMemberArgs{...}
type VpnipsecConcentratorMemberInput interface {
	pulumi.Input

	ToVpnipsecConcentratorMemberOutput() VpnipsecConcentratorMemberOutput
	ToVpnipsecConcentratorMemberOutputWithContext(context.Context) VpnipsecConcentratorMemberOutput
}

type VpnipsecConcentratorMemberArgs struct {
	// Member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnipsecConcentratorMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecConcentratorMember)(nil)).Elem()
}

func (i VpnipsecConcentratorMemberArgs) ToVpnipsecConcentratorMemberOutput() VpnipsecConcentratorMemberOutput {
	return i.ToVpnipsecConcentratorMemberOutputWithContext(context.Background())
}

func (i VpnipsecConcentratorMemberArgs) ToVpnipsecConcentratorMemberOutputWithContext(ctx context.Context) VpnipsecConcentratorMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecConcentratorMemberOutput)
}

// VpnipsecConcentratorMemberArrayInput is an input type that accepts VpnipsecConcentratorMemberArray and VpnipsecConcentratorMemberArrayOutput values.
// You can construct a concrete instance of `VpnipsecConcentratorMemberArrayInput` via:
//
//	VpnipsecConcentratorMemberArray{ VpnipsecConcentratorMemberArgs{...} }
type VpnipsecConcentratorMemberArrayInput interface {
	pulumi.Input

	ToVpnipsecConcentratorMemberArrayOutput() VpnipsecConcentratorMemberArrayOutput
	ToVpnipsecConcentratorMemberArrayOutputWithContext(context.Context) VpnipsecConcentratorMemberArrayOutput
}

type VpnipsecConcentratorMemberArray []VpnipsecConcentratorMemberInput

func (VpnipsecConcentratorMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecConcentratorMember)(nil)).Elem()
}

func (i VpnipsecConcentratorMemberArray) ToVpnipsecConcentratorMemberArrayOutput() VpnipsecConcentratorMemberArrayOutput {
	return i.ToVpnipsecConcentratorMemberArrayOutputWithContext(context.Background())
}

func (i VpnipsecConcentratorMemberArray) ToVpnipsecConcentratorMemberArrayOutputWithContext(ctx context.Context) VpnipsecConcentratorMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecConcentratorMemberArrayOutput)
}

type VpnipsecConcentratorMemberOutput struct{ *pulumi.OutputState }

func (VpnipsecConcentratorMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecConcentratorMember)(nil)).Elem()
}

func (o VpnipsecConcentratorMemberOutput) ToVpnipsecConcentratorMemberOutput() VpnipsecConcentratorMemberOutput {
	return o
}

func (o VpnipsecConcentratorMemberOutput) ToVpnipsecConcentratorMemberOutputWithContext(ctx context.Context) VpnipsecConcentratorMemberOutput {
	return o
}

// Member name.
func (o VpnipsecConcentratorMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecConcentratorMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnipsecConcentratorMemberArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecConcentratorMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecConcentratorMember)(nil)).Elem()
}

func (o VpnipsecConcentratorMemberArrayOutput) ToVpnipsecConcentratorMemberArrayOutput() VpnipsecConcentratorMemberArrayOutput {
	return o
}

func (o VpnipsecConcentratorMemberArrayOutput) ToVpnipsecConcentratorMemberArrayOutputWithContext(ctx context.Context) VpnipsecConcentratorMemberArrayOutput {
	return o
}

func (o VpnipsecConcentratorMemberArrayOutput) Index(i pulumi.IntInput) VpnipsecConcentratorMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecConcentratorMember {
		return vs[0].([]VpnipsecConcentratorMember)[vs[1].(int)]
	}).(VpnipsecConcentratorMemberOutput)
}

type VpnipsecFecMapping struct {
	// Apply FEC parameters when available bi-bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthBiThreshold *int `pulumi:"bandwidthBiThreshold"`
	// Apply FEC parameters when available down bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthDownThreshold *int `pulumi:"bandwidthDownThreshold"`
	// Apply FEC parameters when available up bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthUpThreshold *int `pulumi:"bandwidthUpThreshold"`
	// Number of base FEC packets (1 - 20).
	Base *int `pulumi:"base"`
	// Apply FEC parameters when latency is <= threshold (0 means no threshold).
	LatencyThreshold *int `pulumi:"latencyThreshold"`
	// Apply FEC parameters when packet loss is >= threshold (0 - 100, 0 means no threshold).
	PacketLossThreshold *int `pulumi:"packetLossThreshold"`
	// Number of redundant FEC packets (1 - 5).
	Redundant *int `pulumi:"redundant"`
	// Sequence number (1 - 64).
	Seqno *int `pulumi:"seqno"`
}

// VpnipsecFecMappingInput is an input type that accepts VpnipsecFecMappingArgs and VpnipsecFecMappingOutput values.
// You can construct a concrete instance of `VpnipsecFecMappingInput` via:
//
//	VpnipsecFecMappingArgs{...}
type VpnipsecFecMappingInput interface {
	pulumi.Input

	ToVpnipsecFecMappingOutput() VpnipsecFecMappingOutput
	ToVpnipsecFecMappingOutputWithContext(context.Context) VpnipsecFecMappingOutput
}

type VpnipsecFecMappingArgs struct {
	// Apply FEC parameters when available bi-bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthBiThreshold pulumi.IntPtrInput `pulumi:"bandwidthBiThreshold"`
	// Apply FEC parameters when available down bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthDownThreshold pulumi.IntPtrInput `pulumi:"bandwidthDownThreshold"`
	// Apply FEC parameters when available up bandwidth is >= threshold (kbps, 0 means no threshold).
	BandwidthUpThreshold pulumi.IntPtrInput `pulumi:"bandwidthUpThreshold"`
	// Number of base FEC packets (1 - 20).
	Base pulumi.IntPtrInput `pulumi:"base"`
	// Apply FEC parameters when latency is <= threshold (0 means no threshold).
	LatencyThreshold pulumi.IntPtrInput `pulumi:"latencyThreshold"`
	// Apply FEC parameters when packet loss is >= threshold (0 - 100, 0 means no threshold).
	PacketLossThreshold pulumi.IntPtrInput `pulumi:"packetLossThreshold"`
	// Number of redundant FEC packets (1 - 5).
	Redundant pulumi.IntPtrInput `pulumi:"redundant"`
	// Sequence number (1 - 64).
	Seqno pulumi.IntPtrInput `pulumi:"seqno"`
}

func (VpnipsecFecMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecFecMapping)(nil)).Elem()
}

func (i VpnipsecFecMappingArgs) ToVpnipsecFecMappingOutput() VpnipsecFecMappingOutput {
	return i.ToVpnipsecFecMappingOutputWithContext(context.Background())
}

func (i VpnipsecFecMappingArgs) ToVpnipsecFecMappingOutputWithContext(ctx context.Context) VpnipsecFecMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecFecMappingOutput)
}

// VpnipsecFecMappingArrayInput is an input type that accepts VpnipsecFecMappingArray and VpnipsecFecMappingArrayOutput values.
// You can construct a concrete instance of `VpnipsecFecMappingArrayInput` via:
//
//	VpnipsecFecMappingArray{ VpnipsecFecMappingArgs{...} }
type VpnipsecFecMappingArrayInput interface {
	pulumi.Input

	ToVpnipsecFecMappingArrayOutput() VpnipsecFecMappingArrayOutput
	ToVpnipsecFecMappingArrayOutputWithContext(context.Context) VpnipsecFecMappingArrayOutput
}

type VpnipsecFecMappingArray []VpnipsecFecMappingInput

func (VpnipsecFecMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecFecMapping)(nil)).Elem()
}

func (i VpnipsecFecMappingArray) ToVpnipsecFecMappingArrayOutput() VpnipsecFecMappingArrayOutput {
	return i.ToVpnipsecFecMappingArrayOutputWithContext(context.Background())
}

func (i VpnipsecFecMappingArray) ToVpnipsecFecMappingArrayOutputWithContext(ctx context.Context) VpnipsecFecMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecFecMappingArrayOutput)
}

type VpnipsecFecMappingOutput struct{ *pulumi.OutputState }

func (VpnipsecFecMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecFecMapping)(nil)).Elem()
}

func (o VpnipsecFecMappingOutput) ToVpnipsecFecMappingOutput() VpnipsecFecMappingOutput {
	return o
}

func (o VpnipsecFecMappingOutput) ToVpnipsecFecMappingOutputWithContext(ctx context.Context) VpnipsecFecMappingOutput {
	return o
}

// Apply FEC parameters when available bi-bandwidth is >= threshold (kbps, 0 means no threshold).
func (o VpnipsecFecMappingOutput) BandwidthBiThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.BandwidthBiThreshold }).(pulumi.IntPtrOutput)
}

// Apply FEC parameters when available down bandwidth is >= threshold (kbps, 0 means no threshold).
func (o VpnipsecFecMappingOutput) BandwidthDownThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.BandwidthDownThreshold }).(pulumi.IntPtrOutput)
}

// Apply FEC parameters when available up bandwidth is >= threshold (kbps, 0 means no threshold).
func (o VpnipsecFecMappingOutput) BandwidthUpThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.BandwidthUpThreshold }).(pulumi.IntPtrOutput)
}

// Number of base FEC packets (1 - 20).
func (o VpnipsecFecMappingOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.Base }).(pulumi.IntPtrOutput)
}

// Apply FEC parameters when latency is <= threshold (0 means no threshold).
func (o VpnipsecFecMappingOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

// Apply FEC parameters when packet loss is >= threshold (0 - 100, 0 means no threshold).
func (o VpnipsecFecMappingOutput) PacketLossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.PacketLossThreshold }).(pulumi.IntPtrOutput)
}

// Number of redundant FEC packets (1 - 5).
func (o VpnipsecFecMappingOutput) Redundant() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.Redundant }).(pulumi.IntPtrOutput)
}

// Sequence number (1 - 64).
func (o VpnipsecFecMappingOutput) Seqno() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecFecMapping) *int { return v.Seqno }).(pulumi.IntPtrOutput)
}

type VpnipsecFecMappingArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecFecMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecFecMapping)(nil)).Elem()
}

func (o VpnipsecFecMappingArrayOutput) ToVpnipsecFecMappingArrayOutput() VpnipsecFecMappingArrayOutput {
	return o
}

func (o VpnipsecFecMappingArrayOutput) ToVpnipsecFecMappingArrayOutputWithContext(ctx context.Context) VpnipsecFecMappingArrayOutput {
	return o
}

func (o VpnipsecFecMappingArrayOutput) Index(i pulumi.IntInput) VpnipsecFecMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecFecMapping {
		return vs[0].([]VpnipsecFecMapping)[vs[1].(int)]
	}).(VpnipsecFecMappingOutput)
}

type VpnipsecPhase1BackupGateway struct {
	// Address of backup gateway.
	Address *string `pulumi:"address"`
}

// VpnipsecPhase1BackupGatewayInput is an input type that accepts VpnipsecPhase1BackupGatewayArgs and VpnipsecPhase1BackupGatewayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1BackupGatewayInput` via:
//
//	VpnipsecPhase1BackupGatewayArgs{...}
type VpnipsecPhase1BackupGatewayInput interface {
	pulumi.Input

	ToVpnipsecPhase1BackupGatewayOutput() VpnipsecPhase1BackupGatewayOutput
	ToVpnipsecPhase1BackupGatewayOutputWithContext(context.Context) VpnipsecPhase1BackupGatewayOutput
}

type VpnipsecPhase1BackupGatewayArgs struct {
	// Address of backup gateway.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (VpnipsecPhase1BackupGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1BackupGateway)(nil)).Elem()
}

func (i VpnipsecPhase1BackupGatewayArgs) ToVpnipsecPhase1BackupGatewayOutput() VpnipsecPhase1BackupGatewayOutput {
	return i.ToVpnipsecPhase1BackupGatewayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1BackupGatewayArgs) ToVpnipsecPhase1BackupGatewayOutputWithContext(ctx context.Context) VpnipsecPhase1BackupGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1BackupGatewayOutput)
}

// VpnipsecPhase1BackupGatewayArrayInput is an input type that accepts VpnipsecPhase1BackupGatewayArray and VpnipsecPhase1BackupGatewayArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1BackupGatewayArrayInput` via:
//
//	VpnipsecPhase1BackupGatewayArray{ VpnipsecPhase1BackupGatewayArgs{...} }
type VpnipsecPhase1BackupGatewayArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1BackupGatewayArrayOutput() VpnipsecPhase1BackupGatewayArrayOutput
	ToVpnipsecPhase1BackupGatewayArrayOutputWithContext(context.Context) VpnipsecPhase1BackupGatewayArrayOutput
}

type VpnipsecPhase1BackupGatewayArray []VpnipsecPhase1BackupGatewayInput

func (VpnipsecPhase1BackupGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1BackupGateway)(nil)).Elem()
}

func (i VpnipsecPhase1BackupGatewayArray) ToVpnipsecPhase1BackupGatewayArrayOutput() VpnipsecPhase1BackupGatewayArrayOutput {
	return i.ToVpnipsecPhase1BackupGatewayArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1BackupGatewayArray) ToVpnipsecPhase1BackupGatewayArrayOutputWithContext(ctx context.Context) VpnipsecPhase1BackupGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1BackupGatewayArrayOutput)
}

type VpnipsecPhase1BackupGatewayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1BackupGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1BackupGateway)(nil)).Elem()
}

func (o VpnipsecPhase1BackupGatewayOutput) ToVpnipsecPhase1BackupGatewayOutput() VpnipsecPhase1BackupGatewayOutput {
	return o
}

func (o VpnipsecPhase1BackupGatewayOutput) ToVpnipsecPhase1BackupGatewayOutputWithContext(ctx context.Context) VpnipsecPhase1BackupGatewayOutput {
	return o
}

// Address of backup gateway.
func (o VpnipsecPhase1BackupGatewayOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1BackupGateway) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1BackupGatewayArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1BackupGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1BackupGateway)(nil)).Elem()
}

func (o VpnipsecPhase1BackupGatewayArrayOutput) ToVpnipsecPhase1BackupGatewayArrayOutput() VpnipsecPhase1BackupGatewayArrayOutput {
	return o
}

func (o VpnipsecPhase1BackupGatewayArrayOutput) ToVpnipsecPhase1BackupGatewayArrayOutputWithContext(ctx context.Context) VpnipsecPhase1BackupGatewayArrayOutput {
	return o
}

func (o VpnipsecPhase1BackupGatewayArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1BackupGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1BackupGateway {
		return vs[0].([]VpnipsecPhase1BackupGateway)[vs[1].(int)]
	}).(VpnipsecPhase1BackupGatewayOutput)
}

type VpnipsecPhase1Certificate struct {
	// Certificate name.
	//
	// The `ipv4ExcludeRange` block supports:
	Name *string `pulumi:"name"`
}

// VpnipsecPhase1CertificateInput is an input type that accepts VpnipsecPhase1CertificateArgs and VpnipsecPhase1CertificateOutput values.
// You can construct a concrete instance of `VpnipsecPhase1CertificateInput` via:
//
//	VpnipsecPhase1CertificateArgs{...}
type VpnipsecPhase1CertificateInput interface {
	pulumi.Input

	ToVpnipsecPhase1CertificateOutput() VpnipsecPhase1CertificateOutput
	ToVpnipsecPhase1CertificateOutputWithContext(context.Context) VpnipsecPhase1CertificateOutput
}

type VpnipsecPhase1CertificateArgs struct {
	// Certificate name.
	//
	// The `ipv4ExcludeRange` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnipsecPhase1CertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Certificate)(nil)).Elem()
}

func (i VpnipsecPhase1CertificateArgs) ToVpnipsecPhase1CertificateOutput() VpnipsecPhase1CertificateOutput {
	return i.ToVpnipsecPhase1CertificateOutputWithContext(context.Background())
}

func (i VpnipsecPhase1CertificateArgs) ToVpnipsecPhase1CertificateOutputWithContext(ctx context.Context) VpnipsecPhase1CertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1CertificateOutput)
}

// VpnipsecPhase1CertificateArrayInput is an input type that accepts VpnipsecPhase1CertificateArray and VpnipsecPhase1CertificateArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1CertificateArrayInput` via:
//
//	VpnipsecPhase1CertificateArray{ VpnipsecPhase1CertificateArgs{...} }
type VpnipsecPhase1CertificateArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1CertificateArrayOutput() VpnipsecPhase1CertificateArrayOutput
	ToVpnipsecPhase1CertificateArrayOutputWithContext(context.Context) VpnipsecPhase1CertificateArrayOutput
}

type VpnipsecPhase1CertificateArray []VpnipsecPhase1CertificateInput

func (VpnipsecPhase1CertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Certificate)(nil)).Elem()
}

func (i VpnipsecPhase1CertificateArray) ToVpnipsecPhase1CertificateArrayOutput() VpnipsecPhase1CertificateArrayOutput {
	return i.ToVpnipsecPhase1CertificateArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1CertificateArray) ToVpnipsecPhase1CertificateArrayOutputWithContext(ctx context.Context) VpnipsecPhase1CertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1CertificateArrayOutput)
}

type VpnipsecPhase1CertificateOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1CertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Certificate)(nil)).Elem()
}

func (o VpnipsecPhase1CertificateOutput) ToVpnipsecPhase1CertificateOutput() VpnipsecPhase1CertificateOutput {
	return o
}

func (o VpnipsecPhase1CertificateOutput) ToVpnipsecPhase1CertificateOutputWithContext(ctx context.Context) VpnipsecPhase1CertificateOutput {
	return o
}

// Certificate name.
//
// The `ipv4ExcludeRange` block supports:
func (o VpnipsecPhase1CertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Certificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1CertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1CertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Certificate)(nil)).Elem()
}

func (o VpnipsecPhase1CertificateArrayOutput) ToVpnipsecPhase1CertificateArrayOutput() VpnipsecPhase1CertificateArrayOutput {
	return o
}

func (o VpnipsecPhase1CertificateArrayOutput) ToVpnipsecPhase1CertificateArrayOutputWithContext(ctx context.Context) VpnipsecPhase1CertificateArrayOutput {
	return o
}

func (o VpnipsecPhase1CertificateArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1CertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1Certificate {
		return vs[0].([]VpnipsecPhase1Certificate)[vs[1].(int)]
	}).(VpnipsecPhase1CertificateOutput)
}

type VpnipsecPhase1Ipv4ExcludeRange struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp *string `pulumi:"startIp"`
}

// VpnipsecPhase1Ipv4ExcludeRangeInput is an input type that accepts VpnipsecPhase1Ipv4ExcludeRangeArgs and VpnipsecPhase1Ipv4ExcludeRangeOutput values.
// You can construct a concrete instance of `VpnipsecPhase1Ipv4ExcludeRangeInput` via:
//
//	VpnipsecPhase1Ipv4ExcludeRangeArgs{...}
type VpnipsecPhase1Ipv4ExcludeRangeInput interface {
	pulumi.Input

	ToVpnipsecPhase1Ipv4ExcludeRangeOutput() VpnipsecPhase1Ipv4ExcludeRangeOutput
	ToVpnipsecPhase1Ipv4ExcludeRangeOutputWithContext(context.Context) VpnipsecPhase1Ipv4ExcludeRangeOutput
}

type VpnipsecPhase1Ipv4ExcludeRangeArgs struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (VpnipsecPhase1Ipv4ExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Ipv4ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1Ipv4ExcludeRangeArgs) ToVpnipsecPhase1Ipv4ExcludeRangeOutput() VpnipsecPhase1Ipv4ExcludeRangeOutput {
	return i.ToVpnipsecPhase1Ipv4ExcludeRangeOutputWithContext(context.Background())
}

func (i VpnipsecPhase1Ipv4ExcludeRangeArgs) ToVpnipsecPhase1Ipv4ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv4ExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1Ipv4ExcludeRangeOutput)
}

// VpnipsecPhase1Ipv4ExcludeRangeArrayInput is an input type that accepts VpnipsecPhase1Ipv4ExcludeRangeArray and VpnipsecPhase1Ipv4ExcludeRangeArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1Ipv4ExcludeRangeArrayInput` via:
//
//	VpnipsecPhase1Ipv4ExcludeRangeArray{ VpnipsecPhase1Ipv4ExcludeRangeArgs{...} }
type VpnipsecPhase1Ipv4ExcludeRangeArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutput() VpnipsecPhase1Ipv4ExcludeRangeArrayOutput
	ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutputWithContext(context.Context) VpnipsecPhase1Ipv4ExcludeRangeArrayOutput
}

type VpnipsecPhase1Ipv4ExcludeRangeArray []VpnipsecPhase1Ipv4ExcludeRangeInput

func (VpnipsecPhase1Ipv4ExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Ipv4ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1Ipv4ExcludeRangeArray) ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutput() VpnipsecPhase1Ipv4ExcludeRangeArrayOutput {
	return i.ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1Ipv4ExcludeRangeArray) ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv4ExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1Ipv4ExcludeRangeArrayOutput)
}

type VpnipsecPhase1Ipv4ExcludeRangeOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1Ipv4ExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Ipv4ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1Ipv4ExcludeRangeOutput) ToVpnipsecPhase1Ipv4ExcludeRangeOutput() VpnipsecPhase1Ipv4ExcludeRangeOutput {
	return o
}

func (o VpnipsecPhase1Ipv4ExcludeRangeOutput) ToVpnipsecPhase1Ipv4ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv4ExcludeRangeOutput {
	return o
}

// End of IPv4 exclusive range.
//
// The `ipv6ExcludeRange` block supports:
func (o VpnipsecPhase1Ipv4ExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv4ExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnipsecPhase1Ipv4ExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv4ExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IPv4 exclusive range.
func (o VpnipsecPhase1Ipv4ExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv4ExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1Ipv4ExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1Ipv4ExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Ipv4ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1Ipv4ExcludeRangeArrayOutput) ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutput() VpnipsecPhase1Ipv4ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1Ipv4ExcludeRangeArrayOutput) ToVpnipsecPhase1Ipv4ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv4ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1Ipv4ExcludeRangeArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1Ipv4ExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1Ipv4ExcludeRange {
		return vs[0].([]VpnipsecPhase1Ipv4ExcludeRange)[vs[1].(int)]
	}).(VpnipsecPhase1Ipv4ExcludeRangeOutput)
}

type VpnipsecPhase1Ipv6ExcludeRange struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp *string `pulumi:"startIp"`
}

// VpnipsecPhase1Ipv6ExcludeRangeInput is an input type that accepts VpnipsecPhase1Ipv6ExcludeRangeArgs and VpnipsecPhase1Ipv6ExcludeRangeOutput values.
// You can construct a concrete instance of `VpnipsecPhase1Ipv6ExcludeRangeInput` via:
//
//	VpnipsecPhase1Ipv6ExcludeRangeArgs{...}
type VpnipsecPhase1Ipv6ExcludeRangeInput interface {
	pulumi.Input

	ToVpnipsecPhase1Ipv6ExcludeRangeOutput() VpnipsecPhase1Ipv6ExcludeRangeOutput
	ToVpnipsecPhase1Ipv6ExcludeRangeOutputWithContext(context.Context) VpnipsecPhase1Ipv6ExcludeRangeOutput
}

type VpnipsecPhase1Ipv6ExcludeRangeArgs struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (VpnipsecPhase1Ipv6ExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Ipv6ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1Ipv6ExcludeRangeArgs) ToVpnipsecPhase1Ipv6ExcludeRangeOutput() VpnipsecPhase1Ipv6ExcludeRangeOutput {
	return i.ToVpnipsecPhase1Ipv6ExcludeRangeOutputWithContext(context.Background())
}

func (i VpnipsecPhase1Ipv6ExcludeRangeArgs) ToVpnipsecPhase1Ipv6ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv6ExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1Ipv6ExcludeRangeOutput)
}

// VpnipsecPhase1Ipv6ExcludeRangeArrayInput is an input type that accepts VpnipsecPhase1Ipv6ExcludeRangeArray and VpnipsecPhase1Ipv6ExcludeRangeArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1Ipv6ExcludeRangeArrayInput` via:
//
//	VpnipsecPhase1Ipv6ExcludeRangeArray{ VpnipsecPhase1Ipv6ExcludeRangeArgs{...} }
type VpnipsecPhase1Ipv6ExcludeRangeArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutput() VpnipsecPhase1Ipv6ExcludeRangeArrayOutput
	ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutputWithContext(context.Context) VpnipsecPhase1Ipv6ExcludeRangeArrayOutput
}

type VpnipsecPhase1Ipv6ExcludeRangeArray []VpnipsecPhase1Ipv6ExcludeRangeInput

func (VpnipsecPhase1Ipv6ExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Ipv6ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1Ipv6ExcludeRangeArray) ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutput() VpnipsecPhase1Ipv6ExcludeRangeArrayOutput {
	return i.ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1Ipv6ExcludeRangeArray) ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv6ExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1Ipv6ExcludeRangeArrayOutput)
}

type VpnipsecPhase1Ipv6ExcludeRangeOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1Ipv6ExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1Ipv6ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1Ipv6ExcludeRangeOutput) ToVpnipsecPhase1Ipv6ExcludeRangeOutput() VpnipsecPhase1Ipv6ExcludeRangeOutput {
	return o
}

func (o VpnipsecPhase1Ipv6ExcludeRangeOutput) ToVpnipsecPhase1Ipv6ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv6ExcludeRangeOutput {
	return o
}

// End of IPv4 exclusive range.
//
// The `ipv6ExcludeRange` block supports:
func (o VpnipsecPhase1Ipv6ExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv6ExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnipsecPhase1Ipv6ExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv6ExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IPv4 exclusive range.
func (o VpnipsecPhase1Ipv6ExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1Ipv6ExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1Ipv6ExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1Ipv6ExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1Ipv6ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1Ipv6ExcludeRangeArrayOutput) ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutput() VpnipsecPhase1Ipv6ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1Ipv6ExcludeRangeArrayOutput) ToVpnipsecPhase1Ipv6ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1Ipv6ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1Ipv6ExcludeRangeArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1Ipv6ExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1Ipv6ExcludeRange {
		return vs[0].([]VpnipsecPhase1Ipv6ExcludeRange)[vs[1].(int)]
	}).(VpnipsecPhase1Ipv6ExcludeRangeOutput)
}

type VpnipsecPhase1interfaceBackupGateway struct {
	// Address of backup gateway.
	Address *string `pulumi:"address"`
}

// VpnipsecPhase1interfaceBackupGatewayInput is an input type that accepts VpnipsecPhase1interfaceBackupGatewayArgs and VpnipsecPhase1interfaceBackupGatewayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceBackupGatewayInput` via:
//
//	VpnipsecPhase1interfaceBackupGatewayArgs{...}
type VpnipsecPhase1interfaceBackupGatewayInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceBackupGatewayOutput() VpnipsecPhase1interfaceBackupGatewayOutput
	ToVpnipsecPhase1interfaceBackupGatewayOutputWithContext(context.Context) VpnipsecPhase1interfaceBackupGatewayOutput
}

type VpnipsecPhase1interfaceBackupGatewayArgs struct {
	// Address of backup gateway.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (VpnipsecPhase1interfaceBackupGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceBackupGateway)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceBackupGatewayArgs) ToVpnipsecPhase1interfaceBackupGatewayOutput() VpnipsecPhase1interfaceBackupGatewayOutput {
	return i.ToVpnipsecPhase1interfaceBackupGatewayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceBackupGatewayArgs) ToVpnipsecPhase1interfaceBackupGatewayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceBackupGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceBackupGatewayOutput)
}

// VpnipsecPhase1interfaceBackupGatewayArrayInput is an input type that accepts VpnipsecPhase1interfaceBackupGatewayArray and VpnipsecPhase1interfaceBackupGatewayArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceBackupGatewayArrayInput` via:
//
//	VpnipsecPhase1interfaceBackupGatewayArray{ VpnipsecPhase1interfaceBackupGatewayArgs{...} }
type VpnipsecPhase1interfaceBackupGatewayArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceBackupGatewayArrayOutput() VpnipsecPhase1interfaceBackupGatewayArrayOutput
	ToVpnipsecPhase1interfaceBackupGatewayArrayOutputWithContext(context.Context) VpnipsecPhase1interfaceBackupGatewayArrayOutput
}

type VpnipsecPhase1interfaceBackupGatewayArray []VpnipsecPhase1interfaceBackupGatewayInput

func (VpnipsecPhase1interfaceBackupGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceBackupGateway)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceBackupGatewayArray) ToVpnipsecPhase1interfaceBackupGatewayArrayOutput() VpnipsecPhase1interfaceBackupGatewayArrayOutput {
	return i.ToVpnipsecPhase1interfaceBackupGatewayArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceBackupGatewayArray) ToVpnipsecPhase1interfaceBackupGatewayArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceBackupGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceBackupGatewayArrayOutput)
}

type VpnipsecPhase1interfaceBackupGatewayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceBackupGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceBackupGateway)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceBackupGatewayOutput) ToVpnipsecPhase1interfaceBackupGatewayOutput() VpnipsecPhase1interfaceBackupGatewayOutput {
	return o
}

func (o VpnipsecPhase1interfaceBackupGatewayOutput) ToVpnipsecPhase1interfaceBackupGatewayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceBackupGatewayOutput {
	return o
}

// Address of backup gateway.
func (o VpnipsecPhase1interfaceBackupGatewayOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceBackupGateway) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1interfaceBackupGatewayArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceBackupGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceBackupGateway)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceBackupGatewayArrayOutput) ToVpnipsecPhase1interfaceBackupGatewayArrayOutput() VpnipsecPhase1interfaceBackupGatewayArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceBackupGatewayArrayOutput) ToVpnipsecPhase1interfaceBackupGatewayArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceBackupGatewayArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceBackupGatewayArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1interfaceBackupGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1interfaceBackupGateway {
		return vs[0].([]VpnipsecPhase1interfaceBackupGateway)[vs[1].(int)]
	}).(VpnipsecPhase1interfaceBackupGatewayOutput)
}

type VpnipsecPhase1interfaceCertificate struct {
	// Certificate name.
	//
	// The `ipv4ExcludeRange` block supports:
	Name *string `pulumi:"name"`
}

// VpnipsecPhase1interfaceCertificateInput is an input type that accepts VpnipsecPhase1interfaceCertificateArgs and VpnipsecPhase1interfaceCertificateOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceCertificateInput` via:
//
//	VpnipsecPhase1interfaceCertificateArgs{...}
type VpnipsecPhase1interfaceCertificateInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceCertificateOutput() VpnipsecPhase1interfaceCertificateOutput
	ToVpnipsecPhase1interfaceCertificateOutputWithContext(context.Context) VpnipsecPhase1interfaceCertificateOutput
}

type VpnipsecPhase1interfaceCertificateArgs struct {
	// Certificate name.
	//
	// The `ipv4ExcludeRange` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnipsecPhase1interfaceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceCertificate)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceCertificateArgs) ToVpnipsecPhase1interfaceCertificateOutput() VpnipsecPhase1interfaceCertificateOutput {
	return i.ToVpnipsecPhase1interfaceCertificateOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceCertificateArgs) ToVpnipsecPhase1interfaceCertificateOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceCertificateOutput)
}

// VpnipsecPhase1interfaceCertificateArrayInput is an input type that accepts VpnipsecPhase1interfaceCertificateArray and VpnipsecPhase1interfaceCertificateArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceCertificateArrayInput` via:
//
//	VpnipsecPhase1interfaceCertificateArray{ VpnipsecPhase1interfaceCertificateArgs{...} }
type VpnipsecPhase1interfaceCertificateArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceCertificateArrayOutput() VpnipsecPhase1interfaceCertificateArrayOutput
	ToVpnipsecPhase1interfaceCertificateArrayOutputWithContext(context.Context) VpnipsecPhase1interfaceCertificateArrayOutput
}

type VpnipsecPhase1interfaceCertificateArray []VpnipsecPhase1interfaceCertificateInput

func (VpnipsecPhase1interfaceCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceCertificate)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceCertificateArray) ToVpnipsecPhase1interfaceCertificateArrayOutput() VpnipsecPhase1interfaceCertificateArrayOutput {
	return i.ToVpnipsecPhase1interfaceCertificateArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceCertificateArray) ToVpnipsecPhase1interfaceCertificateArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceCertificateArrayOutput)
}

type VpnipsecPhase1interfaceCertificateOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceCertificate)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceCertificateOutput) ToVpnipsecPhase1interfaceCertificateOutput() VpnipsecPhase1interfaceCertificateOutput {
	return o
}

func (o VpnipsecPhase1interfaceCertificateOutput) ToVpnipsecPhase1interfaceCertificateOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceCertificateOutput {
	return o
}

// Certificate name.
//
// The `ipv4ExcludeRange` block supports:
func (o VpnipsecPhase1interfaceCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1interfaceCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceCertificate)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceCertificateArrayOutput) ToVpnipsecPhase1interfaceCertificateArrayOutput() VpnipsecPhase1interfaceCertificateArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceCertificateArrayOutput) ToVpnipsecPhase1interfaceCertificateArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceCertificateArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceCertificateArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1interfaceCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1interfaceCertificate {
		return vs[0].([]VpnipsecPhase1interfaceCertificate)[vs[1].(int)]
	}).(VpnipsecPhase1interfaceCertificateOutput)
}

type VpnipsecPhase1interfaceIpv4ExcludeRange struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp *string `pulumi:"startIp"`
}

// VpnipsecPhase1interfaceIpv4ExcludeRangeInput is an input type that accepts VpnipsecPhase1interfaceIpv4ExcludeRangeArgs and VpnipsecPhase1interfaceIpv4ExcludeRangeOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceIpv4ExcludeRangeInput` via:
//
//	VpnipsecPhase1interfaceIpv4ExcludeRangeArgs{...}
type VpnipsecPhase1interfaceIpv4ExcludeRangeInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeOutput
	ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutputWithContext(context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeOutput
}

type VpnipsecPhase1interfaceIpv4ExcludeRangeArgs struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (VpnipsecPhase1interfaceIpv4ExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceIpv4ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceIpv4ExcludeRangeArgs) ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeOutput {
	return i.ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceIpv4ExcludeRangeArgs) ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceIpv4ExcludeRangeOutput)
}

// VpnipsecPhase1interfaceIpv4ExcludeRangeArrayInput is an input type that accepts VpnipsecPhase1interfaceIpv4ExcludeRangeArray and VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceIpv4ExcludeRangeArrayInput` via:
//
//	VpnipsecPhase1interfaceIpv4ExcludeRangeArray{ VpnipsecPhase1interfaceIpv4ExcludeRangeArgs{...} }
type VpnipsecPhase1interfaceIpv4ExcludeRangeArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput
	ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutputWithContext(context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput
}

type VpnipsecPhase1interfaceIpv4ExcludeRangeArray []VpnipsecPhase1interfaceIpv4ExcludeRangeInput

func (VpnipsecPhase1interfaceIpv4ExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceIpv4ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceIpv4ExcludeRangeArray) ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput {
	return i.ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceIpv4ExcludeRangeArray) ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput)
}

type VpnipsecPhase1interfaceIpv4ExcludeRangeOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceIpv4ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) ToVpnipsecPhase1interfaceIpv4ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeOutput {
	return o
}

// End of IPv4 exclusive range.
//
// The `ipv6ExcludeRange` block supports:
func (o VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv4ExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv4ExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IPv4 exclusive range.
func (o VpnipsecPhase1interfaceIpv4ExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv4ExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceIpv4ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput) ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput) ToVpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1interfaceIpv4ExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1interfaceIpv4ExcludeRange {
		return vs[0].([]VpnipsecPhase1interfaceIpv4ExcludeRange)[vs[1].(int)]
	}).(VpnipsecPhase1interfaceIpv4ExcludeRangeOutput)
}

type VpnipsecPhase1interfaceIpv6ExcludeRange struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp *string `pulumi:"startIp"`
}

// VpnipsecPhase1interfaceIpv6ExcludeRangeInput is an input type that accepts VpnipsecPhase1interfaceIpv6ExcludeRangeArgs and VpnipsecPhase1interfaceIpv6ExcludeRangeOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceIpv6ExcludeRangeInput` via:
//
//	VpnipsecPhase1interfaceIpv6ExcludeRangeArgs{...}
type VpnipsecPhase1interfaceIpv6ExcludeRangeInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeOutput
	ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutputWithContext(context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeOutput
}

type VpnipsecPhase1interfaceIpv6ExcludeRangeArgs struct {
	// End of IPv4 exclusive range.
	//
	// The `ipv6ExcludeRange` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IPv4 exclusive range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (VpnipsecPhase1interfaceIpv6ExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceIpv6ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceIpv6ExcludeRangeArgs) ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeOutput {
	return i.ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceIpv6ExcludeRangeArgs) ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceIpv6ExcludeRangeOutput)
}

// VpnipsecPhase1interfaceIpv6ExcludeRangeArrayInput is an input type that accepts VpnipsecPhase1interfaceIpv6ExcludeRangeArray and VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput values.
// You can construct a concrete instance of `VpnipsecPhase1interfaceIpv6ExcludeRangeArrayInput` via:
//
//	VpnipsecPhase1interfaceIpv6ExcludeRangeArray{ VpnipsecPhase1interfaceIpv6ExcludeRangeArgs{...} }
type VpnipsecPhase1interfaceIpv6ExcludeRangeArrayInput interface {
	pulumi.Input

	ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput
	ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutputWithContext(context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput
}

type VpnipsecPhase1interfaceIpv6ExcludeRangeArray []VpnipsecPhase1interfaceIpv6ExcludeRangeInput

func (VpnipsecPhase1interfaceIpv6ExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceIpv6ExcludeRange)(nil)).Elem()
}

func (i VpnipsecPhase1interfaceIpv6ExcludeRangeArray) ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput {
	return i.ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutputWithContext(context.Background())
}

func (i VpnipsecPhase1interfaceIpv6ExcludeRangeArray) ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput)
}

type VpnipsecPhase1interfaceIpv6ExcludeRangeOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnipsecPhase1interfaceIpv6ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) ToVpnipsecPhase1interfaceIpv6ExcludeRangeOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeOutput {
	return o
}

// End of IPv4 exclusive range.
//
// The `ipv6ExcludeRange` block supports:
func (o VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv6ExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv6ExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IPv4 exclusive range.
func (o VpnipsecPhase1interfaceIpv6ExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnipsecPhase1interfaceIpv6ExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnipsecPhase1interfaceIpv6ExcludeRange)(nil)).Elem()
}

func (o VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput) ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput() VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput) ToVpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutputWithContext(ctx context.Context) VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput {
	return o
}

func (o VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput) Index(i pulumi.IntInput) VpnipsecPhase1interfaceIpv6ExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnipsecPhase1interfaceIpv6ExcludeRange {
		return vs[0].([]VpnipsecPhase1interfaceIpv6ExcludeRange)[vs[1].(int)]
	}).(VpnipsecPhase1interfaceIpv6ExcludeRangeOutput)
}

type VpnsslSettingsAuthenticationRule struct {
	// SSL VPN authentication method restriction.
	Auth *string `pulumi:"auth"`
	// SSL VPN cipher strength. Valid values: `any`, `high`, `medium`.
	Cipher *string `pulumi:"cipher"`
	// Enable/disable SSL VPN client certificate restrictive. Valid values: `enable`, `disable`.
	ClientCert *string `pulumi:"clientCert"`
	// User groups. The structure of `groups` block is documented below.
	Groups []VpnsslSettingsAuthenticationRuleGroup `pulumi:"groups"`
	// ID (0 - 4294967295).
	Id *int `pulumi:"id"`
	// SSL VPN portal.
	Portal *string `pulumi:"portal"`
	// SSL VPN realm.
	Realm *string `pulumi:"realm"`
	// Enable/disable negated source IPv6 address match. Valid values: `enable`, `disable`.
	SourceAddress6Negate *string `pulumi:"sourceAddress6Negate"`
	// IPv6 source address of incoming traffic. The structure of `sourceAddress6` block is documented below.
	SourceAddress6s []VpnsslSettingsAuthenticationRuleSourceAddress6 `pulumi:"sourceAddress6s"`
	// Enable/disable negated source address match. Valid values: `enable`, `disable`.
	SourceAddressNegate *string `pulumi:"sourceAddressNegate"`
	// Source address of incoming traffic. The structure of `sourceAddress` block is documented below.
	SourceAddresses []VpnsslSettingsAuthenticationRuleSourceAddress `pulumi:"sourceAddresses"`
	// SSL VPN source interface of incoming traffic. The structure of `sourceInterface` block is documented below.
	SourceInterfaces []VpnsslSettingsAuthenticationRuleSourceInterface `pulumi:"sourceInterfaces"`
	// Name of user peer.
	UserPeer *string `pulumi:"userPeer"`
	// User name. The structure of `users` block is documented below.
	Users []VpnsslSettingsAuthenticationRuleUser `pulumi:"users"`
}

// VpnsslSettingsAuthenticationRuleInput is an input type that accepts VpnsslSettingsAuthenticationRuleArgs and VpnsslSettingsAuthenticationRuleOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleInput` via:
//
//	VpnsslSettingsAuthenticationRuleArgs{...}
type VpnsslSettingsAuthenticationRuleInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleOutput() VpnsslSettingsAuthenticationRuleOutput
	ToVpnsslSettingsAuthenticationRuleOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleOutput
}

type VpnsslSettingsAuthenticationRuleArgs struct {
	// SSL VPN authentication method restriction.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// SSL VPN cipher strength. Valid values: `any`, `high`, `medium`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// Enable/disable SSL VPN client certificate restrictive. Valid values: `enable`, `disable`.
	ClientCert pulumi.StringPtrInput `pulumi:"clientCert"`
	// User groups. The structure of `groups` block is documented below.
	Groups VpnsslSettingsAuthenticationRuleGroupArrayInput `pulumi:"groups"`
	// ID (0 - 4294967295).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// SSL VPN portal.
	Portal pulumi.StringPtrInput `pulumi:"portal"`
	// SSL VPN realm.
	Realm pulumi.StringPtrInput `pulumi:"realm"`
	// Enable/disable negated source IPv6 address match. Valid values: `enable`, `disable`.
	SourceAddress6Negate pulumi.StringPtrInput `pulumi:"sourceAddress6Negate"`
	// IPv6 source address of incoming traffic. The structure of `sourceAddress6` block is documented below.
	SourceAddress6s VpnsslSettingsAuthenticationRuleSourceAddress6ArrayInput `pulumi:"sourceAddress6s"`
	// Enable/disable negated source address match. Valid values: `enable`, `disable`.
	SourceAddressNegate pulumi.StringPtrInput `pulumi:"sourceAddressNegate"`
	// Source address of incoming traffic. The structure of `sourceAddress` block is documented below.
	SourceAddresses VpnsslSettingsAuthenticationRuleSourceAddressArrayInput `pulumi:"sourceAddresses"`
	// SSL VPN source interface of incoming traffic. The structure of `sourceInterface` block is documented below.
	SourceInterfaces VpnsslSettingsAuthenticationRuleSourceInterfaceArrayInput `pulumi:"sourceInterfaces"`
	// Name of user peer.
	UserPeer pulumi.StringPtrInput `pulumi:"userPeer"`
	// User name. The structure of `users` block is documented below.
	Users VpnsslSettingsAuthenticationRuleUserArrayInput `pulumi:"users"`
}

func (VpnsslSettingsAuthenticationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRule)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleArgs) ToVpnsslSettingsAuthenticationRuleOutput() VpnsslSettingsAuthenticationRuleOutput {
	return i.ToVpnsslSettingsAuthenticationRuleOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleArgs) ToVpnsslSettingsAuthenticationRuleOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleOutput)
}

// VpnsslSettingsAuthenticationRuleArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleArray and VpnsslSettingsAuthenticationRuleArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleArray{ VpnsslSettingsAuthenticationRuleArgs{...} }
type VpnsslSettingsAuthenticationRuleArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleArrayOutput() VpnsslSettingsAuthenticationRuleArrayOutput
	ToVpnsslSettingsAuthenticationRuleArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleArrayOutput
}

type VpnsslSettingsAuthenticationRuleArray []VpnsslSettingsAuthenticationRuleInput

func (VpnsslSettingsAuthenticationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRule)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleArray) ToVpnsslSettingsAuthenticationRuleArrayOutput() VpnsslSettingsAuthenticationRuleArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleArray) ToVpnsslSettingsAuthenticationRuleArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleArrayOutput)
}

type VpnsslSettingsAuthenticationRuleOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRule)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleOutput) ToVpnsslSettingsAuthenticationRuleOutput() VpnsslSettingsAuthenticationRuleOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleOutput) ToVpnsslSettingsAuthenticationRuleOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleOutput {
	return o
}

// SSL VPN authentication method restriction.
func (o VpnsslSettingsAuthenticationRuleOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// SSL VPN cipher strength. Valid values: `any`, `high`, `medium`.
func (o VpnsslSettingsAuthenticationRuleOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// Enable/disable SSL VPN client certificate restrictive. Valid values: `enable`, `disable`.
func (o VpnsslSettingsAuthenticationRuleOutput) ClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.ClientCert }).(pulumi.StringPtrOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o VpnsslSettingsAuthenticationRuleOutput) Groups() VpnsslSettingsAuthenticationRuleGroupArrayOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) []VpnsslSettingsAuthenticationRuleGroup { return v.Groups }).(VpnsslSettingsAuthenticationRuleGroupArrayOutput)
}

// ID (0 - 4294967295).
func (o VpnsslSettingsAuthenticationRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// SSL VPN portal.
func (o VpnsslSettingsAuthenticationRuleOutput) Portal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.Portal }).(pulumi.StringPtrOutput)
}

// SSL VPN realm.
func (o VpnsslSettingsAuthenticationRuleOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

// Enable/disable negated source IPv6 address match. Valid values: `enable`, `disable`.
func (o VpnsslSettingsAuthenticationRuleOutput) SourceAddress6Negate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.SourceAddress6Negate }).(pulumi.StringPtrOutput)
}

// IPv6 source address of incoming traffic. The structure of `sourceAddress6` block is documented below.
func (o VpnsslSettingsAuthenticationRuleOutput) SourceAddress6s() VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) []VpnsslSettingsAuthenticationRuleSourceAddress6 {
		return v.SourceAddress6s
	}).(VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput)
}

// Enable/disable negated source address match. Valid values: `enable`, `disable`.
func (o VpnsslSettingsAuthenticationRuleOutput) SourceAddressNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.SourceAddressNegate }).(pulumi.StringPtrOutput)
}

// Source address of incoming traffic. The structure of `sourceAddress` block is documented below.
func (o VpnsslSettingsAuthenticationRuleOutput) SourceAddresses() VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) []VpnsslSettingsAuthenticationRuleSourceAddress {
		return v.SourceAddresses
	}).(VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput)
}

// SSL VPN source interface of incoming traffic. The structure of `sourceInterface` block is documented below.
func (o VpnsslSettingsAuthenticationRuleOutput) SourceInterfaces() VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) []VpnsslSettingsAuthenticationRuleSourceInterface {
		return v.SourceInterfaces
	}).(VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput)
}

// Name of user peer.
func (o VpnsslSettingsAuthenticationRuleOutput) UserPeer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) *string { return v.UserPeer }).(pulumi.StringPtrOutput)
}

// User name. The structure of `users` block is documented below.
func (o VpnsslSettingsAuthenticationRuleOutput) Users() VpnsslSettingsAuthenticationRuleUserArrayOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRule) []VpnsslSettingsAuthenticationRuleUser { return v.Users }).(VpnsslSettingsAuthenticationRuleUserArrayOutput)
}

type VpnsslSettingsAuthenticationRuleArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRule)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleArrayOutput) ToVpnsslSettingsAuthenticationRuleArrayOutput() VpnsslSettingsAuthenticationRuleArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleArrayOutput) ToVpnsslSettingsAuthenticationRuleArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRule {
		return vs[0].([]VpnsslSettingsAuthenticationRule)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleOutput)
}

type VpnsslSettingsAuthenticationRuleGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsAuthenticationRuleGroupInput is an input type that accepts VpnsslSettingsAuthenticationRuleGroupArgs and VpnsslSettingsAuthenticationRuleGroupOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleGroupInput` via:
//
//	VpnsslSettingsAuthenticationRuleGroupArgs{...}
type VpnsslSettingsAuthenticationRuleGroupInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleGroupOutput() VpnsslSettingsAuthenticationRuleGroupOutput
	ToVpnsslSettingsAuthenticationRuleGroupOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleGroupOutput
}

type VpnsslSettingsAuthenticationRuleGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsAuthenticationRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleGroup)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleGroupArgs) ToVpnsslSettingsAuthenticationRuleGroupOutput() VpnsslSettingsAuthenticationRuleGroupOutput {
	return i.ToVpnsslSettingsAuthenticationRuleGroupOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleGroupArgs) ToVpnsslSettingsAuthenticationRuleGroupOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleGroupOutput)
}

// VpnsslSettingsAuthenticationRuleGroupArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleGroupArray and VpnsslSettingsAuthenticationRuleGroupArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleGroupArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleGroupArray{ VpnsslSettingsAuthenticationRuleGroupArgs{...} }
type VpnsslSettingsAuthenticationRuleGroupArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleGroupArrayOutput() VpnsslSettingsAuthenticationRuleGroupArrayOutput
	ToVpnsslSettingsAuthenticationRuleGroupArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleGroupArrayOutput
}

type VpnsslSettingsAuthenticationRuleGroupArray []VpnsslSettingsAuthenticationRuleGroupInput

func (VpnsslSettingsAuthenticationRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleGroup)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleGroupArray) ToVpnsslSettingsAuthenticationRuleGroupArrayOutput() VpnsslSettingsAuthenticationRuleGroupArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleGroupArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleGroupArray) ToVpnsslSettingsAuthenticationRuleGroupArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleGroupArrayOutput)
}

type VpnsslSettingsAuthenticationRuleGroupOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleGroup)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleGroupOutput) ToVpnsslSettingsAuthenticationRuleGroupOutput() VpnsslSettingsAuthenticationRuleGroupOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleGroupOutput) ToVpnsslSettingsAuthenticationRuleGroupOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleGroupOutput {
	return o
}

// Group name.
func (o VpnsslSettingsAuthenticationRuleGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRuleGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsAuthenticationRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleGroup)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleGroupArrayOutput) ToVpnsslSettingsAuthenticationRuleGroupArrayOutput() VpnsslSettingsAuthenticationRuleGroupArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleGroupArrayOutput) ToVpnsslSettingsAuthenticationRuleGroupArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleGroupArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleGroupArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRuleGroup {
		return vs[0].([]VpnsslSettingsAuthenticationRuleGroup)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleGroupOutput)
}

type VpnsslSettingsAuthenticationRuleSourceAddress6 struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name *string `pulumi:"name"`
}

// VpnsslSettingsAuthenticationRuleSourceAddress6Input is an input type that accepts VpnsslSettingsAuthenticationRuleSourceAddress6Args and VpnsslSettingsAuthenticationRuleSourceAddress6Output values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceAddress6Input` via:
//
//	VpnsslSettingsAuthenticationRuleSourceAddress6Args{...}
type VpnsslSettingsAuthenticationRuleSourceAddress6Input interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceAddress6Output() VpnsslSettingsAuthenticationRuleSourceAddress6Output
	ToVpnsslSettingsAuthenticationRuleSourceAddress6OutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6Output
}

type VpnsslSettingsAuthenticationRuleSourceAddress6Args struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsAuthenticationRuleSourceAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress6)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceAddress6Args) ToVpnsslSettingsAuthenticationRuleSourceAddress6Output() VpnsslSettingsAuthenticationRuleSourceAddress6Output {
	return i.ToVpnsslSettingsAuthenticationRuleSourceAddress6OutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceAddress6Args) ToVpnsslSettingsAuthenticationRuleSourceAddress6OutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceAddress6Output)
}

// VpnsslSettingsAuthenticationRuleSourceAddress6ArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleSourceAddress6Array and VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceAddress6ArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleSourceAddress6Array{ VpnsslSettingsAuthenticationRuleSourceAddress6Args{...} }
type VpnsslSettingsAuthenticationRuleSourceAddress6ArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput
	ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput
}

type VpnsslSettingsAuthenticationRuleSourceAddress6Array []VpnsslSettingsAuthenticationRuleSourceAddress6Input

func (VpnsslSettingsAuthenticationRuleSourceAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceAddress6)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceAddress6Array) ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceAddress6Array) ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput)
}

type VpnsslSettingsAuthenticationRuleSourceAddress6Output struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress6)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceAddress6Output) ToVpnsslSettingsAuthenticationRuleSourceAddress6Output() VpnsslSettingsAuthenticationRuleSourceAddress6Output {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddress6Output) ToVpnsslSettingsAuthenticationRuleSourceAddress6OutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6Output {
	return o
}

// Address name.
//
// The `tunnelIpv6Pools` block supports:
//
// The `sourceAddress6` block supports:
//
// The `sourceAddress6` block supports:
func (o VpnsslSettingsAuthenticationRuleSourceAddress6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRuleSourceAddress6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceAddress6)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleSourceAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRuleSourceAddress6 {
		return vs[0].([]VpnsslSettingsAuthenticationRuleSourceAddress6)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleSourceAddress6Output)
}

type VpnsslSettingsAuthenticationRuleSourceAddress struct {
	// IPv6 address name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsAuthenticationRuleSourceAddressInput is an input type that accepts VpnsslSettingsAuthenticationRuleSourceAddressArgs and VpnsslSettingsAuthenticationRuleSourceAddressOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceAddressInput` via:
//
//	VpnsslSettingsAuthenticationRuleSourceAddressArgs{...}
type VpnsslSettingsAuthenticationRuleSourceAddressInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceAddressOutput() VpnsslSettingsAuthenticationRuleSourceAddressOutput
	ToVpnsslSettingsAuthenticationRuleSourceAddressOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceAddressOutput
}

type VpnsslSettingsAuthenticationRuleSourceAddressArgs struct {
	// IPv6 address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsAuthenticationRuleSourceAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceAddressArgs) ToVpnsslSettingsAuthenticationRuleSourceAddressOutput() VpnsslSettingsAuthenticationRuleSourceAddressOutput {
	return i.ToVpnsslSettingsAuthenticationRuleSourceAddressOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceAddressArgs) ToVpnsslSettingsAuthenticationRuleSourceAddressOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceAddressOutput)
}

// VpnsslSettingsAuthenticationRuleSourceAddressArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleSourceAddressArray and VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceAddressArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleSourceAddressArray{ VpnsslSettingsAuthenticationRuleSourceAddressArgs{...} }
type VpnsslSettingsAuthenticationRuleSourceAddressArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput
	ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput
}

type VpnsslSettingsAuthenticationRuleSourceAddressArray []VpnsslSettingsAuthenticationRuleSourceAddressInput

func (VpnsslSettingsAuthenticationRuleSourceAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceAddress)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceAddressArray) ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceAddressArray) ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput)
}

type VpnsslSettingsAuthenticationRuleSourceAddressOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceAddressOutput) ToVpnsslSettingsAuthenticationRuleSourceAddressOutput() VpnsslSettingsAuthenticationRuleSourceAddressOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddressOutput) ToVpnsslSettingsAuthenticationRuleSourceAddressOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddressOutput {
	return o
}

// IPv6 address name.
func (o VpnsslSettingsAuthenticationRuleSourceAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRuleSourceAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceAddress)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutput() VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceAddressArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleSourceAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRuleSourceAddress {
		return vs[0].([]VpnsslSettingsAuthenticationRuleSourceAddress)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleSourceAddressOutput)
}

type VpnsslSettingsAuthenticationRuleSourceInterface struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsAuthenticationRuleSourceInterfaceInput is an input type that accepts VpnsslSettingsAuthenticationRuleSourceInterfaceArgs and VpnsslSettingsAuthenticationRuleSourceInterfaceOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceInterfaceInput` via:
//
//	VpnsslSettingsAuthenticationRuleSourceInterfaceArgs{...}
type VpnsslSettingsAuthenticationRuleSourceInterfaceInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceOutput
	ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceOutput
}

type VpnsslSettingsAuthenticationRuleSourceInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsAuthenticationRuleSourceInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceInterface)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceInterfaceArgs) ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceOutput {
	return i.ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceInterfaceArgs) ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceInterfaceOutput)
}

// VpnsslSettingsAuthenticationRuleSourceInterfaceArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleSourceInterfaceArray and VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleSourceInterfaceArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleSourceInterfaceArray{ VpnsslSettingsAuthenticationRuleSourceInterfaceArgs{...} }
type VpnsslSettingsAuthenticationRuleSourceInterfaceArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput
	ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput
}

type VpnsslSettingsAuthenticationRuleSourceInterfaceArray []VpnsslSettingsAuthenticationRuleSourceInterfaceInput

func (VpnsslSettingsAuthenticationRuleSourceInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceInterface)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleSourceInterfaceArray) ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleSourceInterfaceArray) ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput)
}

type VpnsslSettingsAuthenticationRuleSourceInterfaceOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceInterface)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceInterfaceOutput) ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceInterfaceOutput) ToVpnsslSettingsAuthenticationRuleSourceInterfaceOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceOutput {
	return o
}

// Interface name.
func (o VpnsslSettingsAuthenticationRuleSourceInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRuleSourceInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleSourceInterface)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput() VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput) ToVpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleSourceInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRuleSourceInterface {
		return vs[0].([]VpnsslSettingsAuthenticationRuleSourceInterface)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleSourceInterfaceOutput)
}

type VpnsslSettingsAuthenticationRuleUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsAuthenticationRuleUserInput is an input type that accepts VpnsslSettingsAuthenticationRuleUserArgs and VpnsslSettingsAuthenticationRuleUserOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleUserInput` via:
//
//	VpnsslSettingsAuthenticationRuleUserArgs{...}
type VpnsslSettingsAuthenticationRuleUserInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleUserOutput() VpnsslSettingsAuthenticationRuleUserOutput
	ToVpnsslSettingsAuthenticationRuleUserOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleUserOutput
}

type VpnsslSettingsAuthenticationRuleUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsAuthenticationRuleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleUser)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleUserArgs) ToVpnsslSettingsAuthenticationRuleUserOutput() VpnsslSettingsAuthenticationRuleUserOutput {
	return i.ToVpnsslSettingsAuthenticationRuleUserOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleUserArgs) ToVpnsslSettingsAuthenticationRuleUserOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleUserOutput)
}

// VpnsslSettingsAuthenticationRuleUserArrayInput is an input type that accepts VpnsslSettingsAuthenticationRuleUserArray and VpnsslSettingsAuthenticationRuleUserArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsAuthenticationRuleUserArrayInput` via:
//
//	VpnsslSettingsAuthenticationRuleUserArray{ VpnsslSettingsAuthenticationRuleUserArgs{...} }
type VpnsslSettingsAuthenticationRuleUserArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsAuthenticationRuleUserArrayOutput() VpnsslSettingsAuthenticationRuleUserArrayOutput
	ToVpnsslSettingsAuthenticationRuleUserArrayOutputWithContext(context.Context) VpnsslSettingsAuthenticationRuleUserArrayOutput
}

type VpnsslSettingsAuthenticationRuleUserArray []VpnsslSettingsAuthenticationRuleUserInput

func (VpnsslSettingsAuthenticationRuleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleUser)(nil)).Elem()
}

func (i VpnsslSettingsAuthenticationRuleUserArray) ToVpnsslSettingsAuthenticationRuleUserArrayOutput() VpnsslSettingsAuthenticationRuleUserArrayOutput {
	return i.ToVpnsslSettingsAuthenticationRuleUserArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsAuthenticationRuleUserArray) ToVpnsslSettingsAuthenticationRuleUserArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsAuthenticationRuleUserArrayOutput)
}

type VpnsslSettingsAuthenticationRuleUserOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsAuthenticationRuleUser)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleUserOutput) ToVpnsslSettingsAuthenticationRuleUserOutput() VpnsslSettingsAuthenticationRuleUserOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleUserOutput) ToVpnsslSettingsAuthenticationRuleUserOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleUserOutput {
	return o
}

// User name.
func (o VpnsslSettingsAuthenticationRuleUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsAuthenticationRuleUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsAuthenticationRuleUserArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsAuthenticationRuleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsAuthenticationRuleUser)(nil)).Elem()
}

func (o VpnsslSettingsAuthenticationRuleUserArrayOutput) ToVpnsslSettingsAuthenticationRuleUserArrayOutput() VpnsslSettingsAuthenticationRuleUserArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleUserArrayOutput) ToVpnsslSettingsAuthenticationRuleUserArrayOutputWithContext(ctx context.Context) VpnsslSettingsAuthenticationRuleUserArrayOutput {
	return o
}

func (o VpnsslSettingsAuthenticationRuleUserArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsAuthenticationRuleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsAuthenticationRuleUser {
		return vs[0].([]VpnsslSettingsAuthenticationRuleUser)[vs[1].(int)]
	}).(VpnsslSettingsAuthenticationRuleUserOutput)
}

type VpnsslSettingsSourceAddress6 struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name *string `pulumi:"name"`
}

// VpnsslSettingsSourceAddress6Input is an input type that accepts VpnsslSettingsSourceAddress6Args and VpnsslSettingsSourceAddress6Output values.
// You can construct a concrete instance of `VpnsslSettingsSourceAddress6Input` via:
//
//	VpnsslSettingsSourceAddress6Args{...}
type VpnsslSettingsSourceAddress6Input interface {
	pulumi.Input

	ToVpnsslSettingsSourceAddress6Output() VpnsslSettingsSourceAddress6Output
	ToVpnsslSettingsSourceAddress6OutputWithContext(context.Context) VpnsslSettingsSourceAddress6Output
}

type VpnsslSettingsSourceAddress6Args struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsSourceAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceAddress6)(nil)).Elem()
}

func (i VpnsslSettingsSourceAddress6Args) ToVpnsslSettingsSourceAddress6Output() VpnsslSettingsSourceAddress6Output {
	return i.ToVpnsslSettingsSourceAddress6OutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceAddress6Args) ToVpnsslSettingsSourceAddress6OutputWithContext(ctx context.Context) VpnsslSettingsSourceAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceAddress6Output)
}

// VpnsslSettingsSourceAddress6ArrayInput is an input type that accepts VpnsslSettingsSourceAddress6Array and VpnsslSettingsSourceAddress6ArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsSourceAddress6ArrayInput` via:
//
//	VpnsslSettingsSourceAddress6Array{ VpnsslSettingsSourceAddress6Args{...} }
type VpnsslSettingsSourceAddress6ArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsSourceAddress6ArrayOutput() VpnsslSettingsSourceAddress6ArrayOutput
	ToVpnsslSettingsSourceAddress6ArrayOutputWithContext(context.Context) VpnsslSettingsSourceAddress6ArrayOutput
}

type VpnsslSettingsSourceAddress6Array []VpnsslSettingsSourceAddress6Input

func (VpnsslSettingsSourceAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceAddress6)(nil)).Elem()
}

func (i VpnsslSettingsSourceAddress6Array) ToVpnsslSettingsSourceAddress6ArrayOutput() VpnsslSettingsSourceAddress6ArrayOutput {
	return i.ToVpnsslSettingsSourceAddress6ArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceAddress6Array) ToVpnsslSettingsSourceAddress6ArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceAddress6ArrayOutput)
}

type VpnsslSettingsSourceAddress6Output struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceAddress6)(nil)).Elem()
}

func (o VpnsslSettingsSourceAddress6Output) ToVpnsslSettingsSourceAddress6Output() VpnsslSettingsSourceAddress6Output {
	return o
}

func (o VpnsslSettingsSourceAddress6Output) ToVpnsslSettingsSourceAddress6OutputWithContext(ctx context.Context) VpnsslSettingsSourceAddress6Output {
	return o
}

// Address name.
//
// The `tunnelIpv6Pools` block supports:
//
// The `sourceAddress6` block supports:
//
// The `sourceAddress6` block supports:
func (o VpnsslSettingsSourceAddress6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsSourceAddress6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsSourceAddress6ArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceAddress6)(nil)).Elem()
}

func (o VpnsslSettingsSourceAddress6ArrayOutput) ToVpnsslSettingsSourceAddress6ArrayOutput() VpnsslSettingsSourceAddress6ArrayOutput {
	return o
}

func (o VpnsslSettingsSourceAddress6ArrayOutput) ToVpnsslSettingsSourceAddress6ArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddress6ArrayOutput {
	return o
}

func (o VpnsslSettingsSourceAddress6ArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsSourceAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsSourceAddress6 {
		return vs[0].([]VpnsslSettingsSourceAddress6)[vs[1].(int)]
	}).(VpnsslSettingsSourceAddress6Output)
}

type VpnsslSettingsSourceAddress struct {
	// IPv6 address name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsSourceAddressInput is an input type that accepts VpnsslSettingsSourceAddressArgs and VpnsslSettingsSourceAddressOutput values.
// You can construct a concrete instance of `VpnsslSettingsSourceAddressInput` via:
//
//	VpnsslSettingsSourceAddressArgs{...}
type VpnsslSettingsSourceAddressInput interface {
	pulumi.Input

	ToVpnsslSettingsSourceAddressOutput() VpnsslSettingsSourceAddressOutput
	ToVpnsslSettingsSourceAddressOutputWithContext(context.Context) VpnsslSettingsSourceAddressOutput
}

type VpnsslSettingsSourceAddressArgs struct {
	// IPv6 address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsSourceAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceAddress)(nil)).Elem()
}

func (i VpnsslSettingsSourceAddressArgs) ToVpnsslSettingsSourceAddressOutput() VpnsslSettingsSourceAddressOutput {
	return i.ToVpnsslSettingsSourceAddressOutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceAddressArgs) ToVpnsslSettingsSourceAddressOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceAddressOutput)
}

// VpnsslSettingsSourceAddressArrayInput is an input type that accepts VpnsslSettingsSourceAddressArray and VpnsslSettingsSourceAddressArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsSourceAddressArrayInput` via:
//
//	VpnsslSettingsSourceAddressArray{ VpnsslSettingsSourceAddressArgs{...} }
type VpnsslSettingsSourceAddressArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsSourceAddressArrayOutput() VpnsslSettingsSourceAddressArrayOutput
	ToVpnsslSettingsSourceAddressArrayOutputWithContext(context.Context) VpnsslSettingsSourceAddressArrayOutput
}

type VpnsslSettingsSourceAddressArray []VpnsslSettingsSourceAddressInput

func (VpnsslSettingsSourceAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceAddress)(nil)).Elem()
}

func (i VpnsslSettingsSourceAddressArray) ToVpnsslSettingsSourceAddressArrayOutput() VpnsslSettingsSourceAddressArrayOutput {
	return i.ToVpnsslSettingsSourceAddressArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceAddressArray) ToVpnsslSettingsSourceAddressArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceAddressArrayOutput)
}

type VpnsslSettingsSourceAddressOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceAddress)(nil)).Elem()
}

func (o VpnsslSettingsSourceAddressOutput) ToVpnsslSettingsSourceAddressOutput() VpnsslSettingsSourceAddressOutput {
	return o
}

func (o VpnsslSettingsSourceAddressOutput) ToVpnsslSettingsSourceAddressOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddressOutput {
	return o
}

// IPv6 address name.
func (o VpnsslSettingsSourceAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsSourceAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsSourceAddressArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceAddress)(nil)).Elem()
}

func (o VpnsslSettingsSourceAddressArrayOutput) ToVpnsslSettingsSourceAddressArrayOutput() VpnsslSettingsSourceAddressArrayOutput {
	return o
}

func (o VpnsslSettingsSourceAddressArrayOutput) ToVpnsslSettingsSourceAddressArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceAddressArrayOutput {
	return o
}

func (o VpnsslSettingsSourceAddressArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsSourceAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsSourceAddress {
		return vs[0].([]VpnsslSettingsSourceAddress)[vs[1].(int)]
	}).(VpnsslSettingsSourceAddressOutput)
}

type VpnsslSettingsSourceInterface struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsSourceInterfaceInput is an input type that accepts VpnsslSettingsSourceInterfaceArgs and VpnsslSettingsSourceInterfaceOutput values.
// You can construct a concrete instance of `VpnsslSettingsSourceInterfaceInput` via:
//
//	VpnsslSettingsSourceInterfaceArgs{...}
type VpnsslSettingsSourceInterfaceInput interface {
	pulumi.Input

	ToVpnsslSettingsSourceInterfaceOutput() VpnsslSettingsSourceInterfaceOutput
	ToVpnsslSettingsSourceInterfaceOutputWithContext(context.Context) VpnsslSettingsSourceInterfaceOutput
}

type VpnsslSettingsSourceInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsSourceInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceInterface)(nil)).Elem()
}

func (i VpnsslSettingsSourceInterfaceArgs) ToVpnsslSettingsSourceInterfaceOutput() VpnsslSettingsSourceInterfaceOutput {
	return i.ToVpnsslSettingsSourceInterfaceOutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceInterfaceArgs) ToVpnsslSettingsSourceInterfaceOutputWithContext(ctx context.Context) VpnsslSettingsSourceInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceInterfaceOutput)
}

// VpnsslSettingsSourceInterfaceArrayInput is an input type that accepts VpnsslSettingsSourceInterfaceArray and VpnsslSettingsSourceInterfaceArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsSourceInterfaceArrayInput` via:
//
//	VpnsslSettingsSourceInterfaceArray{ VpnsslSettingsSourceInterfaceArgs{...} }
type VpnsslSettingsSourceInterfaceArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsSourceInterfaceArrayOutput() VpnsslSettingsSourceInterfaceArrayOutput
	ToVpnsslSettingsSourceInterfaceArrayOutputWithContext(context.Context) VpnsslSettingsSourceInterfaceArrayOutput
}

type VpnsslSettingsSourceInterfaceArray []VpnsslSettingsSourceInterfaceInput

func (VpnsslSettingsSourceInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceInterface)(nil)).Elem()
}

func (i VpnsslSettingsSourceInterfaceArray) ToVpnsslSettingsSourceInterfaceArrayOutput() VpnsslSettingsSourceInterfaceArrayOutput {
	return i.ToVpnsslSettingsSourceInterfaceArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsSourceInterfaceArray) ToVpnsslSettingsSourceInterfaceArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsSourceInterfaceArrayOutput)
}

type VpnsslSettingsSourceInterfaceOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsSourceInterface)(nil)).Elem()
}

func (o VpnsslSettingsSourceInterfaceOutput) ToVpnsslSettingsSourceInterfaceOutput() VpnsslSettingsSourceInterfaceOutput {
	return o
}

func (o VpnsslSettingsSourceInterfaceOutput) ToVpnsslSettingsSourceInterfaceOutputWithContext(ctx context.Context) VpnsslSettingsSourceInterfaceOutput {
	return o
}

// Interface name.
func (o VpnsslSettingsSourceInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsSourceInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsSourceInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsSourceInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsSourceInterface)(nil)).Elem()
}

func (o VpnsslSettingsSourceInterfaceArrayOutput) ToVpnsslSettingsSourceInterfaceArrayOutput() VpnsslSettingsSourceInterfaceArrayOutput {
	return o
}

func (o VpnsslSettingsSourceInterfaceArrayOutput) ToVpnsslSettingsSourceInterfaceArrayOutputWithContext(ctx context.Context) VpnsslSettingsSourceInterfaceArrayOutput {
	return o
}

func (o VpnsslSettingsSourceInterfaceArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsSourceInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsSourceInterface {
		return vs[0].([]VpnsslSettingsSourceInterface)[vs[1].(int)]
	}).(VpnsslSettingsSourceInterfaceOutput)
}

type VpnsslSettingsTunnelIpPool struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// VpnsslSettingsTunnelIpPoolInput is an input type that accepts VpnsslSettingsTunnelIpPoolArgs and VpnsslSettingsTunnelIpPoolOutput values.
// You can construct a concrete instance of `VpnsslSettingsTunnelIpPoolInput` via:
//
//	VpnsslSettingsTunnelIpPoolArgs{...}
type VpnsslSettingsTunnelIpPoolInput interface {
	pulumi.Input

	ToVpnsslSettingsTunnelIpPoolOutput() VpnsslSettingsTunnelIpPoolOutput
	ToVpnsslSettingsTunnelIpPoolOutputWithContext(context.Context) VpnsslSettingsTunnelIpPoolOutput
}

type VpnsslSettingsTunnelIpPoolArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsTunnelIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsTunnelIpPool)(nil)).Elem()
}

func (i VpnsslSettingsTunnelIpPoolArgs) ToVpnsslSettingsTunnelIpPoolOutput() VpnsslSettingsTunnelIpPoolOutput {
	return i.ToVpnsslSettingsTunnelIpPoolOutputWithContext(context.Background())
}

func (i VpnsslSettingsTunnelIpPoolArgs) ToVpnsslSettingsTunnelIpPoolOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsTunnelIpPoolOutput)
}

// VpnsslSettingsTunnelIpPoolArrayInput is an input type that accepts VpnsslSettingsTunnelIpPoolArray and VpnsslSettingsTunnelIpPoolArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsTunnelIpPoolArrayInput` via:
//
//	VpnsslSettingsTunnelIpPoolArray{ VpnsslSettingsTunnelIpPoolArgs{...} }
type VpnsslSettingsTunnelIpPoolArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsTunnelIpPoolArrayOutput() VpnsslSettingsTunnelIpPoolArrayOutput
	ToVpnsslSettingsTunnelIpPoolArrayOutputWithContext(context.Context) VpnsslSettingsTunnelIpPoolArrayOutput
}

type VpnsslSettingsTunnelIpPoolArray []VpnsslSettingsTunnelIpPoolInput

func (VpnsslSettingsTunnelIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsTunnelIpPool)(nil)).Elem()
}

func (i VpnsslSettingsTunnelIpPoolArray) ToVpnsslSettingsTunnelIpPoolArrayOutput() VpnsslSettingsTunnelIpPoolArrayOutput {
	return i.ToVpnsslSettingsTunnelIpPoolArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsTunnelIpPoolArray) ToVpnsslSettingsTunnelIpPoolArrayOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsTunnelIpPoolArrayOutput)
}

type VpnsslSettingsTunnelIpPoolOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsTunnelIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsTunnelIpPool)(nil)).Elem()
}

func (o VpnsslSettingsTunnelIpPoolOutput) ToVpnsslSettingsTunnelIpPoolOutput() VpnsslSettingsTunnelIpPoolOutput {
	return o
}

func (o VpnsslSettingsTunnelIpPoolOutput) ToVpnsslSettingsTunnelIpPoolOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpPoolOutput {
	return o
}

// Address name.
func (o VpnsslSettingsTunnelIpPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsTunnelIpPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsTunnelIpPoolArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsTunnelIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsTunnelIpPool)(nil)).Elem()
}

func (o VpnsslSettingsTunnelIpPoolArrayOutput) ToVpnsslSettingsTunnelIpPoolArrayOutput() VpnsslSettingsTunnelIpPoolArrayOutput {
	return o
}

func (o VpnsslSettingsTunnelIpPoolArrayOutput) ToVpnsslSettingsTunnelIpPoolArrayOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpPoolArrayOutput {
	return o
}

func (o VpnsslSettingsTunnelIpPoolArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsTunnelIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsTunnelIpPool {
		return vs[0].([]VpnsslSettingsTunnelIpPool)[vs[1].(int)]
	}).(VpnsslSettingsTunnelIpPoolOutput)
}

type VpnsslSettingsTunnelIpv6Pool struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name *string `pulumi:"name"`
}

// VpnsslSettingsTunnelIpv6PoolInput is an input type that accepts VpnsslSettingsTunnelIpv6PoolArgs and VpnsslSettingsTunnelIpv6PoolOutput values.
// You can construct a concrete instance of `VpnsslSettingsTunnelIpv6PoolInput` via:
//
//	VpnsslSettingsTunnelIpv6PoolArgs{...}
type VpnsslSettingsTunnelIpv6PoolInput interface {
	pulumi.Input

	ToVpnsslSettingsTunnelIpv6PoolOutput() VpnsslSettingsTunnelIpv6PoolOutput
	ToVpnsslSettingsTunnelIpv6PoolOutputWithContext(context.Context) VpnsslSettingsTunnelIpv6PoolOutput
}

type VpnsslSettingsTunnelIpv6PoolArgs struct {
	// Address name.
	//
	// The `tunnelIpv6Pools` block supports:
	//
	// The `sourceAddress6` block supports:
	//
	// The `sourceAddress6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslSettingsTunnelIpv6PoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsTunnelIpv6Pool)(nil)).Elem()
}

func (i VpnsslSettingsTunnelIpv6PoolArgs) ToVpnsslSettingsTunnelIpv6PoolOutput() VpnsslSettingsTunnelIpv6PoolOutput {
	return i.ToVpnsslSettingsTunnelIpv6PoolOutputWithContext(context.Background())
}

func (i VpnsslSettingsTunnelIpv6PoolArgs) ToVpnsslSettingsTunnelIpv6PoolOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpv6PoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsTunnelIpv6PoolOutput)
}

// VpnsslSettingsTunnelIpv6PoolArrayInput is an input type that accepts VpnsslSettingsTunnelIpv6PoolArray and VpnsslSettingsTunnelIpv6PoolArrayOutput values.
// You can construct a concrete instance of `VpnsslSettingsTunnelIpv6PoolArrayInput` via:
//
//	VpnsslSettingsTunnelIpv6PoolArray{ VpnsslSettingsTunnelIpv6PoolArgs{...} }
type VpnsslSettingsTunnelIpv6PoolArrayInput interface {
	pulumi.Input

	ToVpnsslSettingsTunnelIpv6PoolArrayOutput() VpnsslSettingsTunnelIpv6PoolArrayOutput
	ToVpnsslSettingsTunnelIpv6PoolArrayOutputWithContext(context.Context) VpnsslSettingsTunnelIpv6PoolArrayOutput
}

type VpnsslSettingsTunnelIpv6PoolArray []VpnsslSettingsTunnelIpv6PoolInput

func (VpnsslSettingsTunnelIpv6PoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsTunnelIpv6Pool)(nil)).Elem()
}

func (i VpnsslSettingsTunnelIpv6PoolArray) ToVpnsslSettingsTunnelIpv6PoolArrayOutput() VpnsslSettingsTunnelIpv6PoolArrayOutput {
	return i.ToVpnsslSettingsTunnelIpv6PoolArrayOutputWithContext(context.Background())
}

func (i VpnsslSettingsTunnelIpv6PoolArray) ToVpnsslSettingsTunnelIpv6PoolArrayOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpv6PoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslSettingsTunnelIpv6PoolArrayOutput)
}

type VpnsslSettingsTunnelIpv6PoolOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsTunnelIpv6PoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslSettingsTunnelIpv6Pool)(nil)).Elem()
}

func (o VpnsslSettingsTunnelIpv6PoolOutput) ToVpnsslSettingsTunnelIpv6PoolOutput() VpnsslSettingsTunnelIpv6PoolOutput {
	return o
}

func (o VpnsslSettingsTunnelIpv6PoolOutput) ToVpnsslSettingsTunnelIpv6PoolOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpv6PoolOutput {
	return o
}

// Address name.
//
// The `tunnelIpv6Pools` block supports:
//
// The `sourceAddress6` block supports:
//
// The `sourceAddress6` block supports:
func (o VpnsslSettingsTunnelIpv6PoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslSettingsTunnelIpv6Pool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslSettingsTunnelIpv6PoolArrayOutput struct{ *pulumi.OutputState }

func (VpnsslSettingsTunnelIpv6PoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslSettingsTunnelIpv6Pool)(nil)).Elem()
}

func (o VpnsslSettingsTunnelIpv6PoolArrayOutput) ToVpnsslSettingsTunnelIpv6PoolArrayOutput() VpnsslSettingsTunnelIpv6PoolArrayOutput {
	return o
}

func (o VpnsslSettingsTunnelIpv6PoolArrayOutput) ToVpnsslSettingsTunnelIpv6PoolArrayOutputWithContext(ctx context.Context) VpnsslSettingsTunnelIpv6PoolArrayOutput {
	return o
}

func (o VpnsslSettingsTunnelIpv6PoolArrayOutput) Index(i pulumi.IntInput) VpnsslSettingsTunnelIpv6PoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslSettingsTunnelIpv6Pool {
		return vs[0].([]VpnsslSettingsTunnelIpv6Pool)[vs[1].(int)]
	}).(VpnsslSettingsTunnelIpv6PoolOutput)
}

type VpnsslwebHostchecksoftwareCheckItemList struct {
	// Action. Valid values: `require`, `deny`.
	Action *string `pulumi:"action"`
	// Hex string of MD5 checksum.
	Id *int `pulumi:"id"`
	// MD5 checksum. The structure of `md5s` block is documented below.
	//
	// The `md5s` block supports:
	Md5s []VpnsslwebHostchecksoftwareCheckItemListMd5 `pulumi:"md5s"`
	// Target.
	Target *string `pulumi:"target"`
	// Type. Valid values: `file`, `registry`, `process`.
	Type *string `pulumi:"type"`
	// Version.
	Version *string `pulumi:"version"`
}

// VpnsslwebHostchecksoftwareCheckItemListInput is an input type that accepts VpnsslwebHostchecksoftwareCheckItemListArgs and VpnsslwebHostchecksoftwareCheckItemListOutput values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareCheckItemListInput` via:
//
//	VpnsslwebHostchecksoftwareCheckItemListArgs{...}
type VpnsslwebHostchecksoftwareCheckItemListInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareCheckItemListOutput() VpnsslwebHostchecksoftwareCheckItemListOutput
	ToVpnsslwebHostchecksoftwareCheckItemListOutputWithContext(context.Context) VpnsslwebHostchecksoftwareCheckItemListOutput
}

type VpnsslwebHostchecksoftwareCheckItemListArgs struct {
	// Action. Valid values: `require`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Hex string of MD5 checksum.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MD5 checksum. The structure of `md5s` block is documented below.
	//
	// The `md5s` block supports:
	Md5s VpnsslwebHostchecksoftwareCheckItemListMd5ArrayInput `pulumi:"md5s"`
	// Target.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Type. Valid values: `file`, `registry`, `process`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (VpnsslwebHostchecksoftwareCheckItemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemList)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareCheckItemListArgs) ToVpnsslwebHostchecksoftwareCheckItemListOutput() VpnsslwebHostchecksoftwareCheckItemListOutput {
	return i.ToVpnsslwebHostchecksoftwareCheckItemListOutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareCheckItemListArgs) ToVpnsslwebHostchecksoftwareCheckItemListOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareCheckItemListOutput)
}

// VpnsslwebHostchecksoftwareCheckItemListArrayInput is an input type that accepts VpnsslwebHostchecksoftwareCheckItemListArray and VpnsslwebHostchecksoftwareCheckItemListArrayOutput values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareCheckItemListArrayInput` via:
//
//	VpnsslwebHostchecksoftwareCheckItemListArray{ VpnsslwebHostchecksoftwareCheckItemListArgs{...} }
type VpnsslwebHostchecksoftwareCheckItemListArrayInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareCheckItemListArrayOutput() VpnsslwebHostchecksoftwareCheckItemListArrayOutput
	ToVpnsslwebHostchecksoftwareCheckItemListArrayOutputWithContext(context.Context) VpnsslwebHostchecksoftwareCheckItemListArrayOutput
}

type VpnsslwebHostchecksoftwareCheckItemListArray []VpnsslwebHostchecksoftwareCheckItemListInput

func (VpnsslwebHostchecksoftwareCheckItemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebHostchecksoftwareCheckItemList)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareCheckItemListArray) ToVpnsslwebHostchecksoftwareCheckItemListArrayOutput() VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
	return i.ToVpnsslwebHostchecksoftwareCheckItemListArrayOutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareCheckItemListArray) ToVpnsslwebHostchecksoftwareCheckItemListArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareCheckItemListArrayOutput)
}

type VpnsslwebHostchecksoftwareCheckItemListOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareCheckItemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemList)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareCheckItemListOutput) ToVpnsslwebHostchecksoftwareCheckItemListOutput() VpnsslwebHostchecksoftwareCheckItemListOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListOutput) ToVpnsslwebHostchecksoftwareCheckItemListOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListOutput {
	return o
}

// Action. Valid values: `require`, `deny`.
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Hex string of MD5 checksum.
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MD5 checksum. The structure of `md5s` block is documented below.
//
// The `md5s` block supports:
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Md5s() VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) []VpnsslwebHostchecksoftwareCheckItemListMd5 {
		return v.Md5s
	}).(VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput)
}

// Target.
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Type. Valid values: `file`, `registry`, `process`.
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Version.
func (o VpnsslwebHostchecksoftwareCheckItemListOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemList) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VpnsslwebHostchecksoftwareCheckItemListArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareCheckItemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebHostchecksoftwareCheckItemList)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareCheckItemListArrayOutput) ToVpnsslwebHostchecksoftwareCheckItemListArrayOutput() VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListArrayOutput) ToVpnsslwebHostchecksoftwareCheckItemListArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListArrayOutput) Index(i pulumi.IntInput) VpnsslwebHostchecksoftwareCheckItemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebHostchecksoftwareCheckItemList {
		return vs[0].([]VpnsslwebHostchecksoftwareCheckItemList)[vs[1].(int)]
	}).(VpnsslwebHostchecksoftwareCheckItemListOutput)
}

type VpnsslwebHostchecksoftwareCheckItemListMd5 struct {
	// ID (0 - 4294967295).
	Id *string `pulumi:"id"`
}

// VpnsslwebHostchecksoftwareCheckItemListMd5Input is an input type that accepts VpnsslwebHostchecksoftwareCheckItemListMd5Args and VpnsslwebHostchecksoftwareCheckItemListMd5Output values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareCheckItemListMd5Input` via:
//
//	VpnsslwebHostchecksoftwareCheckItemListMd5Args{...}
type VpnsslwebHostchecksoftwareCheckItemListMd5Input interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareCheckItemListMd5Output() VpnsslwebHostchecksoftwareCheckItemListMd5Output
	ToVpnsslwebHostchecksoftwareCheckItemListMd5OutputWithContext(context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5Output
}

type VpnsslwebHostchecksoftwareCheckItemListMd5Args struct {
	// ID (0 - 4294967295).
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VpnsslwebHostchecksoftwareCheckItemListMd5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListMd5)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareCheckItemListMd5Args) ToVpnsslwebHostchecksoftwareCheckItemListMd5Output() VpnsslwebHostchecksoftwareCheckItemListMd5Output {
	return i.ToVpnsslwebHostchecksoftwareCheckItemListMd5OutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareCheckItemListMd5Args) ToVpnsslwebHostchecksoftwareCheckItemListMd5OutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareCheckItemListMd5Output)
}

// VpnsslwebHostchecksoftwareCheckItemListMd5ArrayInput is an input type that accepts VpnsslwebHostchecksoftwareCheckItemListMd5Array and VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareCheckItemListMd5ArrayInput` via:
//
//	VpnsslwebHostchecksoftwareCheckItemListMd5Array{ VpnsslwebHostchecksoftwareCheckItemListMd5Args{...} }
type VpnsslwebHostchecksoftwareCheckItemListMd5ArrayInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput() VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput
	ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutputWithContext(context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput
}

type VpnsslwebHostchecksoftwareCheckItemListMd5Array []VpnsslwebHostchecksoftwareCheckItemListMd5Input

func (VpnsslwebHostchecksoftwareCheckItemListMd5Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebHostchecksoftwareCheckItemListMd5)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareCheckItemListMd5Array) ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput() VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput {
	return i.ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareCheckItemListMd5Array) ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput)
}

type VpnsslwebHostchecksoftwareCheckItemListMd5Output struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareCheckItemListMd5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListMd5)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareCheckItemListMd5Output) ToVpnsslwebHostchecksoftwareCheckItemListMd5Output() VpnsslwebHostchecksoftwareCheckItemListMd5Output {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListMd5Output) ToVpnsslwebHostchecksoftwareCheckItemListMd5OutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5Output {
	return o
}

// ID (0 - 4294967295).
func (o VpnsslwebHostchecksoftwareCheckItemListMd5Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebHostchecksoftwareCheckItemListMd5) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebHostchecksoftwareCheckItemListMd5)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput) ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput() VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput) ToVpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput) Index(i pulumi.IntInput) VpnsslwebHostchecksoftwareCheckItemListMd5Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebHostchecksoftwareCheckItemListMd5 {
		return vs[0].([]VpnsslwebHostchecksoftwareCheckItemListMd5)[vs[1].(int)]
	}).(VpnsslwebHostchecksoftwareCheckItemListMd5Output)
}

type VpnsslwebPortalBookmarkGroup struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks []VpnsslwebPortalBookmarkGroupBookmark `pulumi:"bookmarks"`
	// Bookmark group name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalBookmarkGroupInput is an input type that accepts VpnsslwebPortalBookmarkGroupArgs and VpnsslwebPortalBookmarkGroupOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupInput` via:
//
//	VpnsslwebPortalBookmarkGroupArgs{...}
type VpnsslwebPortalBookmarkGroupInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupOutput() VpnsslwebPortalBookmarkGroupOutput
	ToVpnsslwebPortalBookmarkGroupOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupOutput
}

type VpnsslwebPortalBookmarkGroupArgs struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks VpnsslwebPortalBookmarkGroupBookmarkArrayInput `pulumi:"bookmarks"`
	// Bookmark group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalBookmarkGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroup)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupArgs) ToVpnsslwebPortalBookmarkGroupOutput() VpnsslwebPortalBookmarkGroupOutput {
	return i.ToVpnsslwebPortalBookmarkGroupOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupArgs) ToVpnsslwebPortalBookmarkGroupOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupOutput)
}

// VpnsslwebPortalBookmarkGroupArrayInput is an input type that accepts VpnsslwebPortalBookmarkGroupArray and VpnsslwebPortalBookmarkGroupArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupArrayInput` via:
//
//	VpnsslwebPortalBookmarkGroupArray{ VpnsslwebPortalBookmarkGroupArgs{...} }
type VpnsslwebPortalBookmarkGroupArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupArrayOutput() VpnsslwebPortalBookmarkGroupArrayOutput
	ToVpnsslwebPortalBookmarkGroupArrayOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupArrayOutput
}

type VpnsslwebPortalBookmarkGroupArray []VpnsslwebPortalBookmarkGroupInput

func (VpnsslwebPortalBookmarkGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroup)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupArray) ToVpnsslwebPortalBookmarkGroupArrayOutput() VpnsslwebPortalBookmarkGroupArrayOutput {
	return i.ToVpnsslwebPortalBookmarkGroupArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupArray) ToVpnsslwebPortalBookmarkGroupArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupArrayOutput)
}

type VpnsslwebPortalBookmarkGroupOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroup)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupOutput) ToVpnsslwebPortalBookmarkGroupOutput() VpnsslwebPortalBookmarkGroupOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupOutput) ToVpnsslwebPortalBookmarkGroupOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupOutput {
	return o
}

// Bookmark table. The structure of `bookmarks` block is documented below.
func (o VpnsslwebPortalBookmarkGroupOutput) Bookmarks() VpnsslwebPortalBookmarkGroupBookmarkArrayOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroup) []VpnsslwebPortalBookmarkGroupBookmark { return v.Bookmarks }).(VpnsslwebPortalBookmarkGroupBookmarkArrayOutput)
}

// Bookmark group name.
func (o VpnsslwebPortalBookmarkGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalBookmarkGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroup)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupArrayOutput) ToVpnsslwebPortalBookmarkGroupArrayOutput() VpnsslwebPortalBookmarkGroupArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupArrayOutput) ToVpnsslwebPortalBookmarkGroupArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalBookmarkGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalBookmarkGroup {
		return vs[0].([]VpnsslwebPortalBookmarkGroup)[vs[1].(int)]
	}).(VpnsslwebPortalBookmarkGroupOutput)
}

type VpnsslwebPortalBookmarkGroupBookmark struct {
	// Additional parameters.
	AdditionalParams *string `pulumi:"additionalParams"`
	// Application type.
	Apptype *string `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth *string `pulumi:"colorDepth"`
	// Description.
	Description *string `pulumi:"description"`
	// Login domain.
	Domain *string `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder *string `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas []VpnsslwebPortalBookmarkGroupBookmarkFormData `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height *int `pulumi:"height"`
	// Host name/IP parameter.
	Host *string `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout *string `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort *int `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo *string `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword *string `pulumi:"logonPassword"`
	// Logon user.
	LogonUser *string `pulumi:"logonUser"`
	// Bookmark name.
	Name *string `pulumi:"name"`
	// Remote port.
	Port *int `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob *string `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId *int `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort *int `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin *string `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security *string `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId *string `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout *string `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow *string `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso *string `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential *string `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce *string `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword *string `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername *string `pulumi:"ssoUsername"`
	// URL parameter.
	Url *string `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width *int `pulumi:"width"`
}

// VpnsslwebPortalBookmarkGroupBookmarkInput is an input type that accepts VpnsslwebPortalBookmarkGroupBookmarkArgs and VpnsslwebPortalBookmarkGroupBookmarkOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupBookmarkInput` via:
//
//	VpnsslwebPortalBookmarkGroupBookmarkArgs{...}
type VpnsslwebPortalBookmarkGroupBookmarkInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupBookmarkOutput() VpnsslwebPortalBookmarkGroupBookmarkOutput
	ToVpnsslwebPortalBookmarkGroupBookmarkOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupBookmarkOutput
}

type VpnsslwebPortalBookmarkGroupBookmarkArgs struct {
	// Additional parameters.
	AdditionalParams pulumi.StringPtrInput `pulumi:"additionalParams"`
	// Application type.
	Apptype pulumi.StringPtrInput `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth pulumi.StringPtrInput `pulumi:"colorDepth"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Login domain.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayInput `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Host name/IP parameter.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout pulumi.StringPtrInput `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort pulumi.IntPtrInput `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo pulumi.StringPtrInput `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword pulumi.StringPtrInput `pulumi:"logonPassword"`
	// Logon user.
	LogonUser pulumi.StringPtrInput `pulumi:"logonUser"`
	// Bookmark name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Remote port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob pulumi.StringPtrInput `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId pulumi.IntPtrInput `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort pulumi.IntPtrInput `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin pulumi.StringPtrInput `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security pulumi.StringPtrInput `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId pulumi.StringPtrInput `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout pulumi.StringPtrInput `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow pulumi.StringPtrInput `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso pulumi.StringPtrInput `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential pulumi.StringPtrInput `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce pulumi.StringPtrInput `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword pulumi.StringPtrInput `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername pulumi.StringPtrInput `pulumi:"ssoUsername"`
	// URL parameter.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (VpnsslwebPortalBookmarkGroupBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmark)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupBookmarkArgs) ToVpnsslwebPortalBookmarkGroupBookmarkOutput() VpnsslwebPortalBookmarkGroupBookmarkOutput {
	return i.ToVpnsslwebPortalBookmarkGroupBookmarkOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupBookmarkArgs) ToVpnsslwebPortalBookmarkGroupBookmarkOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupBookmarkOutput)
}

// VpnsslwebPortalBookmarkGroupBookmarkArrayInput is an input type that accepts VpnsslwebPortalBookmarkGroupBookmarkArray and VpnsslwebPortalBookmarkGroupBookmarkArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupBookmarkArrayInput` via:
//
//	VpnsslwebPortalBookmarkGroupBookmarkArray{ VpnsslwebPortalBookmarkGroupBookmarkArgs{...} }
type VpnsslwebPortalBookmarkGroupBookmarkArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkArrayOutput
	ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupBookmarkArrayOutput
}

type VpnsslwebPortalBookmarkGroupBookmarkArray []VpnsslwebPortalBookmarkGroupBookmarkInput

func (VpnsslwebPortalBookmarkGroupBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroupBookmark)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupBookmarkArray) ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkArrayOutput {
	return i.ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupBookmarkArray) ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupBookmarkArrayOutput)
}

type VpnsslwebPortalBookmarkGroupBookmarkOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmark)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ToVpnsslwebPortalBookmarkGroupBookmarkOutput() VpnsslwebPortalBookmarkGroupBookmarkOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ToVpnsslwebPortalBookmarkGroupBookmarkOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkOutput {
	return o
}

// Additional parameters.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) AdditionalParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.AdditionalParams }).(pulumi.StringPtrOutput)
}

// Application type.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Apptype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Apptype }).(pulumi.StringPtrOutput)
}

// Color depth per pixel. Valid values: `32`, `16`, `8`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ColorDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.ColorDepth }).(pulumi.StringPtrOutput)
}

// Description.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Login domain.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Network shared file folder parameter.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// Form data. The structure of `formData` block is documented below.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) FormDatas() VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) []VpnsslwebPortalBookmarkGroupBookmarkFormData {
		return v.FormDatas
	}).(VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput)
}

// Screen height (range from 480 - 65535, default = 768).
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Host name/IP parameter.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Keyboard layout.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) KeyboardLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.KeyboardLayout }).(pulumi.StringPtrOutput)
}

// Listening port (0 - 65535).
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ListeningPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.ListeningPort }).(pulumi.IntPtrOutput)
}

// The load balancing information or cookie which should be provided to the connection broker.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) LoadBalancingInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.LoadBalancingInfo }).(pulumi.StringPtrOutput)
}

// Logon password.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) LogonPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.LogonPassword }).(pulumi.StringPtrOutput)
}

// Logon user.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) LogonUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.LogonUser }).(pulumi.StringPtrOutput)
}

// Bookmark name.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Remote port.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// An arbitrary string which identifies the RDP source.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) PreconnectionBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.PreconnectionBlob }).(pulumi.StringPtrOutput)
}

// The numeric ID of the RDP source (0-2147483648).
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) PreconnectionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.PreconnectionId }).(pulumi.IntPtrOutput)
}

// Remote port (0 - 65535).
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) RemotePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.RemotePort }).(pulumi.IntPtrOutput)
}

// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) RestrictedAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.RestrictedAdmin }).(pulumi.StringPtrOutput)
}

// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Security() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Security }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) SendPreconnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.SendPreconnectionId }).(pulumi.StringPtrOutput)
}

// Server side keyboard layout.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ServerLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.ServerLayout }).(pulumi.StringPtrOutput)
}

// Enable/disable showing of status window. Valid values: `enable`, `disable`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) ShowStatusWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.ShowStatusWindow }).(pulumi.StringPtrOutput)
}

// Single Sign-On. Valid values: `disable`, `static`, `auto`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Sso() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Sso }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) SsoCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.SsoCredential }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) SsoCredentialSentOnce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.SsoCredentialSentOnce }).(pulumi.StringPtrOutput)
}

// SSO password.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) SsoPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.SsoPassword }).(pulumi.StringPtrOutput)
}

// SSO user name.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) SsoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.SsoUsername }).(pulumi.StringPtrOutput)
}

// URL parameter.
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Screen width (range from 640 - 65535, default = 1024).
func (o VpnsslwebPortalBookmarkGroupBookmarkOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmark) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type VpnsslwebPortalBookmarkGroupBookmarkArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroupBookmark)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupBookmarkArrayOutput) ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkArrayOutput) ToVpnsslwebPortalBookmarkGroupBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalBookmarkGroupBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalBookmarkGroupBookmark {
		return vs[0].([]VpnsslwebPortalBookmarkGroupBookmark)[vs[1].(int)]
	}).(VpnsslwebPortalBookmarkGroupBookmarkOutput)
}

type VpnsslwebPortalBookmarkGroupBookmarkFormData struct {
	// Name.
	Name *string `pulumi:"name"`
	// Value.
	Value *string `pulumi:"value"`
}

// VpnsslwebPortalBookmarkGroupBookmarkFormDataInput is an input type that accepts VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs and VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupBookmarkFormDataInput` via:
//
//	VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs{...}
type VpnsslwebPortalBookmarkGroupBookmarkFormDataInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput
	ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput
}

type VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput {
	return i.ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput)
}

// VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayInput is an input type that accepts VpnsslwebPortalBookmarkGroupBookmarkFormDataArray and VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayInput` via:
//
//	VpnsslwebPortalBookmarkGroupBookmarkFormDataArray{ VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs{...} }
type VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput
	ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutputWithContext(context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput
}

type VpnsslwebPortalBookmarkGroupBookmarkFormDataArray []VpnsslwebPortalBookmarkGroupBookmarkFormDataInput

func (VpnsslwebPortalBookmarkGroupBookmarkFormDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroupBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebPortalBookmarkGroupBookmarkFormDataArray) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput {
	return i.ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalBookmarkGroupBookmarkFormDataArray) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput)
}

type VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput {
	return o
}

// Name.
func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmarkFormData) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalBookmarkGroupBookmarkFormData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalBookmarkGroupBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput() VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput) ToVpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalBookmarkGroupBookmarkFormData {
		return vs[0].([]VpnsslwebPortalBookmarkGroupBookmarkFormData)[vs[1].(int)]
	}).(VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput)
}

type VpnsslwebPortalHostCheckPolicy struct {
	// Host check software list name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalHostCheckPolicyInput is an input type that accepts VpnsslwebPortalHostCheckPolicyArgs and VpnsslwebPortalHostCheckPolicyOutput values.
// You can construct a concrete instance of `VpnsslwebPortalHostCheckPolicyInput` via:
//
//	VpnsslwebPortalHostCheckPolicyArgs{...}
type VpnsslwebPortalHostCheckPolicyInput interface {
	pulumi.Input

	ToVpnsslwebPortalHostCheckPolicyOutput() VpnsslwebPortalHostCheckPolicyOutput
	ToVpnsslwebPortalHostCheckPolicyOutputWithContext(context.Context) VpnsslwebPortalHostCheckPolicyOutput
}

type VpnsslwebPortalHostCheckPolicyArgs struct {
	// Host check software list name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalHostCheckPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalHostCheckPolicy)(nil)).Elem()
}

func (i VpnsslwebPortalHostCheckPolicyArgs) ToVpnsslwebPortalHostCheckPolicyOutput() VpnsslwebPortalHostCheckPolicyOutput {
	return i.ToVpnsslwebPortalHostCheckPolicyOutputWithContext(context.Background())
}

func (i VpnsslwebPortalHostCheckPolicyArgs) ToVpnsslwebPortalHostCheckPolicyOutputWithContext(ctx context.Context) VpnsslwebPortalHostCheckPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalHostCheckPolicyOutput)
}

// VpnsslwebPortalHostCheckPolicyArrayInput is an input type that accepts VpnsslwebPortalHostCheckPolicyArray and VpnsslwebPortalHostCheckPolicyArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalHostCheckPolicyArrayInput` via:
//
//	VpnsslwebPortalHostCheckPolicyArray{ VpnsslwebPortalHostCheckPolicyArgs{...} }
type VpnsslwebPortalHostCheckPolicyArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalHostCheckPolicyArrayOutput() VpnsslwebPortalHostCheckPolicyArrayOutput
	ToVpnsslwebPortalHostCheckPolicyArrayOutputWithContext(context.Context) VpnsslwebPortalHostCheckPolicyArrayOutput
}

type VpnsslwebPortalHostCheckPolicyArray []VpnsslwebPortalHostCheckPolicyInput

func (VpnsslwebPortalHostCheckPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalHostCheckPolicy)(nil)).Elem()
}

func (i VpnsslwebPortalHostCheckPolicyArray) ToVpnsslwebPortalHostCheckPolicyArrayOutput() VpnsslwebPortalHostCheckPolicyArrayOutput {
	return i.ToVpnsslwebPortalHostCheckPolicyArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalHostCheckPolicyArray) ToVpnsslwebPortalHostCheckPolicyArrayOutputWithContext(ctx context.Context) VpnsslwebPortalHostCheckPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalHostCheckPolicyArrayOutput)
}

type VpnsslwebPortalHostCheckPolicyOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalHostCheckPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalHostCheckPolicy)(nil)).Elem()
}

func (o VpnsslwebPortalHostCheckPolicyOutput) ToVpnsslwebPortalHostCheckPolicyOutput() VpnsslwebPortalHostCheckPolicyOutput {
	return o
}

func (o VpnsslwebPortalHostCheckPolicyOutput) ToVpnsslwebPortalHostCheckPolicyOutputWithContext(ctx context.Context) VpnsslwebPortalHostCheckPolicyOutput {
	return o
}

// Host check software list name.
func (o VpnsslwebPortalHostCheckPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalHostCheckPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalHostCheckPolicyArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalHostCheckPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalHostCheckPolicy)(nil)).Elem()
}

func (o VpnsslwebPortalHostCheckPolicyArrayOutput) ToVpnsslwebPortalHostCheckPolicyArrayOutput() VpnsslwebPortalHostCheckPolicyArrayOutput {
	return o
}

func (o VpnsslwebPortalHostCheckPolicyArrayOutput) ToVpnsslwebPortalHostCheckPolicyArrayOutputWithContext(ctx context.Context) VpnsslwebPortalHostCheckPolicyArrayOutput {
	return o
}

func (o VpnsslwebPortalHostCheckPolicyArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalHostCheckPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalHostCheckPolicy {
		return vs[0].([]VpnsslwebPortalHostCheckPolicy)[vs[1].(int)]
	}).(VpnsslwebPortalHostCheckPolicyOutput)
}

type VpnsslwebPortalIpPool struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalIpPoolInput is an input type that accepts VpnsslwebPortalIpPoolArgs and VpnsslwebPortalIpPoolOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpPoolInput` via:
//
//	VpnsslwebPortalIpPoolArgs{...}
type VpnsslwebPortalIpPoolInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpPoolOutput() VpnsslwebPortalIpPoolOutput
	ToVpnsslwebPortalIpPoolOutputWithContext(context.Context) VpnsslwebPortalIpPoolOutput
}

type VpnsslwebPortalIpPoolArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpPool)(nil)).Elem()
}

func (i VpnsslwebPortalIpPoolArgs) ToVpnsslwebPortalIpPoolOutput() VpnsslwebPortalIpPoolOutput {
	return i.ToVpnsslwebPortalIpPoolOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpPoolArgs) ToVpnsslwebPortalIpPoolOutputWithContext(ctx context.Context) VpnsslwebPortalIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpPoolOutput)
}

// VpnsslwebPortalIpPoolArrayInput is an input type that accepts VpnsslwebPortalIpPoolArray and VpnsslwebPortalIpPoolArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpPoolArrayInput` via:
//
//	VpnsslwebPortalIpPoolArray{ VpnsslwebPortalIpPoolArgs{...} }
type VpnsslwebPortalIpPoolArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpPoolArrayOutput() VpnsslwebPortalIpPoolArrayOutput
	ToVpnsslwebPortalIpPoolArrayOutputWithContext(context.Context) VpnsslwebPortalIpPoolArrayOutput
}

type VpnsslwebPortalIpPoolArray []VpnsslwebPortalIpPoolInput

func (VpnsslwebPortalIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpPool)(nil)).Elem()
}

func (i VpnsslwebPortalIpPoolArray) ToVpnsslwebPortalIpPoolArrayOutput() VpnsslwebPortalIpPoolArrayOutput {
	return i.ToVpnsslwebPortalIpPoolArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpPoolArray) ToVpnsslwebPortalIpPoolArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpPoolArrayOutput)
}

type VpnsslwebPortalIpPoolOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpPool)(nil)).Elem()
}

func (o VpnsslwebPortalIpPoolOutput) ToVpnsslwebPortalIpPoolOutput() VpnsslwebPortalIpPoolOutput {
	return o
}

func (o VpnsslwebPortalIpPoolOutput) ToVpnsslwebPortalIpPoolOutputWithContext(ctx context.Context) VpnsslwebPortalIpPoolOutput {
	return o
}

// Address name.
func (o VpnsslwebPortalIpPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalIpPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalIpPoolArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpPool)(nil)).Elem()
}

func (o VpnsslwebPortalIpPoolArrayOutput) ToVpnsslwebPortalIpPoolArrayOutput() VpnsslwebPortalIpPoolArrayOutput {
	return o
}

func (o VpnsslwebPortalIpPoolArrayOutput) ToVpnsslwebPortalIpPoolArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpPoolArrayOutput {
	return o
}

func (o VpnsslwebPortalIpPoolArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalIpPool {
		return vs[0].([]VpnsslwebPortalIpPool)[vs[1].(int)]
	}).(VpnsslwebPortalIpPoolOutput)
}

type VpnsslwebPortalIpv6Pool struct {
	// Portal name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalIpv6PoolInput is an input type that accepts VpnsslwebPortalIpv6PoolArgs and VpnsslwebPortalIpv6PoolOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpv6PoolInput` via:
//
//	VpnsslwebPortalIpv6PoolArgs{...}
type VpnsslwebPortalIpv6PoolInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpv6PoolOutput() VpnsslwebPortalIpv6PoolOutput
	ToVpnsslwebPortalIpv6PoolOutputWithContext(context.Context) VpnsslwebPortalIpv6PoolOutput
}

type VpnsslwebPortalIpv6PoolArgs struct {
	// Portal name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalIpv6PoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpv6Pool)(nil)).Elem()
}

func (i VpnsslwebPortalIpv6PoolArgs) ToVpnsslwebPortalIpv6PoolOutput() VpnsslwebPortalIpv6PoolOutput {
	return i.ToVpnsslwebPortalIpv6PoolOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpv6PoolArgs) ToVpnsslwebPortalIpv6PoolOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6PoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpv6PoolOutput)
}

// VpnsslwebPortalIpv6PoolArrayInput is an input type that accepts VpnsslwebPortalIpv6PoolArray and VpnsslwebPortalIpv6PoolArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpv6PoolArrayInput` via:
//
//	VpnsslwebPortalIpv6PoolArray{ VpnsslwebPortalIpv6PoolArgs{...} }
type VpnsslwebPortalIpv6PoolArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpv6PoolArrayOutput() VpnsslwebPortalIpv6PoolArrayOutput
	ToVpnsslwebPortalIpv6PoolArrayOutputWithContext(context.Context) VpnsslwebPortalIpv6PoolArrayOutput
}

type VpnsslwebPortalIpv6PoolArray []VpnsslwebPortalIpv6PoolInput

func (VpnsslwebPortalIpv6PoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpv6Pool)(nil)).Elem()
}

func (i VpnsslwebPortalIpv6PoolArray) ToVpnsslwebPortalIpv6PoolArrayOutput() VpnsslwebPortalIpv6PoolArrayOutput {
	return i.ToVpnsslwebPortalIpv6PoolArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpv6PoolArray) ToVpnsslwebPortalIpv6PoolArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6PoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpv6PoolArrayOutput)
}

type VpnsslwebPortalIpv6PoolOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpv6PoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpv6Pool)(nil)).Elem()
}

func (o VpnsslwebPortalIpv6PoolOutput) ToVpnsslwebPortalIpv6PoolOutput() VpnsslwebPortalIpv6PoolOutput {
	return o
}

func (o VpnsslwebPortalIpv6PoolOutput) ToVpnsslwebPortalIpv6PoolOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6PoolOutput {
	return o
}

// Portal name.
func (o VpnsslwebPortalIpv6PoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalIpv6Pool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalIpv6PoolArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpv6PoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpv6Pool)(nil)).Elem()
}

func (o VpnsslwebPortalIpv6PoolArrayOutput) ToVpnsslwebPortalIpv6PoolArrayOutput() VpnsslwebPortalIpv6PoolArrayOutput {
	return o
}

func (o VpnsslwebPortalIpv6PoolArrayOutput) ToVpnsslwebPortalIpv6PoolArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6PoolArrayOutput {
	return o
}

func (o VpnsslwebPortalIpv6PoolArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalIpv6PoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalIpv6Pool {
		return vs[0].([]VpnsslwebPortalIpv6Pool)[vs[1].(int)]
	}).(VpnsslwebPortalIpv6PoolOutput)
}

type VpnsslwebPortalIpv6SplitTunnelingRoutingAddress struct {
	// Portal name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalIpv6SplitTunnelingRoutingAddressInput is an input type that accepts VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs and VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpv6SplitTunnelingRoutingAddressInput` via:
//
//	VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs{...}
type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput
	ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutputWithContext(context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput
}

type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs struct {
	// Portal name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpv6SplitTunnelingRoutingAddress)(nil)).Elem()
}

func (i VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput {
	return i.ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput)
}

// VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayInput is an input type that accepts VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray and VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayInput` via:
//
//	VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray{ VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs{...} }
type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput
	ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutputWithContext(context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput
}

type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray []VpnsslwebPortalIpv6SplitTunnelingRoutingAddressInput

func (VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpv6SplitTunnelingRoutingAddress)(nil)).Elem()
}

func (i VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput {
	return i.ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput)
}

type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalIpv6SplitTunnelingRoutingAddress)(nil)).Elem()
}

func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput {
	return o
}

func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput {
	return o
}

// Portal name.
func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalIpv6SplitTunnelingRoutingAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalIpv6SplitTunnelingRoutingAddress)(nil)).Elem()
}

func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput {
	return o
}

func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput) ToVpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutputWithContext(ctx context.Context) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput {
	return o
}

func (o VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalIpv6SplitTunnelingRoutingAddress {
		return vs[0].([]VpnsslwebPortalIpv6SplitTunnelingRoutingAddress)[vs[1].(int)]
	}).(VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput)
}

type VpnsslwebPortalMacAddrCheckRule struct {
	// Client MAC address list. The structure of `macAddrList` block is documented below.
	MacAddrLists []VpnsslwebPortalMacAddrCheckRuleMacAddrList `pulumi:"macAddrLists"`
	// Client MAC address mask.
	MacAddrMask *int `pulumi:"macAddrMask"`
	// Client MAC address check rule name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalMacAddrCheckRuleInput is an input type that accepts VpnsslwebPortalMacAddrCheckRuleArgs and VpnsslwebPortalMacAddrCheckRuleOutput values.
// You can construct a concrete instance of `VpnsslwebPortalMacAddrCheckRuleInput` via:
//
//	VpnsslwebPortalMacAddrCheckRuleArgs{...}
type VpnsslwebPortalMacAddrCheckRuleInput interface {
	pulumi.Input

	ToVpnsslwebPortalMacAddrCheckRuleOutput() VpnsslwebPortalMacAddrCheckRuleOutput
	ToVpnsslwebPortalMacAddrCheckRuleOutputWithContext(context.Context) VpnsslwebPortalMacAddrCheckRuleOutput
}

type VpnsslwebPortalMacAddrCheckRuleArgs struct {
	// Client MAC address list. The structure of `macAddrList` block is documented below.
	MacAddrLists VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayInput `pulumi:"macAddrLists"`
	// Client MAC address mask.
	MacAddrMask pulumi.IntPtrInput `pulumi:"macAddrMask"`
	// Client MAC address check rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalMacAddrCheckRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRule)(nil)).Elem()
}

func (i VpnsslwebPortalMacAddrCheckRuleArgs) ToVpnsslwebPortalMacAddrCheckRuleOutput() VpnsslwebPortalMacAddrCheckRuleOutput {
	return i.ToVpnsslwebPortalMacAddrCheckRuleOutputWithContext(context.Background())
}

func (i VpnsslwebPortalMacAddrCheckRuleArgs) ToVpnsslwebPortalMacAddrCheckRuleOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalMacAddrCheckRuleOutput)
}

// VpnsslwebPortalMacAddrCheckRuleArrayInput is an input type that accepts VpnsslwebPortalMacAddrCheckRuleArray and VpnsslwebPortalMacAddrCheckRuleArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalMacAddrCheckRuleArrayInput` via:
//
//	VpnsslwebPortalMacAddrCheckRuleArray{ VpnsslwebPortalMacAddrCheckRuleArgs{...} }
type VpnsslwebPortalMacAddrCheckRuleArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalMacAddrCheckRuleArrayOutput() VpnsslwebPortalMacAddrCheckRuleArrayOutput
	ToVpnsslwebPortalMacAddrCheckRuleArrayOutputWithContext(context.Context) VpnsslwebPortalMacAddrCheckRuleArrayOutput
}

type VpnsslwebPortalMacAddrCheckRuleArray []VpnsslwebPortalMacAddrCheckRuleInput

func (VpnsslwebPortalMacAddrCheckRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalMacAddrCheckRule)(nil)).Elem()
}

func (i VpnsslwebPortalMacAddrCheckRuleArray) ToVpnsslwebPortalMacAddrCheckRuleArrayOutput() VpnsslwebPortalMacAddrCheckRuleArrayOutput {
	return i.ToVpnsslwebPortalMacAddrCheckRuleArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalMacAddrCheckRuleArray) ToVpnsslwebPortalMacAddrCheckRuleArrayOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalMacAddrCheckRuleArrayOutput)
}

type VpnsslwebPortalMacAddrCheckRuleOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalMacAddrCheckRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRule)(nil)).Elem()
}

func (o VpnsslwebPortalMacAddrCheckRuleOutput) ToVpnsslwebPortalMacAddrCheckRuleOutput() VpnsslwebPortalMacAddrCheckRuleOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleOutput) ToVpnsslwebPortalMacAddrCheckRuleOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleOutput {
	return o
}

// Client MAC address list. The structure of `macAddrList` block is documented below.
func (o VpnsslwebPortalMacAddrCheckRuleOutput) MacAddrLists() VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput {
	return o.ApplyT(func(v VpnsslwebPortalMacAddrCheckRule) []VpnsslwebPortalMacAddrCheckRuleMacAddrList {
		return v.MacAddrLists
	}).(VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput)
}

// Client MAC address mask.
func (o VpnsslwebPortalMacAddrCheckRuleOutput) MacAddrMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalMacAddrCheckRule) *int { return v.MacAddrMask }).(pulumi.IntPtrOutput)
}

// Client MAC address check rule name.
func (o VpnsslwebPortalMacAddrCheckRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalMacAddrCheckRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalMacAddrCheckRuleArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalMacAddrCheckRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalMacAddrCheckRule)(nil)).Elem()
}

func (o VpnsslwebPortalMacAddrCheckRuleArrayOutput) ToVpnsslwebPortalMacAddrCheckRuleArrayOutput() VpnsslwebPortalMacAddrCheckRuleArrayOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleArrayOutput) ToVpnsslwebPortalMacAddrCheckRuleArrayOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleArrayOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalMacAddrCheckRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalMacAddrCheckRule {
		return vs[0].([]VpnsslwebPortalMacAddrCheckRule)[vs[1].(int)]
	}).(VpnsslwebPortalMacAddrCheckRuleOutput)
}

type VpnsslwebPortalMacAddrCheckRuleMacAddrList struct {
	// Client MAC address.
	Addr *string `pulumi:"addr"`
}

// VpnsslwebPortalMacAddrCheckRuleMacAddrListInput is an input type that accepts VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs and VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput values.
// You can construct a concrete instance of `VpnsslwebPortalMacAddrCheckRuleMacAddrListInput` via:
//
//	VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs{...}
type VpnsslwebPortalMacAddrCheckRuleMacAddrListInput interface {
	pulumi.Input

	ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput
	ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutputWithContext(context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput
}

type VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs struct {
	// Client MAC address.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
}

func (VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleMacAddrList)(nil)).Elem()
}

func (i VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput {
	return i.ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutputWithContext(context.Background())
}

func (i VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput)
}

// VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayInput is an input type that accepts VpnsslwebPortalMacAddrCheckRuleMacAddrListArray and VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayInput` via:
//
//	VpnsslwebPortalMacAddrCheckRuleMacAddrListArray{ VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs{...} }
type VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput
	ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutputWithContext(context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput
}

type VpnsslwebPortalMacAddrCheckRuleMacAddrListArray []VpnsslwebPortalMacAddrCheckRuleMacAddrListInput

func (VpnsslwebPortalMacAddrCheckRuleMacAddrListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalMacAddrCheckRuleMacAddrList)(nil)).Elem()
}

func (i VpnsslwebPortalMacAddrCheckRuleMacAddrListArray) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput {
	return i.ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalMacAddrCheckRuleMacAddrListArray) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput)
}

type VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleMacAddrList)(nil)).Elem()
}

func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput {
	return o
}

// Client MAC address.
func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalMacAddrCheckRuleMacAddrList) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalMacAddrCheckRuleMacAddrList)(nil)).Elem()
}

func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput() VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput) ToVpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutputWithContext(ctx context.Context) VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput {
	return o
}

func (o VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalMacAddrCheckRuleMacAddrList {
		return vs[0].([]VpnsslwebPortalMacAddrCheckRuleMacAddrList)[vs[1].(int)]
	}).(VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput)
}

type VpnsslwebPortalOsCheckList struct {
	// OS check options. Valid values: `deny`, `allow`, `check-up-to-date`.
	Action *string `pulumi:"action"`
	// Latest OS patch level.
	LatestPatchLevel *string `pulumi:"latestPatchLevel"`
	// Name.
	Name *string `pulumi:"name"`
	// OS patch level tolerance.
	Tolerance *int `pulumi:"tolerance"`
}

// VpnsslwebPortalOsCheckListInput is an input type that accepts VpnsslwebPortalOsCheckListArgs and VpnsslwebPortalOsCheckListOutput values.
// You can construct a concrete instance of `VpnsslwebPortalOsCheckListInput` via:
//
//	VpnsslwebPortalOsCheckListArgs{...}
type VpnsslwebPortalOsCheckListInput interface {
	pulumi.Input

	ToVpnsslwebPortalOsCheckListOutput() VpnsslwebPortalOsCheckListOutput
	ToVpnsslwebPortalOsCheckListOutputWithContext(context.Context) VpnsslwebPortalOsCheckListOutput
}

type VpnsslwebPortalOsCheckListArgs struct {
	// OS check options. Valid values: `deny`, `allow`, `check-up-to-date`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Latest OS patch level.
	LatestPatchLevel pulumi.StringPtrInput `pulumi:"latestPatchLevel"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OS patch level tolerance.
	Tolerance pulumi.IntPtrInput `pulumi:"tolerance"`
}

func (VpnsslwebPortalOsCheckListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalOsCheckList)(nil)).Elem()
}

func (i VpnsslwebPortalOsCheckListArgs) ToVpnsslwebPortalOsCheckListOutput() VpnsslwebPortalOsCheckListOutput {
	return i.ToVpnsslwebPortalOsCheckListOutputWithContext(context.Background())
}

func (i VpnsslwebPortalOsCheckListArgs) ToVpnsslwebPortalOsCheckListOutputWithContext(ctx context.Context) VpnsslwebPortalOsCheckListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalOsCheckListOutput)
}

// VpnsslwebPortalOsCheckListArrayInput is an input type that accepts VpnsslwebPortalOsCheckListArray and VpnsslwebPortalOsCheckListArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalOsCheckListArrayInput` via:
//
//	VpnsslwebPortalOsCheckListArray{ VpnsslwebPortalOsCheckListArgs{...} }
type VpnsslwebPortalOsCheckListArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalOsCheckListArrayOutput() VpnsslwebPortalOsCheckListArrayOutput
	ToVpnsslwebPortalOsCheckListArrayOutputWithContext(context.Context) VpnsslwebPortalOsCheckListArrayOutput
}

type VpnsslwebPortalOsCheckListArray []VpnsslwebPortalOsCheckListInput

func (VpnsslwebPortalOsCheckListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalOsCheckList)(nil)).Elem()
}

func (i VpnsslwebPortalOsCheckListArray) ToVpnsslwebPortalOsCheckListArrayOutput() VpnsslwebPortalOsCheckListArrayOutput {
	return i.ToVpnsslwebPortalOsCheckListArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalOsCheckListArray) ToVpnsslwebPortalOsCheckListArrayOutputWithContext(ctx context.Context) VpnsslwebPortalOsCheckListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalOsCheckListArrayOutput)
}

type VpnsslwebPortalOsCheckListOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalOsCheckListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalOsCheckList)(nil)).Elem()
}

func (o VpnsslwebPortalOsCheckListOutput) ToVpnsslwebPortalOsCheckListOutput() VpnsslwebPortalOsCheckListOutput {
	return o
}

func (o VpnsslwebPortalOsCheckListOutput) ToVpnsslwebPortalOsCheckListOutputWithContext(ctx context.Context) VpnsslwebPortalOsCheckListOutput {
	return o
}

// OS check options. Valid values: `deny`, `allow`, `check-up-to-date`.
func (o VpnsslwebPortalOsCheckListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalOsCheckList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Latest OS patch level.
func (o VpnsslwebPortalOsCheckListOutput) LatestPatchLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalOsCheckList) *string { return v.LatestPatchLevel }).(pulumi.StringPtrOutput)
}

// Name.
func (o VpnsslwebPortalOsCheckListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalOsCheckList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OS patch level tolerance.
func (o VpnsslwebPortalOsCheckListOutput) Tolerance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalOsCheckList) *int { return v.Tolerance }).(pulumi.IntPtrOutput)
}

type VpnsslwebPortalOsCheckListArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalOsCheckListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalOsCheckList)(nil)).Elem()
}

func (o VpnsslwebPortalOsCheckListArrayOutput) ToVpnsslwebPortalOsCheckListArrayOutput() VpnsslwebPortalOsCheckListArrayOutput {
	return o
}

func (o VpnsslwebPortalOsCheckListArrayOutput) ToVpnsslwebPortalOsCheckListArrayOutputWithContext(ctx context.Context) VpnsslwebPortalOsCheckListArrayOutput {
	return o
}

func (o VpnsslwebPortalOsCheckListArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalOsCheckListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalOsCheckList {
		return vs[0].([]VpnsslwebPortalOsCheckList)[vs[1].(int)]
	}).(VpnsslwebPortalOsCheckListOutput)
}

type VpnsslwebPortalSplitDn struct {
	// DNS server 1.
	DnsServer1 *string `pulumi:"dnsServer1"`
	// DNS server 2.
	DnsServer2 *string `pulumi:"dnsServer2"`
	// Split DNS domains used for SSL-VPN clients separated by comma(,).
	Domains *string `pulumi:"domains"`
	// ID.
	Id *int `pulumi:"id"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 *string `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 *string `pulumi:"ipv6DnsServer2"`
}

// VpnsslwebPortalSplitDnInput is an input type that accepts VpnsslwebPortalSplitDnArgs and VpnsslwebPortalSplitDnOutput values.
// You can construct a concrete instance of `VpnsslwebPortalSplitDnInput` via:
//
//	VpnsslwebPortalSplitDnArgs{...}
type VpnsslwebPortalSplitDnInput interface {
	pulumi.Input

	ToVpnsslwebPortalSplitDnOutput() VpnsslwebPortalSplitDnOutput
	ToVpnsslwebPortalSplitDnOutputWithContext(context.Context) VpnsslwebPortalSplitDnOutput
}

type VpnsslwebPortalSplitDnArgs struct {
	// DNS server 1.
	DnsServer1 pulumi.StringPtrInput `pulumi:"dnsServer1"`
	// DNS server 2.
	DnsServer2 pulumi.StringPtrInput `pulumi:"dnsServer2"`
	// Split DNS domains used for SSL-VPN clients separated by comma(,).
	Domains pulumi.StringPtrInput `pulumi:"domains"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringPtrInput `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringPtrInput `pulumi:"ipv6DnsServer2"`
}

func (VpnsslwebPortalSplitDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalSplitDn)(nil)).Elem()
}

func (i VpnsslwebPortalSplitDnArgs) ToVpnsslwebPortalSplitDnOutput() VpnsslwebPortalSplitDnOutput {
	return i.ToVpnsslwebPortalSplitDnOutputWithContext(context.Background())
}

func (i VpnsslwebPortalSplitDnArgs) ToVpnsslwebPortalSplitDnOutputWithContext(ctx context.Context) VpnsslwebPortalSplitDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalSplitDnOutput)
}

// VpnsslwebPortalSplitDnArrayInput is an input type that accepts VpnsslwebPortalSplitDnArray and VpnsslwebPortalSplitDnArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalSplitDnArrayInput` via:
//
//	VpnsslwebPortalSplitDnArray{ VpnsslwebPortalSplitDnArgs{...} }
type VpnsslwebPortalSplitDnArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalSplitDnArrayOutput() VpnsslwebPortalSplitDnArrayOutput
	ToVpnsslwebPortalSplitDnArrayOutputWithContext(context.Context) VpnsslwebPortalSplitDnArrayOutput
}

type VpnsslwebPortalSplitDnArray []VpnsslwebPortalSplitDnInput

func (VpnsslwebPortalSplitDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalSplitDn)(nil)).Elem()
}

func (i VpnsslwebPortalSplitDnArray) ToVpnsslwebPortalSplitDnArrayOutput() VpnsslwebPortalSplitDnArrayOutput {
	return i.ToVpnsslwebPortalSplitDnArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalSplitDnArray) ToVpnsslwebPortalSplitDnArrayOutputWithContext(ctx context.Context) VpnsslwebPortalSplitDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalSplitDnArrayOutput)
}

type VpnsslwebPortalSplitDnOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalSplitDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalSplitDn)(nil)).Elem()
}

func (o VpnsslwebPortalSplitDnOutput) ToVpnsslwebPortalSplitDnOutput() VpnsslwebPortalSplitDnOutput {
	return o
}

func (o VpnsslwebPortalSplitDnOutput) ToVpnsslwebPortalSplitDnOutputWithContext(ctx context.Context) VpnsslwebPortalSplitDnOutput {
	return o
}

// DNS server 1.
func (o VpnsslwebPortalSplitDnOutput) DnsServer1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *string { return v.DnsServer1 }).(pulumi.StringPtrOutput)
}

// DNS server 2.
func (o VpnsslwebPortalSplitDnOutput) DnsServer2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *string { return v.DnsServer2 }).(pulumi.StringPtrOutput)
}

// Split DNS domains used for SSL-VPN clients separated by comma(,).
func (o VpnsslwebPortalSplitDnOutput) Domains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *string { return v.Domains }).(pulumi.StringPtrOutput)
}

// ID.
func (o VpnsslwebPortalSplitDnOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 DNS server 1.
func (o VpnsslwebPortalSplitDnOutput) Ipv6DnsServer1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *string { return v.Ipv6DnsServer1 }).(pulumi.StringPtrOutput)
}

// IPv6 DNS server 2.
func (o VpnsslwebPortalSplitDnOutput) Ipv6DnsServer2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitDn) *string { return v.Ipv6DnsServer2 }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalSplitDnArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalSplitDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalSplitDn)(nil)).Elem()
}

func (o VpnsslwebPortalSplitDnArrayOutput) ToVpnsslwebPortalSplitDnArrayOutput() VpnsslwebPortalSplitDnArrayOutput {
	return o
}

func (o VpnsslwebPortalSplitDnArrayOutput) ToVpnsslwebPortalSplitDnArrayOutputWithContext(ctx context.Context) VpnsslwebPortalSplitDnArrayOutput {
	return o
}

func (o VpnsslwebPortalSplitDnArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalSplitDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalSplitDn {
		return vs[0].([]VpnsslwebPortalSplitDn)[vs[1].(int)]
	}).(VpnsslwebPortalSplitDnOutput)
}

type VpnsslwebPortalSplitTunnelingRoutingAddress struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// VpnsslwebPortalSplitTunnelingRoutingAddressInput is an input type that accepts VpnsslwebPortalSplitTunnelingRoutingAddressArgs and VpnsslwebPortalSplitTunnelingRoutingAddressOutput values.
// You can construct a concrete instance of `VpnsslwebPortalSplitTunnelingRoutingAddressInput` via:
//
//	VpnsslwebPortalSplitTunnelingRoutingAddressArgs{...}
type VpnsslwebPortalSplitTunnelingRoutingAddressInput interface {
	pulumi.Input

	ToVpnsslwebPortalSplitTunnelingRoutingAddressOutput() VpnsslwebPortalSplitTunnelingRoutingAddressOutput
	ToVpnsslwebPortalSplitTunnelingRoutingAddressOutputWithContext(context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressOutput
}

type VpnsslwebPortalSplitTunnelingRoutingAddressArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnsslwebPortalSplitTunnelingRoutingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalSplitTunnelingRoutingAddress)(nil)).Elem()
}

func (i VpnsslwebPortalSplitTunnelingRoutingAddressArgs) ToVpnsslwebPortalSplitTunnelingRoutingAddressOutput() VpnsslwebPortalSplitTunnelingRoutingAddressOutput {
	return i.ToVpnsslwebPortalSplitTunnelingRoutingAddressOutputWithContext(context.Background())
}

func (i VpnsslwebPortalSplitTunnelingRoutingAddressArgs) ToVpnsslwebPortalSplitTunnelingRoutingAddressOutputWithContext(ctx context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalSplitTunnelingRoutingAddressOutput)
}

// VpnsslwebPortalSplitTunnelingRoutingAddressArrayInput is an input type that accepts VpnsslwebPortalSplitTunnelingRoutingAddressArray and VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput values.
// You can construct a concrete instance of `VpnsslwebPortalSplitTunnelingRoutingAddressArrayInput` via:
//
//	VpnsslwebPortalSplitTunnelingRoutingAddressArray{ VpnsslwebPortalSplitTunnelingRoutingAddressArgs{...} }
type VpnsslwebPortalSplitTunnelingRoutingAddressArrayInput interface {
	pulumi.Input

	ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput
	ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutputWithContext(context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput
}

type VpnsslwebPortalSplitTunnelingRoutingAddressArray []VpnsslwebPortalSplitTunnelingRoutingAddressInput

func (VpnsslwebPortalSplitTunnelingRoutingAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalSplitTunnelingRoutingAddress)(nil)).Elem()
}

func (i VpnsslwebPortalSplitTunnelingRoutingAddressArray) ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput {
	return i.ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutputWithContext(context.Background())
}

func (i VpnsslwebPortalSplitTunnelingRoutingAddressArray) ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutputWithContext(ctx context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput)
}

type VpnsslwebPortalSplitTunnelingRoutingAddressOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalSplitTunnelingRoutingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebPortalSplitTunnelingRoutingAddress)(nil)).Elem()
}

func (o VpnsslwebPortalSplitTunnelingRoutingAddressOutput) ToVpnsslwebPortalSplitTunnelingRoutingAddressOutput() VpnsslwebPortalSplitTunnelingRoutingAddressOutput {
	return o
}

func (o VpnsslwebPortalSplitTunnelingRoutingAddressOutput) ToVpnsslwebPortalSplitTunnelingRoutingAddressOutputWithContext(ctx context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressOutput {
	return o
}

// Address name.
func (o VpnsslwebPortalSplitTunnelingRoutingAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebPortalSplitTunnelingRoutingAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebPortalSplitTunnelingRoutingAddress)(nil)).Elem()
}

func (o VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput) ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput() VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput {
	return o
}

func (o VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput) ToVpnsslwebPortalSplitTunnelingRoutingAddressArrayOutputWithContext(ctx context.Context) VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput {
	return o
}

func (o VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput) Index(i pulumi.IntInput) VpnsslwebPortalSplitTunnelingRoutingAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebPortalSplitTunnelingRoutingAddress {
		return vs[0].([]VpnsslwebPortalSplitTunnelingRoutingAddress)[vs[1].(int)]
	}).(VpnsslwebPortalSplitTunnelingRoutingAddressOutput)
}

type VpnsslwebUserbookmarkBookmark struct {
	// Additional parameters.
	AdditionalParams *string `pulumi:"additionalParams"`
	// Application type.
	Apptype *string `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth *string `pulumi:"colorDepth"`
	// Description.
	Description *string `pulumi:"description"`
	// Login domain.
	Domain *string `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder *string `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas []VpnsslwebUserbookmarkBookmarkFormData `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height *int `pulumi:"height"`
	// Host name/IP parameter.
	Host *string `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout *string `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort *int `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo *string `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword *string `pulumi:"logonPassword"`
	// Logon user.
	LogonUser *string `pulumi:"logonUser"`
	// Bookmark name.
	Name *string `pulumi:"name"`
	// Remote port.
	Port *int `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob *string `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId *int `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort *int `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin *string `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security *string `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId *string `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout *string `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow *string `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso *string `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential *string `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce *string `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword *string `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername *string `pulumi:"ssoUsername"`
	// URL parameter.
	Url *string `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width *int `pulumi:"width"`
}

// VpnsslwebUserbookmarkBookmarkInput is an input type that accepts VpnsslwebUserbookmarkBookmarkArgs and VpnsslwebUserbookmarkBookmarkOutput values.
// You can construct a concrete instance of `VpnsslwebUserbookmarkBookmarkInput` via:
//
//	VpnsslwebUserbookmarkBookmarkArgs{...}
type VpnsslwebUserbookmarkBookmarkInput interface {
	pulumi.Input

	ToVpnsslwebUserbookmarkBookmarkOutput() VpnsslwebUserbookmarkBookmarkOutput
	ToVpnsslwebUserbookmarkBookmarkOutputWithContext(context.Context) VpnsslwebUserbookmarkBookmarkOutput
}

type VpnsslwebUserbookmarkBookmarkArgs struct {
	// Additional parameters.
	AdditionalParams pulumi.StringPtrInput `pulumi:"additionalParams"`
	// Application type.
	Apptype pulumi.StringPtrInput `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth pulumi.StringPtrInput `pulumi:"colorDepth"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Login domain.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas VpnsslwebUserbookmarkBookmarkFormDataArrayInput `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Host name/IP parameter.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout pulumi.StringPtrInput `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort pulumi.IntPtrInput `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo pulumi.StringPtrInput `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword pulumi.StringPtrInput `pulumi:"logonPassword"`
	// Logon user.
	LogonUser pulumi.StringPtrInput `pulumi:"logonUser"`
	// Bookmark name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Remote port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob pulumi.StringPtrInput `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId pulumi.IntPtrInput `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort pulumi.IntPtrInput `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin pulumi.StringPtrInput `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security pulumi.StringPtrInput `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId pulumi.StringPtrInput `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout pulumi.StringPtrInput `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow pulumi.StringPtrInput `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso pulumi.StringPtrInput `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential pulumi.StringPtrInput `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce pulumi.StringPtrInput `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword pulumi.StringPtrInput `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername pulumi.StringPtrInput `pulumi:"ssoUsername"`
	// URL parameter.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (VpnsslwebUserbookmarkBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUserbookmarkBookmark)(nil)).Elem()
}

func (i VpnsslwebUserbookmarkBookmarkArgs) ToVpnsslwebUserbookmarkBookmarkOutput() VpnsslwebUserbookmarkBookmarkOutput {
	return i.ToVpnsslwebUserbookmarkBookmarkOutputWithContext(context.Background())
}

func (i VpnsslwebUserbookmarkBookmarkArgs) ToVpnsslwebUserbookmarkBookmarkOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUserbookmarkBookmarkOutput)
}

// VpnsslwebUserbookmarkBookmarkArrayInput is an input type that accepts VpnsslwebUserbookmarkBookmarkArray and VpnsslwebUserbookmarkBookmarkArrayOutput values.
// You can construct a concrete instance of `VpnsslwebUserbookmarkBookmarkArrayInput` via:
//
//	VpnsslwebUserbookmarkBookmarkArray{ VpnsslwebUserbookmarkBookmarkArgs{...} }
type VpnsslwebUserbookmarkBookmarkArrayInput interface {
	pulumi.Input

	ToVpnsslwebUserbookmarkBookmarkArrayOutput() VpnsslwebUserbookmarkBookmarkArrayOutput
	ToVpnsslwebUserbookmarkBookmarkArrayOutputWithContext(context.Context) VpnsslwebUserbookmarkBookmarkArrayOutput
}

type VpnsslwebUserbookmarkBookmarkArray []VpnsslwebUserbookmarkBookmarkInput

func (VpnsslwebUserbookmarkBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUserbookmarkBookmark)(nil)).Elem()
}

func (i VpnsslwebUserbookmarkBookmarkArray) ToVpnsslwebUserbookmarkBookmarkArrayOutput() VpnsslwebUserbookmarkBookmarkArrayOutput {
	return i.ToVpnsslwebUserbookmarkBookmarkArrayOutputWithContext(context.Background())
}

func (i VpnsslwebUserbookmarkBookmarkArray) ToVpnsslwebUserbookmarkBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUserbookmarkBookmarkArrayOutput)
}

type VpnsslwebUserbookmarkBookmarkOutput struct{ *pulumi.OutputState }

func (VpnsslwebUserbookmarkBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUserbookmarkBookmark)(nil)).Elem()
}

func (o VpnsslwebUserbookmarkBookmarkOutput) ToVpnsslwebUserbookmarkBookmarkOutput() VpnsslwebUserbookmarkBookmarkOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkOutput) ToVpnsslwebUserbookmarkBookmarkOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkOutput {
	return o
}

// Additional parameters.
func (o VpnsslwebUserbookmarkBookmarkOutput) AdditionalParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.AdditionalParams }).(pulumi.StringPtrOutput)
}

// Application type.
func (o VpnsslwebUserbookmarkBookmarkOutput) Apptype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Apptype }).(pulumi.StringPtrOutput)
}

// Color depth per pixel. Valid values: `32`, `16`, `8`.
func (o VpnsslwebUserbookmarkBookmarkOutput) ColorDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.ColorDepth }).(pulumi.StringPtrOutput)
}

// Description.
func (o VpnsslwebUserbookmarkBookmarkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Login domain.
func (o VpnsslwebUserbookmarkBookmarkOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Network shared file folder parameter.
func (o VpnsslwebUserbookmarkBookmarkOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// Form data. The structure of `formData` block is documented below.
func (o VpnsslwebUserbookmarkBookmarkOutput) FormDatas() VpnsslwebUserbookmarkBookmarkFormDataArrayOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) []VpnsslwebUserbookmarkBookmarkFormData { return v.FormDatas }).(VpnsslwebUserbookmarkBookmarkFormDataArrayOutput)
}

// Screen height (range from 480 - 65535, default = 768).
func (o VpnsslwebUserbookmarkBookmarkOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Host name/IP parameter.
func (o VpnsslwebUserbookmarkBookmarkOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Keyboard layout.
func (o VpnsslwebUserbookmarkBookmarkOutput) KeyboardLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.KeyboardLayout }).(pulumi.StringPtrOutput)
}

// Listening port (0 - 65535).
func (o VpnsslwebUserbookmarkBookmarkOutput) ListeningPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.ListeningPort }).(pulumi.IntPtrOutput)
}

// The load balancing information or cookie which should be provided to the connection broker.
func (o VpnsslwebUserbookmarkBookmarkOutput) LoadBalancingInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.LoadBalancingInfo }).(pulumi.StringPtrOutput)
}

// Logon password.
func (o VpnsslwebUserbookmarkBookmarkOutput) LogonPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.LogonPassword }).(pulumi.StringPtrOutput)
}

// Logon user.
func (o VpnsslwebUserbookmarkBookmarkOutput) LogonUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.LogonUser }).(pulumi.StringPtrOutput)
}

// Bookmark name.
func (o VpnsslwebUserbookmarkBookmarkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Remote port.
func (o VpnsslwebUserbookmarkBookmarkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// An arbitrary string which identifies the RDP source.
func (o VpnsslwebUserbookmarkBookmarkOutput) PreconnectionBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.PreconnectionBlob }).(pulumi.StringPtrOutput)
}

// The numeric ID of the RDP source (0-2147483648).
func (o VpnsslwebUserbookmarkBookmarkOutput) PreconnectionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.PreconnectionId }).(pulumi.IntPtrOutput)
}

// Remote port (0 - 65535).
func (o VpnsslwebUserbookmarkBookmarkOutput) RemotePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.RemotePort }).(pulumi.IntPtrOutput)
}

// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
func (o VpnsslwebUserbookmarkBookmarkOutput) RestrictedAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.RestrictedAdmin }).(pulumi.StringPtrOutput)
}

// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
func (o VpnsslwebUserbookmarkBookmarkOutput) Security() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Security }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
func (o VpnsslwebUserbookmarkBookmarkOutput) SendPreconnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.SendPreconnectionId }).(pulumi.StringPtrOutput)
}

// Server side keyboard layout.
func (o VpnsslwebUserbookmarkBookmarkOutput) ServerLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.ServerLayout }).(pulumi.StringPtrOutput)
}

// Enable/disable showing of status window. Valid values: `enable`, `disable`.
func (o VpnsslwebUserbookmarkBookmarkOutput) ShowStatusWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.ShowStatusWindow }).(pulumi.StringPtrOutput)
}

// Single Sign-On. Valid values: `disable`, `static`, `auto`.
func (o VpnsslwebUserbookmarkBookmarkOutput) Sso() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Sso }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
func (o VpnsslwebUserbookmarkBookmarkOutput) SsoCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.SsoCredential }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
func (o VpnsslwebUserbookmarkBookmarkOutput) SsoCredentialSentOnce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.SsoCredentialSentOnce }).(pulumi.StringPtrOutput)
}

// SSO password.
func (o VpnsslwebUserbookmarkBookmarkOutput) SsoPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.SsoPassword }).(pulumi.StringPtrOutput)
}

// SSO user name.
func (o VpnsslwebUserbookmarkBookmarkOutput) SsoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.SsoUsername }).(pulumi.StringPtrOutput)
}

// URL parameter.
func (o VpnsslwebUserbookmarkBookmarkOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Screen width (range from 640 - 65535, default = 1024).
func (o VpnsslwebUserbookmarkBookmarkOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmark) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type VpnsslwebUserbookmarkBookmarkArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebUserbookmarkBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUserbookmarkBookmark)(nil)).Elem()
}

func (o VpnsslwebUserbookmarkBookmarkArrayOutput) ToVpnsslwebUserbookmarkBookmarkArrayOutput() VpnsslwebUserbookmarkBookmarkArrayOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkArrayOutput) ToVpnsslwebUserbookmarkBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkArrayOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkArrayOutput) Index(i pulumi.IntInput) VpnsslwebUserbookmarkBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebUserbookmarkBookmark {
		return vs[0].([]VpnsslwebUserbookmarkBookmark)[vs[1].(int)]
	}).(VpnsslwebUserbookmarkBookmarkOutput)
}

type VpnsslwebUserbookmarkBookmarkFormData struct {
	// Name.
	Name *string `pulumi:"name"`
	// Value.
	Value *string `pulumi:"value"`
}

// VpnsslwebUserbookmarkBookmarkFormDataInput is an input type that accepts VpnsslwebUserbookmarkBookmarkFormDataArgs and VpnsslwebUserbookmarkBookmarkFormDataOutput values.
// You can construct a concrete instance of `VpnsslwebUserbookmarkBookmarkFormDataInput` via:
//
//	VpnsslwebUserbookmarkBookmarkFormDataArgs{...}
type VpnsslwebUserbookmarkBookmarkFormDataInput interface {
	pulumi.Input

	ToVpnsslwebUserbookmarkBookmarkFormDataOutput() VpnsslwebUserbookmarkBookmarkFormDataOutput
	ToVpnsslwebUserbookmarkBookmarkFormDataOutputWithContext(context.Context) VpnsslwebUserbookmarkBookmarkFormDataOutput
}

type VpnsslwebUserbookmarkBookmarkFormDataArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VpnsslwebUserbookmarkBookmarkFormDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebUserbookmarkBookmarkFormDataArgs) ToVpnsslwebUserbookmarkBookmarkFormDataOutput() VpnsslwebUserbookmarkBookmarkFormDataOutput {
	return i.ToVpnsslwebUserbookmarkBookmarkFormDataOutputWithContext(context.Background())
}

func (i VpnsslwebUserbookmarkBookmarkFormDataArgs) ToVpnsslwebUserbookmarkBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkFormDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUserbookmarkBookmarkFormDataOutput)
}

// VpnsslwebUserbookmarkBookmarkFormDataArrayInput is an input type that accepts VpnsslwebUserbookmarkBookmarkFormDataArray and VpnsslwebUserbookmarkBookmarkFormDataArrayOutput values.
// You can construct a concrete instance of `VpnsslwebUserbookmarkBookmarkFormDataArrayInput` via:
//
//	VpnsslwebUserbookmarkBookmarkFormDataArray{ VpnsslwebUserbookmarkBookmarkFormDataArgs{...} }
type VpnsslwebUserbookmarkBookmarkFormDataArrayInput interface {
	pulumi.Input

	ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutput() VpnsslwebUserbookmarkBookmarkFormDataArrayOutput
	ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutputWithContext(context.Context) VpnsslwebUserbookmarkBookmarkFormDataArrayOutput
}

type VpnsslwebUserbookmarkBookmarkFormDataArray []VpnsslwebUserbookmarkBookmarkFormDataInput

func (VpnsslwebUserbookmarkBookmarkFormDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUserbookmarkBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebUserbookmarkBookmarkFormDataArray) ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutput() VpnsslwebUserbookmarkBookmarkFormDataArrayOutput {
	return i.ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutputWithContext(context.Background())
}

func (i VpnsslwebUserbookmarkBookmarkFormDataArray) ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkFormDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUserbookmarkBookmarkFormDataArrayOutput)
}

type VpnsslwebUserbookmarkBookmarkFormDataOutput struct{ *pulumi.OutputState }

func (VpnsslwebUserbookmarkBookmarkFormDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebUserbookmarkBookmarkFormDataOutput) ToVpnsslwebUserbookmarkBookmarkFormDataOutput() VpnsslwebUserbookmarkBookmarkFormDataOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkFormDataOutput) ToVpnsslwebUserbookmarkBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkFormDataOutput {
	return o
}

// Name.
func (o VpnsslwebUserbookmarkBookmarkFormDataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmarkFormData) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o VpnsslwebUserbookmarkBookmarkFormDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUserbookmarkBookmarkFormData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VpnsslwebUserbookmarkBookmarkFormDataArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebUserbookmarkBookmarkFormDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUserbookmarkBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebUserbookmarkBookmarkFormDataArrayOutput) ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutput() VpnsslwebUserbookmarkBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkFormDataArrayOutput) ToVpnsslwebUserbookmarkBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebUserbookmarkBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebUserbookmarkBookmarkFormDataArrayOutput) Index(i pulumi.IntInput) VpnsslwebUserbookmarkBookmarkFormDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebUserbookmarkBookmarkFormData {
		return vs[0].([]VpnsslwebUserbookmarkBookmarkFormData)[vs[1].(int)]
	}).(VpnsslwebUserbookmarkBookmarkFormDataOutput)
}

type VpnsslwebUsergroupbookmarkBookmark struct {
	// Additional parameters.
	AdditionalParams *string `pulumi:"additionalParams"`
	// Application type.
	Apptype *string `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth *string `pulumi:"colorDepth"`
	// Description.
	Description *string `pulumi:"description"`
	// Login domain.
	Domain *string `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder *string `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas []VpnsslwebUsergroupbookmarkBookmarkFormData `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height *int `pulumi:"height"`
	// Host name/IP parameter.
	Host *string `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout *string `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort *int `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo *string `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword *string `pulumi:"logonPassword"`
	// Logon user.
	LogonUser *string `pulumi:"logonUser"`
	// Bookmark name.
	Name *string `pulumi:"name"`
	// Remote port.
	Port *int `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob *string `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId *int `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort *int `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin *string `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security *string `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId *string `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout *string `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow *string `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso *string `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential *string `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce *string `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword *string `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername *string `pulumi:"ssoUsername"`
	// URL parameter.
	Url *string `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width *int `pulumi:"width"`
}

// VpnsslwebUsergroupbookmarkBookmarkInput is an input type that accepts VpnsslwebUsergroupbookmarkBookmarkArgs and VpnsslwebUsergroupbookmarkBookmarkOutput values.
// You can construct a concrete instance of `VpnsslwebUsergroupbookmarkBookmarkInput` via:
//
//	VpnsslwebUsergroupbookmarkBookmarkArgs{...}
type VpnsslwebUsergroupbookmarkBookmarkInput interface {
	pulumi.Input

	ToVpnsslwebUsergroupbookmarkBookmarkOutput() VpnsslwebUsergroupbookmarkBookmarkOutput
	ToVpnsslwebUsergroupbookmarkBookmarkOutputWithContext(context.Context) VpnsslwebUsergroupbookmarkBookmarkOutput
}

type VpnsslwebUsergroupbookmarkBookmarkArgs struct {
	// Additional parameters.
	AdditionalParams pulumi.StringPtrInput `pulumi:"additionalParams"`
	// Application type.
	Apptype pulumi.StringPtrInput `pulumi:"apptype"`
	// Color depth per pixel. Valid values: `32`, `16`, `8`.
	ColorDepth pulumi.StringPtrInput `pulumi:"colorDepth"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Login domain.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Network shared file folder parameter.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// Form data. The structure of `formData` block is documented below.
	FormDatas VpnsslwebUsergroupbookmarkBookmarkFormDataArrayInput `pulumi:"formDatas"`
	// Screen height (range from 480 - 65535, default = 768).
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Host name/IP parameter.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Keyboard layout.
	KeyboardLayout pulumi.StringPtrInput `pulumi:"keyboardLayout"`
	// Listening port (0 - 65535).
	ListeningPort pulumi.IntPtrInput `pulumi:"listeningPort"`
	// The load balancing information or cookie which should be provided to the connection broker.
	LoadBalancingInfo pulumi.StringPtrInput `pulumi:"loadBalancingInfo"`
	// Logon password.
	LogonPassword pulumi.StringPtrInput `pulumi:"logonPassword"`
	// Logon user.
	LogonUser pulumi.StringPtrInput `pulumi:"logonUser"`
	// Bookmark name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Remote port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// An arbitrary string which identifies the RDP source.
	PreconnectionBlob pulumi.StringPtrInput `pulumi:"preconnectionBlob"`
	// The numeric ID of the RDP source (0-2147483648).
	PreconnectionId pulumi.IntPtrInput `pulumi:"preconnectionId"`
	// Remote port (0 - 65535).
	RemotePort pulumi.IntPtrInput `pulumi:"remotePort"`
	// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
	RestrictedAdmin pulumi.StringPtrInput `pulumi:"restrictedAdmin"`
	// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
	Security pulumi.StringPtrInput `pulumi:"security"`
	// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
	SendPreconnectionId pulumi.StringPtrInput `pulumi:"sendPreconnectionId"`
	// Server side keyboard layout.
	ServerLayout pulumi.StringPtrInput `pulumi:"serverLayout"`
	// Enable/disable showing of status window. Valid values: `enable`, `disable`.
	ShowStatusWindow pulumi.StringPtrInput `pulumi:"showStatusWindow"`
	// Single Sign-On. Valid values: `disable`, `static`, `auto`.
	Sso pulumi.StringPtrInput `pulumi:"sso"`
	// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
	SsoCredential pulumi.StringPtrInput `pulumi:"ssoCredential"`
	// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
	SsoCredentialSentOnce pulumi.StringPtrInput `pulumi:"ssoCredentialSentOnce"`
	// SSO password.
	SsoPassword pulumi.StringPtrInput `pulumi:"ssoPassword"`
	// SSO user name.
	SsoUsername pulumi.StringPtrInput `pulumi:"ssoUsername"`
	// URL parameter.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Screen width (range from 640 - 65535, default = 1024).
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (VpnsslwebUsergroupbookmarkBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmark)(nil)).Elem()
}

func (i VpnsslwebUsergroupbookmarkBookmarkArgs) ToVpnsslwebUsergroupbookmarkBookmarkOutput() VpnsslwebUsergroupbookmarkBookmarkOutput {
	return i.ToVpnsslwebUsergroupbookmarkBookmarkOutputWithContext(context.Background())
}

func (i VpnsslwebUsergroupbookmarkBookmarkArgs) ToVpnsslwebUsergroupbookmarkBookmarkOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUsergroupbookmarkBookmarkOutput)
}

// VpnsslwebUsergroupbookmarkBookmarkArrayInput is an input type that accepts VpnsslwebUsergroupbookmarkBookmarkArray and VpnsslwebUsergroupbookmarkBookmarkArrayOutput values.
// You can construct a concrete instance of `VpnsslwebUsergroupbookmarkBookmarkArrayInput` via:
//
//	VpnsslwebUsergroupbookmarkBookmarkArray{ VpnsslwebUsergroupbookmarkBookmarkArgs{...} }
type VpnsslwebUsergroupbookmarkBookmarkArrayInput interface {
	pulumi.Input

	ToVpnsslwebUsergroupbookmarkBookmarkArrayOutput() VpnsslwebUsergroupbookmarkBookmarkArrayOutput
	ToVpnsslwebUsergroupbookmarkBookmarkArrayOutputWithContext(context.Context) VpnsslwebUsergroupbookmarkBookmarkArrayOutput
}

type VpnsslwebUsergroupbookmarkBookmarkArray []VpnsslwebUsergroupbookmarkBookmarkInput

func (VpnsslwebUsergroupbookmarkBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUsergroupbookmarkBookmark)(nil)).Elem()
}

func (i VpnsslwebUsergroupbookmarkBookmarkArray) ToVpnsslwebUsergroupbookmarkBookmarkArrayOutput() VpnsslwebUsergroupbookmarkBookmarkArrayOutput {
	return i.ToVpnsslwebUsergroupbookmarkBookmarkArrayOutputWithContext(context.Background())
}

func (i VpnsslwebUsergroupbookmarkBookmarkArray) ToVpnsslwebUsergroupbookmarkBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUsergroupbookmarkBookmarkArrayOutput)
}

type VpnsslwebUsergroupbookmarkBookmarkOutput struct{ *pulumi.OutputState }

func (VpnsslwebUsergroupbookmarkBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmark)(nil)).Elem()
}

func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ToVpnsslwebUsergroupbookmarkBookmarkOutput() VpnsslwebUsergroupbookmarkBookmarkOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ToVpnsslwebUsergroupbookmarkBookmarkOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkOutput {
	return o
}

// Additional parameters.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) AdditionalParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.AdditionalParams }).(pulumi.StringPtrOutput)
}

// Application type.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Apptype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Apptype }).(pulumi.StringPtrOutput)
}

// Color depth per pixel. Valid values: `32`, `16`, `8`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ColorDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.ColorDepth }).(pulumi.StringPtrOutput)
}

// Description.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Login domain.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Network shared file folder parameter.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// Form data. The structure of `formData` block is documented below.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) FormDatas() VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) []VpnsslwebUsergroupbookmarkBookmarkFormData {
		return v.FormDatas
	}).(VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput)
}

// Screen height (range from 480 - 65535, default = 768).
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Host name/IP parameter.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Keyboard layout.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) KeyboardLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.KeyboardLayout }).(pulumi.StringPtrOutput)
}

// Listening port (0 - 65535).
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ListeningPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.ListeningPort }).(pulumi.IntPtrOutput)
}

// The load balancing information or cookie which should be provided to the connection broker.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) LoadBalancingInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.LoadBalancingInfo }).(pulumi.StringPtrOutput)
}

// Logon password.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) LogonPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.LogonPassword }).(pulumi.StringPtrOutput)
}

// Logon user.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) LogonUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.LogonUser }).(pulumi.StringPtrOutput)
}

// Bookmark name.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Remote port.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// An arbitrary string which identifies the RDP source.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) PreconnectionBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.PreconnectionBlob }).(pulumi.StringPtrOutput)
}

// The numeric ID of the RDP source (0-2147483648).
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) PreconnectionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.PreconnectionId }).(pulumi.IntPtrOutput)
}

// Remote port (0 - 65535).
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) RemotePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.RemotePort }).(pulumi.IntPtrOutput)
}

// Enable/disable restricted admin mode for RDP. Valid values: `enable`, `disable`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) RestrictedAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.RestrictedAdmin }).(pulumi.StringPtrOutput)
}

// Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Security() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Security }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of preconnection ID. Valid values: `enable`, `disable`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) SendPreconnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.SendPreconnectionId }).(pulumi.StringPtrOutput)
}

// Server side keyboard layout.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ServerLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.ServerLayout }).(pulumi.StringPtrOutput)
}

// Enable/disable showing of status window. Valid values: `enable`, `disable`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) ShowStatusWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.ShowStatusWindow }).(pulumi.StringPtrOutput)
}

// Single Sign-On. Valid values: `disable`, `static`, `auto`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Sso() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Sso }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) SsoCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.SsoCredential }).(pulumi.StringPtrOutput)
}

// Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) SsoCredentialSentOnce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.SsoCredentialSentOnce }).(pulumi.StringPtrOutput)
}

// SSO password.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) SsoPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.SsoPassword }).(pulumi.StringPtrOutput)
}

// SSO user name.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) SsoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.SsoUsername }).(pulumi.StringPtrOutput)
}

// URL parameter.
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Screen width (range from 640 - 65535, default = 1024).
func (o VpnsslwebUsergroupbookmarkBookmarkOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmark) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type VpnsslwebUsergroupbookmarkBookmarkArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebUsergroupbookmarkBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUsergroupbookmarkBookmark)(nil)).Elem()
}

func (o VpnsslwebUsergroupbookmarkBookmarkArrayOutput) ToVpnsslwebUsergroupbookmarkBookmarkArrayOutput() VpnsslwebUsergroupbookmarkBookmarkArrayOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkArrayOutput) ToVpnsslwebUsergroupbookmarkBookmarkArrayOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkArrayOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkArrayOutput) Index(i pulumi.IntInput) VpnsslwebUsergroupbookmarkBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebUsergroupbookmarkBookmark {
		return vs[0].([]VpnsslwebUsergroupbookmarkBookmark)[vs[1].(int)]
	}).(VpnsslwebUsergroupbookmarkBookmarkOutput)
}

type VpnsslwebUsergroupbookmarkBookmarkFormData struct {
	// Name.
	Name *string `pulumi:"name"`
	// Value.
	Value *string `pulumi:"value"`
}

// VpnsslwebUsergroupbookmarkBookmarkFormDataInput is an input type that accepts VpnsslwebUsergroupbookmarkBookmarkFormDataArgs and VpnsslwebUsergroupbookmarkBookmarkFormDataOutput values.
// You can construct a concrete instance of `VpnsslwebUsergroupbookmarkBookmarkFormDataInput` via:
//
//	VpnsslwebUsergroupbookmarkBookmarkFormDataArgs{...}
type VpnsslwebUsergroupbookmarkBookmarkFormDataInput interface {
	pulumi.Input

	ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataOutput
	ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutputWithContext(context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataOutput
}

type VpnsslwebUsergroupbookmarkBookmarkFormDataArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VpnsslwebUsergroupbookmarkBookmarkFormDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebUsergroupbookmarkBookmarkFormDataArgs) ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataOutput {
	return i.ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutputWithContext(context.Background())
}

func (i VpnsslwebUsergroupbookmarkBookmarkFormDataArgs) ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUsergroupbookmarkBookmarkFormDataOutput)
}

// VpnsslwebUsergroupbookmarkBookmarkFormDataArrayInput is an input type that accepts VpnsslwebUsergroupbookmarkBookmarkFormDataArray and VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput values.
// You can construct a concrete instance of `VpnsslwebUsergroupbookmarkBookmarkFormDataArrayInput` via:
//
//	VpnsslwebUsergroupbookmarkBookmarkFormDataArray{ VpnsslwebUsergroupbookmarkBookmarkFormDataArgs{...} }
type VpnsslwebUsergroupbookmarkBookmarkFormDataArrayInput interface {
	pulumi.Input

	ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput
	ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutputWithContext(context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput
}

type VpnsslwebUsergroupbookmarkBookmarkFormDataArray []VpnsslwebUsergroupbookmarkBookmarkFormDataInput

func (VpnsslwebUsergroupbookmarkBookmarkFormDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUsergroupbookmarkBookmarkFormData)(nil)).Elem()
}

func (i VpnsslwebUsergroupbookmarkBookmarkFormDataArray) ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput {
	return i.ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutputWithContext(context.Background())
}

func (i VpnsslwebUsergroupbookmarkBookmarkFormDataArray) ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput)
}

type VpnsslwebUsergroupbookmarkBookmarkFormDataOutput struct{ *pulumi.OutputState }

func (VpnsslwebUsergroupbookmarkBookmarkFormDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebUsergroupbookmarkBookmarkFormDataOutput) ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkFormDataOutput) ToVpnsslwebUsergroupbookmarkBookmarkFormDataOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataOutput {
	return o
}

// Name.
func (o VpnsslwebUsergroupbookmarkBookmarkFormDataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmarkFormData) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o VpnsslwebUsergroupbookmarkBookmarkFormDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnsslwebUsergroupbookmarkBookmarkFormData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnsslwebUsergroupbookmarkBookmarkFormData)(nil)).Elem()
}

func (o VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput) ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput() VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput) ToVpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutputWithContext(ctx context.Context) VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput {
	return o
}

func (o VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput) Index(i pulumi.IntInput) VpnsslwebUsergroupbookmarkBookmarkFormDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnsslwebUsergroupbookmarkBookmarkFormData {
		return vs[0].([]VpnsslwebUsergroupbookmarkBookmarkFormData)[vs[1].(int)]
	}).(VpnsslwebUsergroupbookmarkBookmarkFormDataOutput)
}

type WafProfileAddressList struct {
	// Blocked address. The structure of `blockedAddress` block is documented below.
	BlockedAddresses []WafProfileAddressListBlockedAddress `pulumi:"blockedAddresses"`
	// Enable/disable logging on blocked addresses. Valid values: `enable`, `disable`.
	BlockedLog *string `pulumi:"blockedLog"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Trusted address. The structure of `trustedAddress` block is documented below.
	TrustedAddresses []WafProfileAddressListTrustedAddress `pulumi:"trustedAddresses"`
}

// WafProfileAddressListInput is an input type that accepts WafProfileAddressListArgs and WafProfileAddressListOutput values.
// You can construct a concrete instance of `WafProfileAddressListInput` via:
//
//	WafProfileAddressListArgs{...}
type WafProfileAddressListInput interface {
	pulumi.Input

	ToWafProfileAddressListOutput() WafProfileAddressListOutput
	ToWafProfileAddressListOutputWithContext(context.Context) WafProfileAddressListOutput
}

type WafProfileAddressListArgs struct {
	// Blocked address. The structure of `blockedAddress` block is documented below.
	BlockedAddresses WafProfileAddressListBlockedAddressArrayInput `pulumi:"blockedAddresses"`
	// Enable/disable logging on blocked addresses. Valid values: `enable`, `disable`.
	BlockedLog pulumi.StringPtrInput `pulumi:"blockedLog"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Trusted address. The structure of `trustedAddress` block is documented below.
	TrustedAddresses WafProfileAddressListTrustedAddressArrayInput `pulumi:"trustedAddresses"`
}

func (WafProfileAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressList)(nil)).Elem()
}

func (i WafProfileAddressListArgs) ToWafProfileAddressListOutput() WafProfileAddressListOutput {
	return i.ToWafProfileAddressListOutputWithContext(context.Background())
}

func (i WafProfileAddressListArgs) ToWafProfileAddressListOutputWithContext(ctx context.Context) WafProfileAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListOutput)
}

func (i WafProfileAddressListArgs) ToWafProfileAddressListPtrOutput() WafProfileAddressListPtrOutput {
	return i.ToWafProfileAddressListPtrOutputWithContext(context.Background())
}

func (i WafProfileAddressListArgs) ToWafProfileAddressListPtrOutputWithContext(ctx context.Context) WafProfileAddressListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListOutput).ToWafProfileAddressListPtrOutputWithContext(ctx)
}

// WafProfileAddressListPtrInput is an input type that accepts WafProfileAddressListArgs, WafProfileAddressListPtr and WafProfileAddressListPtrOutput values.
// You can construct a concrete instance of `WafProfileAddressListPtrInput` via:
//
//	        WafProfileAddressListArgs{...}
//
//	or:
//
//	        nil
type WafProfileAddressListPtrInput interface {
	pulumi.Input

	ToWafProfileAddressListPtrOutput() WafProfileAddressListPtrOutput
	ToWafProfileAddressListPtrOutputWithContext(context.Context) WafProfileAddressListPtrOutput
}

type wafProfileAddressListPtrType WafProfileAddressListArgs

func WafProfileAddressListPtr(v *WafProfileAddressListArgs) WafProfileAddressListPtrInput {
	return (*wafProfileAddressListPtrType)(v)
}

func (*wafProfileAddressListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileAddressList)(nil)).Elem()
}

func (i *wafProfileAddressListPtrType) ToWafProfileAddressListPtrOutput() WafProfileAddressListPtrOutput {
	return i.ToWafProfileAddressListPtrOutputWithContext(context.Background())
}

func (i *wafProfileAddressListPtrType) ToWafProfileAddressListPtrOutputWithContext(ctx context.Context) WafProfileAddressListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListPtrOutput)
}

type WafProfileAddressListOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressList)(nil)).Elem()
}

func (o WafProfileAddressListOutput) ToWafProfileAddressListOutput() WafProfileAddressListOutput {
	return o
}

func (o WafProfileAddressListOutput) ToWafProfileAddressListOutputWithContext(ctx context.Context) WafProfileAddressListOutput {
	return o
}

func (o WafProfileAddressListOutput) ToWafProfileAddressListPtrOutput() WafProfileAddressListPtrOutput {
	return o.ToWafProfileAddressListPtrOutputWithContext(context.Background())
}

func (o WafProfileAddressListOutput) ToWafProfileAddressListPtrOutputWithContext(ctx context.Context) WafProfileAddressListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileAddressList) *WafProfileAddressList {
		return &v
	}).(WafProfileAddressListPtrOutput)
}

// Blocked address. The structure of `blockedAddress` block is documented below.
func (o WafProfileAddressListOutput) BlockedAddresses() WafProfileAddressListBlockedAddressArrayOutput {
	return o.ApplyT(func(v WafProfileAddressList) []WafProfileAddressListBlockedAddress { return v.BlockedAddresses }).(WafProfileAddressListBlockedAddressArrayOutput)
}

// Enable/disable logging on blocked addresses. Valid values: `enable`, `disable`.
func (o WafProfileAddressListOutput) BlockedLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileAddressList) *string { return v.BlockedLog }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileAddressListOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileAddressList) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileAddressListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileAddressList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Trusted address. The structure of `trustedAddress` block is documented below.
func (o WafProfileAddressListOutput) TrustedAddresses() WafProfileAddressListTrustedAddressArrayOutput {
	return o.ApplyT(func(v WafProfileAddressList) []WafProfileAddressListTrustedAddress { return v.TrustedAddresses }).(WafProfileAddressListTrustedAddressArrayOutput)
}

type WafProfileAddressListPtrOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileAddressList)(nil)).Elem()
}

func (o WafProfileAddressListPtrOutput) ToWafProfileAddressListPtrOutput() WafProfileAddressListPtrOutput {
	return o
}

func (o WafProfileAddressListPtrOutput) ToWafProfileAddressListPtrOutputWithContext(ctx context.Context) WafProfileAddressListPtrOutput {
	return o
}

func (o WafProfileAddressListPtrOutput) Elem() WafProfileAddressListOutput {
	return o.ApplyT(func(v *WafProfileAddressList) WafProfileAddressList {
		if v != nil {
			return *v
		}
		var ret WafProfileAddressList
		return ret
	}).(WafProfileAddressListOutput)
}

// Blocked address. The structure of `blockedAddress` block is documented below.
func (o WafProfileAddressListPtrOutput) BlockedAddresses() WafProfileAddressListBlockedAddressArrayOutput {
	return o.ApplyT(func(v *WafProfileAddressList) []WafProfileAddressListBlockedAddress {
		if v == nil {
			return nil
		}
		return v.BlockedAddresses
	}).(WafProfileAddressListBlockedAddressArrayOutput)
}

// Enable/disable logging on blocked addresses. Valid values: `enable`, `disable`.
func (o WafProfileAddressListPtrOutput) BlockedLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileAddressList) *string {
		if v == nil {
			return nil
		}
		return v.BlockedLog
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileAddressListPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileAddressList) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileAddressListPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileAddressList) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Trusted address. The structure of `trustedAddress` block is documented below.
func (o WafProfileAddressListPtrOutput) TrustedAddresses() WafProfileAddressListTrustedAddressArrayOutput {
	return o.ApplyT(func(v *WafProfileAddressList) []WafProfileAddressListTrustedAddress {
		if v == nil {
			return nil
		}
		return v.TrustedAddresses
	}).(WafProfileAddressListTrustedAddressArrayOutput)
}

type WafProfileAddressListBlockedAddress struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WafProfileAddressListBlockedAddressInput is an input type that accepts WafProfileAddressListBlockedAddressArgs and WafProfileAddressListBlockedAddressOutput values.
// You can construct a concrete instance of `WafProfileAddressListBlockedAddressInput` via:
//
//	WafProfileAddressListBlockedAddressArgs{...}
type WafProfileAddressListBlockedAddressInput interface {
	pulumi.Input

	ToWafProfileAddressListBlockedAddressOutput() WafProfileAddressListBlockedAddressOutput
	ToWafProfileAddressListBlockedAddressOutputWithContext(context.Context) WafProfileAddressListBlockedAddressOutput
}

type WafProfileAddressListBlockedAddressArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WafProfileAddressListBlockedAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressListBlockedAddress)(nil)).Elem()
}

func (i WafProfileAddressListBlockedAddressArgs) ToWafProfileAddressListBlockedAddressOutput() WafProfileAddressListBlockedAddressOutput {
	return i.ToWafProfileAddressListBlockedAddressOutputWithContext(context.Background())
}

func (i WafProfileAddressListBlockedAddressArgs) ToWafProfileAddressListBlockedAddressOutputWithContext(ctx context.Context) WafProfileAddressListBlockedAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListBlockedAddressOutput)
}

// WafProfileAddressListBlockedAddressArrayInput is an input type that accepts WafProfileAddressListBlockedAddressArray and WafProfileAddressListBlockedAddressArrayOutput values.
// You can construct a concrete instance of `WafProfileAddressListBlockedAddressArrayInput` via:
//
//	WafProfileAddressListBlockedAddressArray{ WafProfileAddressListBlockedAddressArgs{...} }
type WafProfileAddressListBlockedAddressArrayInput interface {
	pulumi.Input

	ToWafProfileAddressListBlockedAddressArrayOutput() WafProfileAddressListBlockedAddressArrayOutput
	ToWafProfileAddressListBlockedAddressArrayOutputWithContext(context.Context) WafProfileAddressListBlockedAddressArrayOutput
}

type WafProfileAddressListBlockedAddressArray []WafProfileAddressListBlockedAddressInput

func (WafProfileAddressListBlockedAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileAddressListBlockedAddress)(nil)).Elem()
}

func (i WafProfileAddressListBlockedAddressArray) ToWafProfileAddressListBlockedAddressArrayOutput() WafProfileAddressListBlockedAddressArrayOutput {
	return i.ToWafProfileAddressListBlockedAddressArrayOutputWithContext(context.Background())
}

func (i WafProfileAddressListBlockedAddressArray) ToWafProfileAddressListBlockedAddressArrayOutputWithContext(ctx context.Context) WafProfileAddressListBlockedAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListBlockedAddressArrayOutput)
}

type WafProfileAddressListBlockedAddressOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListBlockedAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressListBlockedAddress)(nil)).Elem()
}

func (o WafProfileAddressListBlockedAddressOutput) ToWafProfileAddressListBlockedAddressOutput() WafProfileAddressListBlockedAddressOutput {
	return o
}

func (o WafProfileAddressListBlockedAddressOutput) ToWafProfileAddressListBlockedAddressOutputWithContext(ctx context.Context) WafProfileAddressListBlockedAddressOutput {
	return o
}

// Address name.
func (o WafProfileAddressListBlockedAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileAddressListBlockedAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WafProfileAddressListBlockedAddressArrayOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListBlockedAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileAddressListBlockedAddress)(nil)).Elem()
}

func (o WafProfileAddressListBlockedAddressArrayOutput) ToWafProfileAddressListBlockedAddressArrayOutput() WafProfileAddressListBlockedAddressArrayOutput {
	return o
}

func (o WafProfileAddressListBlockedAddressArrayOutput) ToWafProfileAddressListBlockedAddressArrayOutputWithContext(ctx context.Context) WafProfileAddressListBlockedAddressArrayOutput {
	return o
}

func (o WafProfileAddressListBlockedAddressArrayOutput) Index(i pulumi.IntInput) WafProfileAddressListBlockedAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileAddressListBlockedAddress {
		return vs[0].([]WafProfileAddressListBlockedAddress)[vs[1].(int)]
	}).(WafProfileAddressListBlockedAddressOutput)
}

type WafProfileAddressListTrustedAddress struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WafProfileAddressListTrustedAddressInput is an input type that accepts WafProfileAddressListTrustedAddressArgs and WafProfileAddressListTrustedAddressOutput values.
// You can construct a concrete instance of `WafProfileAddressListTrustedAddressInput` via:
//
//	WafProfileAddressListTrustedAddressArgs{...}
type WafProfileAddressListTrustedAddressInput interface {
	pulumi.Input

	ToWafProfileAddressListTrustedAddressOutput() WafProfileAddressListTrustedAddressOutput
	ToWafProfileAddressListTrustedAddressOutputWithContext(context.Context) WafProfileAddressListTrustedAddressOutput
}

type WafProfileAddressListTrustedAddressArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WafProfileAddressListTrustedAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressListTrustedAddress)(nil)).Elem()
}

func (i WafProfileAddressListTrustedAddressArgs) ToWafProfileAddressListTrustedAddressOutput() WafProfileAddressListTrustedAddressOutput {
	return i.ToWafProfileAddressListTrustedAddressOutputWithContext(context.Background())
}

func (i WafProfileAddressListTrustedAddressArgs) ToWafProfileAddressListTrustedAddressOutputWithContext(ctx context.Context) WafProfileAddressListTrustedAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListTrustedAddressOutput)
}

// WafProfileAddressListTrustedAddressArrayInput is an input type that accepts WafProfileAddressListTrustedAddressArray and WafProfileAddressListTrustedAddressArrayOutput values.
// You can construct a concrete instance of `WafProfileAddressListTrustedAddressArrayInput` via:
//
//	WafProfileAddressListTrustedAddressArray{ WafProfileAddressListTrustedAddressArgs{...} }
type WafProfileAddressListTrustedAddressArrayInput interface {
	pulumi.Input

	ToWafProfileAddressListTrustedAddressArrayOutput() WafProfileAddressListTrustedAddressArrayOutput
	ToWafProfileAddressListTrustedAddressArrayOutputWithContext(context.Context) WafProfileAddressListTrustedAddressArrayOutput
}

type WafProfileAddressListTrustedAddressArray []WafProfileAddressListTrustedAddressInput

func (WafProfileAddressListTrustedAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileAddressListTrustedAddress)(nil)).Elem()
}

func (i WafProfileAddressListTrustedAddressArray) ToWafProfileAddressListTrustedAddressArrayOutput() WafProfileAddressListTrustedAddressArrayOutput {
	return i.ToWafProfileAddressListTrustedAddressArrayOutputWithContext(context.Background())
}

func (i WafProfileAddressListTrustedAddressArray) ToWafProfileAddressListTrustedAddressArrayOutputWithContext(ctx context.Context) WafProfileAddressListTrustedAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileAddressListTrustedAddressArrayOutput)
}

type WafProfileAddressListTrustedAddressOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListTrustedAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileAddressListTrustedAddress)(nil)).Elem()
}

func (o WafProfileAddressListTrustedAddressOutput) ToWafProfileAddressListTrustedAddressOutput() WafProfileAddressListTrustedAddressOutput {
	return o
}

func (o WafProfileAddressListTrustedAddressOutput) ToWafProfileAddressListTrustedAddressOutputWithContext(ctx context.Context) WafProfileAddressListTrustedAddressOutput {
	return o
}

// Address name.
func (o WafProfileAddressListTrustedAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileAddressListTrustedAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WafProfileAddressListTrustedAddressArrayOutput struct{ *pulumi.OutputState }

func (WafProfileAddressListTrustedAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileAddressListTrustedAddress)(nil)).Elem()
}

func (o WafProfileAddressListTrustedAddressArrayOutput) ToWafProfileAddressListTrustedAddressArrayOutput() WafProfileAddressListTrustedAddressArrayOutput {
	return o
}

func (o WafProfileAddressListTrustedAddressArrayOutput) ToWafProfileAddressListTrustedAddressArrayOutputWithContext(ctx context.Context) WafProfileAddressListTrustedAddressArrayOutput {
	return o
}

func (o WafProfileAddressListTrustedAddressArrayOutput) Index(i pulumi.IntInput) WafProfileAddressListTrustedAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileAddressListTrustedAddress {
		return vs[0].([]WafProfileAddressListTrustedAddress)[vs[1].(int)]
	}).(WafProfileAddressListTrustedAddressOutput)
}

type WafProfileConstraint struct {
	// HTTP content length in request. The structure of `contentLength` block is documented below.
	ContentLength *WafProfileConstraintContentLength `pulumi:"contentLength"`
	// HTTP constraint exception. The structure of `exception` block is documented below.
	Exceptions []WafProfileConstraintException `pulumi:"exceptions"`
	// HTTP header length in request. The structure of `headerLength` block is documented below.
	HeaderLength *WafProfileConstraintHeaderLength `pulumi:"headerLength"`
	// Enable/disable hostname check. The structure of `hostname` block is documented below.
	Hostname *WafProfileConstraintHostname `pulumi:"hostname"`
	// HTTP line length in request. The structure of `lineLength` block is documented below.
	LineLength *WafProfileConstraintLineLength `pulumi:"lineLength"`
	// Enable/disable malformed HTTP request check. The structure of `malformed` block is documented below.
	Malformed *WafProfileConstraintMalformed `pulumi:"malformed"`
	// Maximum number of cookies in HTTP request. The structure of `maxCookie` block is documented below.
	MaxCookie *WafProfileConstraintMaxCookie `pulumi:"maxCookie"`
	// Maximum number of HTTP header line. The structure of `maxHeaderLine` block is documented below.
	MaxHeaderLine *WafProfileConstraintMaxHeaderLine `pulumi:"maxHeaderLine"`
	// Maximum number of range segments in HTTP range line. The structure of `maxRangeSegment` block is documented below.
	MaxRangeSegment *WafProfileConstraintMaxRangeSegment `pulumi:"maxRangeSegment"`
	// Maximum number of parameters in URL. The structure of `maxUrlParam` block is documented below.
	MaxUrlParam *WafProfileConstraintMaxUrlParam `pulumi:"maxUrlParam"`
	// Enable/disable HTTP method check. The structure of `method` block is documented below.
	Method *WafProfileConstraintMethod `pulumi:"method"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body. The structure of `paramLength` block is documented below.
	ParamLength *WafProfileConstraintParamLength `pulumi:"paramLength"`
	// Maximum length of parameter in URL. The structure of `urlParamLength` block is documented below.
	UrlParamLength *WafProfileConstraintUrlParamLength `pulumi:"urlParamLength"`
	// Enable/disable HTTP version check. The structure of `version` block is documented below.
	Version *WafProfileConstraintVersion `pulumi:"version"`
}

// WafProfileConstraintInput is an input type that accepts WafProfileConstraintArgs and WafProfileConstraintOutput values.
// You can construct a concrete instance of `WafProfileConstraintInput` via:
//
//	WafProfileConstraintArgs{...}
type WafProfileConstraintInput interface {
	pulumi.Input

	ToWafProfileConstraintOutput() WafProfileConstraintOutput
	ToWafProfileConstraintOutputWithContext(context.Context) WafProfileConstraintOutput
}

type WafProfileConstraintArgs struct {
	// HTTP content length in request. The structure of `contentLength` block is documented below.
	ContentLength WafProfileConstraintContentLengthPtrInput `pulumi:"contentLength"`
	// HTTP constraint exception. The structure of `exception` block is documented below.
	Exceptions WafProfileConstraintExceptionArrayInput `pulumi:"exceptions"`
	// HTTP header length in request. The structure of `headerLength` block is documented below.
	HeaderLength WafProfileConstraintHeaderLengthPtrInput `pulumi:"headerLength"`
	// Enable/disable hostname check. The structure of `hostname` block is documented below.
	Hostname WafProfileConstraintHostnamePtrInput `pulumi:"hostname"`
	// HTTP line length in request. The structure of `lineLength` block is documented below.
	LineLength WafProfileConstraintLineLengthPtrInput `pulumi:"lineLength"`
	// Enable/disable malformed HTTP request check. The structure of `malformed` block is documented below.
	Malformed WafProfileConstraintMalformedPtrInput `pulumi:"malformed"`
	// Maximum number of cookies in HTTP request. The structure of `maxCookie` block is documented below.
	MaxCookie WafProfileConstraintMaxCookiePtrInput `pulumi:"maxCookie"`
	// Maximum number of HTTP header line. The structure of `maxHeaderLine` block is documented below.
	MaxHeaderLine WafProfileConstraintMaxHeaderLinePtrInput `pulumi:"maxHeaderLine"`
	// Maximum number of range segments in HTTP range line. The structure of `maxRangeSegment` block is documented below.
	MaxRangeSegment WafProfileConstraintMaxRangeSegmentPtrInput `pulumi:"maxRangeSegment"`
	// Maximum number of parameters in URL. The structure of `maxUrlParam` block is documented below.
	MaxUrlParam WafProfileConstraintMaxUrlParamPtrInput `pulumi:"maxUrlParam"`
	// Enable/disable HTTP method check. The structure of `method` block is documented below.
	Method WafProfileConstraintMethodPtrInput `pulumi:"method"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body. The structure of `paramLength` block is documented below.
	ParamLength WafProfileConstraintParamLengthPtrInput `pulumi:"paramLength"`
	// Maximum length of parameter in URL. The structure of `urlParamLength` block is documented below.
	UrlParamLength WafProfileConstraintUrlParamLengthPtrInput `pulumi:"urlParamLength"`
	// Enable/disable HTTP version check. The structure of `version` block is documented below.
	Version WafProfileConstraintVersionPtrInput `pulumi:"version"`
}

func (WafProfileConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraint)(nil)).Elem()
}

func (i WafProfileConstraintArgs) ToWafProfileConstraintOutput() WafProfileConstraintOutput {
	return i.ToWafProfileConstraintOutputWithContext(context.Background())
}

func (i WafProfileConstraintArgs) ToWafProfileConstraintOutputWithContext(ctx context.Context) WafProfileConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintOutput)
}

func (i WafProfileConstraintArgs) ToWafProfileConstraintPtrOutput() WafProfileConstraintPtrOutput {
	return i.ToWafProfileConstraintPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintArgs) ToWafProfileConstraintPtrOutputWithContext(ctx context.Context) WafProfileConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintOutput).ToWafProfileConstraintPtrOutputWithContext(ctx)
}

// WafProfileConstraintPtrInput is an input type that accepts WafProfileConstraintArgs, WafProfileConstraintPtr and WafProfileConstraintPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintPtrInput` via:
//
//	        WafProfileConstraintArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintPtrOutput() WafProfileConstraintPtrOutput
	ToWafProfileConstraintPtrOutputWithContext(context.Context) WafProfileConstraintPtrOutput
}

type wafProfileConstraintPtrType WafProfileConstraintArgs

func WafProfileConstraintPtr(v *WafProfileConstraintArgs) WafProfileConstraintPtrInput {
	return (*wafProfileConstraintPtrType)(v)
}

func (*wafProfileConstraintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraint)(nil)).Elem()
}

func (i *wafProfileConstraintPtrType) ToWafProfileConstraintPtrOutput() WafProfileConstraintPtrOutput {
	return i.ToWafProfileConstraintPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintPtrType) ToWafProfileConstraintPtrOutputWithContext(ctx context.Context) WafProfileConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintPtrOutput)
}

type WafProfileConstraintOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraint)(nil)).Elem()
}

func (o WafProfileConstraintOutput) ToWafProfileConstraintOutput() WafProfileConstraintOutput {
	return o
}

func (o WafProfileConstraintOutput) ToWafProfileConstraintOutputWithContext(ctx context.Context) WafProfileConstraintOutput {
	return o
}

func (o WafProfileConstraintOutput) ToWafProfileConstraintPtrOutput() WafProfileConstraintPtrOutput {
	return o.ToWafProfileConstraintPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintOutput) ToWafProfileConstraintPtrOutputWithContext(ctx context.Context) WafProfileConstraintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraint) *WafProfileConstraint {
		return &v
	}).(WafProfileConstraintPtrOutput)
}

// HTTP content length in request. The structure of `contentLength` block is documented below.
func (o WafProfileConstraintOutput) ContentLength() WafProfileConstraintContentLengthPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintContentLength { return v.ContentLength }).(WafProfileConstraintContentLengthPtrOutput)
}

// HTTP constraint exception. The structure of `exception` block is documented below.
func (o WafProfileConstraintOutput) Exceptions() WafProfileConstraintExceptionArrayOutput {
	return o.ApplyT(func(v WafProfileConstraint) []WafProfileConstraintException { return v.Exceptions }).(WafProfileConstraintExceptionArrayOutput)
}

// HTTP header length in request. The structure of `headerLength` block is documented below.
func (o WafProfileConstraintOutput) HeaderLength() WafProfileConstraintHeaderLengthPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintHeaderLength { return v.HeaderLength }).(WafProfileConstraintHeaderLengthPtrOutput)
}

// Enable/disable hostname check. The structure of `hostname` block is documented below.
func (o WafProfileConstraintOutput) Hostname() WafProfileConstraintHostnamePtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintHostname { return v.Hostname }).(WafProfileConstraintHostnamePtrOutput)
}

// HTTP line length in request. The structure of `lineLength` block is documented below.
func (o WafProfileConstraintOutput) LineLength() WafProfileConstraintLineLengthPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintLineLength { return v.LineLength }).(WafProfileConstraintLineLengthPtrOutput)
}

// Enable/disable malformed HTTP request check. The structure of `malformed` block is documented below.
func (o WafProfileConstraintOutput) Malformed() WafProfileConstraintMalformedPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMalformed { return v.Malformed }).(WafProfileConstraintMalformedPtrOutput)
}

// Maximum number of cookies in HTTP request. The structure of `maxCookie` block is documented below.
func (o WafProfileConstraintOutput) MaxCookie() WafProfileConstraintMaxCookiePtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMaxCookie { return v.MaxCookie }).(WafProfileConstraintMaxCookiePtrOutput)
}

// Maximum number of HTTP header line. The structure of `maxHeaderLine` block is documented below.
func (o WafProfileConstraintOutput) MaxHeaderLine() WafProfileConstraintMaxHeaderLinePtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMaxHeaderLine { return v.MaxHeaderLine }).(WafProfileConstraintMaxHeaderLinePtrOutput)
}

// Maximum number of range segments in HTTP range line. The structure of `maxRangeSegment` block is documented below.
func (o WafProfileConstraintOutput) MaxRangeSegment() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMaxRangeSegment { return v.MaxRangeSegment }).(WafProfileConstraintMaxRangeSegmentPtrOutput)
}

// Maximum number of parameters in URL. The structure of `maxUrlParam` block is documented below.
func (o WafProfileConstraintOutput) MaxUrlParam() WafProfileConstraintMaxUrlParamPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMaxUrlParam { return v.MaxUrlParam }).(WafProfileConstraintMaxUrlParamPtrOutput)
}

// Enable/disable HTTP method check. The structure of `method` block is documented below.
func (o WafProfileConstraintOutput) Method() WafProfileConstraintMethodPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintMethod { return v.Method }).(WafProfileConstraintMethodPtrOutput)
}

// Maximum length of parameter in URL, HTTP POST request or HTTP body. The structure of `paramLength` block is documented below.
func (o WafProfileConstraintOutput) ParamLength() WafProfileConstraintParamLengthPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintParamLength { return v.ParamLength }).(WafProfileConstraintParamLengthPtrOutput)
}

// Maximum length of parameter in URL. The structure of `urlParamLength` block is documented below.
func (o WafProfileConstraintOutput) UrlParamLength() WafProfileConstraintUrlParamLengthPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintUrlParamLength { return v.UrlParamLength }).(WafProfileConstraintUrlParamLengthPtrOutput)
}

// Enable/disable HTTP version check. The structure of `version` block is documented below.
func (o WafProfileConstraintOutput) Version() WafProfileConstraintVersionPtrOutput {
	return o.ApplyT(func(v WafProfileConstraint) *WafProfileConstraintVersion { return v.Version }).(WafProfileConstraintVersionPtrOutput)
}

type WafProfileConstraintPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraint)(nil)).Elem()
}

func (o WafProfileConstraintPtrOutput) ToWafProfileConstraintPtrOutput() WafProfileConstraintPtrOutput {
	return o
}

func (o WafProfileConstraintPtrOutput) ToWafProfileConstraintPtrOutputWithContext(ctx context.Context) WafProfileConstraintPtrOutput {
	return o
}

func (o WafProfileConstraintPtrOutput) Elem() WafProfileConstraintOutput {
	return o.ApplyT(func(v *WafProfileConstraint) WafProfileConstraint {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraint
		return ret
	}).(WafProfileConstraintOutput)
}

// HTTP content length in request. The structure of `contentLength` block is documented below.
func (o WafProfileConstraintPtrOutput) ContentLength() WafProfileConstraintContentLengthPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintContentLength {
		if v == nil {
			return nil
		}
		return v.ContentLength
	}).(WafProfileConstraintContentLengthPtrOutput)
}

// HTTP constraint exception. The structure of `exception` block is documented below.
func (o WafProfileConstraintPtrOutput) Exceptions() WafProfileConstraintExceptionArrayOutput {
	return o.ApplyT(func(v *WafProfileConstraint) []WafProfileConstraintException {
		if v == nil {
			return nil
		}
		return v.Exceptions
	}).(WafProfileConstraintExceptionArrayOutput)
}

// HTTP header length in request. The structure of `headerLength` block is documented below.
func (o WafProfileConstraintPtrOutput) HeaderLength() WafProfileConstraintHeaderLengthPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintHeaderLength {
		if v == nil {
			return nil
		}
		return v.HeaderLength
	}).(WafProfileConstraintHeaderLengthPtrOutput)
}

// Enable/disable hostname check. The structure of `hostname` block is documented below.
func (o WafProfileConstraintPtrOutput) Hostname() WafProfileConstraintHostnamePtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(WafProfileConstraintHostnamePtrOutput)
}

// HTTP line length in request. The structure of `lineLength` block is documented below.
func (o WafProfileConstraintPtrOutput) LineLength() WafProfileConstraintLineLengthPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintLineLength {
		if v == nil {
			return nil
		}
		return v.LineLength
	}).(WafProfileConstraintLineLengthPtrOutput)
}

// Enable/disable malformed HTTP request check. The structure of `malformed` block is documented below.
func (o WafProfileConstraintPtrOutput) Malformed() WafProfileConstraintMalformedPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMalformed {
		if v == nil {
			return nil
		}
		return v.Malformed
	}).(WafProfileConstraintMalformedPtrOutput)
}

// Maximum number of cookies in HTTP request. The structure of `maxCookie` block is documented below.
func (o WafProfileConstraintPtrOutput) MaxCookie() WafProfileConstraintMaxCookiePtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMaxCookie {
		if v == nil {
			return nil
		}
		return v.MaxCookie
	}).(WafProfileConstraintMaxCookiePtrOutput)
}

// Maximum number of HTTP header line. The structure of `maxHeaderLine` block is documented below.
func (o WafProfileConstraintPtrOutput) MaxHeaderLine() WafProfileConstraintMaxHeaderLinePtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMaxHeaderLine {
		if v == nil {
			return nil
		}
		return v.MaxHeaderLine
	}).(WafProfileConstraintMaxHeaderLinePtrOutput)
}

// Maximum number of range segments in HTTP range line. The structure of `maxRangeSegment` block is documented below.
func (o WafProfileConstraintPtrOutput) MaxRangeSegment() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMaxRangeSegment {
		if v == nil {
			return nil
		}
		return v.MaxRangeSegment
	}).(WafProfileConstraintMaxRangeSegmentPtrOutput)
}

// Maximum number of parameters in URL. The structure of `maxUrlParam` block is documented below.
func (o WafProfileConstraintPtrOutput) MaxUrlParam() WafProfileConstraintMaxUrlParamPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMaxUrlParam {
		if v == nil {
			return nil
		}
		return v.MaxUrlParam
	}).(WafProfileConstraintMaxUrlParamPtrOutput)
}

// Enable/disable HTTP method check. The structure of `method` block is documented below.
func (o WafProfileConstraintPtrOutput) Method() WafProfileConstraintMethodPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintMethod {
		if v == nil {
			return nil
		}
		return v.Method
	}).(WafProfileConstraintMethodPtrOutput)
}

// Maximum length of parameter in URL, HTTP POST request or HTTP body. The structure of `paramLength` block is documented below.
func (o WafProfileConstraintPtrOutput) ParamLength() WafProfileConstraintParamLengthPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintParamLength {
		if v == nil {
			return nil
		}
		return v.ParamLength
	}).(WafProfileConstraintParamLengthPtrOutput)
}

// Maximum length of parameter in URL. The structure of `urlParamLength` block is documented below.
func (o WafProfileConstraintPtrOutput) UrlParamLength() WafProfileConstraintUrlParamLengthPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintUrlParamLength {
		if v == nil {
			return nil
		}
		return v.UrlParamLength
	}).(WafProfileConstraintUrlParamLengthPtrOutput)
}

// Enable/disable HTTP version check. The structure of `version` block is documented below.
func (o WafProfileConstraintPtrOutput) Version() WafProfileConstraintVersionPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraint) *WafProfileConstraintVersion {
		if v == nil {
			return nil
		}
		return v.Version
	}).(WafProfileConstraintVersionPtrOutput)
}

type WafProfileConstraintContentLength struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Length of HTTP content in bytes (0 to 2147483647).
	Length *int `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintContentLengthInput is an input type that accepts WafProfileConstraintContentLengthArgs and WafProfileConstraintContentLengthOutput values.
// You can construct a concrete instance of `WafProfileConstraintContentLengthInput` via:
//
//	WafProfileConstraintContentLengthArgs{...}
type WafProfileConstraintContentLengthInput interface {
	pulumi.Input

	ToWafProfileConstraintContentLengthOutput() WafProfileConstraintContentLengthOutput
	ToWafProfileConstraintContentLengthOutputWithContext(context.Context) WafProfileConstraintContentLengthOutput
}

type WafProfileConstraintContentLengthArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Length of HTTP content in bytes (0 to 2147483647).
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintContentLengthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintContentLength)(nil)).Elem()
}

func (i WafProfileConstraintContentLengthArgs) ToWafProfileConstraintContentLengthOutput() WafProfileConstraintContentLengthOutput {
	return i.ToWafProfileConstraintContentLengthOutputWithContext(context.Background())
}

func (i WafProfileConstraintContentLengthArgs) ToWafProfileConstraintContentLengthOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintContentLengthOutput)
}

func (i WafProfileConstraintContentLengthArgs) ToWafProfileConstraintContentLengthPtrOutput() WafProfileConstraintContentLengthPtrOutput {
	return i.ToWafProfileConstraintContentLengthPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintContentLengthArgs) ToWafProfileConstraintContentLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintContentLengthOutput).ToWafProfileConstraintContentLengthPtrOutputWithContext(ctx)
}

// WafProfileConstraintContentLengthPtrInput is an input type that accepts WafProfileConstraintContentLengthArgs, WafProfileConstraintContentLengthPtr and WafProfileConstraintContentLengthPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintContentLengthPtrInput` via:
//
//	        WafProfileConstraintContentLengthArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintContentLengthPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintContentLengthPtrOutput() WafProfileConstraintContentLengthPtrOutput
	ToWafProfileConstraintContentLengthPtrOutputWithContext(context.Context) WafProfileConstraintContentLengthPtrOutput
}

type wafProfileConstraintContentLengthPtrType WafProfileConstraintContentLengthArgs

func WafProfileConstraintContentLengthPtr(v *WafProfileConstraintContentLengthArgs) WafProfileConstraintContentLengthPtrInput {
	return (*wafProfileConstraintContentLengthPtrType)(v)
}

func (*wafProfileConstraintContentLengthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintContentLength)(nil)).Elem()
}

func (i *wafProfileConstraintContentLengthPtrType) ToWafProfileConstraintContentLengthPtrOutput() WafProfileConstraintContentLengthPtrOutput {
	return i.ToWafProfileConstraintContentLengthPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintContentLengthPtrType) ToWafProfileConstraintContentLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintContentLengthPtrOutput)
}

type WafProfileConstraintContentLengthOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintContentLengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintContentLength)(nil)).Elem()
}

func (o WafProfileConstraintContentLengthOutput) ToWafProfileConstraintContentLengthOutput() WafProfileConstraintContentLengthOutput {
	return o
}

func (o WafProfileConstraintContentLengthOutput) ToWafProfileConstraintContentLengthOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthOutput {
	return o
}

func (o WafProfileConstraintContentLengthOutput) ToWafProfileConstraintContentLengthPtrOutput() WafProfileConstraintContentLengthPtrOutput {
	return o.ToWafProfileConstraintContentLengthPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintContentLengthOutput) ToWafProfileConstraintContentLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintContentLength) *WafProfileConstraintContentLength {
		return &v
	}).(WafProfileConstraintContentLengthPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintContentLengthOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintContentLength) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Length of HTTP content in bytes (0 to 2147483647).
func (o WafProfileConstraintContentLengthOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintContentLength) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintContentLengthOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintContentLength) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintContentLengthOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintContentLength) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintContentLengthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintContentLength) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintContentLengthPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintContentLengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintContentLength)(nil)).Elem()
}

func (o WafProfileConstraintContentLengthPtrOutput) ToWafProfileConstraintContentLengthPtrOutput() WafProfileConstraintContentLengthPtrOutput {
	return o
}

func (o WafProfileConstraintContentLengthPtrOutput) ToWafProfileConstraintContentLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintContentLengthPtrOutput {
	return o
}

func (o WafProfileConstraintContentLengthPtrOutput) Elem() WafProfileConstraintContentLengthOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) WafProfileConstraintContentLength {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintContentLength
		return ret
	}).(WafProfileConstraintContentLengthOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintContentLengthPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Length of HTTP content in bytes (0 to 2147483647).
func (o WafProfileConstraintContentLengthPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintContentLengthPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintContentLengthPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintContentLengthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintContentLength) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintException struct {
	// Host address.
	Address *string `pulumi:"address"`
	// HTTP content length in request. Valid values: `enable`, `disable`.
	ContentLength *string `pulumi:"contentLength"`
	// HTTP header length in request. Valid values: `enable`, `disable`.
	HeaderLength *string `pulumi:"headerLength"`
	// Enable/disable hostname check. Valid values: `enable`, `disable`.
	Hostname *string `pulumi:"hostname"`
	// Exception ID.
	Id *int `pulumi:"id"`
	// HTTP line length in request. Valid values: `enable`, `disable`.
	LineLength *string `pulumi:"lineLength"`
	// Enable/disable malformed HTTP request check. Valid values: `enable`, `disable`.
	Malformed *string `pulumi:"malformed"`
	// Maximum number of cookies in HTTP request. Valid values: `enable`, `disable`.
	MaxCookie *string `pulumi:"maxCookie"`
	// Maximum number of HTTP header line. Valid values: `enable`, `disable`.
	MaxHeaderLine *string `pulumi:"maxHeaderLine"`
	// Maximum number of range segments in HTTP range line. Valid values: `enable`, `disable`.
	MaxRangeSegment *string `pulumi:"maxRangeSegment"`
	// Maximum number of parameters in URL. Valid values: `enable`, `disable`.
	MaxUrlParam *string `pulumi:"maxUrlParam"`
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method *string `pulumi:"method"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body. Valid values: `enable`, `disable`.
	ParamLength *string `pulumi:"paramLength"`
	// URL pattern.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex *string `pulumi:"regex"`
	// Maximum length of parameter in URL. Valid values: `enable`, `disable`.
	UrlParamLength *string `pulumi:"urlParamLength"`
	// Enable/disable HTTP version check. Valid values: `enable`, `disable`.
	Version *string `pulumi:"version"`
}

// WafProfileConstraintExceptionInput is an input type that accepts WafProfileConstraintExceptionArgs and WafProfileConstraintExceptionOutput values.
// You can construct a concrete instance of `WafProfileConstraintExceptionInput` via:
//
//	WafProfileConstraintExceptionArgs{...}
type WafProfileConstraintExceptionInput interface {
	pulumi.Input

	ToWafProfileConstraintExceptionOutput() WafProfileConstraintExceptionOutput
	ToWafProfileConstraintExceptionOutputWithContext(context.Context) WafProfileConstraintExceptionOutput
}

type WafProfileConstraintExceptionArgs struct {
	// Host address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// HTTP content length in request. Valid values: `enable`, `disable`.
	ContentLength pulumi.StringPtrInput `pulumi:"contentLength"`
	// HTTP header length in request. Valid values: `enable`, `disable`.
	HeaderLength pulumi.StringPtrInput `pulumi:"headerLength"`
	// Enable/disable hostname check. Valid values: `enable`, `disable`.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Exception ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// HTTP line length in request. Valid values: `enable`, `disable`.
	LineLength pulumi.StringPtrInput `pulumi:"lineLength"`
	// Enable/disable malformed HTTP request check. Valid values: `enable`, `disable`.
	Malformed pulumi.StringPtrInput `pulumi:"malformed"`
	// Maximum number of cookies in HTTP request. Valid values: `enable`, `disable`.
	MaxCookie pulumi.StringPtrInput `pulumi:"maxCookie"`
	// Maximum number of HTTP header line. Valid values: `enable`, `disable`.
	MaxHeaderLine pulumi.StringPtrInput `pulumi:"maxHeaderLine"`
	// Maximum number of range segments in HTTP range line. Valid values: `enable`, `disable`.
	MaxRangeSegment pulumi.StringPtrInput `pulumi:"maxRangeSegment"`
	// Maximum number of parameters in URL. Valid values: `enable`, `disable`.
	MaxUrlParam pulumi.StringPtrInput `pulumi:"maxUrlParam"`
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body. Valid values: `enable`, `disable`.
	ParamLength pulumi.StringPtrInput `pulumi:"paramLength"`
	// URL pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Maximum length of parameter in URL. Valid values: `enable`, `disable`.
	UrlParamLength pulumi.StringPtrInput `pulumi:"urlParamLength"`
	// Enable/disable HTTP version check. Valid values: `enable`, `disable`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (WafProfileConstraintExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintException)(nil)).Elem()
}

func (i WafProfileConstraintExceptionArgs) ToWafProfileConstraintExceptionOutput() WafProfileConstraintExceptionOutput {
	return i.ToWafProfileConstraintExceptionOutputWithContext(context.Background())
}

func (i WafProfileConstraintExceptionArgs) ToWafProfileConstraintExceptionOutputWithContext(ctx context.Context) WafProfileConstraintExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintExceptionOutput)
}

// WafProfileConstraintExceptionArrayInput is an input type that accepts WafProfileConstraintExceptionArray and WafProfileConstraintExceptionArrayOutput values.
// You can construct a concrete instance of `WafProfileConstraintExceptionArrayInput` via:
//
//	WafProfileConstraintExceptionArray{ WafProfileConstraintExceptionArgs{...} }
type WafProfileConstraintExceptionArrayInput interface {
	pulumi.Input

	ToWafProfileConstraintExceptionArrayOutput() WafProfileConstraintExceptionArrayOutput
	ToWafProfileConstraintExceptionArrayOutputWithContext(context.Context) WafProfileConstraintExceptionArrayOutput
}

type WafProfileConstraintExceptionArray []WafProfileConstraintExceptionInput

func (WafProfileConstraintExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileConstraintException)(nil)).Elem()
}

func (i WafProfileConstraintExceptionArray) ToWafProfileConstraintExceptionArrayOutput() WafProfileConstraintExceptionArrayOutput {
	return i.ToWafProfileConstraintExceptionArrayOutputWithContext(context.Background())
}

func (i WafProfileConstraintExceptionArray) ToWafProfileConstraintExceptionArrayOutputWithContext(ctx context.Context) WafProfileConstraintExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintExceptionArrayOutput)
}

type WafProfileConstraintExceptionOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintException)(nil)).Elem()
}

func (o WafProfileConstraintExceptionOutput) ToWafProfileConstraintExceptionOutput() WafProfileConstraintExceptionOutput {
	return o
}

func (o WafProfileConstraintExceptionOutput) ToWafProfileConstraintExceptionOutputWithContext(ctx context.Context) WafProfileConstraintExceptionOutput {
	return o
}

// Host address.
func (o WafProfileConstraintExceptionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// HTTP content length in request. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) ContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.ContentLength }).(pulumi.StringPtrOutput)
}

// HTTP header length in request. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) HeaderLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.HeaderLength }).(pulumi.StringPtrOutput)
}

// Enable/disable hostname check. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Exception ID.
func (o WafProfileConstraintExceptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// HTTP line length in request. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) LineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.LineLength }).(pulumi.StringPtrOutput)
}

// Enable/disable malformed HTTP request check. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) Malformed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Malformed }).(pulumi.StringPtrOutput)
}

// Maximum number of cookies in HTTP request. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) MaxCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.MaxCookie }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP header line. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) MaxHeaderLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.MaxHeaderLine }).(pulumi.StringPtrOutput)
}

// Maximum number of range segments in HTTP range line. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) MaxRangeSegment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.MaxRangeSegment }).(pulumi.StringPtrOutput)
}

// Maximum number of parameters in URL. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) MaxUrlParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.MaxUrlParam }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Maximum length of parameter in URL, HTTP POST request or HTTP body. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) ParamLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.ParamLength }).(pulumi.StringPtrOutput)
}

// URL pattern.
func (o WafProfileConstraintExceptionOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Maximum length of parameter in URL. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) UrlParamLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.UrlParamLength }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP version check. Valid values: `enable`, `disable`.
func (o WafProfileConstraintExceptionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintException) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintExceptionArrayOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileConstraintException)(nil)).Elem()
}

func (o WafProfileConstraintExceptionArrayOutput) ToWafProfileConstraintExceptionArrayOutput() WafProfileConstraintExceptionArrayOutput {
	return o
}

func (o WafProfileConstraintExceptionArrayOutput) ToWafProfileConstraintExceptionArrayOutputWithContext(ctx context.Context) WafProfileConstraintExceptionArrayOutput {
	return o
}

func (o WafProfileConstraintExceptionArrayOutput) Index(i pulumi.IntInput) WafProfileConstraintExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileConstraintException {
		return vs[0].([]WafProfileConstraintException)[vs[1].(int)]
	}).(WafProfileConstraintExceptionOutput)
}

type WafProfileConstraintHeaderLength struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Length of HTTP header in bytes (0 to 2147483647).
	Length *int `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintHeaderLengthInput is an input type that accepts WafProfileConstraintHeaderLengthArgs and WafProfileConstraintHeaderLengthOutput values.
// You can construct a concrete instance of `WafProfileConstraintHeaderLengthInput` via:
//
//	WafProfileConstraintHeaderLengthArgs{...}
type WafProfileConstraintHeaderLengthInput interface {
	pulumi.Input

	ToWafProfileConstraintHeaderLengthOutput() WafProfileConstraintHeaderLengthOutput
	ToWafProfileConstraintHeaderLengthOutputWithContext(context.Context) WafProfileConstraintHeaderLengthOutput
}

type WafProfileConstraintHeaderLengthArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Length of HTTP header in bytes (0 to 2147483647).
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintHeaderLengthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintHeaderLength)(nil)).Elem()
}

func (i WafProfileConstraintHeaderLengthArgs) ToWafProfileConstraintHeaderLengthOutput() WafProfileConstraintHeaderLengthOutput {
	return i.ToWafProfileConstraintHeaderLengthOutputWithContext(context.Background())
}

func (i WafProfileConstraintHeaderLengthArgs) ToWafProfileConstraintHeaderLengthOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHeaderLengthOutput)
}

func (i WafProfileConstraintHeaderLengthArgs) ToWafProfileConstraintHeaderLengthPtrOutput() WafProfileConstraintHeaderLengthPtrOutput {
	return i.ToWafProfileConstraintHeaderLengthPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintHeaderLengthArgs) ToWafProfileConstraintHeaderLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHeaderLengthOutput).ToWafProfileConstraintHeaderLengthPtrOutputWithContext(ctx)
}

// WafProfileConstraintHeaderLengthPtrInput is an input type that accepts WafProfileConstraintHeaderLengthArgs, WafProfileConstraintHeaderLengthPtr and WafProfileConstraintHeaderLengthPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintHeaderLengthPtrInput` via:
//
//	        WafProfileConstraintHeaderLengthArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintHeaderLengthPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintHeaderLengthPtrOutput() WafProfileConstraintHeaderLengthPtrOutput
	ToWafProfileConstraintHeaderLengthPtrOutputWithContext(context.Context) WafProfileConstraintHeaderLengthPtrOutput
}

type wafProfileConstraintHeaderLengthPtrType WafProfileConstraintHeaderLengthArgs

func WafProfileConstraintHeaderLengthPtr(v *WafProfileConstraintHeaderLengthArgs) WafProfileConstraintHeaderLengthPtrInput {
	return (*wafProfileConstraintHeaderLengthPtrType)(v)
}

func (*wafProfileConstraintHeaderLengthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintHeaderLength)(nil)).Elem()
}

func (i *wafProfileConstraintHeaderLengthPtrType) ToWafProfileConstraintHeaderLengthPtrOutput() WafProfileConstraintHeaderLengthPtrOutput {
	return i.ToWafProfileConstraintHeaderLengthPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintHeaderLengthPtrType) ToWafProfileConstraintHeaderLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHeaderLengthPtrOutput)
}

type WafProfileConstraintHeaderLengthOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintHeaderLengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintHeaderLength)(nil)).Elem()
}

func (o WafProfileConstraintHeaderLengthOutput) ToWafProfileConstraintHeaderLengthOutput() WafProfileConstraintHeaderLengthOutput {
	return o
}

func (o WafProfileConstraintHeaderLengthOutput) ToWafProfileConstraintHeaderLengthOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthOutput {
	return o
}

func (o WafProfileConstraintHeaderLengthOutput) ToWafProfileConstraintHeaderLengthPtrOutput() WafProfileConstraintHeaderLengthPtrOutput {
	return o.ToWafProfileConstraintHeaderLengthPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintHeaderLengthOutput) ToWafProfileConstraintHeaderLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintHeaderLength) *WafProfileConstraintHeaderLength {
		return &v
	}).(WafProfileConstraintHeaderLengthPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintHeaderLengthOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHeaderLength) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Length of HTTP header in bytes (0 to 2147483647).
func (o WafProfileConstraintHeaderLengthOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHeaderLength) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHeaderLengthOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHeaderLength) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintHeaderLengthOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHeaderLength) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHeaderLengthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHeaderLength) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintHeaderLengthPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintHeaderLengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintHeaderLength)(nil)).Elem()
}

func (o WafProfileConstraintHeaderLengthPtrOutput) ToWafProfileConstraintHeaderLengthPtrOutput() WafProfileConstraintHeaderLengthPtrOutput {
	return o
}

func (o WafProfileConstraintHeaderLengthPtrOutput) ToWafProfileConstraintHeaderLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintHeaderLengthPtrOutput {
	return o
}

func (o WafProfileConstraintHeaderLengthPtrOutput) Elem() WafProfileConstraintHeaderLengthOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) WafProfileConstraintHeaderLength {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintHeaderLength
		return ret
	}).(WafProfileConstraintHeaderLengthOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintHeaderLengthPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Length of HTTP header in bytes (0 to 2147483647).
func (o WafProfileConstraintHeaderLengthPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHeaderLengthPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintHeaderLengthPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHeaderLengthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHeaderLength) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintHostname struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintHostnameInput is an input type that accepts WafProfileConstraintHostnameArgs and WafProfileConstraintHostnameOutput values.
// You can construct a concrete instance of `WafProfileConstraintHostnameInput` via:
//
//	WafProfileConstraintHostnameArgs{...}
type WafProfileConstraintHostnameInput interface {
	pulumi.Input

	ToWafProfileConstraintHostnameOutput() WafProfileConstraintHostnameOutput
	ToWafProfileConstraintHostnameOutputWithContext(context.Context) WafProfileConstraintHostnameOutput
}

type WafProfileConstraintHostnameArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintHostname)(nil)).Elem()
}

func (i WafProfileConstraintHostnameArgs) ToWafProfileConstraintHostnameOutput() WafProfileConstraintHostnameOutput {
	return i.ToWafProfileConstraintHostnameOutputWithContext(context.Background())
}

func (i WafProfileConstraintHostnameArgs) ToWafProfileConstraintHostnameOutputWithContext(ctx context.Context) WafProfileConstraintHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHostnameOutput)
}

func (i WafProfileConstraintHostnameArgs) ToWafProfileConstraintHostnamePtrOutput() WafProfileConstraintHostnamePtrOutput {
	return i.ToWafProfileConstraintHostnamePtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintHostnameArgs) ToWafProfileConstraintHostnamePtrOutputWithContext(ctx context.Context) WafProfileConstraintHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHostnameOutput).ToWafProfileConstraintHostnamePtrOutputWithContext(ctx)
}

// WafProfileConstraintHostnamePtrInput is an input type that accepts WafProfileConstraintHostnameArgs, WafProfileConstraintHostnamePtr and WafProfileConstraintHostnamePtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintHostnamePtrInput` via:
//
//	        WafProfileConstraintHostnameArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintHostnamePtrInput interface {
	pulumi.Input

	ToWafProfileConstraintHostnamePtrOutput() WafProfileConstraintHostnamePtrOutput
	ToWafProfileConstraintHostnamePtrOutputWithContext(context.Context) WafProfileConstraintHostnamePtrOutput
}

type wafProfileConstraintHostnamePtrType WafProfileConstraintHostnameArgs

func WafProfileConstraintHostnamePtr(v *WafProfileConstraintHostnameArgs) WafProfileConstraintHostnamePtrInput {
	return (*wafProfileConstraintHostnamePtrType)(v)
}

func (*wafProfileConstraintHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintHostname)(nil)).Elem()
}

func (i *wafProfileConstraintHostnamePtrType) ToWafProfileConstraintHostnamePtrOutput() WafProfileConstraintHostnamePtrOutput {
	return i.ToWafProfileConstraintHostnamePtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintHostnamePtrType) ToWafProfileConstraintHostnamePtrOutputWithContext(ctx context.Context) WafProfileConstraintHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintHostnamePtrOutput)
}

type WafProfileConstraintHostnameOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintHostname)(nil)).Elem()
}

func (o WafProfileConstraintHostnameOutput) ToWafProfileConstraintHostnameOutput() WafProfileConstraintHostnameOutput {
	return o
}

func (o WafProfileConstraintHostnameOutput) ToWafProfileConstraintHostnameOutputWithContext(ctx context.Context) WafProfileConstraintHostnameOutput {
	return o
}

func (o WafProfileConstraintHostnameOutput) ToWafProfileConstraintHostnamePtrOutput() WafProfileConstraintHostnamePtrOutput {
	return o.ToWafProfileConstraintHostnamePtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintHostnameOutput) ToWafProfileConstraintHostnamePtrOutputWithContext(ctx context.Context) WafProfileConstraintHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintHostname) *WafProfileConstraintHostname {
		return &v
	}).(WafProfileConstraintHostnamePtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintHostnameOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHostname) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHostnameOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHostname) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintHostnameOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHostname) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHostnameOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintHostname) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintHostnamePtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintHostname)(nil)).Elem()
}

func (o WafProfileConstraintHostnamePtrOutput) ToWafProfileConstraintHostnamePtrOutput() WafProfileConstraintHostnamePtrOutput {
	return o
}

func (o WafProfileConstraintHostnamePtrOutput) ToWafProfileConstraintHostnamePtrOutputWithContext(ctx context.Context) WafProfileConstraintHostnamePtrOutput {
	return o
}

func (o WafProfileConstraintHostnamePtrOutput) Elem() WafProfileConstraintHostnameOutput {
	return o.ApplyT(func(v *WafProfileConstraintHostname) WafProfileConstraintHostname {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintHostname
		return ret
	}).(WafProfileConstraintHostnameOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintHostnamePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHostname) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHostnamePtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHostname) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintHostnamePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHostname) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintHostnamePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintHostname) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintLineLength struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Length of HTTP line in bytes (0 to 2147483647).
	Length *int `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintLineLengthInput is an input type that accepts WafProfileConstraintLineLengthArgs and WafProfileConstraintLineLengthOutput values.
// You can construct a concrete instance of `WafProfileConstraintLineLengthInput` via:
//
//	WafProfileConstraintLineLengthArgs{...}
type WafProfileConstraintLineLengthInput interface {
	pulumi.Input

	ToWafProfileConstraintLineLengthOutput() WafProfileConstraintLineLengthOutput
	ToWafProfileConstraintLineLengthOutputWithContext(context.Context) WafProfileConstraintLineLengthOutput
}

type WafProfileConstraintLineLengthArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Length of HTTP line in bytes (0 to 2147483647).
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintLineLengthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintLineLength)(nil)).Elem()
}

func (i WafProfileConstraintLineLengthArgs) ToWafProfileConstraintLineLengthOutput() WafProfileConstraintLineLengthOutput {
	return i.ToWafProfileConstraintLineLengthOutputWithContext(context.Background())
}

func (i WafProfileConstraintLineLengthArgs) ToWafProfileConstraintLineLengthOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintLineLengthOutput)
}

func (i WafProfileConstraintLineLengthArgs) ToWafProfileConstraintLineLengthPtrOutput() WafProfileConstraintLineLengthPtrOutput {
	return i.ToWafProfileConstraintLineLengthPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintLineLengthArgs) ToWafProfileConstraintLineLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintLineLengthOutput).ToWafProfileConstraintLineLengthPtrOutputWithContext(ctx)
}

// WafProfileConstraintLineLengthPtrInput is an input type that accepts WafProfileConstraintLineLengthArgs, WafProfileConstraintLineLengthPtr and WafProfileConstraintLineLengthPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintLineLengthPtrInput` via:
//
//	        WafProfileConstraintLineLengthArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintLineLengthPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintLineLengthPtrOutput() WafProfileConstraintLineLengthPtrOutput
	ToWafProfileConstraintLineLengthPtrOutputWithContext(context.Context) WafProfileConstraintLineLengthPtrOutput
}

type wafProfileConstraintLineLengthPtrType WafProfileConstraintLineLengthArgs

func WafProfileConstraintLineLengthPtr(v *WafProfileConstraintLineLengthArgs) WafProfileConstraintLineLengthPtrInput {
	return (*wafProfileConstraintLineLengthPtrType)(v)
}

func (*wafProfileConstraintLineLengthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintLineLength)(nil)).Elem()
}

func (i *wafProfileConstraintLineLengthPtrType) ToWafProfileConstraintLineLengthPtrOutput() WafProfileConstraintLineLengthPtrOutput {
	return i.ToWafProfileConstraintLineLengthPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintLineLengthPtrType) ToWafProfileConstraintLineLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintLineLengthPtrOutput)
}

type WafProfileConstraintLineLengthOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintLineLengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintLineLength)(nil)).Elem()
}

func (o WafProfileConstraintLineLengthOutput) ToWafProfileConstraintLineLengthOutput() WafProfileConstraintLineLengthOutput {
	return o
}

func (o WafProfileConstraintLineLengthOutput) ToWafProfileConstraintLineLengthOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthOutput {
	return o
}

func (o WafProfileConstraintLineLengthOutput) ToWafProfileConstraintLineLengthPtrOutput() WafProfileConstraintLineLengthPtrOutput {
	return o.ToWafProfileConstraintLineLengthPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintLineLengthOutput) ToWafProfileConstraintLineLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintLineLength) *WafProfileConstraintLineLength {
		return &v
	}).(WafProfileConstraintLineLengthPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintLineLengthOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintLineLength) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Length of HTTP line in bytes (0 to 2147483647).
func (o WafProfileConstraintLineLengthOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintLineLength) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintLineLengthOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintLineLength) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintLineLengthOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintLineLength) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintLineLengthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintLineLength) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintLineLengthPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintLineLengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintLineLength)(nil)).Elem()
}

func (o WafProfileConstraintLineLengthPtrOutput) ToWafProfileConstraintLineLengthPtrOutput() WafProfileConstraintLineLengthPtrOutput {
	return o
}

func (o WafProfileConstraintLineLengthPtrOutput) ToWafProfileConstraintLineLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintLineLengthPtrOutput {
	return o
}

func (o WafProfileConstraintLineLengthPtrOutput) Elem() WafProfileConstraintLineLengthOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) WafProfileConstraintLineLength {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintLineLength
		return ret
	}).(WafProfileConstraintLineLengthOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintLineLengthPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Length of HTTP line in bytes (0 to 2147483647).
func (o WafProfileConstraintLineLengthPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintLineLengthPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintLineLengthPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintLineLengthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintLineLength) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMalformed struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMalformedInput is an input type that accepts WafProfileConstraintMalformedArgs and WafProfileConstraintMalformedOutput values.
// You can construct a concrete instance of `WafProfileConstraintMalformedInput` via:
//
//	WafProfileConstraintMalformedArgs{...}
type WafProfileConstraintMalformedInput interface {
	pulumi.Input

	ToWafProfileConstraintMalformedOutput() WafProfileConstraintMalformedOutput
	ToWafProfileConstraintMalformedOutputWithContext(context.Context) WafProfileConstraintMalformedOutput
}

type WafProfileConstraintMalformedArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMalformedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMalformed)(nil)).Elem()
}

func (i WafProfileConstraintMalformedArgs) ToWafProfileConstraintMalformedOutput() WafProfileConstraintMalformedOutput {
	return i.ToWafProfileConstraintMalformedOutputWithContext(context.Background())
}

func (i WafProfileConstraintMalformedArgs) ToWafProfileConstraintMalformedOutputWithContext(ctx context.Context) WafProfileConstraintMalformedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMalformedOutput)
}

func (i WafProfileConstraintMalformedArgs) ToWafProfileConstraintMalformedPtrOutput() WafProfileConstraintMalformedPtrOutput {
	return i.ToWafProfileConstraintMalformedPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMalformedArgs) ToWafProfileConstraintMalformedPtrOutputWithContext(ctx context.Context) WafProfileConstraintMalformedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMalformedOutput).ToWafProfileConstraintMalformedPtrOutputWithContext(ctx)
}

// WafProfileConstraintMalformedPtrInput is an input type that accepts WafProfileConstraintMalformedArgs, WafProfileConstraintMalformedPtr and WafProfileConstraintMalformedPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMalformedPtrInput` via:
//
//	        WafProfileConstraintMalformedArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMalformedPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMalformedPtrOutput() WafProfileConstraintMalformedPtrOutput
	ToWafProfileConstraintMalformedPtrOutputWithContext(context.Context) WafProfileConstraintMalformedPtrOutput
}

type wafProfileConstraintMalformedPtrType WafProfileConstraintMalformedArgs

func WafProfileConstraintMalformedPtr(v *WafProfileConstraintMalformedArgs) WafProfileConstraintMalformedPtrInput {
	return (*wafProfileConstraintMalformedPtrType)(v)
}

func (*wafProfileConstraintMalformedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMalformed)(nil)).Elem()
}

func (i *wafProfileConstraintMalformedPtrType) ToWafProfileConstraintMalformedPtrOutput() WafProfileConstraintMalformedPtrOutput {
	return i.ToWafProfileConstraintMalformedPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMalformedPtrType) ToWafProfileConstraintMalformedPtrOutputWithContext(ctx context.Context) WafProfileConstraintMalformedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMalformedPtrOutput)
}

type WafProfileConstraintMalformedOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMalformedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMalformed)(nil)).Elem()
}

func (o WafProfileConstraintMalformedOutput) ToWafProfileConstraintMalformedOutput() WafProfileConstraintMalformedOutput {
	return o
}

func (o WafProfileConstraintMalformedOutput) ToWafProfileConstraintMalformedOutputWithContext(ctx context.Context) WafProfileConstraintMalformedOutput {
	return o
}

func (o WafProfileConstraintMalformedOutput) ToWafProfileConstraintMalformedPtrOutput() WafProfileConstraintMalformedPtrOutput {
	return o.ToWafProfileConstraintMalformedPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMalformedOutput) ToWafProfileConstraintMalformedPtrOutputWithContext(ctx context.Context) WafProfileConstraintMalformedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMalformed) *WafProfileConstraintMalformed {
		return &v
	}).(WafProfileConstraintMalformedPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMalformedOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMalformed) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMalformedOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMalformed) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMalformedOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMalformed) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMalformedOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMalformed) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMalformedPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMalformedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMalformed)(nil)).Elem()
}

func (o WafProfileConstraintMalformedPtrOutput) ToWafProfileConstraintMalformedPtrOutput() WafProfileConstraintMalformedPtrOutput {
	return o
}

func (o WafProfileConstraintMalformedPtrOutput) ToWafProfileConstraintMalformedPtrOutputWithContext(ctx context.Context) WafProfileConstraintMalformedPtrOutput {
	return o
}

func (o WafProfileConstraintMalformedPtrOutput) Elem() WafProfileConstraintMalformedOutput {
	return o.ApplyT(func(v *WafProfileConstraintMalformed) WafProfileConstraintMalformed {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMalformed
		return ret
	}).(WafProfileConstraintMalformedOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMalformedPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMalformed) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMalformedPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMalformed) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMalformedPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMalformed) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMalformedPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMalformed) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxCookie struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Maximum number of cookies in HTTP request (0 to 2147483647).
	MaxCookie *int `pulumi:"maxCookie"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMaxCookieInput is an input type that accepts WafProfileConstraintMaxCookieArgs and WafProfileConstraintMaxCookieOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxCookieInput` via:
//
//	WafProfileConstraintMaxCookieArgs{...}
type WafProfileConstraintMaxCookieInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxCookieOutput() WafProfileConstraintMaxCookieOutput
	ToWafProfileConstraintMaxCookieOutputWithContext(context.Context) WafProfileConstraintMaxCookieOutput
}

type WafProfileConstraintMaxCookieArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Maximum number of cookies in HTTP request (0 to 2147483647).
	MaxCookie pulumi.IntPtrInput `pulumi:"maxCookie"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMaxCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxCookie)(nil)).Elem()
}

func (i WafProfileConstraintMaxCookieArgs) ToWafProfileConstraintMaxCookieOutput() WafProfileConstraintMaxCookieOutput {
	return i.ToWafProfileConstraintMaxCookieOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxCookieArgs) ToWafProfileConstraintMaxCookieOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxCookieOutput)
}

func (i WafProfileConstraintMaxCookieArgs) ToWafProfileConstraintMaxCookiePtrOutput() WafProfileConstraintMaxCookiePtrOutput {
	return i.ToWafProfileConstraintMaxCookiePtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxCookieArgs) ToWafProfileConstraintMaxCookiePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxCookieOutput).ToWafProfileConstraintMaxCookiePtrOutputWithContext(ctx)
}

// WafProfileConstraintMaxCookiePtrInput is an input type that accepts WafProfileConstraintMaxCookieArgs, WafProfileConstraintMaxCookiePtr and WafProfileConstraintMaxCookiePtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxCookiePtrInput` via:
//
//	        WafProfileConstraintMaxCookieArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMaxCookiePtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxCookiePtrOutput() WafProfileConstraintMaxCookiePtrOutput
	ToWafProfileConstraintMaxCookiePtrOutputWithContext(context.Context) WafProfileConstraintMaxCookiePtrOutput
}

type wafProfileConstraintMaxCookiePtrType WafProfileConstraintMaxCookieArgs

func WafProfileConstraintMaxCookiePtr(v *WafProfileConstraintMaxCookieArgs) WafProfileConstraintMaxCookiePtrInput {
	return (*wafProfileConstraintMaxCookiePtrType)(v)
}

func (*wafProfileConstraintMaxCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxCookie)(nil)).Elem()
}

func (i *wafProfileConstraintMaxCookiePtrType) ToWafProfileConstraintMaxCookiePtrOutput() WafProfileConstraintMaxCookiePtrOutput {
	return i.ToWafProfileConstraintMaxCookiePtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMaxCookiePtrType) ToWafProfileConstraintMaxCookiePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxCookiePtrOutput)
}

type WafProfileConstraintMaxCookieOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxCookie)(nil)).Elem()
}

func (o WafProfileConstraintMaxCookieOutput) ToWafProfileConstraintMaxCookieOutput() WafProfileConstraintMaxCookieOutput {
	return o
}

func (o WafProfileConstraintMaxCookieOutput) ToWafProfileConstraintMaxCookieOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookieOutput {
	return o
}

func (o WafProfileConstraintMaxCookieOutput) ToWafProfileConstraintMaxCookiePtrOutput() WafProfileConstraintMaxCookiePtrOutput {
	return o.ToWafProfileConstraintMaxCookiePtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMaxCookieOutput) ToWafProfileConstraintMaxCookiePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMaxCookie) *WafProfileConstraintMaxCookie {
		return &v
	}).(WafProfileConstraintMaxCookiePtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxCookieOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxCookie) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxCookieOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxCookie) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Maximum number of cookies in HTTP request (0 to 2147483647).
func (o WafProfileConstraintMaxCookieOutput) MaxCookie() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxCookie) *int { return v.MaxCookie }).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxCookieOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxCookie) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxCookieOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxCookie) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxCookiePtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxCookie)(nil)).Elem()
}

func (o WafProfileConstraintMaxCookiePtrOutput) ToWafProfileConstraintMaxCookiePtrOutput() WafProfileConstraintMaxCookiePtrOutput {
	return o
}

func (o WafProfileConstraintMaxCookiePtrOutput) ToWafProfileConstraintMaxCookiePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxCookiePtrOutput {
	return o
}

func (o WafProfileConstraintMaxCookiePtrOutput) Elem() WafProfileConstraintMaxCookieOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) WafProfileConstraintMaxCookie {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMaxCookie
		return ret
	}).(WafProfileConstraintMaxCookieOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxCookiePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxCookiePtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Maximum number of cookies in HTTP request (0 to 2147483647).
func (o WafProfileConstraintMaxCookiePtrOutput) MaxCookie() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) *int {
		if v == nil {
			return nil
		}
		return v.MaxCookie
	}).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxCookiePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxCookiePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxCookie) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxHeaderLine struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Maximum number HTTP header lines (0 to 2147483647).
	MaxHeaderLine *int `pulumi:"maxHeaderLine"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMaxHeaderLineInput is an input type that accepts WafProfileConstraintMaxHeaderLineArgs and WafProfileConstraintMaxHeaderLineOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxHeaderLineInput` via:
//
//	WafProfileConstraintMaxHeaderLineArgs{...}
type WafProfileConstraintMaxHeaderLineInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxHeaderLineOutput() WafProfileConstraintMaxHeaderLineOutput
	ToWafProfileConstraintMaxHeaderLineOutputWithContext(context.Context) WafProfileConstraintMaxHeaderLineOutput
}

type WafProfileConstraintMaxHeaderLineArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Maximum number HTTP header lines (0 to 2147483647).
	MaxHeaderLine pulumi.IntPtrInput `pulumi:"maxHeaderLine"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMaxHeaderLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxHeaderLine)(nil)).Elem()
}

func (i WafProfileConstraintMaxHeaderLineArgs) ToWafProfileConstraintMaxHeaderLineOutput() WafProfileConstraintMaxHeaderLineOutput {
	return i.ToWafProfileConstraintMaxHeaderLineOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxHeaderLineArgs) ToWafProfileConstraintMaxHeaderLineOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxHeaderLineOutput)
}

func (i WafProfileConstraintMaxHeaderLineArgs) ToWafProfileConstraintMaxHeaderLinePtrOutput() WafProfileConstraintMaxHeaderLinePtrOutput {
	return i.ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxHeaderLineArgs) ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxHeaderLineOutput).ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(ctx)
}

// WafProfileConstraintMaxHeaderLinePtrInput is an input type that accepts WafProfileConstraintMaxHeaderLineArgs, WafProfileConstraintMaxHeaderLinePtr and WafProfileConstraintMaxHeaderLinePtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxHeaderLinePtrInput` via:
//
//	        WafProfileConstraintMaxHeaderLineArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMaxHeaderLinePtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxHeaderLinePtrOutput() WafProfileConstraintMaxHeaderLinePtrOutput
	ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(context.Context) WafProfileConstraintMaxHeaderLinePtrOutput
}

type wafProfileConstraintMaxHeaderLinePtrType WafProfileConstraintMaxHeaderLineArgs

func WafProfileConstraintMaxHeaderLinePtr(v *WafProfileConstraintMaxHeaderLineArgs) WafProfileConstraintMaxHeaderLinePtrInput {
	return (*wafProfileConstraintMaxHeaderLinePtrType)(v)
}

func (*wafProfileConstraintMaxHeaderLinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxHeaderLine)(nil)).Elem()
}

func (i *wafProfileConstraintMaxHeaderLinePtrType) ToWafProfileConstraintMaxHeaderLinePtrOutput() WafProfileConstraintMaxHeaderLinePtrOutput {
	return i.ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMaxHeaderLinePtrType) ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxHeaderLinePtrOutput)
}

type WafProfileConstraintMaxHeaderLineOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxHeaderLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxHeaderLine)(nil)).Elem()
}

func (o WafProfileConstraintMaxHeaderLineOutput) ToWafProfileConstraintMaxHeaderLineOutput() WafProfileConstraintMaxHeaderLineOutput {
	return o
}

func (o WafProfileConstraintMaxHeaderLineOutput) ToWafProfileConstraintMaxHeaderLineOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLineOutput {
	return o
}

func (o WafProfileConstraintMaxHeaderLineOutput) ToWafProfileConstraintMaxHeaderLinePtrOutput() WafProfileConstraintMaxHeaderLinePtrOutput {
	return o.ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMaxHeaderLineOutput) ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMaxHeaderLine) *WafProfileConstraintMaxHeaderLine {
		return &v
	}).(WafProfileConstraintMaxHeaderLinePtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxHeaderLineOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxHeaderLine) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxHeaderLineOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxHeaderLine) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Maximum number HTTP header lines (0 to 2147483647).
func (o WafProfileConstraintMaxHeaderLineOutput) MaxHeaderLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxHeaderLine) *int { return v.MaxHeaderLine }).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxHeaderLineOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxHeaderLine) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxHeaderLineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxHeaderLine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxHeaderLinePtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxHeaderLinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxHeaderLine)(nil)).Elem()
}

func (o WafProfileConstraintMaxHeaderLinePtrOutput) ToWafProfileConstraintMaxHeaderLinePtrOutput() WafProfileConstraintMaxHeaderLinePtrOutput {
	return o
}

func (o WafProfileConstraintMaxHeaderLinePtrOutput) ToWafProfileConstraintMaxHeaderLinePtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxHeaderLinePtrOutput {
	return o
}

func (o WafProfileConstraintMaxHeaderLinePtrOutput) Elem() WafProfileConstraintMaxHeaderLineOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) WafProfileConstraintMaxHeaderLine {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMaxHeaderLine
		return ret
	}).(WafProfileConstraintMaxHeaderLineOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxHeaderLinePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxHeaderLinePtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Maximum number HTTP header lines (0 to 2147483647).
func (o WafProfileConstraintMaxHeaderLinePtrOutput) MaxHeaderLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) *int {
		if v == nil {
			return nil
		}
		return v.MaxHeaderLine
	}).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxHeaderLinePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxHeaderLinePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxHeaderLine) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxRangeSegment struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Maximum number of range segments in HTTP range line (0 to 2147483647).
	MaxRangeSegment *int `pulumi:"maxRangeSegment"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMaxRangeSegmentInput is an input type that accepts WafProfileConstraintMaxRangeSegmentArgs and WafProfileConstraintMaxRangeSegmentOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxRangeSegmentInput` via:
//
//	WafProfileConstraintMaxRangeSegmentArgs{...}
type WafProfileConstraintMaxRangeSegmentInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxRangeSegmentOutput() WafProfileConstraintMaxRangeSegmentOutput
	ToWafProfileConstraintMaxRangeSegmentOutputWithContext(context.Context) WafProfileConstraintMaxRangeSegmentOutput
}

type WafProfileConstraintMaxRangeSegmentArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Maximum number of range segments in HTTP range line (0 to 2147483647).
	MaxRangeSegment pulumi.IntPtrInput `pulumi:"maxRangeSegment"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMaxRangeSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxRangeSegment)(nil)).Elem()
}

func (i WafProfileConstraintMaxRangeSegmentArgs) ToWafProfileConstraintMaxRangeSegmentOutput() WafProfileConstraintMaxRangeSegmentOutput {
	return i.ToWafProfileConstraintMaxRangeSegmentOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxRangeSegmentArgs) ToWafProfileConstraintMaxRangeSegmentOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxRangeSegmentOutput)
}

func (i WafProfileConstraintMaxRangeSegmentArgs) ToWafProfileConstraintMaxRangeSegmentPtrOutput() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return i.ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxRangeSegmentArgs) ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxRangeSegmentOutput).ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(ctx)
}

// WafProfileConstraintMaxRangeSegmentPtrInput is an input type that accepts WafProfileConstraintMaxRangeSegmentArgs, WafProfileConstraintMaxRangeSegmentPtr and WafProfileConstraintMaxRangeSegmentPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxRangeSegmentPtrInput` via:
//
//	        WafProfileConstraintMaxRangeSegmentArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMaxRangeSegmentPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxRangeSegmentPtrOutput() WafProfileConstraintMaxRangeSegmentPtrOutput
	ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(context.Context) WafProfileConstraintMaxRangeSegmentPtrOutput
}

type wafProfileConstraintMaxRangeSegmentPtrType WafProfileConstraintMaxRangeSegmentArgs

func WafProfileConstraintMaxRangeSegmentPtr(v *WafProfileConstraintMaxRangeSegmentArgs) WafProfileConstraintMaxRangeSegmentPtrInput {
	return (*wafProfileConstraintMaxRangeSegmentPtrType)(v)
}

func (*wafProfileConstraintMaxRangeSegmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxRangeSegment)(nil)).Elem()
}

func (i *wafProfileConstraintMaxRangeSegmentPtrType) ToWafProfileConstraintMaxRangeSegmentPtrOutput() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return i.ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMaxRangeSegmentPtrType) ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxRangeSegmentPtrOutput)
}

type WafProfileConstraintMaxRangeSegmentOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxRangeSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxRangeSegment)(nil)).Elem()
}

func (o WafProfileConstraintMaxRangeSegmentOutput) ToWafProfileConstraintMaxRangeSegmentOutput() WafProfileConstraintMaxRangeSegmentOutput {
	return o
}

func (o WafProfileConstraintMaxRangeSegmentOutput) ToWafProfileConstraintMaxRangeSegmentOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentOutput {
	return o
}

func (o WafProfileConstraintMaxRangeSegmentOutput) ToWafProfileConstraintMaxRangeSegmentPtrOutput() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o.ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMaxRangeSegmentOutput) ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMaxRangeSegment) *WafProfileConstraintMaxRangeSegment {
		return &v
	}).(WafProfileConstraintMaxRangeSegmentPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxRangeSegmentOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxRangeSegment) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxRangeSegmentOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxRangeSegment) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Maximum number of range segments in HTTP range line (0 to 2147483647).
func (o WafProfileConstraintMaxRangeSegmentOutput) MaxRangeSegment() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxRangeSegment) *int { return v.MaxRangeSegment }).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxRangeSegmentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxRangeSegment) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxRangeSegmentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxRangeSegment) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxRangeSegmentPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxRangeSegmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxRangeSegment)(nil)).Elem()
}

func (o WafProfileConstraintMaxRangeSegmentPtrOutput) ToWafProfileConstraintMaxRangeSegmentPtrOutput() WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o
}

func (o WafProfileConstraintMaxRangeSegmentPtrOutput) ToWafProfileConstraintMaxRangeSegmentPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxRangeSegmentPtrOutput {
	return o
}

func (o WafProfileConstraintMaxRangeSegmentPtrOutput) Elem() WafProfileConstraintMaxRangeSegmentOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) WafProfileConstraintMaxRangeSegment {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMaxRangeSegment
		return ret
	}).(WafProfileConstraintMaxRangeSegmentOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxRangeSegmentPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxRangeSegmentPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Maximum number of range segments in HTTP range line (0 to 2147483647).
func (o WafProfileConstraintMaxRangeSegmentPtrOutput) MaxRangeSegment() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) *int {
		if v == nil {
			return nil
		}
		return v.MaxRangeSegment
	}).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxRangeSegmentPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxRangeSegmentPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxRangeSegment) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxUrlParam struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Maximum number of parameters in URL (0 to 2147483647).
	MaxUrlParam *int `pulumi:"maxUrlParam"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMaxUrlParamInput is an input type that accepts WafProfileConstraintMaxUrlParamArgs and WafProfileConstraintMaxUrlParamOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxUrlParamInput` via:
//
//	WafProfileConstraintMaxUrlParamArgs{...}
type WafProfileConstraintMaxUrlParamInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxUrlParamOutput() WafProfileConstraintMaxUrlParamOutput
	ToWafProfileConstraintMaxUrlParamOutputWithContext(context.Context) WafProfileConstraintMaxUrlParamOutput
}

type WafProfileConstraintMaxUrlParamArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Maximum number of parameters in URL (0 to 2147483647).
	MaxUrlParam pulumi.IntPtrInput `pulumi:"maxUrlParam"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMaxUrlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxUrlParam)(nil)).Elem()
}

func (i WafProfileConstraintMaxUrlParamArgs) ToWafProfileConstraintMaxUrlParamOutput() WafProfileConstraintMaxUrlParamOutput {
	return i.ToWafProfileConstraintMaxUrlParamOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxUrlParamArgs) ToWafProfileConstraintMaxUrlParamOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxUrlParamOutput)
}

func (i WafProfileConstraintMaxUrlParamArgs) ToWafProfileConstraintMaxUrlParamPtrOutput() WafProfileConstraintMaxUrlParamPtrOutput {
	return i.ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMaxUrlParamArgs) ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxUrlParamOutput).ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(ctx)
}

// WafProfileConstraintMaxUrlParamPtrInput is an input type that accepts WafProfileConstraintMaxUrlParamArgs, WafProfileConstraintMaxUrlParamPtr and WafProfileConstraintMaxUrlParamPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMaxUrlParamPtrInput` via:
//
//	        WafProfileConstraintMaxUrlParamArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMaxUrlParamPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMaxUrlParamPtrOutput() WafProfileConstraintMaxUrlParamPtrOutput
	ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(context.Context) WafProfileConstraintMaxUrlParamPtrOutput
}

type wafProfileConstraintMaxUrlParamPtrType WafProfileConstraintMaxUrlParamArgs

func WafProfileConstraintMaxUrlParamPtr(v *WafProfileConstraintMaxUrlParamArgs) WafProfileConstraintMaxUrlParamPtrInput {
	return (*wafProfileConstraintMaxUrlParamPtrType)(v)
}

func (*wafProfileConstraintMaxUrlParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxUrlParam)(nil)).Elem()
}

func (i *wafProfileConstraintMaxUrlParamPtrType) ToWafProfileConstraintMaxUrlParamPtrOutput() WafProfileConstraintMaxUrlParamPtrOutput {
	return i.ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMaxUrlParamPtrType) ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMaxUrlParamPtrOutput)
}

type WafProfileConstraintMaxUrlParamOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxUrlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMaxUrlParam)(nil)).Elem()
}

func (o WafProfileConstraintMaxUrlParamOutput) ToWafProfileConstraintMaxUrlParamOutput() WafProfileConstraintMaxUrlParamOutput {
	return o
}

func (o WafProfileConstraintMaxUrlParamOutput) ToWafProfileConstraintMaxUrlParamOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamOutput {
	return o
}

func (o WafProfileConstraintMaxUrlParamOutput) ToWafProfileConstraintMaxUrlParamPtrOutput() WafProfileConstraintMaxUrlParamPtrOutput {
	return o.ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMaxUrlParamOutput) ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMaxUrlParam) *WafProfileConstraintMaxUrlParam {
		return &v
	}).(WafProfileConstraintMaxUrlParamPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxUrlParamOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxUrlParam) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxUrlParamOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxUrlParam) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Maximum number of parameters in URL (0 to 2147483647).
func (o WafProfileConstraintMaxUrlParamOutput) MaxUrlParam() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxUrlParam) *int { return v.MaxUrlParam }).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxUrlParamOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxUrlParam) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxUrlParamOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMaxUrlParam) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMaxUrlParamPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMaxUrlParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMaxUrlParam)(nil)).Elem()
}

func (o WafProfileConstraintMaxUrlParamPtrOutput) ToWafProfileConstraintMaxUrlParamPtrOutput() WafProfileConstraintMaxUrlParamPtrOutput {
	return o
}

func (o WafProfileConstraintMaxUrlParamPtrOutput) ToWafProfileConstraintMaxUrlParamPtrOutputWithContext(ctx context.Context) WafProfileConstraintMaxUrlParamPtrOutput {
	return o
}

func (o WafProfileConstraintMaxUrlParamPtrOutput) Elem() WafProfileConstraintMaxUrlParamOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) WafProfileConstraintMaxUrlParam {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMaxUrlParam
		return ret
	}).(WafProfileConstraintMaxUrlParamOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMaxUrlParamPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxUrlParamPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Maximum number of parameters in URL (0 to 2147483647).
func (o WafProfileConstraintMaxUrlParamPtrOutput) MaxUrlParam() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) *int {
		if v == nil {
			return nil
		}
		return v.MaxUrlParam
	}).(pulumi.IntPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMaxUrlParamPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMaxUrlParamPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMaxUrlParam) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMethod struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintMethodInput is an input type that accepts WafProfileConstraintMethodArgs and WafProfileConstraintMethodOutput values.
// You can construct a concrete instance of `WafProfileConstraintMethodInput` via:
//
//	WafProfileConstraintMethodArgs{...}
type WafProfileConstraintMethodInput interface {
	pulumi.Input

	ToWafProfileConstraintMethodOutput() WafProfileConstraintMethodOutput
	ToWafProfileConstraintMethodOutputWithContext(context.Context) WafProfileConstraintMethodOutput
}

type WafProfileConstraintMethodArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMethod)(nil)).Elem()
}

func (i WafProfileConstraintMethodArgs) ToWafProfileConstraintMethodOutput() WafProfileConstraintMethodOutput {
	return i.ToWafProfileConstraintMethodOutputWithContext(context.Background())
}

func (i WafProfileConstraintMethodArgs) ToWafProfileConstraintMethodOutputWithContext(ctx context.Context) WafProfileConstraintMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMethodOutput)
}

func (i WafProfileConstraintMethodArgs) ToWafProfileConstraintMethodPtrOutput() WafProfileConstraintMethodPtrOutput {
	return i.ToWafProfileConstraintMethodPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintMethodArgs) ToWafProfileConstraintMethodPtrOutputWithContext(ctx context.Context) WafProfileConstraintMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMethodOutput).ToWafProfileConstraintMethodPtrOutputWithContext(ctx)
}

// WafProfileConstraintMethodPtrInput is an input type that accepts WafProfileConstraintMethodArgs, WafProfileConstraintMethodPtr and WafProfileConstraintMethodPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintMethodPtrInput` via:
//
//	        WafProfileConstraintMethodArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintMethodPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintMethodPtrOutput() WafProfileConstraintMethodPtrOutput
	ToWafProfileConstraintMethodPtrOutputWithContext(context.Context) WafProfileConstraintMethodPtrOutput
}

type wafProfileConstraintMethodPtrType WafProfileConstraintMethodArgs

func WafProfileConstraintMethodPtr(v *WafProfileConstraintMethodArgs) WafProfileConstraintMethodPtrInput {
	return (*wafProfileConstraintMethodPtrType)(v)
}

func (*wafProfileConstraintMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMethod)(nil)).Elem()
}

func (i *wafProfileConstraintMethodPtrType) ToWafProfileConstraintMethodPtrOutput() WafProfileConstraintMethodPtrOutput {
	return i.ToWafProfileConstraintMethodPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintMethodPtrType) ToWafProfileConstraintMethodPtrOutputWithContext(ctx context.Context) WafProfileConstraintMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintMethodPtrOutput)
}

type WafProfileConstraintMethodOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintMethod)(nil)).Elem()
}

func (o WafProfileConstraintMethodOutput) ToWafProfileConstraintMethodOutput() WafProfileConstraintMethodOutput {
	return o
}

func (o WafProfileConstraintMethodOutput) ToWafProfileConstraintMethodOutputWithContext(ctx context.Context) WafProfileConstraintMethodOutput {
	return o
}

func (o WafProfileConstraintMethodOutput) ToWafProfileConstraintMethodPtrOutput() WafProfileConstraintMethodPtrOutput {
	return o.ToWafProfileConstraintMethodPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintMethodOutput) ToWafProfileConstraintMethodPtrOutputWithContext(ctx context.Context) WafProfileConstraintMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintMethod) *WafProfileConstraintMethod {
		return &v
	}).(WafProfileConstraintMethodPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMethodOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMethod) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMethodOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMethod) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMethodOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMethod) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMethodOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintMethod) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintMethodPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintMethod)(nil)).Elem()
}

func (o WafProfileConstraintMethodPtrOutput) ToWafProfileConstraintMethodPtrOutput() WafProfileConstraintMethodPtrOutput {
	return o
}

func (o WafProfileConstraintMethodPtrOutput) ToWafProfileConstraintMethodPtrOutputWithContext(ctx context.Context) WafProfileConstraintMethodPtrOutput {
	return o
}

func (o WafProfileConstraintMethodPtrOutput) Elem() WafProfileConstraintMethodOutput {
	return o.ApplyT(func(v *WafProfileConstraintMethod) WafProfileConstraintMethod {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintMethod
		return ret
	}).(WafProfileConstraintMethodOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintMethodPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMethod) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMethodPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMethod) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintMethodPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMethod) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileConstraintMethodPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintMethod) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintParamLength struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body in bytes (0 to 2147483647).
	Length *int `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintParamLengthInput is an input type that accepts WafProfileConstraintParamLengthArgs and WafProfileConstraintParamLengthOutput values.
// You can construct a concrete instance of `WafProfileConstraintParamLengthInput` via:
//
//	WafProfileConstraintParamLengthArgs{...}
type WafProfileConstraintParamLengthInput interface {
	pulumi.Input

	ToWafProfileConstraintParamLengthOutput() WafProfileConstraintParamLengthOutput
	ToWafProfileConstraintParamLengthOutputWithContext(context.Context) WafProfileConstraintParamLengthOutput
}

type WafProfileConstraintParamLengthArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Maximum length of parameter in URL, HTTP POST request or HTTP body in bytes (0 to 2147483647).
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintParamLengthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintParamLength)(nil)).Elem()
}

func (i WafProfileConstraintParamLengthArgs) ToWafProfileConstraintParamLengthOutput() WafProfileConstraintParamLengthOutput {
	return i.ToWafProfileConstraintParamLengthOutputWithContext(context.Background())
}

func (i WafProfileConstraintParamLengthArgs) ToWafProfileConstraintParamLengthOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintParamLengthOutput)
}

func (i WafProfileConstraintParamLengthArgs) ToWafProfileConstraintParamLengthPtrOutput() WafProfileConstraintParamLengthPtrOutput {
	return i.ToWafProfileConstraintParamLengthPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintParamLengthArgs) ToWafProfileConstraintParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintParamLengthOutput).ToWafProfileConstraintParamLengthPtrOutputWithContext(ctx)
}

// WafProfileConstraintParamLengthPtrInput is an input type that accepts WafProfileConstraintParamLengthArgs, WafProfileConstraintParamLengthPtr and WafProfileConstraintParamLengthPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintParamLengthPtrInput` via:
//
//	        WafProfileConstraintParamLengthArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintParamLengthPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintParamLengthPtrOutput() WafProfileConstraintParamLengthPtrOutput
	ToWafProfileConstraintParamLengthPtrOutputWithContext(context.Context) WafProfileConstraintParamLengthPtrOutput
}

type wafProfileConstraintParamLengthPtrType WafProfileConstraintParamLengthArgs

func WafProfileConstraintParamLengthPtr(v *WafProfileConstraintParamLengthArgs) WafProfileConstraintParamLengthPtrInput {
	return (*wafProfileConstraintParamLengthPtrType)(v)
}

func (*wafProfileConstraintParamLengthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintParamLength)(nil)).Elem()
}

func (i *wafProfileConstraintParamLengthPtrType) ToWafProfileConstraintParamLengthPtrOutput() WafProfileConstraintParamLengthPtrOutput {
	return i.ToWafProfileConstraintParamLengthPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintParamLengthPtrType) ToWafProfileConstraintParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintParamLengthPtrOutput)
}

type WafProfileConstraintParamLengthOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintParamLengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintParamLength)(nil)).Elem()
}

func (o WafProfileConstraintParamLengthOutput) ToWafProfileConstraintParamLengthOutput() WafProfileConstraintParamLengthOutput {
	return o
}

func (o WafProfileConstraintParamLengthOutput) ToWafProfileConstraintParamLengthOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthOutput {
	return o
}

func (o WafProfileConstraintParamLengthOutput) ToWafProfileConstraintParamLengthPtrOutput() WafProfileConstraintParamLengthPtrOutput {
	return o.ToWafProfileConstraintParamLengthPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintParamLengthOutput) ToWafProfileConstraintParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintParamLength) *WafProfileConstraintParamLength {
		return &v
	}).(WafProfileConstraintParamLengthPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintParamLengthOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintParamLength) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Maximum length of parameter in URL, HTTP POST request or HTTP body in bytes (0 to 2147483647).
func (o WafProfileConstraintParamLengthOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintParamLength) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintParamLengthOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintParamLength) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintParamLengthOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintParamLength) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintParamLengthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintParamLength) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintParamLengthPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintParamLengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintParamLength)(nil)).Elem()
}

func (o WafProfileConstraintParamLengthPtrOutput) ToWafProfileConstraintParamLengthPtrOutput() WafProfileConstraintParamLengthPtrOutput {
	return o
}

func (o WafProfileConstraintParamLengthPtrOutput) ToWafProfileConstraintParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintParamLengthPtrOutput {
	return o
}

func (o WafProfileConstraintParamLengthPtrOutput) Elem() WafProfileConstraintParamLengthOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) WafProfileConstraintParamLength {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintParamLength
		return ret
	}).(WafProfileConstraintParamLengthOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintParamLengthPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Maximum length of parameter in URL, HTTP POST request or HTTP body in bytes (0 to 2147483647).
func (o WafProfileConstraintParamLengthPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintParamLengthPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintParamLengthPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintParamLengthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintUrlParamLength struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Maximum length of URL parameter in bytes (0 to 2147483647).
	Length *int `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintUrlParamLengthInput is an input type that accepts WafProfileConstraintUrlParamLengthArgs and WafProfileConstraintUrlParamLengthOutput values.
// You can construct a concrete instance of `WafProfileConstraintUrlParamLengthInput` via:
//
//	WafProfileConstraintUrlParamLengthArgs{...}
type WafProfileConstraintUrlParamLengthInput interface {
	pulumi.Input

	ToWafProfileConstraintUrlParamLengthOutput() WafProfileConstraintUrlParamLengthOutput
	ToWafProfileConstraintUrlParamLengthOutputWithContext(context.Context) WafProfileConstraintUrlParamLengthOutput
}

type WafProfileConstraintUrlParamLengthArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Maximum length of URL parameter in bytes (0 to 2147483647).
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintUrlParamLengthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintUrlParamLength)(nil)).Elem()
}

func (i WafProfileConstraintUrlParamLengthArgs) ToWafProfileConstraintUrlParamLengthOutput() WafProfileConstraintUrlParamLengthOutput {
	return i.ToWafProfileConstraintUrlParamLengthOutputWithContext(context.Background())
}

func (i WafProfileConstraintUrlParamLengthArgs) ToWafProfileConstraintUrlParamLengthOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintUrlParamLengthOutput)
}

func (i WafProfileConstraintUrlParamLengthArgs) ToWafProfileConstraintUrlParamLengthPtrOutput() WafProfileConstraintUrlParamLengthPtrOutput {
	return i.ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintUrlParamLengthArgs) ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintUrlParamLengthOutput).ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(ctx)
}

// WafProfileConstraintUrlParamLengthPtrInput is an input type that accepts WafProfileConstraintUrlParamLengthArgs, WafProfileConstraintUrlParamLengthPtr and WafProfileConstraintUrlParamLengthPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintUrlParamLengthPtrInput` via:
//
//	        WafProfileConstraintUrlParamLengthArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintUrlParamLengthPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintUrlParamLengthPtrOutput() WafProfileConstraintUrlParamLengthPtrOutput
	ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(context.Context) WafProfileConstraintUrlParamLengthPtrOutput
}

type wafProfileConstraintUrlParamLengthPtrType WafProfileConstraintUrlParamLengthArgs

func WafProfileConstraintUrlParamLengthPtr(v *WafProfileConstraintUrlParamLengthArgs) WafProfileConstraintUrlParamLengthPtrInput {
	return (*wafProfileConstraintUrlParamLengthPtrType)(v)
}

func (*wafProfileConstraintUrlParamLengthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintUrlParamLength)(nil)).Elem()
}

func (i *wafProfileConstraintUrlParamLengthPtrType) ToWafProfileConstraintUrlParamLengthPtrOutput() WafProfileConstraintUrlParamLengthPtrOutput {
	return i.ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintUrlParamLengthPtrType) ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintUrlParamLengthPtrOutput)
}

type WafProfileConstraintUrlParamLengthOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintUrlParamLengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintUrlParamLength)(nil)).Elem()
}

func (o WafProfileConstraintUrlParamLengthOutput) ToWafProfileConstraintUrlParamLengthOutput() WafProfileConstraintUrlParamLengthOutput {
	return o
}

func (o WafProfileConstraintUrlParamLengthOutput) ToWafProfileConstraintUrlParamLengthOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthOutput {
	return o
}

func (o WafProfileConstraintUrlParamLengthOutput) ToWafProfileConstraintUrlParamLengthPtrOutput() WafProfileConstraintUrlParamLengthPtrOutput {
	return o.ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintUrlParamLengthOutput) ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintUrlParamLength) *WafProfileConstraintUrlParamLength {
		return &v
	}).(WafProfileConstraintUrlParamLengthPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintUrlParamLengthOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintUrlParamLength) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Maximum length of URL parameter in bytes (0 to 2147483647).
func (o WafProfileConstraintUrlParamLengthOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintUrlParamLength) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintUrlParamLengthOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintUrlParamLength) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintUrlParamLengthOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintUrlParamLength) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintUrlParamLengthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintUrlParamLength) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintUrlParamLengthPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintUrlParamLengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintUrlParamLength)(nil)).Elem()
}

func (o WafProfileConstraintUrlParamLengthPtrOutput) ToWafProfileConstraintUrlParamLengthPtrOutput() WafProfileConstraintUrlParamLengthPtrOutput {
	return o
}

func (o WafProfileConstraintUrlParamLengthPtrOutput) ToWafProfileConstraintUrlParamLengthPtrOutputWithContext(ctx context.Context) WafProfileConstraintUrlParamLengthPtrOutput {
	return o
}

func (o WafProfileConstraintUrlParamLengthPtrOutput) Elem() WafProfileConstraintUrlParamLengthOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) WafProfileConstraintUrlParamLength {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintUrlParamLength
		return ret
	}).(WafProfileConstraintUrlParamLengthOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintUrlParamLengthPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Maximum length of URL parameter in bytes (0 to 2147483647).
func (o WafProfileConstraintUrlParamLengthPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintUrlParamLengthPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintUrlParamLengthPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintUrlParamLengthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintUrlParamLength) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileConstraintVersion struct {
	// Action. Valid values: `allow`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileConstraintVersionInput is an input type that accepts WafProfileConstraintVersionArgs and WafProfileConstraintVersionOutput values.
// You can construct a concrete instance of `WafProfileConstraintVersionInput` via:
//
//	WafProfileConstraintVersionArgs{...}
type WafProfileConstraintVersionInput interface {
	pulumi.Input

	ToWafProfileConstraintVersionOutput() WafProfileConstraintVersionOutput
	ToWafProfileConstraintVersionOutputWithContext(context.Context) WafProfileConstraintVersionOutput
}

type WafProfileConstraintVersionArgs struct {
	// Action. Valid values: `allow`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable the constraint. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileConstraintVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintVersion)(nil)).Elem()
}

func (i WafProfileConstraintVersionArgs) ToWafProfileConstraintVersionOutput() WafProfileConstraintVersionOutput {
	return i.ToWafProfileConstraintVersionOutputWithContext(context.Background())
}

func (i WafProfileConstraintVersionArgs) ToWafProfileConstraintVersionOutputWithContext(ctx context.Context) WafProfileConstraintVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintVersionOutput)
}

func (i WafProfileConstraintVersionArgs) ToWafProfileConstraintVersionPtrOutput() WafProfileConstraintVersionPtrOutput {
	return i.ToWafProfileConstraintVersionPtrOutputWithContext(context.Background())
}

func (i WafProfileConstraintVersionArgs) ToWafProfileConstraintVersionPtrOutputWithContext(ctx context.Context) WafProfileConstraintVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintVersionOutput).ToWafProfileConstraintVersionPtrOutputWithContext(ctx)
}

// WafProfileConstraintVersionPtrInput is an input type that accepts WafProfileConstraintVersionArgs, WafProfileConstraintVersionPtr and WafProfileConstraintVersionPtrOutput values.
// You can construct a concrete instance of `WafProfileConstraintVersionPtrInput` via:
//
//	        WafProfileConstraintVersionArgs{...}
//
//	or:
//
//	        nil
type WafProfileConstraintVersionPtrInput interface {
	pulumi.Input

	ToWafProfileConstraintVersionPtrOutput() WafProfileConstraintVersionPtrOutput
	ToWafProfileConstraintVersionPtrOutputWithContext(context.Context) WafProfileConstraintVersionPtrOutput
}

type wafProfileConstraintVersionPtrType WafProfileConstraintVersionArgs

func WafProfileConstraintVersionPtr(v *WafProfileConstraintVersionArgs) WafProfileConstraintVersionPtrInput {
	return (*wafProfileConstraintVersionPtrType)(v)
}

func (*wafProfileConstraintVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintVersion)(nil)).Elem()
}

func (i *wafProfileConstraintVersionPtrType) ToWafProfileConstraintVersionPtrOutput() WafProfileConstraintVersionPtrOutput {
	return i.ToWafProfileConstraintVersionPtrOutputWithContext(context.Background())
}

func (i *wafProfileConstraintVersionPtrType) ToWafProfileConstraintVersionPtrOutputWithContext(ctx context.Context) WafProfileConstraintVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileConstraintVersionPtrOutput)
}

type WafProfileConstraintVersionOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileConstraintVersion)(nil)).Elem()
}

func (o WafProfileConstraintVersionOutput) ToWafProfileConstraintVersionOutput() WafProfileConstraintVersionOutput {
	return o
}

func (o WafProfileConstraintVersionOutput) ToWafProfileConstraintVersionOutputWithContext(ctx context.Context) WafProfileConstraintVersionOutput {
	return o
}

func (o WafProfileConstraintVersionOutput) ToWafProfileConstraintVersionPtrOutput() WafProfileConstraintVersionPtrOutput {
	return o.ToWafProfileConstraintVersionPtrOutputWithContext(context.Background())
}

func (o WafProfileConstraintVersionOutput) ToWafProfileConstraintVersionPtrOutputWithContext(ctx context.Context) WafProfileConstraintVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileConstraintVersion) *WafProfileConstraintVersion {
		return &v
	}).(WafProfileConstraintVersionPtrOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintVersionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintVersion) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintVersionOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintVersion) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintVersionOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintVersion) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintVersionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileConstraintVersion) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileConstraintVersionPtrOutput struct{ *pulumi.OutputState }

func (WafProfileConstraintVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileConstraintVersion)(nil)).Elem()
}

func (o WafProfileConstraintVersionPtrOutput) ToWafProfileConstraintVersionPtrOutput() WafProfileConstraintVersionPtrOutput {
	return o
}

func (o WafProfileConstraintVersionPtrOutput) ToWafProfileConstraintVersionPtrOutputWithContext(ctx context.Context) WafProfileConstraintVersionPtrOutput {
	return o
}

func (o WafProfileConstraintVersionPtrOutput) Elem() WafProfileConstraintVersionOutput {
	return o.ApplyT(func(v *WafProfileConstraintVersion) WafProfileConstraintVersion {
		if v != nil {
			return *v
		}
		var ret WafProfileConstraintVersion
		return ret
	}).(WafProfileConstraintVersionOutput)
}

// Action. Valid values: `allow`, `block`.
func (o WafProfileConstraintVersionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintVersion) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileConstraintVersionPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintVersion) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileConstraintVersionPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintVersion) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the constraint. Valid values: `enable`, `disable`.
func (o WafProfileConstraintVersionPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileConstraintVersion) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileMethod struct {
	// Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
	DefaultAllowedMethods *string `pulumi:"defaultAllowedMethods"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// HTTP method policy. The structure of `methodPolicy` block is documented below.
	MethodPolicies []WafProfileMethodMethodPolicy `pulumi:"methodPolicies"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileMethodInput is an input type that accepts WafProfileMethodArgs and WafProfileMethodOutput values.
// You can construct a concrete instance of `WafProfileMethodInput` via:
//
//	WafProfileMethodArgs{...}
type WafProfileMethodInput interface {
	pulumi.Input

	ToWafProfileMethodOutput() WafProfileMethodOutput
	ToWafProfileMethodOutputWithContext(context.Context) WafProfileMethodOutput
}

type WafProfileMethodArgs struct {
	// Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
	DefaultAllowedMethods pulumi.StringPtrInput `pulumi:"defaultAllowedMethods"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// HTTP method policy. The structure of `methodPolicy` block is documented below.
	MethodPolicies WafProfileMethodMethodPolicyArrayInput `pulumi:"methodPolicies"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileMethod)(nil)).Elem()
}

func (i WafProfileMethodArgs) ToWafProfileMethodOutput() WafProfileMethodOutput {
	return i.ToWafProfileMethodOutputWithContext(context.Background())
}

func (i WafProfileMethodArgs) ToWafProfileMethodOutputWithContext(ctx context.Context) WafProfileMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMethodOutput)
}

func (i WafProfileMethodArgs) ToWafProfileMethodPtrOutput() WafProfileMethodPtrOutput {
	return i.ToWafProfileMethodPtrOutputWithContext(context.Background())
}

func (i WafProfileMethodArgs) ToWafProfileMethodPtrOutputWithContext(ctx context.Context) WafProfileMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMethodOutput).ToWafProfileMethodPtrOutputWithContext(ctx)
}

// WafProfileMethodPtrInput is an input type that accepts WafProfileMethodArgs, WafProfileMethodPtr and WafProfileMethodPtrOutput values.
// You can construct a concrete instance of `WafProfileMethodPtrInput` via:
//
//	        WafProfileMethodArgs{...}
//
//	or:
//
//	        nil
type WafProfileMethodPtrInput interface {
	pulumi.Input

	ToWafProfileMethodPtrOutput() WafProfileMethodPtrOutput
	ToWafProfileMethodPtrOutputWithContext(context.Context) WafProfileMethodPtrOutput
}

type wafProfileMethodPtrType WafProfileMethodArgs

func WafProfileMethodPtr(v *WafProfileMethodArgs) WafProfileMethodPtrInput {
	return (*wafProfileMethodPtrType)(v)
}

func (*wafProfileMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileMethod)(nil)).Elem()
}

func (i *wafProfileMethodPtrType) ToWafProfileMethodPtrOutput() WafProfileMethodPtrOutput {
	return i.ToWafProfileMethodPtrOutputWithContext(context.Background())
}

func (i *wafProfileMethodPtrType) ToWafProfileMethodPtrOutputWithContext(ctx context.Context) WafProfileMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMethodPtrOutput)
}

type WafProfileMethodOutput struct{ *pulumi.OutputState }

func (WafProfileMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileMethod)(nil)).Elem()
}

func (o WafProfileMethodOutput) ToWafProfileMethodOutput() WafProfileMethodOutput {
	return o
}

func (o WafProfileMethodOutput) ToWafProfileMethodOutputWithContext(ctx context.Context) WafProfileMethodOutput {
	return o
}

func (o WafProfileMethodOutput) ToWafProfileMethodPtrOutput() WafProfileMethodPtrOutput {
	return o.ToWafProfileMethodPtrOutputWithContext(context.Background())
}

func (o WafProfileMethodOutput) ToWafProfileMethodPtrOutputWithContext(ctx context.Context) WafProfileMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileMethod) *WafProfileMethod {
		return &v
	}).(WafProfileMethodPtrOutput)
}

// Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
func (o WafProfileMethodOutput) DefaultAllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethod) *string { return v.DefaultAllowedMethods }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileMethodOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethod) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// HTTP method policy. The structure of `methodPolicy` block is documented below.
func (o WafProfileMethodOutput) MethodPolicies() WafProfileMethodMethodPolicyArrayOutput {
	return o.ApplyT(func(v WafProfileMethod) []WafProfileMethodMethodPolicy { return v.MethodPolicies }).(WafProfileMethodMethodPolicyArrayOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileMethodOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethod) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileMethodOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethod) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileMethodPtrOutput struct{ *pulumi.OutputState }

func (WafProfileMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileMethod)(nil)).Elem()
}

func (o WafProfileMethodPtrOutput) ToWafProfileMethodPtrOutput() WafProfileMethodPtrOutput {
	return o
}

func (o WafProfileMethodPtrOutput) ToWafProfileMethodPtrOutputWithContext(ctx context.Context) WafProfileMethodPtrOutput {
	return o
}

func (o WafProfileMethodPtrOutput) Elem() WafProfileMethodOutput {
	return o.ApplyT(func(v *WafProfileMethod) WafProfileMethod {
		if v != nil {
			return *v
		}
		var ret WafProfileMethod
		return ret
	}).(WafProfileMethodOutput)
}

// Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
func (o WafProfileMethodPtrOutput) DefaultAllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileMethod) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAllowedMethods
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileMethodPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileMethod) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// HTTP method policy. The structure of `methodPolicy` block is documented below.
func (o WafProfileMethodPtrOutput) MethodPolicies() WafProfileMethodMethodPolicyArrayOutput {
	return o.ApplyT(func(v *WafProfileMethod) []WafProfileMethodMethodPolicy {
		if v == nil {
			return nil
		}
		return v.MethodPolicies
	}).(WafProfileMethodMethodPolicyArrayOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileMethodPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileMethod) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileMethodPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafProfileMethod) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WafProfileMethodMethodPolicy struct {
	// Host address.
	Address *string `pulumi:"address"`
	// Allowed Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// HTTP method policy ID.
	Id *int `pulumi:"id"`
	// URL pattern.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex *string `pulumi:"regex"`
}

// WafProfileMethodMethodPolicyInput is an input type that accepts WafProfileMethodMethodPolicyArgs and WafProfileMethodMethodPolicyOutput values.
// You can construct a concrete instance of `WafProfileMethodMethodPolicyInput` via:
//
//	WafProfileMethodMethodPolicyArgs{...}
type WafProfileMethodMethodPolicyInput interface {
	pulumi.Input

	ToWafProfileMethodMethodPolicyOutput() WafProfileMethodMethodPolicyOutput
	ToWafProfileMethodMethodPolicyOutputWithContext(context.Context) WafProfileMethodMethodPolicyOutput
}

type WafProfileMethodMethodPolicyArgs struct {
	// Host address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Allowed Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
	AllowedMethods pulumi.StringPtrInput `pulumi:"allowedMethods"`
	// HTTP method policy ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// URL pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (WafProfileMethodMethodPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileMethodMethodPolicy)(nil)).Elem()
}

func (i WafProfileMethodMethodPolicyArgs) ToWafProfileMethodMethodPolicyOutput() WafProfileMethodMethodPolicyOutput {
	return i.ToWafProfileMethodMethodPolicyOutputWithContext(context.Background())
}

func (i WafProfileMethodMethodPolicyArgs) ToWafProfileMethodMethodPolicyOutputWithContext(ctx context.Context) WafProfileMethodMethodPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMethodMethodPolicyOutput)
}

// WafProfileMethodMethodPolicyArrayInput is an input type that accepts WafProfileMethodMethodPolicyArray and WafProfileMethodMethodPolicyArrayOutput values.
// You can construct a concrete instance of `WafProfileMethodMethodPolicyArrayInput` via:
//
//	WafProfileMethodMethodPolicyArray{ WafProfileMethodMethodPolicyArgs{...} }
type WafProfileMethodMethodPolicyArrayInput interface {
	pulumi.Input

	ToWafProfileMethodMethodPolicyArrayOutput() WafProfileMethodMethodPolicyArrayOutput
	ToWafProfileMethodMethodPolicyArrayOutputWithContext(context.Context) WafProfileMethodMethodPolicyArrayOutput
}

type WafProfileMethodMethodPolicyArray []WafProfileMethodMethodPolicyInput

func (WafProfileMethodMethodPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileMethodMethodPolicy)(nil)).Elem()
}

func (i WafProfileMethodMethodPolicyArray) ToWafProfileMethodMethodPolicyArrayOutput() WafProfileMethodMethodPolicyArrayOutput {
	return i.ToWafProfileMethodMethodPolicyArrayOutputWithContext(context.Background())
}

func (i WafProfileMethodMethodPolicyArray) ToWafProfileMethodMethodPolicyArrayOutputWithContext(ctx context.Context) WafProfileMethodMethodPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMethodMethodPolicyArrayOutput)
}

type WafProfileMethodMethodPolicyOutput struct{ *pulumi.OutputState }

func (WafProfileMethodMethodPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileMethodMethodPolicy)(nil)).Elem()
}

func (o WafProfileMethodMethodPolicyOutput) ToWafProfileMethodMethodPolicyOutput() WafProfileMethodMethodPolicyOutput {
	return o
}

func (o WafProfileMethodMethodPolicyOutput) ToWafProfileMethodMethodPolicyOutputWithContext(ctx context.Context) WafProfileMethodMethodPolicyOutput {
	return o
}

// Host address.
func (o WafProfileMethodMethodPolicyOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethodMethodPolicy) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Allowed Methods. Valid values: `get`, `post`, `put`, `head`, `connect`, `trace`, `options`, `delete`, `others`.
func (o WafProfileMethodMethodPolicyOutput) AllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethodMethodPolicy) *string { return v.AllowedMethods }).(pulumi.StringPtrOutput)
}

// HTTP method policy ID.
func (o WafProfileMethodMethodPolicyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileMethodMethodPolicy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// URL pattern.
func (o WafProfileMethodMethodPolicyOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethodMethodPolicy) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
func (o WafProfileMethodMethodPolicyOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileMethodMethodPolicy) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type WafProfileMethodMethodPolicyArrayOutput struct{ *pulumi.OutputState }

func (WafProfileMethodMethodPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileMethodMethodPolicy)(nil)).Elem()
}

func (o WafProfileMethodMethodPolicyArrayOutput) ToWafProfileMethodMethodPolicyArrayOutput() WafProfileMethodMethodPolicyArrayOutput {
	return o
}

func (o WafProfileMethodMethodPolicyArrayOutput) ToWafProfileMethodMethodPolicyArrayOutputWithContext(ctx context.Context) WafProfileMethodMethodPolicyArrayOutput {
	return o
}

func (o WafProfileMethodMethodPolicyArrayOutput) Index(i pulumi.IntInput) WafProfileMethodMethodPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileMethodMethodPolicy {
		return vs[0].([]WafProfileMethodMethodPolicy)[vs[1].(int)]
	}).(WafProfileMethodMethodPolicyOutput)
}

type WafProfileSignature struct {
	// The minimum number of Credit cards to detect violation.
	CreditCardDetectionThreshold *int `pulumi:"creditCardDetectionThreshold"`
	// Custom signature. The structure of `customSignature` block is documented below.
	CustomSignatures []WafProfileSignatureCustomSignature `pulumi:"customSignatures"`
	// Disabled signatures The structure of `disabledSignature` block is documented below.
	DisabledSignatures []WafProfileSignatureDisabledSignature `pulumi:"disabledSignatures"`
	// Disabled signature subclasses. The structure of `disabledSubClass` block is documented below.
	DisabledSubClasses []WafProfileSignatureDisabledSubClass `pulumi:"disabledSubClasses"`
	// Main signature class. The structure of `mainClass` block is documented below.
	MainClasses []WafProfileSignatureMainClass `pulumi:"mainClasses"`
}

// WafProfileSignatureInput is an input type that accepts WafProfileSignatureArgs and WafProfileSignatureOutput values.
// You can construct a concrete instance of `WafProfileSignatureInput` via:
//
//	WafProfileSignatureArgs{...}
type WafProfileSignatureInput interface {
	pulumi.Input

	ToWafProfileSignatureOutput() WafProfileSignatureOutput
	ToWafProfileSignatureOutputWithContext(context.Context) WafProfileSignatureOutput
}

type WafProfileSignatureArgs struct {
	// The minimum number of Credit cards to detect violation.
	CreditCardDetectionThreshold pulumi.IntPtrInput `pulumi:"creditCardDetectionThreshold"`
	// Custom signature. The structure of `customSignature` block is documented below.
	CustomSignatures WafProfileSignatureCustomSignatureArrayInput `pulumi:"customSignatures"`
	// Disabled signatures The structure of `disabledSignature` block is documented below.
	DisabledSignatures WafProfileSignatureDisabledSignatureArrayInput `pulumi:"disabledSignatures"`
	// Disabled signature subclasses. The structure of `disabledSubClass` block is documented below.
	DisabledSubClasses WafProfileSignatureDisabledSubClassArrayInput `pulumi:"disabledSubClasses"`
	// Main signature class. The structure of `mainClass` block is documented below.
	MainClasses WafProfileSignatureMainClassArrayInput `pulumi:"mainClasses"`
}

func (WafProfileSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignature)(nil)).Elem()
}

func (i WafProfileSignatureArgs) ToWafProfileSignatureOutput() WafProfileSignatureOutput {
	return i.ToWafProfileSignatureOutputWithContext(context.Background())
}

func (i WafProfileSignatureArgs) ToWafProfileSignatureOutputWithContext(ctx context.Context) WafProfileSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureOutput)
}

func (i WafProfileSignatureArgs) ToWafProfileSignaturePtrOutput() WafProfileSignaturePtrOutput {
	return i.ToWafProfileSignaturePtrOutputWithContext(context.Background())
}

func (i WafProfileSignatureArgs) ToWafProfileSignaturePtrOutputWithContext(ctx context.Context) WafProfileSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureOutput).ToWafProfileSignaturePtrOutputWithContext(ctx)
}

// WafProfileSignaturePtrInput is an input type that accepts WafProfileSignatureArgs, WafProfileSignaturePtr and WafProfileSignaturePtrOutput values.
// You can construct a concrete instance of `WafProfileSignaturePtrInput` via:
//
//	        WafProfileSignatureArgs{...}
//
//	or:
//
//	        nil
type WafProfileSignaturePtrInput interface {
	pulumi.Input

	ToWafProfileSignaturePtrOutput() WafProfileSignaturePtrOutput
	ToWafProfileSignaturePtrOutputWithContext(context.Context) WafProfileSignaturePtrOutput
}

type wafProfileSignaturePtrType WafProfileSignatureArgs

func WafProfileSignaturePtr(v *WafProfileSignatureArgs) WafProfileSignaturePtrInput {
	return (*wafProfileSignaturePtrType)(v)
}

func (*wafProfileSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileSignature)(nil)).Elem()
}

func (i *wafProfileSignaturePtrType) ToWafProfileSignaturePtrOutput() WafProfileSignaturePtrOutput {
	return i.ToWafProfileSignaturePtrOutputWithContext(context.Background())
}

func (i *wafProfileSignaturePtrType) ToWafProfileSignaturePtrOutputWithContext(ctx context.Context) WafProfileSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignaturePtrOutput)
}

type WafProfileSignatureOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignature)(nil)).Elem()
}

func (o WafProfileSignatureOutput) ToWafProfileSignatureOutput() WafProfileSignatureOutput {
	return o
}

func (o WafProfileSignatureOutput) ToWafProfileSignatureOutputWithContext(ctx context.Context) WafProfileSignatureOutput {
	return o
}

func (o WafProfileSignatureOutput) ToWafProfileSignaturePtrOutput() WafProfileSignaturePtrOutput {
	return o.ToWafProfileSignaturePtrOutputWithContext(context.Background())
}

func (o WafProfileSignatureOutput) ToWafProfileSignaturePtrOutputWithContext(ctx context.Context) WafProfileSignaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafProfileSignature) *WafProfileSignature {
		return &v
	}).(WafProfileSignaturePtrOutput)
}

// The minimum number of Credit cards to detect violation.
func (o WafProfileSignatureOutput) CreditCardDetectionThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileSignature) *int { return v.CreditCardDetectionThreshold }).(pulumi.IntPtrOutput)
}

// Custom signature. The structure of `customSignature` block is documented below.
func (o WafProfileSignatureOutput) CustomSignatures() WafProfileSignatureCustomSignatureArrayOutput {
	return o.ApplyT(func(v WafProfileSignature) []WafProfileSignatureCustomSignature { return v.CustomSignatures }).(WafProfileSignatureCustomSignatureArrayOutput)
}

// Disabled signatures The structure of `disabledSignature` block is documented below.
func (o WafProfileSignatureOutput) DisabledSignatures() WafProfileSignatureDisabledSignatureArrayOutput {
	return o.ApplyT(func(v WafProfileSignature) []WafProfileSignatureDisabledSignature { return v.DisabledSignatures }).(WafProfileSignatureDisabledSignatureArrayOutput)
}

// Disabled signature subclasses. The structure of `disabledSubClass` block is documented below.
func (o WafProfileSignatureOutput) DisabledSubClasses() WafProfileSignatureDisabledSubClassArrayOutput {
	return o.ApplyT(func(v WafProfileSignature) []WafProfileSignatureDisabledSubClass { return v.DisabledSubClasses }).(WafProfileSignatureDisabledSubClassArrayOutput)
}

// Main signature class. The structure of `mainClass` block is documented below.
func (o WafProfileSignatureOutput) MainClasses() WafProfileSignatureMainClassArrayOutput {
	return o.ApplyT(func(v WafProfileSignature) []WafProfileSignatureMainClass { return v.MainClasses }).(WafProfileSignatureMainClassArrayOutput)
}

type WafProfileSignaturePtrOutput struct{ *pulumi.OutputState }

func (WafProfileSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfileSignature)(nil)).Elem()
}

func (o WafProfileSignaturePtrOutput) ToWafProfileSignaturePtrOutput() WafProfileSignaturePtrOutput {
	return o
}

func (o WafProfileSignaturePtrOutput) ToWafProfileSignaturePtrOutputWithContext(ctx context.Context) WafProfileSignaturePtrOutput {
	return o
}

func (o WafProfileSignaturePtrOutput) Elem() WafProfileSignatureOutput {
	return o.ApplyT(func(v *WafProfileSignature) WafProfileSignature {
		if v != nil {
			return *v
		}
		var ret WafProfileSignature
		return ret
	}).(WafProfileSignatureOutput)
}

// The minimum number of Credit cards to detect violation.
func (o WafProfileSignaturePtrOutput) CreditCardDetectionThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafProfileSignature) *int {
		if v == nil {
			return nil
		}
		return v.CreditCardDetectionThreshold
	}).(pulumi.IntPtrOutput)
}

// Custom signature. The structure of `customSignature` block is documented below.
func (o WafProfileSignaturePtrOutput) CustomSignatures() WafProfileSignatureCustomSignatureArrayOutput {
	return o.ApplyT(func(v *WafProfileSignature) []WafProfileSignatureCustomSignature {
		if v == nil {
			return nil
		}
		return v.CustomSignatures
	}).(WafProfileSignatureCustomSignatureArrayOutput)
}

// Disabled signatures The structure of `disabledSignature` block is documented below.
func (o WafProfileSignaturePtrOutput) DisabledSignatures() WafProfileSignatureDisabledSignatureArrayOutput {
	return o.ApplyT(func(v *WafProfileSignature) []WafProfileSignatureDisabledSignature {
		if v == nil {
			return nil
		}
		return v.DisabledSignatures
	}).(WafProfileSignatureDisabledSignatureArrayOutput)
}

// Disabled signature subclasses. The structure of `disabledSubClass` block is documented below.
func (o WafProfileSignaturePtrOutput) DisabledSubClasses() WafProfileSignatureDisabledSubClassArrayOutput {
	return o.ApplyT(func(v *WafProfileSignature) []WafProfileSignatureDisabledSubClass {
		if v == nil {
			return nil
		}
		return v.DisabledSubClasses
	}).(WafProfileSignatureDisabledSubClassArrayOutput)
}

// Main signature class. The structure of `mainClass` block is documented below.
func (o WafProfileSignaturePtrOutput) MainClasses() WafProfileSignatureMainClassArrayOutput {
	return o.ApplyT(func(v *WafProfileSignature) []WafProfileSignatureMainClass {
		if v == nil {
			return nil
		}
		return v.MainClasses
	}).(WafProfileSignatureMainClassArrayOutput)
}

type WafProfileSignatureCustomSignature struct {
	// Action. Valid values: `allow`, `block`, `erase`.
	Action *string `pulumi:"action"`
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// Traffic direction. Valid values: `request`, `response`.
	Direction *string `pulumi:"direction"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Signature name.
	Name *string `pulumi:"name"`
	// Match pattern.
	Pattern *string `pulumi:"pattern"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Match HTTP target. Valid values: `arg`, `arg-name`, `req-body`, `req-cookie`, `req-cookie-name`, `req-filename`, `req-header`, `req-header-name`, `req-raw-uri`, `req-uri`, `resp-body`, `resp-hdr`, `resp-status`.
	Target *string `pulumi:"target"`
}

// WafProfileSignatureCustomSignatureInput is an input type that accepts WafProfileSignatureCustomSignatureArgs and WafProfileSignatureCustomSignatureOutput values.
// You can construct a concrete instance of `WafProfileSignatureCustomSignatureInput` via:
//
//	WafProfileSignatureCustomSignatureArgs{...}
type WafProfileSignatureCustomSignatureInput interface {
	pulumi.Input

	ToWafProfileSignatureCustomSignatureOutput() WafProfileSignatureCustomSignatureOutput
	ToWafProfileSignatureCustomSignatureOutputWithContext(context.Context) WafProfileSignatureCustomSignatureOutput
}

type WafProfileSignatureCustomSignatureArgs struct {
	// Action. Valid values: `allow`, `block`, `erase`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity pulumi.StringPtrInput `pulumi:"caseSensitivity"`
	// Traffic direction. Valid values: `request`, `response`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Signature name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Match pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Match HTTP target. Valid values: `arg`, `arg-name`, `req-body`, `req-cookie`, `req-cookie-name`, `req-filename`, `req-header`, `req-header-name`, `req-raw-uri`, `req-uri`, `resp-body`, `resp-hdr`, `resp-status`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (WafProfileSignatureCustomSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureCustomSignature)(nil)).Elem()
}

func (i WafProfileSignatureCustomSignatureArgs) ToWafProfileSignatureCustomSignatureOutput() WafProfileSignatureCustomSignatureOutput {
	return i.ToWafProfileSignatureCustomSignatureOutputWithContext(context.Background())
}

func (i WafProfileSignatureCustomSignatureArgs) ToWafProfileSignatureCustomSignatureOutputWithContext(ctx context.Context) WafProfileSignatureCustomSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureCustomSignatureOutput)
}

// WafProfileSignatureCustomSignatureArrayInput is an input type that accepts WafProfileSignatureCustomSignatureArray and WafProfileSignatureCustomSignatureArrayOutput values.
// You can construct a concrete instance of `WafProfileSignatureCustomSignatureArrayInput` via:
//
//	WafProfileSignatureCustomSignatureArray{ WafProfileSignatureCustomSignatureArgs{...} }
type WafProfileSignatureCustomSignatureArrayInput interface {
	pulumi.Input

	ToWafProfileSignatureCustomSignatureArrayOutput() WafProfileSignatureCustomSignatureArrayOutput
	ToWafProfileSignatureCustomSignatureArrayOutputWithContext(context.Context) WafProfileSignatureCustomSignatureArrayOutput
}

type WafProfileSignatureCustomSignatureArray []WafProfileSignatureCustomSignatureInput

func (WafProfileSignatureCustomSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureCustomSignature)(nil)).Elem()
}

func (i WafProfileSignatureCustomSignatureArray) ToWafProfileSignatureCustomSignatureArrayOutput() WafProfileSignatureCustomSignatureArrayOutput {
	return i.ToWafProfileSignatureCustomSignatureArrayOutputWithContext(context.Background())
}

func (i WafProfileSignatureCustomSignatureArray) ToWafProfileSignatureCustomSignatureArrayOutputWithContext(ctx context.Context) WafProfileSignatureCustomSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureCustomSignatureArrayOutput)
}

type WafProfileSignatureCustomSignatureOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureCustomSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureCustomSignature)(nil)).Elem()
}

func (o WafProfileSignatureCustomSignatureOutput) ToWafProfileSignatureCustomSignatureOutput() WafProfileSignatureCustomSignatureOutput {
	return o
}

func (o WafProfileSignatureCustomSignatureOutput) ToWafProfileSignatureCustomSignatureOutputWithContext(ctx context.Context) WafProfileSignatureCustomSignatureOutput {
	return o
}

// Action. Valid values: `allow`, `block`, `erase`.
func (o WafProfileSignatureCustomSignatureOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Case sensitivity in pattern. Valid values: `disable`, `enable`.
func (o WafProfileSignatureCustomSignatureOutput) CaseSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.CaseSensitivity }).(pulumi.StringPtrOutput)
}

// Traffic direction. Valid values: `request`, `response`.
func (o WafProfileSignatureCustomSignatureOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileSignatureCustomSignatureOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Signature name.
func (o WafProfileSignatureCustomSignatureOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Match pattern.
func (o WafProfileSignatureCustomSignatureOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileSignatureCustomSignatureOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileSignatureCustomSignatureOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Match HTTP target. Valid values: `arg`, `arg-name`, `req-body`, `req-cookie`, `req-cookie-name`, `req-filename`, `req-header`, `req-header-name`, `req-raw-uri`, `req-uri`, `resp-body`, `resp-hdr`, `resp-status`.
func (o WafProfileSignatureCustomSignatureOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureCustomSignature) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type WafProfileSignatureCustomSignatureArrayOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureCustomSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureCustomSignature)(nil)).Elem()
}

func (o WafProfileSignatureCustomSignatureArrayOutput) ToWafProfileSignatureCustomSignatureArrayOutput() WafProfileSignatureCustomSignatureArrayOutput {
	return o
}

func (o WafProfileSignatureCustomSignatureArrayOutput) ToWafProfileSignatureCustomSignatureArrayOutputWithContext(ctx context.Context) WafProfileSignatureCustomSignatureArrayOutput {
	return o
}

func (o WafProfileSignatureCustomSignatureArrayOutput) Index(i pulumi.IntInput) WafProfileSignatureCustomSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileSignatureCustomSignature {
		return vs[0].([]WafProfileSignatureCustomSignature)[vs[1].(int)]
	}).(WafProfileSignatureCustomSignatureOutput)
}

type WafProfileSignatureDisabledSignature struct {
	// Signature ID.
	Id *int `pulumi:"id"`
}

// WafProfileSignatureDisabledSignatureInput is an input type that accepts WafProfileSignatureDisabledSignatureArgs and WafProfileSignatureDisabledSignatureOutput values.
// You can construct a concrete instance of `WafProfileSignatureDisabledSignatureInput` via:
//
//	WafProfileSignatureDisabledSignatureArgs{...}
type WafProfileSignatureDisabledSignatureInput interface {
	pulumi.Input

	ToWafProfileSignatureDisabledSignatureOutput() WafProfileSignatureDisabledSignatureOutput
	ToWafProfileSignatureDisabledSignatureOutputWithContext(context.Context) WafProfileSignatureDisabledSignatureOutput
}

type WafProfileSignatureDisabledSignatureArgs struct {
	// Signature ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WafProfileSignatureDisabledSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureDisabledSignature)(nil)).Elem()
}

func (i WafProfileSignatureDisabledSignatureArgs) ToWafProfileSignatureDisabledSignatureOutput() WafProfileSignatureDisabledSignatureOutput {
	return i.ToWafProfileSignatureDisabledSignatureOutputWithContext(context.Background())
}

func (i WafProfileSignatureDisabledSignatureArgs) ToWafProfileSignatureDisabledSignatureOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureDisabledSignatureOutput)
}

// WafProfileSignatureDisabledSignatureArrayInput is an input type that accepts WafProfileSignatureDisabledSignatureArray and WafProfileSignatureDisabledSignatureArrayOutput values.
// You can construct a concrete instance of `WafProfileSignatureDisabledSignatureArrayInput` via:
//
//	WafProfileSignatureDisabledSignatureArray{ WafProfileSignatureDisabledSignatureArgs{...} }
type WafProfileSignatureDisabledSignatureArrayInput interface {
	pulumi.Input

	ToWafProfileSignatureDisabledSignatureArrayOutput() WafProfileSignatureDisabledSignatureArrayOutput
	ToWafProfileSignatureDisabledSignatureArrayOutputWithContext(context.Context) WafProfileSignatureDisabledSignatureArrayOutput
}

type WafProfileSignatureDisabledSignatureArray []WafProfileSignatureDisabledSignatureInput

func (WafProfileSignatureDisabledSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureDisabledSignature)(nil)).Elem()
}

func (i WafProfileSignatureDisabledSignatureArray) ToWafProfileSignatureDisabledSignatureArrayOutput() WafProfileSignatureDisabledSignatureArrayOutput {
	return i.ToWafProfileSignatureDisabledSignatureArrayOutputWithContext(context.Background())
}

func (i WafProfileSignatureDisabledSignatureArray) ToWafProfileSignatureDisabledSignatureArrayOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureDisabledSignatureArrayOutput)
}

type WafProfileSignatureDisabledSignatureOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureDisabledSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureDisabledSignature)(nil)).Elem()
}

func (o WafProfileSignatureDisabledSignatureOutput) ToWafProfileSignatureDisabledSignatureOutput() WafProfileSignatureDisabledSignatureOutput {
	return o
}

func (o WafProfileSignatureDisabledSignatureOutput) ToWafProfileSignatureDisabledSignatureOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSignatureOutput {
	return o
}

// Signature ID.
func (o WafProfileSignatureDisabledSignatureOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureDisabledSignature) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WafProfileSignatureDisabledSignatureArrayOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureDisabledSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureDisabledSignature)(nil)).Elem()
}

func (o WafProfileSignatureDisabledSignatureArrayOutput) ToWafProfileSignatureDisabledSignatureArrayOutput() WafProfileSignatureDisabledSignatureArrayOutput {
	return o
}

func (o WafProfileSignatureDisabledSignatureArrayOutput) ToWafProfileSignatureDisabledSignatureArrayOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSignatureArrayOutput {
	return o
}

func (o WafProfileSignatureDisabledSignatureArrayOutput) Index(i pulumi.IntInput) WafProfileSignatureDisabledSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileSignatureDisabledSignature {
		return vs[0].([]WafProfileSignatureDisabledSignature)[vs[1].(int)]
	}).(WafProfileSignatureDisabledSignatureOutput)
}

type WafProfileSignatureDisabledSubClass struct {
	// Signature subclass ID.
	Id *int `pulumi:"id"`
}

// WafProfileSignatureDisabledSubClassInput is an input type that accepts WafProfileSignatureDisabledSubClassArgs and WafProfileSignatureDisabledSubClassOutput values.
// You can construct a concrete instance of `WafProfileSignatureDisabledSubClassInput` via:
//
//	WafProfileSignatureDisabledSubClassArgs{...}
type WafProfileSignatureDisabledSubClassInput interface {
	pulumi.Input

	ToWafProfileSignatureDisabledSubClassOutput() WafProfileSignatureDisabledSubClassOutput
	ToWafProfileSignatureDisabledSubClassOutputWithContext(context.Context) WafProfileSignatureDisabledSubClassOutput
}

type WafProfileSignatureDisabledSubClassArgs struct {
	// Signature subclass ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WafProfileSignatureDisabledSubClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureDisabledSubClass)(nil)).Elem()
}

func (i WafProfileSignatureDisabledSubClassArgs) ToWafProfileSignatureDisabledSubClassOutput() WafProfileSignatureDisabledSubClassOutput {
	return i.ToWafProfileSignatureDisabledSubClassOutputWithContext(context.Background())
}

func (i WafProfileSignatureDisabledSubClassArgs) ToWafProfileSignatureDisabledSubClassOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSubClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureDisabledSubClassOutput)
}

// WafProfileSignatureDisabledSubClassArrayInput is an input type that accepts WafProfileSignatureDisabledSubClassArray and WafProfileSignatureDisabledSubClassArrayOutput values.
// You can construct a concrete instance of `WafProfileSignatureDisabledSubClassArrayInput` via:
//
//	WafProfileSignatureDisabledSubClassArray{ WafProfileSignatureDisabledSubClassArgs{...} }
type WafProfileSignatureDisabledSubClassArrayInput interface {
	pulumi.Input

	ToWafProfileSignatureDisabledSubClassArrayOutput() WafProfileSignatureDisabledSubClassArrayOutput
	ToWafProfileSignatureDisabledSubClassArrayOutputWithContext(context.Context) WafProfileSignatureDisabledSubClassArrayOutput
}

type WafProfileSignatureDisabledSubClassArray []WafProfileSignatureDisabledSubClassInput

func (WafProfileSignatureDisabledSubClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureDisabledSubClass)(nil)).Elem()
}

func (i WafProfileSignatureDisabledSubClassArray) ToWafProfileSignatureDisabledSubClassArrayOutput() WafProfileSignatureDisabledSubClassArrayOutput {
	return i.ToWafProfileSignatureDisabledSubClassArrayOutputWithContext(context.Background())
}

func (i WafProfileSignatureDisabledSubClassArray) ToWafProfileSignatureDisabledSubClassArrayOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSubClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureDisabledSubClassArrayOutput)
}

type WafProfileSignatureDisabledSubClassOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureDisabledSubClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureDisabledSubClass)(nil)).Elem()
}

func (o WafProfileSignatureDisabledSubClassOutput) ToWafProfileSignatureDisabledSubClassOutput() WafProfileSignatureDisabledSubClassOutput {
	return o
}

func (o WafProfileSignatureDisabledSubClassOutput) ToWafProfileSignatureDisabledSubClassOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSubClassOutput {
	return o
}

// Signature subclass ID.
func (o WafProfileSignatureDisabledSubClassOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureDisabledSubClass) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WafProfileSignatureDisabledSubClassArrayOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureDisabledSubClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureDisabledSubClass)(nil)).Elem()
}

func (o WafProfileSignatureDisabledSubClassArrayOutput) ToWafProfileSignatureDisabledSubClassArrayOutput() WafProfileSignatureDisabledSubClassArrayOutput {
	return o
}

func (o WafProfileSignatureDisabledSubClassArrayOutput) ToWafProfileSignatureDisabledSubClassArrayOutputWithContext(ctx context.Context) WafProfileSignatureDisabledSubClassArrayOutput {
	return o
}

func (o WafProfileSignatureDisabledSubClassArrayOutput) Index(i pulumi.IntInput) WafProfileSignatureDisabledSubClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileSignatureDisabledSubClass {
		return vs[0].([]WafProfileSignatureDisabledSubClass)[vs[1].(int)]
	}).(WafProfileSignatureDisabledSubClassOutput)
}

type WafProfileSignatureMainClass struct {
	// Action. Valid values: `allow`, `block`, `erase`.
	Action *string `pulumi:"action"`
	// Main signature class ID.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WafProfileSignatureMainClassInput is an input type that accepts WafProfileSignatureMainClassArgs and WafProfileSignatureMainClassOutput values.
// You can construct a concrete instance of `WafProfileSignatureMainClassInput` via:
//
//	WafProfileSignatureMainClassArgs{...}
type WafProfileSignatureMainClassInput interface {
	pulumi.Input

	ToWafProfileSignatureMainClassOutput() WafProfileSignatureMainClassOutput
	ToWafProfileSignatureMainClassOutputWithContext(context.Context) WafProfileSignatureMainClassOutput
}

type WafProfileSignatureMainClassArgs struct {
	// Action. Valid values: `allow`, `block`, `erase`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Main signature class ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WafProfileSignatureMainClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureMainClass)(nil)).Elem()
}

func (i WafProfileSignatureMainClassArgs) ToWafProfileSignatureMainClassOutput() WafProfileSignatureMainClassOutput {
	return i.ToWafProfileSignatureMainClassOutputWithContext(context.Background())
}

func (i WafProfileSignatureMainClassArgs) ToWafProfileSignatureMainClassOutputWithContext(ctx context.Context) WafProfileSignatureMainClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureMainClassOutput)
}

// WafProfileSignatureMainClassArrayInput is an input type that accepts WafProfileSignatureMainClassArray and WafProfileSignatureMainClassArrayOutput values.
// You can construct a concrete instance of `WafProfileSignatureMainClassArrayInput` via:
//
//	WafProfileSignatureMainClassArray{ WafProfileSignatureMainClassArgs{...} }
type WafProfileSignatureMainClassArrayInput interface {
	pulumi.Input

	ToWafProfileSignatureMainClassArrayOutput() WafProfileSignatureMainClassArrayOutput
	ToWafProfileSignatureMainClassArrayOutputWithContext(context.Context) WafProfileSignatureMainClassArrayOutput
}

type WafProfileSignatureMainClassArray []WafProfileSignatureMainClassInput

func (WafProfileSignatureMainClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureMainClass)(nil)).Elem()
}

func (i WafProfileSignatureMainClassArray) ToWafProfileSignatureMainClassArrayOutput() WafProfileSignatureMainClassArrayOutput {
	return i.ToWafProfileSignatureMainClassArrayOutputWithContext(context.Background())
}

func (i WafProfileSignatureMainClassArray) ToWafProfileSignatureMainClassArrayOutputWithContext(ctx context.Context) WafProfileSignatureMainClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileSignatureMainClassArrayOutput)
}

type WafProfileSignatureMainClassOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureMainClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileSignatureMainClass)(nil)).Elem()
}

func (o WafProfileSignatureMainClassOutput) ToWafProfileSignatureMainClassOutput() WafProfileSignatureMainClassOutput {
	return o
}

func (o WafProfileSignatureMainClassOutput) ToWafProfileSignatureMainClassOutputWithContext(ctx context.Context) WafProfileSignatureMainClassOutput {
	return o
}

// Action. Valid values: `allow`, `block`, `erase`.
func (o WafProfileSignatureMainClassOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureMainClass) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Main signature class ID.
func (o WafProfileSignatureMainClassOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureMainClass) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileSignatureMainClassOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureMainClass) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileSignatureMainClassOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureMainClass) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o WafProfileSignatureMainClassOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileSignatureMainClass) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WafProfileSignatureMainClassArrayOutput struct{ *pulumi.OutputState }

func (WafProfileSignatureMainClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileSignatureMainClass)(nil)).Elem()
}

func (o WafProfileSignatureMainClassArrayOutput) ToWafProfileSignatureMainClassArrayOutput() WafProfileSignatureMainClassArrayOutput {
	return o
}

func (o WafProfileSignatureMainClassArrayOutput) ToWafProfileSignatureMainClassArrayOutputWithContext(ctx context.Context) WafProfileSignatureMainClassArrayOutput {
	return o
}

func (o WafProfileSignatureMainClassArrayOutput) Index(i pulumi.IntInput) WafProfileSignatureMainClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileSignatureMainClass {
		return vs[0].([]WafProfileSignatureMainClass)[vs[1].(int)]
	}).(WafProfileSignatureMainClassOutput)
}

type WafProfileUrlAccess struct {
	// URL access pattern. The structure of `accessPattern` block is documented below.
	AccessPatterns []WafProfileUrlAccessAccessPattern `pulumi:"accessPatterns"`
	// Action. Valid values: `bypass`, `permit`, `block`.
	Action *string `pulumi:"action"`
	// Host address.
	Address *string `pulumi:"address"`
	// URL access ID.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity *string `pulumi:"severity"`
}

// WafProfileUrlAccessInput is an input type that accepts WafProfileUrlAccessArgs and WafProfileUrlAccessOutput values.
// You can construct a concrete instance of `WafProfileUrlAccessInput` via:
//
//	WafProfileUrlAccessArgs{...}
type WafProfileUrlAccessInput interface {
	pulumi.Input

	ToWafProfileUrlAccessOutput() WafProfileUrlAccessOutput
	ToWafProfileUrlAccessOutputWithContext(context.Context) WafProfileUrlAccessOutput
}

type WafProfileUrlAccessArgs struct {
	// URL access pattern. The structure of `accessPattern` block is documented below.
	AccessPatterns WafProfileUrlAccessAccessPatternArrayInput `pulumi:"accessPatterns"`
	// Action. Valid values: `bypass`, `permit`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Host address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// URL access ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Severity. Valid values: `high`, `medium`, `low`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (WafProfileUrlAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileUrlAccess)(nil)).Elem()
}

func (i WafProfileUrlAccessArgs) ToWafProfileUrlAccessOutput() WafProfileUrlAccessOutput {
	return i.ToWafProfileUrlAccessOutputWithContext(context.Background())
}

func (i WafProfileUrlAccessArgs) ToWafProfileUrlAccessOutputWithContext(ctx context.Context) WafProfileUrlAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileUrlAccessOutput)
}

// WafProfileUrlAccessArrayInput is an input type that accepts WafProfileUrlAccessArray and WafProfileUrlAccessArrayOutput values.
// You can construct a concrete instance of `WafProfileUrlAccessArrayInput` via:
//
//	WafProfileUrlAccessArray{ WafProfileUrlAccessArgs{...} }
type WafProfileUrlAccessArrayInput interface {
	pulumi.Input

	ToWafProfileUrlAccessArrayOutput() WafProfileUrlAccessArrayOutput
	ToWafProfileUrlAccessArrayOutputWithContext(context.Context) WafProfileUrlAccessArrayOutput
}

type WafProfileUrlAccessArray []WafProfileUrlAccessInput

func (WafProfileUrlAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileUrlAccess)(nil)).Elem()
}

func (i WafProfileUrlAccessArray) ToWafProfileUrlAccessArrayOutput() WafProfileUrlAccessArrayOutput {
	return i.ToWafProfileUrlAccessArrayOutputWithContext(context.Background())
}

func (i WafProfileUrlAccessArray) ToWafProfileUrlAccessArrayOutputWithContext(ctx context.Context) WafProfileUrlAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileUrlAccessArrayOutput)
}

type WafProfileUrlAccessOutput struct{ *pulumi.OutputState }

func (WafProfileUrlAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileUrlAccess)(nil)).Elem()
}

func (o WafProfileUrlAccessOutput) ToWafProfileUrlAccessOutput() WafProfileUrlAccessOutput {
	return o
}

func (o WafProfileUrlAccessOutput) ToWafProfileUrlAccessOutputWithContext(ctx context.Context) WafProfileUrlAccessOutput {
	return o
}

// URL access pattern. The structure of `accessPattern` block is documented below.
func (o WafProfileUrlAccessOutput) AccessPatterns() WafProfileUrlAccessAccessPatternArrayOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) []WafProfileUrlAccessAccessPattern { return v.AccessPatterns }).(WafProfileUrlAccessAccessPatternArrayOutput)
}

// Action. Valid values: `bypass`, `permit`, `block`.
func (o WafProfileUrlAccessOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Host address.
func (o WafProfileUrlAccessOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// URL access ID.
func (o WafProfileUrlAccessOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WafProfileUrlAccessOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Severity. Valid values: `high`, `medium`, `low`.
func (o WafProfileUrlAccessOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccess) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type WafProfileUrlAccessArrayOutput struct{ *pulumi.OutputState }

func (WafProfileUrlAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileUrlAccess)(nil)).Elem()
}

func (o WafProfileUrlAccessArrayOutput) ToWafProfileUrlAccessArrayOutput() WafProfileUrlAccessArrayOutput {
	return o
}

func (o WafProfileUrlAccessArrayOutput) ToWafProfileUrlAccessArrayOutputWithContext(ctx context.Context) WafProfileUrlAccessArrayOutput {
	return o
}

func (o WafProfileUrlAccessArrayOutput) Index(i pulumi.IntInput) WafProfileUrlAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileUrlAccess {
		return vs[0].([]WafProfileUrlAccess)[vs[1].(int)]
	}).(WafProfileUrlAccessOutput)
}

type WafProfileUrlAccessAccessPattern struct {
	// URL access pattern ID.
	Id *int `pulumi:"id"`
	// Enable/disable match negation. Valid values: `enable`, `disable`.
	Negate *string `pulumi:"negate"`
	// URL pattern.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex *string `pulumi:"regex"`
	// Source address.
	Srcaddr *string `pulumi:"srcaddr"`
}

// WafProfileUrlAccessAccessPatternInput is an input type that accepts WafProfileUrlAccessAccessPatternArgs and WafProfileUrlAccessAccessPatternOutput values.
// You can construct a concrete instance of `WafProfileUrlAccessAccessPatternInput` via:
//
//	WafProfileUrlAccessAccessPatternArgs{...}
type WafProfileUrlAccessAccessPatternInput interface {
	pulumi.Input

	ToWafProfileUrlAccessAccessPatternOutput() WafProfileUrlAccessAccessPatternOutput
	ToWafProfileUrlAccessAccessPatternOutputWithContext(context.Context) WafProfileUrlAccessAccessPatternOutput
}

type WafProfileUrlAccessAccessPatternArgs struct {
	// URL access pattern ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable match negation. Valid values: `enable`, `disable`.
	Negate pulumi.StringPtrInput `pulumi:"negate"`
	// URL pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Source address.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
}

func (WafProfileUrlAccessAccessPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileUrlAccessAccessPattern)(nil)).Elem()
}

func (i WafProfileUrlAccessAccessPatternArgs) ToWafProfileUrlAccessAccessPatternOutput() WafProfileUrlAccessAccessPatternOutput {
	return i.ToWafProfileUrlAccessAccessPatternOutputWithContext(context.Background())
}

func (i WafProfileUrlAccessAccessPatternArgs) ToWafProfileUrlAccessAccessPatternOutputWithContext(ctx context.Context) WafProfileUrlAccessAccessPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileUrlAccessAccessPatternOutput)
}

// WafProfileUrlAccessAccessPatternArrayInput is an input type that accepts WafProfileUrlAccessAccessPatternArray and WafProfileUrlAccessAccessPatternArrayOutput values.
// You can construct a concrete instance of `WafProfileUrlAccessAccessPatternArrayInput` via:
//
//	WafProfileUrlAccessAccessPatternArray{ WafProfileUrlAccessAccessPatternArgs{...} }
type WafProfileUrlAccessAccessPatternArrayInput interface {
	pulumi.Input

	ToWafProfileUrlAccessAccessPatternArrayOutput() WafProfileUrlAccessAccessPatternArrayOutput
	ToWafProfileUrlAccessAccessPatternArrayOutputWithContext(context.Context) WafProfileUrlAccessAccessPatternArrayOutput
}

type WafProfileUrlAccessAccessPatternArray []WafProfileUrlAccessAccessPatternInput

func (WafProfileUrlAccessAccessPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileUrlAccessAccessPattern)(nil)).Elem()
}

func (i WafProfileUrlAccessAccessPatternArray) ToWafProfileUrlAccessAccessPatternArrayOutput() WafProfileUrlAccessAccessPatternArrayOutput {
	return i.ToWafProfileUrlAccessAccessPatternArrayOutputWithContext(context.Background())
}

func (i WafProfileUrlAccessAccessPatternArray) ToWafProfileUrlAccessAccessPatternArrayOutputWithContext(ctx context.Context) WafProfileUrlAccessAccessPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileUrlAccessAccessPatternArrayOutput)
}

type WafProfileUrlAccessAccessPatternOutput struct{ *pulumi.OutputState }

func (WafProfileUrlAccessAccessPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafProfileUrlAccessAccessPattern)(nil)).Elem()
}

func (o WafProfileUrlAccessAccessPatternOutput) ToWafProfileUrlAccessAccessPatternOutput() WafProfileUrlAccessAccessPatternOutput {
	return o
}

func (o WafProfileUrlAccessAccessPatternOutput) ToWafProfileUrlAccessAccessPatternOutputWithContext(ctx context.Context) WafProfileUrlAccessAccessPatternOutput {
	return o
}

// URL access pattern ID.
func (o WafProfileUrlAccessAccessPatternOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccessAccessPattern) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable match negation. Valid values: `enable`, `disable`.
func (o WafProfileUrlAccessAccessPatternOutput) Negate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccessAccessPattern) *string { return v.Negate }).(pulumi.StringPtrOutput)
}

// URL pattern.
func (o WafProfileUrlAccessAccessPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccessAccessPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Enable/disable regular expression based pattern match. Valid values: `enable`, `disable`.
func (o WafProfileUrlAccessAccessPatternOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccessAccessPattern) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Source address.
func (o WafProfileUrlAccessAccessPatternOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafProfileUrlAccessAccessPattern) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

type WafProfileUrlAccessAccessPatternArrayOutput struct{ *pulumi.OutputState }

func (WafProfileUrlAccessAccessPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafProfileUrlAccessAccessPattern)(nil)).Elem()
}

func (o WafProfileUrlAccessAccessPatternArrayOutput) ToWafProfileUrlAccessAccessPatternArrayOutput() WafProfileUrlAccessAccessPatternArrayOutput {
	return o
}

func (o WafProfileUrlAccessAccessPatternArrayOutput) ToWafProfileUrlAccessAccessPatternArrayOutputWithContext(ctx context.Context) WafProfileUrlAccessAccessPatternArrayOutput {
	return o
}

func (o WafProfileUrlAccessAccessPatternArrayOutput) Index(i pulumi.IntInput) WafProfileUrlAccessAccessPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafProfileUrlAccessAccessPattern {
		return vs[0].([]WafProfileUrlAccessAccessPattern)[vs[1].(int)]
	}).(WafProfileUrlAccessAccessPatternOutput)
}

type WanoptCacheserviceDstPeer struct {
	// Set authentication type for this peer.
	AuthType *int `pulumi:"authType"`
	// Device ID of this peer.
	DeviceId *string `pulumi:"deviceId"`
	// Set encode type for this peer.
	EncodeType *int `pulumi:"encodeType"`
	// Set cluster IP address of this peer.
	Ip *string `pulumi:"ip"`
	// Set priority for this peer.
	Priority *int `pulumi:"priority"`
}

// WanoptCacheserviceDstPeerInput is an input type that accepts WanoptCacheserviceDstPeerArgs and WanoptCacheserviceDstPeerOutput values.
// You can construct a concrete instance of `WanoptCacheserviceDstPeerInput` via:
//
//	WanoptCacheserviceDstPeerArgs{...}
type WanoptCacheserviceDstPeerInput interface {
	pulumi.Input

	ToWanoptCacheserviceDstPeerOutput() WanoptCacheserviceDstPeerOutput
	ToWanoptCacheserviceDstPeerOutputWithContext(context.Context) WanoptCacheserviceDstPeerOutput
}

type WanoptCacheserviceDstPeerArgs struct {
	// Set authentication type for this peer.
	AuthType pulumi.IntPtrInput `pulumi:"authType"`
	// Device ID of this peer.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// Set encode type for this peer.
	EncodeType pulumi.IntPtrInput `pulumi:"encodeType"`
	// Set cluster IP address of this peer.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Set priority for this peer.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (WanoptCacheserviceDstPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptCacheserviceDstPeer)(nil)).Elem()
}

func (i WanoptCacheserviceDstPeerArgs) ToWanoptCacheserviceDstPeerOutput() WanoptCacheserviceDstPeerOutput {
	return i.ToWanoptCacheserviceDstPeerOutputWithContext(context.Background())
}

func (i WanoptCacheserviceDstPeerArgs) ToWanoptCacheserviceDstPeerOutputWithContext(ctx context.Context) WanoptCacheserviceDstPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptCacheserviceDstPeerOutput)
}

// WanoptCacheserviceDstPeerArrayInput is an input type that accepts WanoptCacheserviceDstPeerArray and WanoptCacheserviceDstPeerArrayOutput values.
// You can construct a concrete instance of `WanoptCacheserviceDstPeerArrayInput` via:
//
//	WanoptCacheserviceDstPeerArray{ WanoptCacheserviceDstPeerArgs{...} }
type WanoptCacheserviceDstPeerArrayInput interface {
	pulumi.Input

	ToWanoptCacheserviceDstPeerArrayOutput() WanoptCacheserviceDstPeerArrayOutput
	ToWanoptCacheserviceDstPeerArrayOutputWithContext(context.Context) WanoptCacheserviceDstPeerArrayOutput
}

type WanoptCacheserviceDstPeerArray []WanoptCacheserviceDstPeerInput

func (WanoptCacheserviceDstPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptCacheserviceDstPeer)(nil)).Elem()
}

func (i WanoptCacheserviceDstPeerArray) ToWanoptCacheserviceDstPeerArrayOutput() WanoptCacheserviceDstPeerArrayOutput {
	return i.ToWanoptCacheserviceDstPeerArrayOutputWithContext(context.Background())
}

func (i WanoptCacheserviceDstPeerArray) ToWanoptCacheserviceDstPeerArrayOutputWithContext(ctx context.Context) WanoptCacheserviceDstPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptCacheserviceDstPeerArrayOutput)
}

type WanoptCacheserviceDstPeerOutput struct{ *pulumi.OutputState }

func (WanoptCacheserviceDstPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptCacheserviceDstPeer)(nil)).Elem()
}

func (o WanoptCacheserviceDstPeerOutput) ToWanoptCacheserviceDstPeerOutput() WanoptCacheserviceDstPeerOutput {
	return o
}

func (o WanoptCacheserviceDstPeerOutput) ToWanoptCacheserviceDstPeerOutputWithContext(ctx context.Context) WanoptCacheserviceDstPeerOutput {
	return o
}

// Set authentication type for this peer.
func (o WanoptCacheserviceDstPeerOutput) AuthType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceDstPeer) *int { return v.AuthType }).(pulumi.IntPtrOutput)
}

// Device ID of this peer.
func (o WanoptCacheserviceDstPeerOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceDstPeer) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// Set encode type for this peer.
func (o WanoptCacheserviceDstPeerOutput) EncodeType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceDstPeer) *int { return v.EncodeType }).(pulumi.IntPtrOutput)
}

// Set cluster IP address of this peer.
func (o WanoptCacheserviceDstPeerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceDstPeer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Set priority for this peer.
func (o WanoptCacheserviceDstPeerOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceDstPeer) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type WanoptCacheserviceDstPeerArrayOutput struct{ *pulumi.OutputState }

func (WanoptCacheserviceDstPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptCacheserviceDstPeer)(nil)).Elem()
}

func (o WanoptCacheserviceDstPeerArrayOutput) ToWanoptCacheserviceDstPeerArrayOutput() WanoptCacheserviceDstPeerArrayOutput {
	return o
}

func (o WanoptCacheserviceDstPeerArrayOutput) ToWanoptCacheserviceDstPeerArrayOutputWithContext(ctx context.Context) WanoptCacheserviceDstPeerArrayOutput {
	return o
}

func (o WanoptCacheserviceDstPeerArrayOutput) Index(i pulumi.IntInput) WanoptCacheserviceDstPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptCacheserviceDstPeer {
		return vs[0].([]WanoptCacheserviceDstPeer)[vs[1].(int)]
	}).(WanoptCacheserviceDstPeerOutput)
}

type WanoptCacheserviceSrcPeer struct {
	// Set authentication type for this peer.
	AuthType *int `pulumi:"authType"`
	// Device ID of this peer.
	DeviceId *string `pulumi:"deviceId"`
	// Set encode type for this peer.
	EncodeType *int `pulumi:"encodeType"`
	// Set cluster IP address of this peer.
	Ip *string `pulumi:"ip"`
	// Set priority for this peer.
	Priority *int `pulumi:"priority"`
}

// WanoptCacheserviceSrcPeerInput is an input type that accepts WanoptCacheserviceSrcPeerArgs and WanoptCacheserviceSrcPeerOutput values.
// You can construct a concrete instance of `WanoptCacheserviceSrcPeerInput` via:
//
//	WanoptCacheserviceSrcPeerArgs{...}
type WanoptCacheserviceSrcPeerInput interface {
	pulumi.Input

	ToWanoptCacheserviceSrcPeerOutput() WanoptCacheserviceSrcPeerOutput
	ToWanoptCacheserviceSrcPeerOutputWithContext(context.Context) WanoptCacheserviceSrcPeerOutput
}

type WanoptCacheserviceSrcPeerArgs struct {
	// Set authentication type for this peer.
	AuthType pulumi.IntPtrInput `pulumi:"authType"`
	// Device ID of this peer.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// Set encode type for this peer.
	EncodeType pulumi.IntPtrInput `pulumi:"encodeType"`
	// Set cluster IP address of this peer.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Set priority for this peer.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (WanoptCacheserviceSrcPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptCacheserviceSrcPeer)(nil)).Elem()
}

func (i WanoptCacheserviceSrcPeerArgs) ToWanoptCacheserviceSrcPeerOutput() WanoptCacheserviceSrcPeerOutput {
	return i.ToWanoptCacheserviceSrcPeerOutputWithContext(context.Background())
}

func (i WanoptCacheserviceSrcPeerArgs) ToWanoptCacheserviceSrcPeerOutputWithContext(ctx context.Context) WanoptCacheserviceSrcPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptCacheserviceSrcPeerOutput)
}

// WanoptCacheserviceSrcPeerArrayInput is an input type that accepts WanoptCacheserviceSrcPeerArray and WanoptCacheserviceSrcPeerArrayOutput values.
// You can construct a concrete instance of `WanoptCacheserviceSrcPeerArrayInput` via:
//
//	WanoptCacheserviceSrcPeerArray{ WanoptCacheserviceSrcPeerArgs{...} }
type WanoptCacheserviceSrcPeerArrayInput interface {
	pulumi.Input

	ToWanoptCacheserviceSrcPeerArrayOutput() WanoptCacheserviceSrcPeerArrayOutput
	ToWanoptCacheserviceSrcPeerArrayOutputWithContext(context.Context) WanoptCacheserviceSrcPeerArrayOutput
}

type WanoptCacheserviceSrcPeerArray []WanoptCacheserviceSrcPeerInput

func (WanoptCacheserviceSrcPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptCacheserviceSrcPeer)(nil)).Elem()
}

func (i WanoptCacheserviceSrcPeerArray) ToWanoptCacheserviceSrcPeerArrayOutput() WanoptCacheserviceSrcPeerArrayOutput {
	return i.ToWanoptCacheserviceSrcPeerArrayOutputWithContext(context.Background())
}

func (i WanoptCacheserviceSrcPeerArray) ToWanoptCacheserviceSrcPeerArrayOutputWithContext(ctx context.Context) WanoptCacheserviceSrcPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptCacheserviceSrcPeerArrayOutput)
}

type WanoptCacheserviceSrcPeerOutput struct{ *pulumi.OutputState }

func (WanoptCacheserviceSrcPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptCacheserviceSrcPeer)(nil)).Elem()
}

func (o WanoptCacheserviceSrcPeerOutput) ToWanoptCacheserviceSrcPeerOutput() WanoptCacheserviceSrcPeerOutput {
	return o
}

func (o WanoptCacheserviceSrcPeerOutput) ToWanoptCacheserviceSrcPeerOutputWithContext(ctx context.Context) WanoptCacheserviceSrcPeerOutput {
	return o
}

// Set authentication type for this peer.
func (o WanoptCacheserviceSrcPeerOutput) AuthType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceSrcPeer) *int { return v.AuthType }).(pulumi.IntPtrOutput)
}

// Device ID of this peer.
func (o WanoptCacheserviceSrcPeerOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceSrcPeer) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// Set encode type for this peer.
func (o WanoptCacheserviceSrcPeerOutput) EncodeType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceSrcPeer) *int { return v.EncodeType }).(pulumi.IntPtrOutput)
}

// Set cluster IP address of this peer.
func (o WanoptCacheserviceSrcPeerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceSrcPeer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Set priority for this peer.
func (o WanoptCacheserviceSrcPeerOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptCacheserviceSrcPeer) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type WanoptCacheserviceSrcPeerArrayOutput struct{ *pulumi.OutputState }

func (WanoptCacheserviceSrcPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptCacheserviceSrcPeer)(nil)).Elem()
}

func (o WanoptCacheserviceSrcPeerArrayOutput) ToWanoptCacheserviceSrcPeerArrayOutput() WanoptCacheserviceSrcPeerArrayOutput {
	return o
}

func (o WanoptCacheserviceSrcPeerArrayOutput) ToWanoptCacheserviceSrcPeerArrayOutputWithContext(ctx context.Context) WanoptCacheserviceSrcPeerArrayOutput {
	return o
}

func (o WanoptCacheserviceSrcPeerArrayOutput) Index(i pulumi.IntInput) WanoptCacheserviceSrcPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptCacheserviceSrcPeer {
		return vs[0].([]WanoptCacheserviceSrcPeer)[vs[1].(int)]
	}).(WanoptCacheserviceSrcPeerOutput)
}

type WanoptContentdeliverynetworkruleHostDomainNameSuffix struct {
	// Suffix portion of the fully qualified domain name.
	Name *string `pulumi:"name"`
}

// WanoptContentdeliverynetworkruleHostDomainNameSuffixInput is an input type that accepts WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs and WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleHostDomainNameSuffixInput` via:
//
//	WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs{...}
type WanoptContentdeliverynetworkruleHostDomainNameSuffixInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput
	ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutputWithContext(context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput
}

type WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs struct {
	// Suffix portion of the fully qualified domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleHostDomainNameSuffix)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput {
	return i.ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput)
}

// WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayInput is an input type that accepts WanoptContentdeliverynetworkruleHostDomainNameSuffixArray and WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayInput` via:
//
//	WanoptContentdeliverynetworkruleHostDomainNameSuffixArray{ WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs{...} }
type WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput
	ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput
}

type WanoptContentdeliverynetworkruleHostDomainNameSuffixArray []WanoptContentdeliverynetworkruleHostDomainNameSuffixInput

func (WanoptContentdeliverynetworkruleHostDomainNameSuffixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleHostDomainNameSuffix)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleHostDomainNameSuffixArray) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleHostDomainNameSuffixArray) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput)
}

type WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleHostDomainNameSuffix)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput {
	return o
}

// Suffix portion of the fully qualified domain name.
func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleHostDomainNameSuffix) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleHostDomainNameSuffix)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput() WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput) ToWanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleHostDomainNameSuffix {
		return vs[0].([]WanoptContentdeliverynetworkruleHostDomainNameSuffix)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput)
}

type WanoptContentdeliverynetworkruleRule struct {
	// Content ID settings. The structure of `contentId` block is documented below.
	ContentId *WanoptContentdeliverynetworkruleRuleContentId `pulumi:"contentId"`
	// List of entries to match. The structure of `matchEntries` block is documented below.
	MatchEntries []WanoptContentdeliverynetworkruleRuleMatchEntry `pulumi:"matchEntries"`
	// Match criteria for collecting content ID. Valid values: `all`, `any`.
	MatchMode *string `pulumi:"matchMode"`
	// WAN optimization content delivery network rule name.
	Name *string `pulumi:"name"`
	// List of entries to skip. The structure of `skipEntries` block is documented below.
	SkipEntries []WanoptContentdeliverynetworkruleRuleSkipEntry `pulumi:"skipEntries"`
	// Skip mode when evaluating skip-rules. Valid values: `all`, `any`.
	SkipRuleMode *string `pulumi:"skipRuleMode"`
}

// WanoptContentdeliverynetworkruleRuleInput is an input type that accepts WanoptContentdeliverynetworkruleRuleArgs and WanoptContentdeliverynetworkruleRuleOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleInput` via:
//
//	WanoptContentdeliverynetworkruleRuleArgs{...}
type WanoptContentdeliverynetworkruleRuleInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleOutput() WanoptContentdeliverynetworkruleRuleOutput
	ToWanoptContentdeliverynetworkruleRuleOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleOutput
}

type WanoptContentdeliverynetworkruleRuleArgs struct {
	// Content ID settings. The structure of `contentId` block is documented below.
	ContentId WanoptContentdeliverynetworkruleRuleContentIdPtrInput `pulumi:"contentId"`
	// List of entries to match. The structure of `matchEntries` block is documented below.
	MatchEntries WanoptContentdeliverynetworkruleRuleMatchEntryArrayInput `pulumi:"matchEntries"`
	// Match criteria for collecting content ID. Valid values: `all`, `any`.
	MatchMode pulumi.StringPtrInput `pulumi:"matchMode"`
	// WAN optimization content delivery network rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of entries to skip. The structure of `skipEntries` block is documented below.
	SkipEntries WanoptContentdeliverynetworkruleRuleSkipEntryArrayInput `pulumi:"skipEntries"`
	// Skip mode when evaluating skip-rules. Valid values: `all`, `any`.
	SkipRuleMode pulumi.StringPtrInput `pulumi:"skipRuleMode"`
}

func (WanoptContentdeliverynetworkruleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRule)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleArgs) ToWanoptContentdeliverynetworkruleRuleOutput() WanoptContentdeliverynetworkruleRuleOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleArgs) ToWanoptContentdeliverynetworkruleRuleOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleOutput)
}

// WanoptContentdeliverynetworkruleRuleArrayInput is an input type that accepts WanoptContentdeliverynetworkruleRuleArray and WanoptContentdeliverynetworkruleRuleArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleArrayInput` via:
//
//	WanoptContentdeliverynetworkruleRuleArray{ WanoptContentdeliverynetworkruleRuleArgs{...} }
type WanoptContentdeliverynetworkruleRuleArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleArrayOutput() WanoptContentdeliverynetworkruleRuleArrayOutput
	ToWanoptContentdeliverynetworkruleRuleArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleArrayOutput
}

type WanoptContentdeliverynetworkruleRuleArray []WanoptContentdeliverynetworkruleRuleInput

func (WanoptContentdeliverynetworkruleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRule)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleArray) ToWanoptContentdeliverynetworkruleRuleArrayOutput() WanoptContentdeliverynetworkruleRuleArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleArray) ToWanoptContentdeliverynetworkruleRuleArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleArrayOutput)
}

type WanoptContentdeliverynetworkruleRuleOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRule)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleOutput) ToWanoptContentdeliverynetworkruleRuleOutput() WanoptContentdeliverynetworkruleRuleOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleOutput) ToWanoptContentdeliverynetworkruleRuleOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleOutput {
	return o
}

// Content ID settings. The structure of `contentId` block is documented below.
func (o WanoptContentdeliverynetworkruleRuleOutput) ContentId() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) *WanoptContentdeliverynetworkruleRuleContentId {
		return v.ContentId
	}).(WanoptContentdeliverynetworkruleRuleContentIdPtrOutput)
}

// List of entries to match. The structure of `matchEntries` block is documented below.
func (o WanoptContentdeliverynetworkruleRuleOutput) MatchEntries() WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) []WanoptContentdeliverynetworkruleRuleMatchEntry {
		return v.MatchEntries
	}).(WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput)
}

// Match criteria for collecting content ID. Valid values: `all`, `any`.
func (o WanoptContentdeliverynetworkruleRuleOutput) MatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) *string { return v.MatchMode }).(pulumi.StringPtrOutput)
}

// WAN optimization content delivery network rule name.
func (o WanoptContentdeliverynetworkruleRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of entries to skip. The structure of `skipEntries` block is documented below.
func (o WanoptContentdeliverynetworkruleRuleOutput) SkipEntries() WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) []WanoptContentdeliverynetworkruleRuleSkipEntry {
		return v.SkipEntries
	}).(WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput)
}

// Skip mode when evaluating skip-rules. Valid values: `all`, `any`.
func (o WanoptContentdeliverynetworkruleRuleOutput) SkipRuleMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRule) *string { return v.SkipRuleMode }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRule)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleArrayOutput) ToWanoptContentdeliverynetworkruleRuleArrayOutput() WanoptContentdeliverynetworkruleRuleArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleArrayOutput) ToWanoptContentdeliverynetworkruleRuleArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleRule {
		return vs[0].([]WanoptContentdeliverynetworkruleRule)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleRuleOutput)
}

type WanoptContentdeliverynetworkruleRuleContentId struct {
	// Search direction from end-str match. Valid values: `forward`, `backward`.
	EndDirection *string `pulumi:"endDirection"`
	// Number of characters in URL to skip after end-str has been matched.
	EndSkip *int `pulumi:"endSkip"`
	// String from which to end search.
	EndStr *string `pulumi:"endStr"`
	// Name of content ID within the start string and end string.
	RangeStr *string `pulumi:"rangeStr"`
	// Search direction from start-str match. Valid values: `forward`, `backward`.
	StartDirection *string `pulumi:"startDirection"`
	// Number of characters in URL to skip after start-str has been matched.
	StartSkip *int `pulumi:"startSkip"`
	// String from which to start search.
	StartStr *string `pulumi:"startStr"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`, `hls-manifest`, `dash-manifest`, `hls-fragment`, `dash-fragment`.
	Target *string `pulumi:"target"`
}

// WanoptContentdeliverynetworkruleRuleContentIdInput is an input type that accepts WanoptContentdeliverynetworkruleRuleContentIdArgs and WanoptContentdeliverynetworkruleRuleContentIdOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleContentIdInput` via:
//
//	WanoptContentdeliverynetworkruleRuleContentIdArgs{...}
type WanoptContentdeliverynetworkruleRuleContentIdInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleContentIdOutput() WanoptContentdeliverynetworkruleRuleContentIdOutput
	ToWanoptContentdeliverynetworkruleRuleContentIdOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleContentIdOutput
}

type WanoptContentdeliverynetworkruleRuleContentIdArgs struct {
	// Search direction from end-str match. Valid values: `forward`, `backward`.
	EndDirection pulumi.StringPtrInput `pulumi:"endDirection"`
	// Number of characters in URL to skip after end-str has been matched.
	EndSkip pulumi.IntPtrInput `pulumi:"endSkip"`
	// String from which to end search.
	EndStr pulumi.StringPtrInput `pulumi:"endStr"`
	// Name of content ID within the start string and end string.
	RangeStr pulumi.StringPtrInput `pulumi:"rangeStr"`
	// Search direction from start-str match. Valid values: `forward`, `backward`.
	StartDirection pulumi.StringPtrInput `pulumi:"startDirection"`
	// Number of characters in URL to skip after start-str has been matched.
	StartSkip pulumi.IntPtrInput `pulumi:"startSkip"`
	// String from which to start search.
	StartStr pulumi.StringPtrInput `pulumi:"startStr"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`, `hls-manifest`, `dash-manifest`, `hls-fragment`, `dash-fragment`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (WanoptContentdeliverynetworkruleRuleContentIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleContentId)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleContentIdArgs) ToWanoptContentdeliverynetworkruleRuleContentIdOutput() WanoptContentdeliverynetworkruleRuleContentIdOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleContentIdOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleContentIdArgs) ToWanoptContentdeliverynetworkruleRuleContentIdOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleContentIdOutput)
}

func (i WanoptContentdeliverynetworkruleRuleContentIdArgs) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutput() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleContentIdArgs) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleContentIdOutput).ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(ctx)
}

// WanoptContentdeliverynetworkruleRuleContentIdPtrInput is an input type that accepts WanoptContentdeliverynetworkruleRuleContentIdArgs, WanoptContentdeliverynetworkruleRuleContentIdPtr and WanoptContentdeliverynetworkruleRuleContentIdPtrOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleContentIdPtrInput` via:
//
//	        WanoptContentdeliverynetworkruleRuleContentIdArgs{...}
//
//	or:
//
//	        nil
type WanoptContentdeliverynetworkruleRuleContentIdPtrInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutput() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput
	ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleContentIdPtrOutput
}

type wanoptContentdeliverynetworkruleRuleContentIdPtrType WanoptContentdeliverynetworkruleRuleContentIdArgs

func WanoptContentdeliverynetworkruleRuleContentIdPtr(v *WanoptContentdeliverynetworkruleRuleContentIdArgs) WanoptContentdeliverynetworkruleRuleContentIdPtrInput {
	return (*wanoptContentdeliverynetworkruleRuleContentIdPtrType)(v)
}

func (*wanoptContentdeliverynetworkruleRuleContentIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptContentdeliverynetworkruleRuleContentId)(nil)).Elem()
}

func (i *wanoptContentdeliverynetworkruleRuleContentIdPtrType) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutput() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(context.Background())
}

func (i *wanoptContentdeliverynetworkruleRuleContentIdPtrType) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleContentIdPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleContentIdOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleContentIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleContentId)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) ToWanoptContentdeliverynetworkruleRuleContentIdOutput() WanoptContentdeliverynetworkruleRuleContentIdOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) ToWanoptContentdeliverynetworkruleRuleContentIdOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutput() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return o.ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(context.Background())
}

func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptContentdeliverynetworkruleRuleContentId) *WanoptContentdeliverynetworkruleRuleContentId {
		return &v
	}).(WanoptContentdeliverynetworkruleRuleContentIdPtrOutput)
}

// Search direction from end-str match. Valid values: `forward`, `backward`.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) EndDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.EndDirection }).(pulumi.StringPtrOutput)
}

// Number of characters in URL to skip after end-str has been matched.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) EndSkip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *int { return v.EndSkip }).(pulumi.IntPtrOutput)
}

// String from which to end search.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) EndStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.EndStr }).(pulumi.StringPtrOutput)
}

// Name of content ID within the start string and end string.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) RangeStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.RangeStr }).(pulumi.StringPtrOutput)
}

// Search direction from start-str match. Valid values: `forward`, `backward`.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) StartDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.StartDirection }).(pulumi.StringPtrOutput)
}

// Number of characters in URL to skip after start-str has been matched.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) StartSkip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *int { return v.StartSkip }).(pulumi.IntPtrOutput)
}

// String from which to start search.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) StartStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.StartStr }).(pulumi.StringPtrOutput)
}

// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`, `hls-manifest`, `dash-manifest`, `hls-fragment`, `dash-fragment`.
func (o WanoptContentdeliverynetworkruleRuleContentIdOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleContentId) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleContentIdPtrOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptContentdeliverynetworkruleRuleContentId)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutput() WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) ToWanoptContentdeliverynetworkruleRuleContentIdPtrOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleContentIdPtrOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) Elem() WanoptContentdeliverynetworkruleRuleContentIdOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) WanoptContentdeliverynetworkruleRuleContentId {
		if v != nil {
			return *v
		}
		var ret WanoptContentdeliverynetworkruleRuleContentId
		return ret
	}).(WanoptContentdeliverynetworkruleRuleContentIdOutput)
}

// Search direction from end-str match. Valid values: `forward`, `backward`.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) EndDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.EndDirection
	}).(pulumi.StringPtrOutput)
}

// Number of characters in URL to skip after end-str has been matched.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) EndSkip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *int {
		if v == nil {
			return nil
		}
		return v.EndSkip
	}).(pulumi.IntPtrOutput)
}

// String from which to end search.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) EndStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.EndStr
	}).(pulumi.StringPtrOutput)
}

// Name of content ID within the start string and end string.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) RangeStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.RangeStr
	}).(pulumi.StringPtrOutput)
}

// Search direction from start-str match. Valid values: `forward`, `backward`.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) StartDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.StartDirection
	}).(pulumi.StringPtrOutput)
}

// Number of characters in URL to skip after start-str has been matched.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) StartSkip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *int {
		if v == nil {
			return nil
		}
		return v.StartSkip
	}).(pulumi.IntPtrOutput)
}

// String from which to start search.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) StartStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.StartStr
	}).(pulumi.StringPtrOutput)
}

// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`, `hls-manifest`, `dash-manifest`, `hls-fragment`, `dash-fragment`.
func (o WanoptContentdeliverynetworkruleRuleContentIdPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptContentdeliverynetworkruleRuleContentId) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntry struct {
	// Rule ID.
	Id *int `pulumi:"id"`
	// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
	Patterns []WanoptContentdeliverynetworkruleRuleMatchEntryPattern `pulumi:"patterns"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
	Target *string `pulumi:"target"`
}

// WanoptContentdeliverynetworkruleRuleMatchEntryInput is an input type that accepts WanoptContentdeliverynetworkruleRuleMatchEntryArgs and WanoptContentdeliverynetworkruleRuleMatchEntryOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleMatchEntryInput` via:
//
//	WanoptContentdeliverynetworkruleRuleMatchEntryArgs{...}
type WanoptContentdeliverynetworkruleRuleMatchEntryInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleMatchEntryOutput() WanoptContentdeliverynetworkruleRuleMatchEntryOutput
	ToWanoptContentdeliverynetworkruleRuleMatchEntryOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryOutput
}

type WanoptContentdeliverynetworkruleRuleMatchEntryArgs struct {
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
	Patterns WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayInput `pulumi:"patterns"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (WanoptContentdeliverynetworkruleRuleMatchEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntry)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryArgs) ToWanoptContentdeliverynetworkruleRuleMatchEntryOutput() WanoptContentdeliverynetworkruleRuleMatchEntryOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleMatchEntryOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryArgs) ToWanoptContentdeliverynetworkruleRuleMatchEntryOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleMatchEntryOutput)
}

// WanoptContentdeliverynetworkruleRuleMatchEntryArrayInput is an input type that accepts WanoptContentdeliverynetworkruleRuleMatchEntryArray and WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleMatchEntryArrayInput` via:
//
//	WanoptContentdeliverynetworkruleRuleMatchEntryArray{ WanoptContentdeliverynetworkruleRuleMatchEntryArgs{...} }
type WanoptContentdeliverynetworkruleRuleMatchEntryArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput
	ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput
}

type WanoptContentdeliverynetworkruleRuleMatchEntryArray []WanoptContentdeliverynetworkruleRuleMatchEntryInput

func (WanoptContentdeliverynetworkruleRuleMatchEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleMatchEntry)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryArray) ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryArray) ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntryOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleMatchEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntry)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryOutput() WanoptContentdeliverynetworkruleRuleMatchEntryOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryOutput {
	return o
}

// Rule ID.
func (o WanoptContentdeliverynetworkruleRuleMatchEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleMatchEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
func (o WanoptContentdeliverynetworkruleRuleMatchEntryOutput) Patterns() WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleMatchEntry) []WanoptContentdeliverynetworkruleRuleMatchEntryPattern {
		return v.Patterns
	}).(WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput)
}

// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
func (o WanoptContentdeliverynetworkruleRuleMatchEntryOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleMatchEntry) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleMatchEntry)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleRuleMatchEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleRuleMatchEntry {
		return vs[0].([]WanoptContentdeliverynetworkruleRuleMatchEntry)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleRuleMatchEntryOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntryPattern struct {
	// Pattern strings.
	String *string `pulumi:"string"`
}

// WanoptContentdeliverynetworkruleRuleMatchEntryPatternInput is an input type that accepts WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs and WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleMatchEntryPatternInput` via:
//
//	WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs{...}
type WanoptContentdeliverynetworkruleRuleMatchEntryPatternInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput
	ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput
}

type WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs struct {
	// Pattern strings.
	String pulumi.StringPtrInput `pulumi:"string"`
}

func (WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryPattern)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput)
}

// WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayInput is an input type that accepts WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray and WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayInput` via:
//
//	WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray{ WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs{...} }
type WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput
	ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput
}

type WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray []WanoptContentdeliverynetworkruleRuleMatchEntryPatternInput

func (WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleMatchEntryPattern)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryPattern)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput {
	return o
}

// Pattern strings.
func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleMatchEntryPattern) *string { return v.String }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleMatchEntryPattern)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput) ToWanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleRuleMatchEntryPattern {
		return vs[0].([]WanoptContentdeliverynetworkruleRuleMatchEntryPattern)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntry struct {
	// Rule ID.
	Id *int `pulumi:"id"`
	// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
	Patterns []WanoptContentdeliverynetworkruleRuleSkipEntryPattern `pulumi:"patterns"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
	Target *string `pulumi:"target"`
}

// WanoptContentdeliverynetworkruleRuleSkipEntryInput is an input type that accepts WanoptContentdeliverynetworkruleRuleSkipEntryArgs and WanoptContentdeliverynetworkruleRuleSkipEntryOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleSkipEntryInput` via:
//
//	WanoptContentdeliverynetworkruleRuleSkipEntryArgs{...}
type WanoptContentdeliverynetworkruleRuleSkipEntryInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleSkipEntryOutput() WanoptContentdeliverynetworkruleRuleSkipEntryOutput
	ToWanoptContentdeliverynetworkruleRuleSkipEntryOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryOutput
}

type WanoptContentdeliverynetworkruleRuleSkipEntryArgs struct {
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
	Patterns WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayInput `pulumi:"patterns"`
	// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (WanoptContentdeliverynetworkruleRuleSkipEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntry)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryArgs) ToWanoptContentdeliverynetworkruleRuleSkipEntryOutput() WanoptContentdeliverynetworkruleRuleSkipEntryOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleSkipEntryOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryArgs) ToWanoptContentdeliverynetworkruleRuleSkipEntryOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleSkipEntryOutput)
}

// WanoptContentdeliverynetworkruleRuleSkipEntryArrayInput is an input type that accepts WanoptContentdeliverynetworkruleRuleSkipEntryArray and WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleSkipEntryArrayInput` via:
//
//	WanoptContentdeliverynetworkruleRuleSkipEntryArray{ WanoptContentdeliverynetworkruleRuleSkipEntryArgs{...} }
type WanoptContentdeliverynetworkruleRuleSkipEntryArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput
	ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput
}

type WanoptContentdeliverynetworkruleRuleSkipEntryArray []WanoptContentdeliverynetworkruleRuleSkipEntryInput

func (WanoptContentdeliverynetworkruleRuleSkipEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleSkipEntry)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryArray) ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryArray) ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntryOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleSkipEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntry)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryOutput() WanoptContentdeliverynetworkruleRuleSkipEntryOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryOutput {
	return o
}

// Rule ID.
func (o WanoptContentdeliverynetworkruleRuleSkipEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleSkipEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Pattern string for matching target (Referrer or URL pattern, eg. "a", "a*c", "*a*", "a*c*e", and "*"). The structure of `pattern` block is documented below.
func (o WanoptContentdeliverynetworkruleRuleSkipEntryOutput) Patterns() WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleSkipEntry) []WanoptContentdeliverynetworkruleRuleSkipEntryPattern {
		return v.Patterns
	}).(WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput)
}

// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`.
func (o WanoptContentdeliverynetworkruleRuleSkipEntryOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleSkipEntry) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleSkipEntry)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleRuleSkipEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleRuleSkipEntry {
		return vs[0].([]WanoptContentdeliverynetworkruleRuleSkipEntry)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleRuleSkipEntryOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntryPattern struct {
	// Pattern strings.
	String *string `pulumi:"string"`
}

// WanoptContentdeliverynetworkruleRuleSkipEntryPatternInput is an input type that accepts WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs and WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleSkipEntryPatternInput` via:
//
//	WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs{...}
type WanoptContentdeliverynetworkruleRuleSkipEntryPatternInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput
	ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput
}

type WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs struct {
	// Pattern strings.
	String pulumi.StringPtrInput `pulumi:"string"`
}

func (WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryPattern)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput)
}

// WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayInput is an input type that accepts WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray and WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput values.
// You can construct a concrete instance of `WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayInput` via:
//
//	WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray{ WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs{...} }
type WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayInput interface {
	pulumi.Input

	ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput
	ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutputWithContext(context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput
}

type WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray []WanoptContentdeliverynetworkruleRuleSkipEntryPatternInput

func (WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleSkipEntryPattern)(nil)).Elem()
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput {
	return i.ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutputWithContext(context.Background())
}

func (i WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryPattern)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput {
	return o
}

// Pattern strings.
func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptContentdeliverynetworkruleRuleSkipEntryPattern) *string { return v.String }).(pulumi.StringPtrOutput)
}

type WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput struct{ *pulumi.OutputState }

func (WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WanoptContentdeliverynetworkruleRuleSkipEntryPattern)(nil)).Elem()
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput() WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput) ToWanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutputWithContext(ctx context.Context) WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput {
	return o
}

func (o WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput) Index(i pulumi.IntInput) WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WanoptContentdeliverynetworkruleRuleSkipEntryPattern {
		return vs[0].([]WanoptContentdeliverynetworkruleRuleSkipEntryPattern)[vs[1].(int)]
	}).(WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput)
}

type WanoptProfileCifs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching *string `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic *string `pulumi:"logTraffic"`
	// Single port number or port number range for CIFS. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port *int `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking *string `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt *string `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel *string `pulumi:"secureTunnel"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing *string `pulumi:"tunnelSharing"`
}

// WanoptProfileCifsInput is an input type that accepts WanoptProfileCifsArgs and WanoptProfileCifsOutput values.
// You can construct a concrete instance of `WanoptProfileCifsInput` via:
//
//	WanoptProfileCifsArgs{...}
type WanoptProfileCifsInput interface {
	pulumi.Input

	ToWanoptProfileCifsOutput() WanoptProfileCifsOutput
	ToWanoptProfileCifsOutputWithContext(context.Context) WanoptProfileCifsOutput
}

type WanoptProfileCifsArgs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching pulumi.StringPtrInput `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic pulumi.StringPtrInput `pulumi:"logTraffic"`
	// Single port number or port number range for CIFS. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking pulumi.StringPtrInput `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt pulumi.StringPtrInput `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel pulumi.StringPtrInput `pulumi:"secureTunnel"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing pulumi.StringPtrInput `pulumi:"tunnelSharing"`
}

func (WanoptProfileCifsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileCifs)(nil)).Elem()
}

func (i WanoptProfileCifsArgs) ToWanoptProfileCifsOutput() WanoptProfileCifsOutput {
	return i.ToWanoptProfileCifsOutputWithContext(context.Background())
}

func (i WanoptProfileCifsArgs) ToWanoptProfileCifsOutputWithContext(ctx context.Context) WanoptProfileCifsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileCifsOutput)
}

func (i WanoptProfileCifsArgs) ToWanoptProfileCifsPtrOutput() WanoptProfileCifsPtrOutput {
	return i.ToWanoptProfileCifsPtrOutputWithContext(context.Background())
}

func (i WanoptProfileCifsArgs) ToWanoptProfileCifsPtrOutputWithContext(ctx context.Context) WanoptProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileCifsOutput).ToWanoptProfileCifsPtrOutputWithContext(ctx)
}

// WanoptProfileCifsPtrInput is an input type that accepts WanoptProfileCifsArgs, WanoptProfileCifsPtr and WanoptProfileCifsPtrOutput values.
// You can construct a concrete instance of `WanoptProfileCifsPtrInput` via:
//
//	        WanoptProfileCifsArgs{...}
//
//	or:
//
//	        nil
type WanoptProfileCifsPtrInput interface {
	pulumi.Input

	ToWanoptProfileCifsPtrOutput() WanoptProfileCifsPtrOutput
	ToWanoptProfileCifsPtrOutputWithContext(context.Context) WanoptProfileCifsPtrOutput
}

type wanoptProfileCifsPtrType WanoptProfileCifsArgs

func WanoptProfileCifsPtr(v *WanoptProfileCifsArgs) WanoptProfileCifsPtrInput {
	return (*wanoptProfileCifsPtrType)(v)
}

func (*wanoptProfileCifsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileCifs)(nil)).Elem()
}

func (i *wanoptProfileCifsPtrType) ToWanoptProfileCifsPtrOutput() WanoptProfileCifsPtrOutput {
	return i.ToWanoptProfileCifsPtrOutputWithContext(context.Background())
}

func (i *wanoptProfileCifsPtrType) ToWanoptProfileCifsPtrOutputWithContext(ctx context.Context) WanoptProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileCifsPtrOutput)
}

type WanoptProfileCifsOutput struct{ *pulumi.OutputState }

func (WanoptProfileCifsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileCifs)(nil)).Elem()
}

func (o WanoptProfileCifsOutput) ToWanoptProfileCifsOutput() WanoptProfileCifsOutput {
	return o
}

func (o WanoptProfileCifsOutput) ToWanoptProfileCifsOutputWithContext(ctx context.Context) WanoptProfileCifsOutput {
	return o
}

func (o WanoptProfileCifsOutput) ToWanoptProfileCifsPtrOutput() WanoptProfileCifsPtrOutput {
	return o.ToWanoptProfileCifsPtrOutputWithContext(context.Background())
}

func (o WanoptProfileCifsOutput) ToWanoptProfileCifsPtrOutputWithContext(ctx context.Context) WanoptProfileCifsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptProfileCifs) *WanoptProfileCifs {
		return &v
	}).(WanoptProfileCifsPtrOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.ByteCaching }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.LogTraffic }).(pulumi.StringPtrOutput)
}

// Single port number or port number range for CIFS. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileCifsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileCifsOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.PreferChunking }).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileCifsOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.ProtocolOpt }).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileCifsOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.SecureTunnel }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileCifsOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileCifs) *string { return v.TunnelSharing }).(pulumi.StringPtrOutput)
}

type WanoptProfileCifsPtrOutput struct{ *pulumi.OutputState }

func (WanoptProfileCifsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileCifs)(nil)).Elem()
}

func (o WanoptProfileCifsPtrOutput) ToWanoptProfileCifsPtrOutput() WanoptProfileCifsPtrOutput {
	return o
}

func (o WanoptProfileCifsPtrOutput) ToWanoptProfileCifsPtrOutputWithContext(ctx context.Context) WanoptProfileCifsPtrOutput {
	return o
}

func (o WanoptProfileCifsPtrOutput) Elem() WanoptProfileCifsOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) WanoptProfileCifs {
		if v != nil {
			return *v
		}
		var ret WanoptProfileCifs
		return ret
	}).(WanoptProfileCifsOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsPtrOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ByteCaching
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsPtrOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.LogTraffic
	}).(pulumi.StringPtrOutput)
}

// Single port number or port number range for CIFS. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileCifsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileCifsPtrOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.PreferChunking
	}).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileCifsPtrOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolOpt
	}).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileCifsPtrOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.SecureTunnel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileCifsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileCifsPtrOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.TunnelSharing
	}).(pulumi.StringPtrOutput)
}

type WanoptProfileFtp struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching *string `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic *string `pulumi:"logTraffic"`
	// Single port number or port number range for FTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port *int `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking *string `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt *string `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel *string `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading (hardware acceleration) for traffic in this tunnel. Valid values: `enable`, `disable`.
	Ssl *string `pulumi:"ssl"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing *string `pulumi:"tunnelSharing"`
}

// WanoptProfileFtpInput is an input type that accepts WanoptProfileFtpArgs and WanoptProfileFtpOutput values.
// You can construct a concrete instance of `WanoptProfileFtpInput` via:
//
//	WanoptProfileFtpArgs{...}
type WanoptProfileFtpInput interface {
	pulumi.Input

	ToWanoptProfileFtpOutput() WanoptProfileFtpOutput
	ToWanoptProfileFtpOutputWithContext(context.Context) WanoptProfileFtpOutput
}

type WanoptProfileFtpArgs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching pulumi.StringPtrInput `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic pulumi.StringPtrInput `pulumi:"logTraffic"`
	// Single port number or port number range for FTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking pulumi.StringPtrInput `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt pulumi.StringPtrInput `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel pulumi.StringPtrInput `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading (hardware acceleration) for traffic in this tunnel. Valid values: `enable`, `disable`.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing pulumi.StringPtrInput `pulumi:"tunnelSharing"`
}

func (WanoptProfileFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileFtp)(nil)).Elem()
}

func (i WanoptProfileFtpArgs) ToWanoptProfileFtpOutput() WanoptProfileFtpOutput {
	return i.ToWanoptProfileFtpOutputWithContext(context.Background())
}

func (i WanoptProfileFtpArgs) ToWanoptProfileFtpOutputWithContext(ctx context.Context) WanoptProfileFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileFtpOutput)
}

func (i WanoptProfileFtpArgs) ToWanoptProfileFtpPtrOutput() WanoptProfileFtpPtrOutput {
	return i.ToWanoptProfileFtpPtrOutputWithContext(context.Background())
}

func (i WanoptProfileFtpArgs) ToWanoptProfileFtpPtrOutputWithContext(ctx context.Context) WanoptProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileFtpOutput).ToWanoptProfileFtpPtrOutputWithContext(ctx)
}

// WanoptProfileFtpPtrInput is an input type that accepts WanoptProfileFtpArgs, WanoptProfileFtpPtr and WanoptProfileFtpPtrOutput values.
// You can construct a concrete instance of `WanoptProfileFtpPtrInput` via:
//
//	        WanoptProfileFtpArgs{...}
//
//	or:
//
//	        nil
type WanoptProfileFtpPtrInput interface {
	pulumi.Input

	ToWanoptProfileFtpPtrOutput() WanoptProfileFtpPtrOutput
	ToWanoptProfileFtpPtrOutputWithContext(context.Context) WanoptProfileFtpPtrOutput
}

type wanoptProfileFtpPtrType WanoptProfileFtpArgs

func WanoptProfileFtpPtr(v *WanoptProfileFtpArgs) WanoptProfileFtpPtrInput {
	return (*wanoptProfileFtpPtrType)(v)
}

func (*wanoptProfileFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileFtp)(nil)).Elem()
}

func (i *wanoptProfileFtpPtrType) ToWanoptProfileFtpPtrOutput() WanoptProfileFtpPtrOutput {
	return i.ToWanoptProfileFtpPtrOutputWithContext(context.Background())
}

func (i *wanoptProfileFtpPtrType) ToWanoptProfileFtpPtrOutputWithContext(ctx context.Context) WanoptProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileFtpPtrOutput)
}

type WanoptProfileFtpOutput struct{ *pulumi.OutputState }

func (WanoptProfileFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileFtp)(nil)).Elem()
}

func (o WanoptProfileFtpOutput) ToWanoptProfileFtpOutput() WanoptProfileFtpOutput {
	return o
}

func (o WanoptProfileFtpOutput) ToWanoptProfileFtpOutputWithContext(ctx context.Context) WanoptProfileFtpOutput {
	return o
}

func (o WanoptProfileFtpOutput) ToWanoptProfileFtpPtrOutput() WanoptProfileFtpPtrOutput {
	return o.ToWanoptProfileFtpPtrOutputWithContext(context.Background())
}

func (o WanoptProfileFtpOutput) ToWanoptProfileFtpPtrOutputWithContext(ctx context.Context) WanoptProfileFtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptProfileFtp) *WanoptProfileFtp {
		return &v
	}).(WanoptProfileFtpPtrOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.ByteCaching }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.LogTraffic }).(pulumi.StringPtrOutput)
}

// Single port number or port number range for FTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileFtpOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileFtpOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.PreferChunking }).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileFtpOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.ProtocolOpt }).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileFtpOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.SecureTunnel }).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading (hardware acceleration) for traffic in this tunnel. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileFtpOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileFtp) *string { return v.TunnelSharing }).(pulumi.StringPtrOutput)
}

type WanoptProfileFtpPtrOutput struct{ *pulumi.OutputState }

func (WanoptProfileFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileFtp)(nil)).Elem()
}

func (o WanoptProfileFtpPtrOutput) ToWanoptProfileFtpPtrOutput() WanoptProfileFtpPtrOutput {
	return o
}

func (o WanoptProfileFtpPtrOutput) ToWanoptProfileFtpPtrOutputWithContext(ctx context.Context) WanoptProfileFtpPtrOutput {
	return o
}

func (o WanoptProfileFtpPtrOutput) Elem() WanoptProfileFtpOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) WanoptProfileFtp {
		if v != nil {
			return *v
		}
		var ret WanoptProfileFtp
		return ret
	}).(WanoptProfileFtpOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpPtrOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ByteCaching
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpPtrOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.LogTraffic
	}).(pulumi.StringPtrOutput)
}

// Single port number or port number range for FTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileFtpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileFtpPtrOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.PreferChunking
	}).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileFtpPtrOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolOpt
	}).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileFtpPtrOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.SecureTunnel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading (hardware acceleration) for traffic in this tunnel. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileFtpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileFtpPtrOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelSharing
	}).(pulumi.StringPtrOutput)
}

type WanoptProfileHttp struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching *string `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic *string `pulumi:"logTraffic"`
	// Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port *int `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking *string `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt *string `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel *string `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading (hardware acceleration) for HTTPS traffic in this tunnel. Valid values: `enable`, `disable`.
	Ssl *string `pulumi:"ssl"`
	// Port on which to expect HTTPS traffic for SSL/TLS offloading.
	SslPort *int `pulumi:"sslPort"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing *string `pulumi:"tunnelSharing"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
}

// WanoptProfileHttpInput is an input type that accepts WanoptProfileHttpArgs and WanoptProfileHttpOutput values.
// You can construct a concrete instance of `WanoptProfileHttpInput` via:
//
//	WanoptProfileHttpArgs{...}
type WanoptProfileHttpInput interface {
	pulumi.Input

	ToWanoptProfileHttpOutput() WanoptProfileHttpOutput
	ToWanoptProfileHttpOutputWithContext(context.Context) WanoptProfileHttpOutput
}

type WanoptProfileHttpArgs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching pulumi.StringPtrInput `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic pulumi.StringPtrInput `pulumi:"logTraffic"`
	// Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
	PreferChunking pulumi.StringPtrInput `pulumi:"preferChunking"`
	// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
	ProtocolOpt pulumi.StringPtrInput `pulumi:"protocolOpt"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel pulumi.StringPtrInput `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading (hardware acceleration) for HTTPS traffic in this tunnel. Valid values: `enable`, `disable`.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Port on which to expect HTTPS traffic for SSL/TLS offloading.
	SslPort pulumi.IntPtrInput `pulumi:"sslPort"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput `pulumi:"tunnelNonHttp"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing pulumi.StringPtrInput `pulumi:"tunnelSharing"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput `pulumi:"unknownHttpVersion"`
}

func (WanoptProfileHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileHttp)(nil)).Elem()
}

func (i WanoptProfileHttpArgs) ToWanoptProfileHttpOutput() WanoptProfileHttpOutput {
	return i.ToWanoptProfileHttpOutputWithContext(context.Background())
}

func (i WanoptProfileHttpArgs) ToWanoptProfileHttpOutputWithContext(ctx context.Context) WanoptProfileHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileHttpOutput)
}

func (i WanoptProfileHttpArgs) ToWanoptProfileHttpPtrOutput() WanoptProfileHttpPtrOutput {
	return i.ToWanoptProfileHttpPtrOutputWithContext(context.Background())
}

func (i WanoptProfileHttpArgs) ToWanoptProfileHttpPtrOutputWithContext(ctx context.Context) WanoptProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileHttpOutput).ToWanoptProfileHttpPtrOutputWithContext(ctx)
}

// WanoptProfileHttpPtrInput is an input type that accepts WanoptProfileHttpArgs, WanoptProfileHttpPtr and WanoptProfileHttpPtrOutput values.
// You can construct a concrete instance of `WanoptProfileHttpPtrInput` via:
//
//	        WanoptProfileHttpArgs{...}
//
//	or:
//
//	        nil
type WanoptProfileHttpPtrInput interface {
	pulumi.Input

	ToWanoptProfileHttpPtrOutput() WanoptProfileHttpPtrOutput
	ToWanoptProfileHttpPtrOutputWithContext(context.Context) WanoptProfileHttpPtrOutput
}

type wanoptProfileHttpPtrType WanoptProfileHttpArgs

func WanoptProfileHttpPtr(v *WanoptProfileHttpArgs) WanoptProfileHttpPtrInput {
	return (*wanoptProfileHttpPtrType)(v)
}

func (*wanoptProfileHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileHttp)(nil)).Elem()
}

func (i *wanoptProfileHttpPtrType) ToWanoptProfileHttpPtrOutput() WanoptProfileHttpPtrOutput {
	return i.ToWanoptProfileHttpPtrOutputWithContext(context.Background())
}

func (i *wanoptProfileHttpPtrType) ToWanoptProfileHttpPtrOutputWithContext(ctx context.Context) WanoptProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileHttpPtrOutput)
}

type WanoptProfileHttpOutput struct{ *pulumi.OutputState }

func (WanoptProfileHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileHttp)(nil)).Elem()
}

func (o WanoptProfileHttpOutput) ToWanoptProfileHttpOutput() WanoptProfileHttpOutput {
	return o
}

func (o WanoptProfileHttpOutput) ToWanoptProfileHttpOutputWithContext(ctx context.Context) WanoptProfileHttpOutput {
	return o
}

func (o WanoptProfileHttpOutput) ToWanoptProfileHttpPtrOutput() WanoptProfileHttpPtrOutput {
	return o.ToWanoptProfileHttpPtrOutputWithContext(context.Background())
}

func (o WanoptProfileHttpOutput) ToWanoptProfileHttpPtrOutputWithContext(ctx context.Context) WanoptProfileHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptProfileHttp) *WanoptProfileHttp {
		return &v
	}).(WanoptProfileHttpPtrOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.ByteCaching }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.LogTraffic }).(pulumi.StringPtrOutput)
}

// Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileHttpOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileHttpOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.PreferChunking }).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileHttpOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.ProtocolOpt }).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.SecureTunnel }).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading (hardware acceleration) for HTTPS traffic in this tunnel. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Port on which to expect HTTPS traffic for SSL/TLS offloading.
func (o WanoptProfileHttpOutput) SslPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *int { return v.SslPort }).(pulumi.IntPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.TunnelNonHttp }).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileHttpOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.TunnelSharing }).(pulumi.StringPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o WanoptProfileHttpOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileHttp) *string { return v.UnknownHttpVersion }).(pulumi.StringPtrOutput)
}

type WanoptProfileHttpPtrOutput struct{ *pulumi.OutputState }

func (WanoptProfileHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileHttp)(nil)).Elem()
}

func (o WanoptProfileHttpPtrOutput) ToWanoptProfileHttpPtrOutput() WanoptProfileHttpPtrOutput {
	return o
}

func (o WanoptProfileHttpPtrOutput) ToWanoptProfileHttpPtrOutputWithContext(ctx context.Context) WanoptProfileHttpPtrOutput {
	return o
}

func (o WanoptProfileHttpPtrOutput) Elem() WanoptProfileHttpOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) WanoptProfileHttp {
		if v != nil {
			return *v
		}
		var ret WanoptProfileHttp
		return ret
	}).(WanoptProfileHttpOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ByteCaching
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.LogTraffic
	}).(pulumi.StringPtrOutput)
}

// Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
func (o WanoptProfileHttpPtrOutput) PreferChunking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.PreferChunking
	}).(pulumi.StringPtrOutput)
}

// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
func (o WanoptProfileHttpPtrOutput) ProtocolOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolOpt
	}).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.SecureTunnel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading (hardware acceleration) for HTTPS traffic in this tunnel. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// Port on which to expect HTTPS traffic for SSL/TLS offloading.
func (o WanoptProfileHttpPtrOutput) SslPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *int {
		if v == nil {
			return nil
		}
		return v.SslPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o WanoptProfileHttpPtrOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelNonHttp
	}).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileHttpPtrOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelSharing
	}).(pulumi.StringPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o WanoptProfileHttpPtrOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownHttpVersion
	}).(pulumi.StringPtrOutput)
}

type WanoptProfileMapi struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching *string `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic *string `pulumi:"logTraffic"`
	// Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port *int `pulumi:"port"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel *string `pulumi:"secureTunnel"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing *string `pulumi:"tunnelSharing"`
}

// WanoptProfileMapiInput is an input type that accepts WanoptProfileMapiArgs and WanoptProfileMapiOutput values.
// You can construct a concrete instance of `WanoptProfileMapiInput` via:
//
//	WanoptProfileMapiArgs{...}
type WanoptProfileMapiInput interface {
	pulumi.Input

	ToWanoptProfileMapiOutput() WanoptProfileMapiOutput
	ToWanoptProfileMapiOutputWithContext(context.Context) WanoptProfileMapiOutput
}

type WanoptProfileMapiArgs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching pulumi.StringPtrInput `pulumi:"byteCaching"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic pulumi.StringPtrInput `pulumi:"logTraffic"`
	// Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel pulumi.StringPtrInput `pulumi:"secureTunnel"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing pulumi.StringPtrInput `pulumi:"tunnelSharing"`
}

func (WanoptProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileMapi)(nil)).Elem()
}

func (i WanoptProfileMapiArgs) ToWanoptProfileMapiOutput() WanoptProfileMapiOutput {
	return i.ToWanoptProfileMapiOutputWithContext(context.Background())
}

func (i WanoptProfileMapiArgs) ToWanoptProfileMapiOutputWithContext(ctx context.Context) WanoptProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileMapiOutput)
}

func (i WanoptProfileMapiArgs) ToWanoptProfileMapiPtrOutput() WanoptProfileMapiPtrOutput {
	return i.ToWanoptProfileMapiPtrOutputWithContext(context.Background())
}

func (i WanoptProfileMapiArgs) ToWanoptProfileMapiPtrOutputWithContext(ctx context.Context) WanoptProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileMapiOutput).ToWanoptProfileMapiPtrOutputWithContext(ctx)
}

// WanoptProfileMapiPtrInput is an input type that accepts WanoptProfileMapiArgs, WanoptProfileMapiPtr and WanoptProfileMapiPtrOutput values.
// You can construct a concrete instance of `WanoptProfileMapiPtrInput` via:
//
//	        WanoptProfileMapiArgs{...}
//
//	or:
//
//	        nil
type WanoptProfileMapiPtrInput interface {
	pulumi.Input

	ToWanoptProfileMapiPtrOutput() WanoptProfileMapiPtrOutput
	ToWanoptProfileMapiPtrOutputWithContext(context.Context) WanoptProfileMapiPtrOutput
}

type wanoptProfileMapiPtrType WanoptProfileMapiArgs

func WanoptProfileMapiPtr(v *WanoptProfileMapiArgs) WanoptProfileMapiPtrInput {
	return (*wanoptProfileMapiPtrType)(v)
}

func (*wanoptProfileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileMapi)(nil)).Elem()
}

func (i *wanoptProfileMapiPtrType) ToWanoptProfileMapiPtrOutput() WanoptProfileMapiPtrOutput {
	return i.ToWanoptProfileMapiPtrOutputWithContext(context.Background())
}

func (i *wanoptProfileMapiPtrType) ToWanoptProfileMapiPtrOutputWithContext(ctx context.Context) WanoptProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileMapiPtrOutput)
}

type WanoptProfileMapiOutput struct{ *pulumi.OutputState }

func (WanoptProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileMapi)(nil)).Elem()
}

func (o WanoptProfileMapiOutput) ToWanoptProfileMapiOutput() WanoptProfileMapiOutput {
	return o
}

func (o WanoptProfileMapiOutput) ToWanoptProfileMapiOutputWithContext(ctx context.Context) WanoptProfileMapiOutput {
	return o
}

func (o WanoptProfileMapiOutput) ToWanoptProfileMapiPtrOutput() WanoptProfileMapiPtrOutput {
	return o.ToWanoptProfileMapiPtrOutputWithContext(context.Background())
}

func (o WanoptProfileMapiOutput) ToWanoptProfileMapiPtrOutputWithContext(ctx context.Context) WanoptProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptProfileMapi) *WanoptProfileMapi {
		return &v
	}).(WanoptProfileMapiPtrOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *string { return v.ByteCaching }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *string { return v.LogTraffic }).(pulumi.StringPtrOutput)
}

// Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileMapiOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileMapiOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *string { return v.SecureTunnel }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileMapiOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileMapi) *string { return v.TunnelSharing }).(pulumi.StringPtrOutput)
}

type WanoptProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (WanoptProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileMapi)(nil)).Elem()
}

func (o WanoptProfileMapiPtrOutput) ToWanoptProfileMapiPtrOutput() WanoptProfileMapiPtrOutput {
	return o
}

func (o WanoptProfileMapiPtrOutput) ToWanoptProfileMapiPtrOutputWithContext(ctx context.Context) WanoptProfileMapiPtrOutput {
	return o
}

func (o WanoptProfileMapiPtrOutput) Elem() WanoptProfileMapiOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) WanoptProfileMapi {
		if v != nil {
			return *v
		}
		var ret WanoptProfileMapi
		return ret
	}).(WanoptProfileMapiOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiPtrOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ByteCaching
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiPtrOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.LogTraffic
	}).(pulumi.StringPtrOutput)
}

// Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileMapiPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileMapiPtrOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.SecureTunnel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileMapiPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileMapiPtrOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.TunnelSharing
	}).(pulumi.StringPtrOutput)
}

type WanoptProfileTcp struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching *string `pulumi:"byteCaching"`
	// Select whether TCP byte-caching uses system memory only or both memory and disk space. Valid values: `mem-only`, `mem-disk`.
	ByteCachingOpt *string `pulumi:"byteCachingOpt"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic *string `pulumi:"logTraffic"`
	// Single port number or port number range for TCP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port *string `pulumi:"port"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel *string `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading. Valid values: `enable`, `disable`.
	Ssl *string `pulumi:"ssl"`
	// Port on which to expect HTTPS traffic for SSL/TLS offloading.
	SslPort *int `pulumi:"sslPort"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing *string `pulumi:"tunnelSharing"`
}

// WanoptProfileTcpInput is an input type that accepts WanoptProfileTcpArgs and WanoptProfileTcpOutput values.
// You can construct a concrete instance of `WanoptProfileTcpInput` via:
//
//	WanoptProfileTcpArgs{...}
type WanoptProfileTcpInput interface {
	pulumi.Input

	ToWanoptProfileTcpOutput() WanoptProfileTcpOutput
	ToWanoptProfileTcpOutputWithContext(context.Context) WanoptProfileTcpOutput
}

type WanoptProfileTcpArgs struct {
	// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
	ByteCaching pulumi.StringPtrInput `pulumi:"byteCaching"`
	// Select whether TCP byte-caching uses system memory only or both memory and disk space. Valid values: `mem-only`, `mem-disk`.
	ByteCachingOpt pulumi.StringPtrInput `pulumi:"byteCachingOpt"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	LogTraffic pulumi.StringPtrInput `pulumi:"logTraffic"`
	// Single port number or port number range for TCP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
	SecureTunnel pulumi.StringPtrInput `pulumi:"secureTunnel"`
	// Enable/disable SSL/TLS offloading. Valid values: `enable`, `disable`.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Port on which to expect HTTPS traffic for SSL/TLS offloading.
	SslPort pulumi.IntPtrInput `pulumi:"sslPort"`
	// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
	TunnelSharing pulumi.StringPtrInput `pulumi:"tunnelSharing"`
}

func (WanoptProfileTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileTcp)(nil)).Elem()
}

func (i WanoptProfileTcpArgs) ToWanoptProfileTcpOutput() WanoptProfileTcpOutput {
	return i.ToWanoptProfileTcpOutputWithContext(context.Background())
}

func (i WanoptProfileTcpArgs) ToWanoptProfileTcpOutputWithContext(ctx context.Context) WanoptProfileTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileTcpOutput)
}

func (i WanoptProfileTcpArgs) ToWanoptProfileTcpPtrOutput() WanoptProfileTcpPtrOutput {
	return i.ToWanoptProfileTcpPtrOutputWithContext(context.Background())
}

func (i WanoptProfileTcpArgs) ToWanoptProfileTcpPtrOutputWithContext(ctx context.Context) WanoptProfileTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileTcpOutput).ToWanoptProfileTcpPtrOutputWithContext(ctx)
}

// WanoptProfileTcpPtrInput is an input type that accepts WanoptProfileTcpArgs, WanoptProfileTcpPtr and WanoptProfileTcpPtrOutput values.
// You can construct a concrete instance of `WanoptProfileTcpPtrInput` via:
//
//	        WanoptProfileTcpArgs{...}
//
//	or:
//
//	        nil
type WanoptProfileTcpPtrInput interface {
	pulumi.Input

	ToWanoptProfileTcpPtrOutput() WanoptProfileTcpPtrOutput
	ToWanoptProfileTcpPtrOutputWithContext(context.Context) WanoptProfileTcpPtrOutput
}

type wanoptProfileTcpPtrType WanoptProfileTcpArgs

func WanoptProfileTcpPtr(v *WanoptProfileTcpArgs) WanoptProfileTcpPtrInput {
	return (*wanoptProfileTcpPtrType)(v)
}

func (*wanoptProfileTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileTcp)(nil)).Elem()
}

func (i *wanoptProfileTcpPtrType) ToWanoptProfileTcpPtrOutput() WanoptProfileTcpPtrOutput {
	return i.ToWanoptProfileTcpPtrOutputWithContext(context.Background())
}

func (i *wanoptProfileTcpPtrType) ToWanoptProfileTcpPtrOutputWithContext(ctx context.Context) WanoptProfileTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileTcpPtrOutput)
}

type WanoptProfileTcpOutput struct{ *pulumi.OutputState }

func (WanoptProfileTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WanoptProfileTcp)(nil)).Elem()
}

func (o WanoptProfileTcpOutput) ToWanoptProfileTcpOutput() WanoptProfileTcpOutput {
	return o
}

func (o WanoptProfileTcpOutput) ToWanoptProfileTcpOutputWithContext(ctx context.Context) WanoptProfileTcpOutput {
	return o
}

func (o WanoptProfileTcpOutput) ToWanoptProfileTcpPtrOutput() WanoptProfileTcpPtrOutput {
	return o.ToWanoptProfileTcpPtrOutputWithContext(context.Background())
}

func (o WanoptProfileTcpOutput) ToWanoptProfileTcpPtrOutputWithContext(ctx context.Context) WanoptProfileTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WanoptProfileTcp) *WanoptProfileTcp {
		return &v
	}).(WanoptProfileTcpPtrOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.ByteCaching }).(pulumi.StringPtrOutput)
}

// Select whether TCP byte-caching uses system memory only or both memory and disk space. Valid values: `mem-only`, `mem-disk`.
func (o WanoptProfileTcpOutput) ByteCachingOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.ByteCachingOpt }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.LogTraffic }).(pulumi.StringPtrOutput)
}

// Single port number or port number range for TCP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileTcpOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileTcpOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.SecureTunnel }).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Port on which to expect HTTPS traffic for SSL/TLS offloading.
func (o WanoptProfileTcpOutput) SslPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *int { return v.SslPort }).(pulumi.IntPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileTcpOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WanoptProfileTcp) *string { return v.TunnelSharing }).(pulumi.StringPtrOutput)
}

type WanoptProfileTcpPtrOutput struct{ *pulumi.OutputState }

func (WanoptProfileTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfileTcp)(nil)).Elem()
}

func (o WanoptProfileTcpPtrOutput) ToWanoptProfileTcpPtrOutput() WanoptProfileTcpPtrOutput {
	return o
}

func (o WanoptProfileTcpPtrOutput) ToWanoptProfileTcpPtrOutputWithContext(ctx context.Context) WanoptProfileTcpPtrOutput {
	return o
}

func (o WanoptProfileTcpPtrOutput) Elem() WanoptProfileTcpOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) WanoptProfileTcp {
		if v != nil {
			return *v
		}
		var ret WanoptProfileTcp
		return ret
	}).(WanoptProfileTcpOutput)
}

// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpPtrOutput) ByteCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.ByteCaching
	}).(pulumi.StringPtrOutput)
}

// Select whether TCP byte-caching uses system memory only or both memory and disk space. Valid values: `mem-only`, `mem-disk`.
func (o WanoptProfileTcpPtrOutput) ByteCachingOpt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.ByteCachingOpt
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpPtrOutput) LogTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.LogTraffic
	}).(pulumi.StringPtrOutput)
}

// Single port number or port number range for TCP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
func (o WanoptProfileTcpPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
func (o WanoptProfileTcpPtrOutput) SecureTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.SecureTunnel
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSL/TLS offloading. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// Port on which to expect HTTPS traffic for SSL/TLS offloading.
func (o WanoptProfileTcpPtrOutput) SslPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *int {
		if v == nil {
			return nil
		}
		return v.SslPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
func (o WanoptProfileTcpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
func (o WanoptProfileTcpPtrOutput) TunnelSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfileTcp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelSharing
	}).(pulumi.StringPtrOutput)
}

type WebfilterContentEntry struct {
	// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
	Action *string `pulumi:"action"`
	// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
	Lang *string `pulumi:"lang"`
	// Banned word.
	Name *string `pulumi:"name"`
	// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
	Score *int `pulumi:"score"`
	// Enable/disable banned word. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WebfilterContentEntryInput is an input type that accepts WebfilterContentEntryArgs and WebfilterContentEntryOutput values.
// You can construct a concrete instance of `WebfilterContentEntryInput` via:
//
//	WebfilterContentEntryArgs{...}
type WebfilterContentEntryInput interface {
	pulumi.Input

	ToWebfilterContentEntryOutput() WebfilterContentEntryOutput
	ToWebfilterContentEntryOutputWithContext(context.Context) WebfilterContentEntryOutput
}

type WebfilterContentEntryArgs struct {
	// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Banned word.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
	Score pulumi.IntPtrInput `pulumi:"score"`
	// Enable/disable banned word. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebfilterContentEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterContentEntry)(nil)).Elem()
}

func (i WebfilterContentEntryArgs) ToWebfilterContentEntryOutput() WebfilterContentEntryOutput {
	return i.ToWebfilterContentEntryOutputWithContext(context.Background())
}

func (i WebfilterContentEntryArgs) ToWebfilterContentEntryOutputWithContext(ctx context.Context) WebfilterContentEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterContentEntryOutput)
}

// WebfilterContentEntryArrayInput is an input type that accepts WebfilterContentEntryArray and WebfilterContentEntryArrayOutput values.
// You can construct a concrete instance of `WebfilterContentEntryArrayInput` via:
//
//	WebfilterContentEntryArray{ WebfilterContentEntryArgs{...} }
type WebfilterContentEntryArrayInput interface {
	pulumi.Input

	ToWebfilterContentEntryArrayOutput() WebfilterContentEntryArrayOutput
	ToWebfilterContentEntryArrayOutputWithContext(context.Context) WebfilterContentEntryArrayOutput
}

type WebfilterContentEntryArray []WebfilterContentEntryInput

func (WebfilterContentEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterContentEntry)(nil)).Elem()
}

func (i WebfilterContentEntryArray) ToWebfilterContentEntryArrayOutput() WebfilterContentEntryArrayOutput {
	return i.ToWebfilterContentEntryArrayOutputWithContext(context.Background())
}

func (i WebfilterContentEntryArray) ToWebfilterContentEntryArrayOutputWithContext(ctx context.Context) WebfilterContentEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterContentEntryArrayOutput)
}

type WebfilterContentEntryOutput struct{ *pulumi.OutputState }

func (WebfilterContentEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterContentEntry)(nil)).Elem()
}

func (o WebfilterContentEntryOutput) ToWebfilterContentEntryOutput() WebfilterContentEntryOutput {
	return o
}

func (o WebfilterContentEntryOutput) ToWebfilterContentEntryOutputWithContext(ctx context.Context) WebfilterContentEntryOutput {
	return o
}

// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
func (o WebfilterContentEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
func (o WebfilterContentEntryOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Banned word.
func (o WebfilterContentEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
func (o WebfilterContentEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
func (o WebfilterContentEntryOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// Enable/disable banned word. Valid values: `enable`, `disable`.
func (o WebfilterContentEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebfilterContentEntryArrayOutput struct{ *pulumi.OutputState }

func (WebfilterContentEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterContentEntry)(nil)).Elem()
}

func (o WebfilterContentEntryArrayOutput) ToWebfilterContentEntryArrayOutput() WebfilterContentEntryArrayOutput {
	return o
}

func (o WebfilterContentEntryArrayOutput) ToWebfilterContentEntryArrayOutputWithContext(ctx context.Context) WebfilterContentEntryArrayOutput {
	return o
}

func (o WebfilterContentEntryArrayOutput) Index(i pulumi.IntInput) WebfilterContentEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterContentEntry {
		return vs[0].([]WebfilterContentEntry)[vs[1].(int)]
	}).(WebfilterContentEntryOutput)
}

type WebfilterContentheaderEntry struct {
	// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
	Action *string `pulumi:"action"`
	// Categories that this content type applies to.
	Category *string `pulumi:"category"`
	// Content type (regular expression).
	Pattern *string `pulumi:"pattern"`
}

// WebfilterContentheaderEntryInput is an input type that accepts WebfilterContentheaderEntryArgs and WebfilterContentheaderEntryOutput values.
// You can construct a concrete instance of `WebfilterContentheaderEntryInput` via:
//
//	WebfilterContentheaderEntryArgs{...}
type WebfilterContentheaderEntryInput interface {
	pulumi.Input

	ToWebfilterContentheaderEntryOutput() WebfilterContentheaderEntryOutput
	ToWebfilterContentheaderEntryOutputWithContext(context.Context) WebfilterContentheaderEntryOutput
}

type WebfilterContentheaderEntryArgs struct {
	// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Categories that this content type applies to.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Content type (regular expression).
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (WebfilterContentheaderEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterContentheaderEntry)(nil)).Elem()
}

func (i WebfilterContentheaderEntryArgs) ToWebfilterContentheaderEntryOutput() WebfilterContentheaderEntryOutput {
	return i.ToWebfilterContentheaderEntryOutputWithContext(context.Background())
}

func (i WebfilterContentheaderEntryArgs) ToWebfilterContentheaderEntryOutputWithContext(ctx context.Context) WebfilterContentheaderEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterContentheaderEntryOutput)
}

// WebfilterContentheaderEntryArrayInput is an input type that accepts WebfilterContentheaderEntryArray and WebfilterContentheaderEntryArrayOutput values.
// You can construct a concrete instance of `WebfilterContentheaderEntryArrayInput` via:
//
//	WebfilterContentheaderEntryArray{ WebfilterContentheaderEntryArgs{...} }
type WebfilterContentheaderEntryArrayInput interface {
	pulumi.Input

	ToWebfilterContentheaderEntryArrayOutput() WebfilterContentheaderEntryArrayOutput
	ToWebfilterContentheaderEntryArrayOutputWithContext(context.Context) WebfilterContentheaderEntryArrayOutput
}

type WebfilterContentheaderEntryArray []WebfilterContentheaderEntryInput

func (WebfilterContentheaderEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterContentheaderEntry)(nil)).Elem()
}

func (i WebfilterContentheaderEntryArray) ToWebfilterContentheaderEntryArrayOutput() WebfilterContentheaderEntryArrayOutput {
	return i.ToWebfilterContentheaderEntryArrayOutputWithContext(context.Background())
}

func (i WebfilterContentheaderEntryArray) ToWebfilterContentheaderEntryArrayOutputWithContext(ctx context.Context) WebfilterContentheaderEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterContentheaderEntryArrayOutput)
}

type WebfilterContentheaderEntryOutput struct{ *pulumi.OutputState }

func (WebfilterContentheaderEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterContentheaderEntry)(nil)).Elem()
}

func (o WebfilterContentheaderEntryOutput) ToWebfilterContentheaderEntryOutput() WebfilterContentheaderEntryOutput {
	return o
}

func (o WebfilterContentheaderEntryOutput) ToWebfilterContentheaderEntryOutputWithContext(ctx context.Context) WebfilterContentheaderEntryOutput {
	return o
}

// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
func (o WebfilterContentheaderEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentheaderEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Categories that this content type applies to.
func (o WebfilterContentheaderEntryOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentheaderEntry) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Content type (regular expression).
func (o WebfilterContentheaderEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterContentheaderEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type WebfilterContentheaderEntryArrayOutput struct{ *pulumi.OutputState }

func (WebfilterContentheaderEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterContentheaderEntry)(nil)).Elem()
}

func (o WebfilterContentheaderEntryArrayOutput) ToWebfilterContentheaderEntryArrayOutput() WebfilterContentheaderEntryArrayOutput {
	return o
}

func (o WebfilterContentheaderEntryArrayOutput) ToWebfilterContentheaderEntryArrayOutputWithContext(ctx context.Context) WebfilterContentheaderEntryArrayOutput {
	return o
}

func (o WebfilterContentheaderEntryArrayOutput) Index(i pulumi.IntInput) WebfilterContentheaderEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterContentheaderEntry {
		return vs[0].([]WebfilterContentheaderEntry)[vs[1].(int)]
	}).(WebfilterContentheaderEntryOutput)
}

type WebfilterProfileAntiphish struct {
	// Authentication methods. Valid values: `domain-controller`, `ldap`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
	CheckBasicAuth *string `pulumi:"checkBasicAuth"`
	// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
	CheckUri *string `pulumi:"checkUri"`
	// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
	CheckUsernameOnly *string `pulumi:"checkUsernameOnly"`
	// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
	CustomPatterns []WebfilterProfileAntiphishCustomPattern `pulumi:"customPatterns"`
	// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// Domain for which to verify received credentials against.
	DomainController *string `pulumi:"domainController"`
	// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
	InspectionEntries []WebfilterProfileAntiphishInspectionEntry `pulumi:"inspectionEntries"`
	// LDAP server for which to verify received credentials against.
	Ldap *string `pulumi:"ldap"`
	// Maximum size of a POST body to check for credentials.
	MaxBodyLen *int `pulumi:"maxBodyLen"`
	// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WebfilterProfileAntiphishInput is an input type that accepts WebfilterProfileAntiphishArgs and WebfilterProfileAntiphishOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishInput` via:
//
//	WebfilterProfileAntiphishArgs{...}
type WebfilterProfileAntiphishInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishOutput() WebfilterProfileAntiphishOutput
	ToWebfilterProfileAntiphishOutputWithContext(context.Context) WebfilterProfileAntiphishOutput
}

type WebfilterProfileAntiphishArgs struct {
	// Authentication methods. Valid values: `domain-controller`, `ldap`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
	CheckBasicAuth pulumi.StringPtrInput `pulumi:"checkBasicAuth"`
	// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
	CheckUri pulumi.StringPtrInput `pulumi:"checkUri"`
	// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
	CheckUsernameOnly pulumi.StringPtrInput `pulumi:"checkUsernameOnly"`
	// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
	CustomPatterns WebfilterProfileAntiphishCustomPatternArrayInput `pulumi:"customPatterns"`
	// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// Domain for which to verify received credentials against.
	DomainController pulumi.StringPtrInput `pulumi:"domainController"`
	// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
	InspectionEntries WebfilterProfileAntiphishInspectionEntryArrayInput `pulumi:"inspectionEntries"`
	// LDAP server for which to verify received credentials against.
	Ldap pulumi.StringPtrInput `pulumi:"ldap"`
	// Maximum size of a POST body to check for credentials.
	MaxBodyLen pulumi.IntPtrInput `pulumi:"maxBodyLen"`
	// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebfilterProfileAntiphishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphish)(nil)).Elem()
}

func (i WebfilterProfileAntiphishArgs) ToWebfilterProfileAntiphishOutput() WebfilterProfileAntiphishOutput {
	return i.ToWebfilterProfileAntiphishOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishArgs) ToWebfilterProfileAntiphishOutputWithContext(ctx context.Context) WebfilterProfileAntiphishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishOutput)
}

func (i WebfilterProfileAntiphishArgs) ToWebfilterProfileAntiphishPtrOutput() WebfilterProfileAntiphishPtrOutput {
	return i.ToWebfilterProfileAntiphishPtrOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishArgs) ToWebfilterProfileAntiphishPtrOutputWithContext(ctx context.Context) WebfilterProfileAntiphishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishOutput).ToWebfilterProfileAntiphishPtrOutputWithContext(ctx)
}

// WebfilterProfileAntiphishPtrInput is an input type that accepts WebfilterProfileAntiphishArgs, WebfilterProfileAntiphishPtr and WebfilterProfileAntiphishPtrOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishPtrInput` via:
//
//	        WebfilterProfileAntiphishArgs{...}
//
//	or:
//
//	        nil
type WebfilterProfileAntiphishPtrInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishPtrOutput() WebfilterProfileAntiphishPtrOutput
	ToWebfilterProfileAntiphishPtrOutputWithContext(context.Context) WebfilterProfileAntiphishPtrOutput
}

type webfilterProfileAntiphishPtrType WebfilterProfileAntiphishArgs

func WebfilterProfileAntiphishPtr(v *WebfilterProfileAntiphishArgs) WebfilterProfileAntiphishPtrInput {
	return (*webfilterProfileAntiphishPtrType)(v)
}

func (*webfilterProfileAntiphishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileAntiphish)(nil)).Elem()
}

func (i *webfilterProfileAntiphishPtrType) ToWebfilterProfileAntiphishPtrOutput() WebfilterProfileAntiphishPtrOutput {
	return i.ToWebfilterProfileAntiphishPtrOutputWithContext(context.Background())
}

func (i *webfilterProfileAntiphishPtrType) ToWebfilterProfileAntiphishPtrOutputWithContext(ctx context.Context) WebfilterProfileAntiphishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishPtrOutput)
}

type WebfilterProfileAntiphishOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphish)(nil)).Elem()
}

func (o WebfilterProfileAntiphishOutput) ToWebfilterProfileAntiphishOutput() WebfilterProfileAntiphishOutput {
	return o
}

func (o WebfilterProfileAntiphishOutput) ToWebfilterProfileAntiphishOutputWithContext(ctx context.Context) WebfilterProfileAntiphishOutput {
	return o
}

func (o WebfilterProfileAntiphishOutput) ToWebfilterProfileAntiphishPtrOutput() WebfilterProfileAntiphishPtrOutput {
	return o.ToWebfilterProfileAntiphishPtrOutputWithContext(context.Background())
}

func (o WebfilterProfileAntiphishOutput) ToWebfilterProfileAntiphishPtrOutputWithContext(ctx context.Context) WebfilterProfileAntiphishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebfilterProfileAntiphish) *WebfilterProfileAntiphish {
		return &v
	}).(WebfilterProfileAntiphishPtrOutput)
}

// Authentication methods. Valid values: `domain-controller`, `ldap`.
func (o WebfilterProfileAntiphishOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishOutput) CheckBasicAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.CheckBasicAuth }).(pulumi.StringPtrOutput)
}

// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishOutput) CheckUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.CheckUri }).(pulumi.StringPtrOutput)
}

// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishOutput) CheckUsernameOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.CheckUsernameOnly }).(pulumi.StringPtrOutput)
}

// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
func (o WebfilterProfileAntiphishOutput) CustomPatterns() WebfilterProfileAntiphishCustomPatternArrayOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) []WebfilterProfileAntiphishCustomPattern { return v.CustomPatterns }).(WebfilterProfileAntiphishCustomPatternArrayOutput)
}

// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
func (o WebfilterProfileAntiphishOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// Domain for which to verify received credentials against.
func (o WebfilterProfileAntiphishOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.DomainController }).(pulumi.StringPtrOutput)
}

// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
func (o WebfilterProfileAntiphishOutput) InspectionEntries() WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) []WebfilterProfileAntiphishInspectionEntry {
		return v.InspectionEntries
	}).(WebfilterProfileAntiphishInspectionEntryArrayOutput)
}

// LDAP server for which to verify received credentials against.
func (o WebfilterProfileAntiphishOutput) Ldap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.Ldap }).(pulumi.StringPtrOutput)
}

// Maximum size of a POST body to check for credentials.
func (o WebfilterProfileAntiphishOutput) MaxBodyLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *int { return v.MaxBodyLen }).(pulumi.IntPtrOutput)
}

// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphish) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebfilterProfileAntiphishPtrOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileAntiphish)(nil)).Elem()
}

func (o WebfilterProfileAntiphishPtrOutput) ToWebfilterProfileAntiphishPtrOutput() WebfilterProfileAntiphishPtrOutput {
	return o
}

func (o WebfilterProfileAntiphishPtrOutput) ToWebfilterProfileAntiphishPtrOutputWithContext(ctx context.Context) WebfilterProfileAntiphishPtrOutput {
	return o
}

func (o WebfilterProfileAntiphishPtrOutput) Elem() WebfilterProfileAntiphishOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) WebfilterProfileAntiphish {
		if v != nil {
			return *v
		}
		var ret WebfilterProfileAntiphish
		return ret
	}).(WebfilterProfileAntiphishOutput)
}

// Authentication methods. Valid values: `domain-controller`, `ldap`.
func (o WebfilterProfileAntiphishPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishPtrOutput) CheckBasicAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckBasicAuth
	}).(pulumi.StringPtrOutput)
}

// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishPtrOutput) CheckUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckUri
	}).(pulumi.StringPtrOutput)
}

// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishPtrOutput) CheckUsernameOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckUsernameOnly
	}).(pulumi.StringPtrOutput)
}

// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
func (o WebfilterProfileAntiphishPtrOutput) CustomPatterns() WebfilterProfileAntiphishCustomPatternArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) []WebfilterProfileAntiphishCustomPattern {
		if v == nil {
			return nil
		}
		return v.CustomPatterns
	}).(WebfilterProfileAntiphishCustomPatternArrayOutput)
}

// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
func (o WebfilterProfileAntiphishPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Domain for which to verify received credentials against.
func (o WebfilterProfileAntiphishPtrOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.DomainController
	}).(pulumi.StringPtrOutput)
}

// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
func (o WebfilterProfileAntiphishPtrOutput) InspectionEntries() WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) []WebfilterProfileAntiphishInspectionEntry {
		if v == nil {
			return nil
		}
		return v.InspectionEntries
	}).(WebfilterProfileAntiphishInspectionEntryArrayOutput)
}

// LDAP server for which to verify received credentials against.
func (o WebfilterProfileAntiphishPtrOutput) Ldap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(pulumi.StringPtrOutput)
}

// Maximum size of a POST body to check for credentials.
func (o WebfilterProfileAntiphishPtrOutput) MaxBodyLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *int {
		if v == nil {
			return nil
		}
		return v.MaxBodyLen
	}).(pulumi.IntPtrOutput)
}

// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
func (o WebfilterProfileAntiphishPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WebfilterProfileAntiphishCustomPattern struct {
	// Category that the pattern matches. Valid values: `username`, `password`.
	Category *string `pulumi:"category"`
	// Target pattern.
	Pattern *string `pulumi:"pattern"`
	// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
	Type *string `pulumi:"type"`
}

// WebfilterProfileAntiphishCustomPatternInput is an input type that accepts WebfilterProfileAntiphishCustomPatternArgs and WebfilterProfileAntiphishCustomPatternOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishCustomPatternInput` via:
//
//	WebfilterProfileAntiphishCustomPatternArgs{...}
type WebfilterProfileAntiphishCustomPatternInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishCustomPatternOutput() WebfilterProfileAntiphishCustomPatternOutput
	ToWebfilterProfileAntiphishCustomPatternOutputWithContext(context.Context) WebfilterProfileAntiphishCustomPatternOutput
}

type WebfilterProfileAntiphishCustomPatternArgs struct {
	// Category that the pattern matches. Valid values: `username`, `password`.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Target pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WebfilterProfileAntiphishCustomPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphishCustomPattern)(nil)).Elem()
}

func (i WebfilterProfileAntiphishCustomPatternArgs) ToWebfilterProfileAntiphishCustomPatternOutput() WebfilterProfileAntiphishCustomPatternOutput {
	return i.ToWebfilterProfileAntiphishCustomPatternOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishCustomPatternArgs) ToWebfilterProfileAntiphishCustomPatternOutputWithContext(ctx context.Context) WebfilterProfileAntiphishCustomPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishCustomPatternOutput)
}

// WebfilterProfileAntiphishCustomPatternArrayInput is an input type that accepts WebfilterProfileAntiphishCustomPatternArray and WebfilterProfileAntiphishCustomPatternArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishCustomPatternArrayInput` via:
//
//	WebfilterProfileAntiphishCustomPatternArray{ WebfilterProfileAntiphishCustomPatternArgs{...} }
type WebfilterProfileAntiphishCustomPatternArrayInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishCustomPatternArrayOutput() WebfilterProfileAntiphishCustomPatternArrayOutput
	ToWebfilterProfileAntiphishCustomPatternArrayOutputWithContext(context.Context) WebfilterProfileAntiphishCustomPatternArrayOutput
}

type WebfilterProfileAntiphishCustomPatternArray []WebfilterProfileAntiphishCustomPatternInput

func (WebfilterProfileAntiphishCustomPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileAntiphishCustomPattern)(nil)).Elem()
}

func (i WebfilterProfileAntiphishCustomPatternArray) ToWebfilterProfileAntiphishCustomPatternArrayOutput() WebfilterProfileAntiphishCustomPatternArrayOutput {
	return i.ToWebfilterProfileAntiphishCustomPatternArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishCustomPatternArray) ToWebfilterProfileAntiphishCustomPatternArrayOutputWithContext(ctx context.Context) WebfilterProfileAntiphishCustomPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishCustomPatternArrayOutput)
}

type WebfilterProfileAntiphishCustomPatternOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishCustomPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphishCustomPattern)(nil)).Elem()
}

func (o WebfilterProfileAntiphishCustomPatternOutput) ToWebfilterProfileAntiphishCustomPatternOutput() WebfilterProfileAntiphishCustomPatternOutput {
	return o
}

func (o WebfilterProfileAntiphishCustomPatternOutput) ToWebfilterProfileAntiphishCustomPatternOutputWithContext(ctx context.Context) WebfilterProfileAntiphishCustomPatternOutput {
	return o
}

// Category that the pattern matches. Valid values: `username`, `password`.
func (o WebfilterProfileAntiphishCustomPatternOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishCustomPattern) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Target pattern.
func (o WebfilterProfileAntiphishCustomPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishCustomPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
func (o WebfilterProfileAntiphishCustomPatternOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishCustomPattern) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WebfilterProfileAntiphishCustomPatternArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishCustomPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileAntiphishCustomPattern)(nil)).Elem()
}

func (o WebfilterProfileAntiphishCustomPatternArrayOutput) ToWebfilterProfileAntiphishCustomPatternArrayOutput() WebfilterProfileAntiphishCustomPatternArrayOutput {
	return o
}

func (o WebfilterProfileAntiphishCustomPatternArrayOutput) ToWebfilterProfileAntiphishCustomPatternArrayOutputWithContext(ctx context.Context) WebfilterProfileAntiphishCustomPatternArrayOutput {
	return o
}

func (o WebfilterProfileAntiphishCustomPatternArrayOutput) Index(i pulumi.IntInput) WebfilterProfileAntiphishCustomPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileAntiphishCustomPattern {
		return vs[0].([]WebfilterProfileAntiphishCustomPattern)[vs[1].(int)]
	}).(WebfilterProfileAntiphishCustomPatternOutput)
}

type WebfilterProfileAntiphishInspectionEntry struct {
	// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
	Action *string `pulumi:"action"`
	// FortiGuard category to match.
	FortiguardCategory *string `pulumi:"fortiguardCategory"`
	// Inspection target name.
	Name *string `pulumi:"name"`
}

// WebfilterProfileAntiphishInspectionEntryInput is an input type that accepts WebfilterProfileAntiphishInspectionEntryArgs and WebfilterProfileAntiphishInspectionEntryOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishInspectionEntryInput` via:
//
//	WebfilterProfileAntiphishInspectionEntryArgs{...}
type WebfilterProfileAntiphishInspectionEntryInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishInspectionEntryOutput() WebfilterProfileAntiphishInspectionEntryOutput
	ToWebfilterProfileAntiphishInspectionEntryOutputWithContext(context.Context) WebfilterProfileAntiphishInspectionEntryOutput
}

type WebfilterProfileAntiphishInspectionEntryArgs struct {
	// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// FortiGuard category to match.
	FortiguardCategory pulumi.StringPtrInput `pulumi:"fortiguardCategory"`
	// Inspection target name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileAntiphishInspectionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (i WebfilterProfileAntiphishInspectionEntryArgs) ToWebfilterProfileAntiphishInspectionEntryOutput() WebfilterProfileAntiphishInspectionEntryOutput {
	return i.ToWebfilterProfileAntiphishInspectionEntryOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishInspectionEntryArgs) ToWebfilterProfileAntiphishInspectionEntryOutputWithContext(ctx context.Context) WebfilterProfileAntiphishInspectionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishInspectionEntryOutput)
}

// WebfilterProfileAntiphishInspectionEntryArrayInput is an input type that accepts WebfilterProfileAntiphishInspectionEntryArray and WebfilterProfileAntiphishInspectionEntryArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileAntiphishInspectionEntryArrayInput` via:
//
//	WebfilterProfileAntiphishInspectionEntryArray{ WebfilterProfileAntiphishInspectionEntryArgs{...} }
type WebfilterProfileAntiphishInspectionEntryArrayInput interface {
	pulumi.Input

	ToWebfilterProfileAntiphishInspectionEntryArrayOutput() WebfilterProfileAntiphishInspectionEntryArrayOutput
	ToWebfilterProfileAntiphishInspectionEntryArrayOutputWithContext(context.Context) WebfilterProfileAntiphishInspectionEntryArrayOutput
}

type WebfilterProfileAntiphishInspectionEntryArray []WebfilterProfileAntiphishInspectionEntryInput

func (WebfilterProfileAntiphishInspectionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (i WebfilterProfileAntiphishInspectionEntryArray) ToWebfilterProfileAntiphishInspectionEntryArrayOutput() WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return i.ToWebfilterProfileAntiphishInspectionEntryArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileAntiphishInspectionEntryArray) ToWebfilterProfileAntiphishInspectionEntryArrayOutputWithContext(ctx context.Context) WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileAntiphishInspectionEntryArrayOutput)
}

type WebfilterProfileAntiphishInspectionEntryOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishInspectionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (o WebfilterProfileAntiphishInspectionEntryOutput) ToWebfilterProfileAntiphishInspectionEntryOutput() WebfilterProfileAntiphishInspectionEntryOutput {
	return o
}

func (o WebfilterProfileAntiphishInspectionEntryOutput) ToWebfilterProfileAntiphishInspectionEntryOutputWithContext(ctx context.Context) WebfilterProfileAntiphishInspectionEntryOutput {
	return o
}

// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
func (o WebfilterProfileAntiphishInspectionEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishInspectionEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// FortiGuard category to match.
func (o WebfilterProfileAntiphishInspectionEntryOutput) FortiguardCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishInspectionEntry) *string { return v.FortiguardCategory }).(pulumi.StringPtrOutput)
}

// Inspection target name.
func (o WebfilterProfileAntiphishInspectionEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileAntiphishInspectionEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileAntiphishInspectionEntryArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileAntiphishInspectionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (o WebfilterProfileAntiphishInspectionEntryArrayOutput) ToWebfilterProfileAntiphishInspectionEntryArrayOutput() WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return o
}

func (o WebfilterProfileAntiphishInspectionEntryArrayOutput) ToWebfilterProfileAntiphishInspectionEntryArrayOutputWithContext(ctx context.Context) WebfilterProfileAntiphishInspectionEntryArrayOutput {
	return o
}

func (o WebfilterProfileAntiphishInspectionEntryArrayOutput) Index(i pulumi.IntInput) WebfilterProfileAntiphishInspectionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileAntiphishInspectionEntry {
		return vs[0].([]WebfilterProfileAntiphishInspectionEntry)[vs[1].(int)]
	}).(WebfilterProfileAntiphishInspectionEntryOutput)
}

type WebfilterProfileFileFilter struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries []WebfilterProfileFileFilterEntry `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents *string `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WebfilterProfileFileFilterInput is an input type that accepts WebfilterProfileFileFilterArgs and WebfilterProfileFileFilterOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterInput` via:
//
//	WebfilterProfileFileFilterArgs{...}
type WebfilterProfileFileFilterInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterOutput() WebfilterProfileFileFilterOutput
	ToWebfilterProfileFileFilterOutputWithContext(context.Context) WebfilterProfileFileFilterOutput
}

type WebfilterProfileFileFilterArgs struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries WebfilterProfileFileFilterEntryArrayInput `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents pulumi.StringPtrInput `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebfilterProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilter)(nil)).Elem()
}

func (i WebfilterProfileFileFilterArgs) ToWebfilterProfileFileFilterOutput() WebfilterProfileFileFilterOutput {
	return i.ToWebfilterProfileFileFilterOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterArgs) ToWebfilterProfileFileFilterOutputWithContext(ctx context.Context) WebfilterProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterOutput)
}

func (i WebfilterProfileFileFilterArgs) ToWebfilterProfileFileFilterPtrOutput() WebfilterProfileFileFilterPtrOutput {
	return i.ToWebfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterArgs) ToWebfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) WebfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterOutput).ToWebfilterProfileFileFilterPtrOutputWithContext(ctx)
}

// WebfilterProfileFileFilterPtrInput is an input type that accepts WebfilterProfileFileFilterArgs, WebfilterProfileFileFilterPtr and WebfilterProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterPtrInput` via:
//
//	        WebfilterProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type WebfilterProfileFileFilterPtrInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterPtrOutput() WebfilterProfileFileFilterPtrOutput
	ToWebfilterProfileFileFilterPtrOutputWithContext(context.Context) WebfilterProfileFileFilterPtrOutput
}

type webfilterProfileFileFilterPtrType WebfilterProfileFileFilterArgs

func WebfilterProfileFileFilterPtr(v *WebfilterProfileFileFilterArgs) WebfilterProfileFileFilterPtrInput {
	return (*webfilterProfileFileFilterPtrType)(v)
}

func (*webfilterProfileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileFileFilter)(nil)).Elem()
}

func (i *webfilterProfileFileFilterPtrType) ToWebfilterProfileFileFilterPtrOutput() WebfilterProfileFileFilterPtrOutput {
	return i.ToWebfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *webfilterProfileFileFilterPtrType) ToWebfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) WebfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterPtrOutput)
}

type WebfilterProfileFileFilterOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilter)(nil)).Elem()
}

func (o WebfilterProfileFileFilterOutput) ToWebfilterProfileFileFilterOutput() WebfilterProfileFileFilterOutput {
	return o
}

func (o WebfilterProfileFileFilterOutput) ToWebfilterProfileFileFilterOutputWithContext(ctx context.Context) WebfilterProfileFileFilterOutput {
	return o
}

func (o WebfilterProfileFileFilterOutput) ToWebfilterProfileFileFilterPtrOutput() WebfilterProfileFileFilterPtrOutput {
	return o.ToWebfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o WebfilterProfileFileFilterOutput) ToWebfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) WebfilterProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebfilterProfileFileFilter) *WebfilterProfileFileFilter {
		return &v
	}).(WebfilterProfileFileFilterPtrOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o WebfilterProfileFileFilterOutput) Entries() WebfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilter) []WebfilterProfileFileFilterEntry { return v.Entries }).(WebfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilter) *string { return v.ScanArchiveContents }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileFileFilter)(nil)).Elem()
}

func (o WebfilterProfileFileFilterPtrOutput) ToWebfilterProfileFileFilterPtrOutput() WebfilterProfileFileFilterPtrOutput {
	return o
}

func (o WebfilterProfileFileFilterPtrOutput) ToWebfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) WebfilterProfileFileFilterPtrOutput {
	return o
}

func (o WebfilterProfileFileFilterPtrOutput) Elem() WebfilterProfileFileFilterOutput {
	return o.ApplyT(func(v *WebfilterProfileFileFilter) WebfilterProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret WebfilterProfileFileFilter
		return ret
	}).(WebfilterProfileFileFilterOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o WebfilterProfileFileFilterPtrOutput) Entries() WebfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileFileFilter) []WebfilterProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(WebfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterPtrOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.ScanArchiveContents
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o WebfilterProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type WebfilterProfileFileFilterEntry struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []WebfilterProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	// Add a file filter.
	Filter *string `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `http`, `ftp`.
	Protocol *string `pulumi:"protocol"`
}

// WebfilterProfileFileFilterEntryInput is an input type that accepts WebfilterProfileFileFilterEntryArgs and WebfilterProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterEntryInput` via:
//
//	WebfilterProfileFileFilterEntryArgs{...}
type WebfilterProfileFileFilterEntryInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterEntryOutput() WebfilterProfileFileFilterEntryOutput
	ToWebfilterProfileFileFilterEntryOutputWithContext(context.Context) WebfilterProfileFileFilterEntryOutput
}

type WebfilterProfileFileFilterEntryArgs struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes WebfilterProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	// Add a file filter.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `http`, `ftp`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WebfilterProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i WebfilterProfileFileFilterEntryArgs) ToWebfilterProfileFileFilterEntryOutput() WebfilterProfileFileFilterEntryOutput {
	return i.ToWebfilterProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterEntryArgs) ToWebfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterEntryOutput)
}

// WebfilterProfileFileFilterEntryArrayInput is an input type that accepts WebfilterProfileFileFilterEntryArray and WebfilterProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterEntryArrayInput` via:
//
//	WebfilterProfileFileFilterEntryArray{ WebfilterProfileFileFilterEntryArgs{...} }
type WebfilterProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterEntryArrayOutput() WebfilterProfileFileFilterEntryArrayOutput
	ToWebfilterProfileFileFilterEntryArrayOutputWithContext(context.Context) WebfilterProfileFileFilterEntryArrayOutput
}

type WebfilterProfileFileFilterEntryArray []WebfilterProfileFileFilterEntryInput

func (WebfilterProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i WebfilterProfileFileFilterEntryArray) ToWebfilterProfileFileFilterEntryArrayOutput() WebfilterProfileFileFilterEntryArrayOutput {
	return i.ToWebfilterProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterEntryArray) ToWebfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterEntryArrayOutput)
}

type WebfilterProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o WebfilterProfileFileFilterEntryOutput) ToWebfilterProfileFileFilterEntryOutput() WebfilterProfileFileFilterEntryOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryOutput) ToWebfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryOutput {
	return o
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o WebfilterProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o WebfilterProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
func (o WebfilterProfileFileFilterEntryOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o WebfilterProfileFileFilterEntryOutput) FileTypes() WebfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) []WebfilterProfileFileFilterEntryFileType { return v.FileTypes }).(WebfilterProfileFileFilterEntryFileTypeArrayOutput)
}

// Add a file filter.
func (o WebfilterProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o WebfilterProfileFileFilterEntryOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

// Protocols to apply with. Valid values: `http`, `ftp`.
func (o WebfilterProfileFileFilterEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o WebfilterProfileFileFilterEntryArrayOutput) ToWebfilterProfileFileFilterEntryArrayOutput() WebfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryArrayOutput) ToWebfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) WebfilterProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileFileFilterEntry {
		return vs[0].([]WebfilterProfileFileFilterEntry)[vs[1].(int)]
	}).(WebfilterProfileFileFilterEntryOutput)
}

type WebfilterProfileFileFilterEntryFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// WebfilterProfileFileFilterEntryFileTypeInput is an input type that accepts WebfilterProfileFileFilterEntryFileTypeArgs and WebfilterProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterEntryFileTypeInput` via:
//
//	WebfilterProfileFileFilterEntryFileTypeArgs{...}
type WebfilterProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterEntryFileTypeOutput() WebfilterProfileFileFilterEntryFileTypeOutput
	ToWebfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Context) WebfilterProfileFileFilterEntryFileTypeOutput
}

type WebfilterProfileFileFilterEntryFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i WebfilterProfileFileFilterEntryFileTypeArgs) ToWebfilterProfileFileFilterEntryFileTypeOutput() WebfilterProfileFileFilterEntryFileTypeOutput {
	return i.ToWebfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterEntryFileTypeArgs) ToWebfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterEntryFileTypeOutput)
}

// WebfilterProfileFileFilterEntryFileTypeArrayInput is an input type that accepts WebfilterProfileFileFilterEntryFileTypeArray and WebfilterProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileFileFilterEntryFileTypeArrayInput` via:
//
//	WebfilterProfileFileFilterEntryFileTypeArray{ WebfilterProfileFileFilterEntryFileTypeArgs{...} }
type WebfilterProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToWebfilterProfileFileFilterEntryFileTypeArrayOutput() WebfilterProfileFileFilterEntryFileTypeArrayOutput
	ToWebfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) WebfilterProfileFileFilterEntryFileTypeArrayOutput
}

type WebfilterProfileFileFilterEntryFileTypeArray []WebfilterProfileFileFilterEntryFileTypeInput

func (WebfilterProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i WebfilterProfileFileFilterEntryFileTypeArray) ToWebfilterProfileFileFilterEntryFileTypeArrayOutput() WebfilterProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToWebfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileFileFilterEntryFileTypeArray) ToWebfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFileFilterEntryFileTypeArrayOutput)
}

type WebfilterProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o WebfilterProfileFileFilterEntryFileTypeOutput) ToWebfilterProfileFileFilterEntryFileTypeOutput() WebfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryFileTypeOutput) ToWebfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

// File type name.
func (o WebfilterProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o WebfilterProfileFileFilterEntryFileTypeArrayOutput) ToWebfilterProfileFileFilterEntryFileTypeArrayOutput() WebfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryFileTypeArrayOutput) ToWebfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) WebfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o WebfilterProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) WebfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileFileFilterEntryFileType {
		return vs[0].([]WebfilterProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(WebfilterProfileFileFilterEntryFileTypeOutput)
}

type WebfilterProfileFtgdWf struct {
	// Do not stop quota for these categories.
	ExemptQuota *string `pulumi:"exemptQuota"`
	// FortiGuard filters. The structure of `filters` block is documented below.
	Filters []WebfilterProfileFtgdWfFilter `pulumi:"filters"`
	// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
	MaxQuotaTimeout *int `pulumi:"maxQuotaTimeout"`
	// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
	Options *string `pulumi:"options"`
	// Allow web filter profile overrides.
	Ovrd *string `pulumi:"ovrd"`
	// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
	Quotas []WebfilterProfileFtgdWfQuota `pulumi:"quotas"`
	// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
	RateCrlUrls *string `pulumi:"rateCrlUrls"`
	// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
	RateCssUrls *string `pulumi:"rateCssUrls"`
	// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
	RateImageUrls *string `pulumi:"rateImageUrls"`
	// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
	RateJavascriptUrls *string `pulumi:"rateJavascriptUrls"`
}

// WebfilterProfileFtgdWfInput is an input type that accepts WebfilterProfileFtgdWfArgs and WebfilterProfileFtgdWfOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfInput` via:
//
//	WebfilterProfileFtgdWfArgs{...}
type WebfilterProfileFtgdWfInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfOutput() WebfilterProfileFtgdWfOutput
	ToWebfilterProfileFtgdWfOutputWithContext(context.Context) WebfilterProfileFtgdWfOutput
}

type WebfilterProfileFtgdWfArgs struct {
	// Do not stop quota for these categories.
	ExemptQuota pulumi.StringPtrInput `pulumi:"exemptQuota"`
	// FortiGuard filters. The structure of `filters` block is documented below.
	Filters WebfilterProfileFtgdWfFilterArrayInput `pulumi:"filters"`
	// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
	MaxQuotaTimeout pulumi.IntPtrInput `pulumi:"maxQuotaTimeout"`
	// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Allow web filter profile overrides.
	Ovrd pulumi.StringPtrInput `pulumi:"ovrd"`
	// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
	Quotas WebfilterProfileFtgdWfQuotaArrayInput `pulumi:"quotas"`
	// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
	RateCrlUrls pulumi.StringPtrInput `pulumi:"rateCrlUrls"`
	// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
	RateCssUrls pulumi.StringPtrInput `pulumi:"rateCssUrls"`
	// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
	RateImageUrls pulumi.StringPtrInput `pulumi:"rateImageUrls"`
	// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
	RateJavascriptUrls pulumi.StringPtrInput `pulumi:"rateJavascriptUrls"`
}

func (WebfilterProfileFtgdWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWf)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfArgs) ToWebfilterProfileFtgdWfOutput() WebfilterProfileFtgdWfOutput {
	return i.ToWebfilterProfileFtgdWfOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfArgs) ToWebfilterProfileFtgdWfOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfOutput)
}

func (i WebfilterProfileFtgdWfArgs) ToWebfilterProfileFtgdWfPtrOutput() WebfilterProfileFtgdWfPtrOutput {
	return i.ToWebfilterProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfArgs) ToWebfilterProfileFtgdWfPtrOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfOutput).ToWebfilterProfileFtgdWfPtrOutputWithContext(ctx)
}

// WebfilterProfileFtgdWfPtrInput is an input type that accepts WebfilterProfileFtgdWfArgs, WebfilterProfileFtgdWfPtr and WebfilterProfileFtgdWfPtrOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfPtrInput` via:
//
//	        WebfilterProfileFtgdWfArgs{...}
//
//	or:
//
//	        nil
type WebfilterProfileFtgdWfPtrInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfPtrOutput() WebfilterProfileFtgdWfPtrOutput
	ToWebfilterProfileFtgdWfPtrOutputWithContext(context.Context) WebfilterProfileFtgdWfPtrOutput
}

type webfilterProfileFtgdWfPtrType WebfilterProfileFtgdWfArgs

func WebfilterProfileFtgdWfPtr(v *WebfilterProfileFtgdWfArgs) WebfilterProfileFtgdWfPtrInput {
	return (*webfilterProfileFtgdWfPtrType)(v)
}

func (*webfilterProfileFtgdWfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileFtgdWf)(nil)).Elem()
}

func (i *webfilterProfileFtgdWfPtrType) ToWebfilterProfileFtgdWfPtrOutput() WebfilterProfileFtgdWfPtrOutput {
	return i.ToWebfilterProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (i *webfilterProfileFtgdWfPtrType) ToWebfilterProfileFtgdWfPtrOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfPtrOutput)
}

type WebfilterProfileFtgdWfOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWf)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfOutput) ToWebfilterProfileFtgdWfOutput() WebfilterProfileFtgdWfOutput {
	return o
}

func (o WebfilterProfileFtgdWfOutput) ToWebfilterProfileFtgdWfOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfOutput {
	return o
}

func (o WebfilterProfileFtgdWfOutput) ToWebfilterProfileFtgdWfPtrOutput() WebfilterProfileFtgdWfPtrOutput {
	return o.ToWebfilterProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (o WebfilterProfileFtgdWfOutput) ToWebfilterProfileFtgdWfPtrOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebfilterProfileFtgdWf) *WebfilterProfileFtgdWf {
		return &v
	}).(WebfilterProfileFtgdWfPtrOutput)
}

// Do not stop quota for these categories.
func (o WebfilterProfileFtgdWfOutput) ExemptQuota() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.ExemptQuota }).(pulumi.StringPtrOutput)
}

// FortiGuard filters. The structure of `filters` block is documented below.
func (o WebfilterProfileFtgdWfOutput) Filters() WebfilterProfileFtgdWfFilterArrayOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) []WebfilterProfileFtgdWfFilter { return v.Filters }).(WebfilterProfileFtgdWfFilterArrayOutput)
}

// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
func (o WebfilterProfileFtgdWfOutput) MaxQuotaTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *int { return v.MaxQuotaTimeout }).(pulumi.IntPtrOutput)
}

// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
func (o WebfilterProfileFtgdWfOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Allow web filter profile overrides.
func (o WebfilterProfileFtgdWfOutput) Ovrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.Ovrd }).(pulumi.StringPtrOutput)
}

// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
func (o WebfilterProfileFtgdWfOutput) Quotas() WebfilterProfileFtgdWfQuotaArrayOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) []WebfilterProfileFtgdWfQuota { return v.Quotas }).(WebfilterProfileFtgdWfQuotaArrayOutput)
}

// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfOutput) RateCrlUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.RateCrlUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfOutput) RateCssUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.RateCssUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfOutput) RateImageUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.RateImageUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfOutput) RateJavascriptUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWf) *string { return v.RateJavascriptUrls }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFtgdWfPtrOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileFtgdWf)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfPtrOutput) ToWebfilterProfileFtgdWfPtrOutput() WebfilterProfileFtgdWfPtrOutput {
	return o
}

func (o WebfilterProfileFtgdWfPtrOutput) ToWebfilterProfileFtgdWfPtrOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfPtrOutput {
	return o
}

func (o WebfilterProfileFtgdWfPtrOutput) Elem() WebfilterProfileFtgdWfOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) WebfilterProfileFtgdWf {
		if v != nil {
			return *v
		}
		var ret WebfilterProfileFtgdWf
		return ret
	}).(WebfilterProfileFtgdWfOutput)
}

// Do not stop quota for these categories.
func (o WebfilterProfileFtgdWfPtrOutput) ExemptQuota() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.ExemptQuota
	}).(pulumi.StringPtrOutput)
}

// FortiGuard filters. The structure of `filters` block is documented below.
func (o WebfilterProfileFtgdWfPtrOutput) Filters() WebfilterProfileFtgdWfFilterArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) []WebfilterProfileFtgdWfFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(WebfilterProfileFtgdWfFilterArrayOutput)
}

// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
func (o WebfilterProfileFtgdWfPtrOutput) MaxQuotaTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *int {
		if v == nil {
			return nil
		}
		return v.MaxQuotaTimeout
	}).(pulumi.IntPtrOutput)
}

// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
func (o WebfilterProfileFtgdWfPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Allow web filter profile overrides.
func (o WebfilterProfileFtgdWfPtrOutput) Ovrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.Ovrd
	}).(pulumi.StringPtrOutput)
}

// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
func (o WebfilterProfileFtgdWfPtrOutput) Quotas() WebfilterProfileFtgdWfQuotaArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) []WebfilterProfileFtgdWfQuota {
		if v == nil {
			return nil
		}
		return v.Quotas
	}).(WebfilterProfileFtgdWfQuotaArrayOutput)
}

// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfPtrOutput) RateCrlUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateCrlUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfPtrOutput) RateCssUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateCssUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfPtrOutput) RateImageUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateImageUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
func (o WebfilterProfileFtgdWfPtrOutput) RateJavascriptUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateJavascriptUrls
	}).(pulumi.StringPtrOutput)
}

type WebfilterProfileFtgdWfFilter struct {
	// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
	Action *string `pulumi:"action"`
	// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
	AuthUsrGrps []WebfilterProfileFtgdWfFilterAuthUsrGrp `pulumi:"authUsrGrps"`
	// Categories and groups the filter examines.
	Category *int `pulumi:"category"`
	// ID number.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Override replacement message.
	OverrideReplacemsg *string `pulumi:"overrideReplacemsg"`
	// Duration of warnings.
	WarnDuration *string `pulumi:"warnDuration"`
	// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
	WarningDurationType *string `pulumi:"warningDurationType"`
	// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
	WarningPrompt *string `pulumi:"warningPrompt"`
}

// WebfilterProfileFtgdWfFilterInput is an input type that accepts WebfilterProfileFtgdWfFilterArgs and WebfilterProfileFtgdWfFilterOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfFilterInput` via:
//
//	WebfilterProfileFtgdWfFilterArgs{...}
type WebfilterProfileFtgdWfFilterInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfFilterOutput() WebfilterProfileFtgdWfFilterOutput
	ToWebfilterProfileFtgdWfFilterOutputWithContext(context.Context) WebfilterProfileFtgdWfFilterOutput
}

type WebfilterProfileFtgdWfFilterArgs struct {
	// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
	AuthUsrGrps WebfilterProfileFtgdWfFilterAuthUsrGrpArrayInput `pulumi:"authUsrGrps"`
	// Categories and groups the filter examines.
	Category pulumi.IntPtrInput `pulumi:"category"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Override replacement message.
	OverrideReplacemsg pulumi.StringPtrInput `pulumi:"overrideReplacemsg"`
	// Duration of warnings.
	WarnDuration pulumi.StringPtrInput `pulumi:"warnDuration"`
	// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
	WarningDurationType pulumi.StringPtrInput `pulumi:"warningDurationType"`
	// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
	WarningPrompt pulumi.StringPtrInput `pulumi:"warningPrompt"`
}

func (WebfilterProfileFtgdWfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfFilter)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfFilterArgs) ToWebfilterProfileFtgdWfFilterOutput() WebfilterProfileFtgdWfFilterOutput {
	return i.ToWebfilterProfileFtgdWfFilterOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfFilterArgs) ToWebfilterProfileFtgdWfFilterOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfFilterOutput)
}

// WebfilterProfileFtgdWfFilterArrayInput is an input type that accepts WebfilterProfileFtgdWfFilterArray and WebfilterProfileFtgdWfFilterArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfFilterArrayInput` via:
//
//	WebfilterProfileFtgdWfFilterArray{ WebfilterProfileFtgdWfFilterArgs{...} }
type WebfilterProfileFtgdWfFilterArrayInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfFilterArrayOutput() WebfilterProfileFtgdWfFilterArrayOutput
	ToWebfilterProfileFtgdWfFilterArrayOutputWithContext(context.Context) WebfilterProfileFtgdWfFilterArrayOutput
}

type WebfilterProfileFtgdWfFilterArray []WebfilterProfileFtgdWfFilterInput

func (WebfilterProfileFtgdWfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfFilter)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfFilterArray) ToWebfilterProfileFtgdWfFilterArrayOutput() WebfilterProfileFtgdWfFilterArrayOutput {
	return i.ToWebfilterProfileFtgdWfFilterArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfFilterArray) ToWebfilterProfileFtgdWfFilterArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfFilterArrayOutput)
}

type WebfilterProfileFtgdWfFilterOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfFilter)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfFilterOutput) ToWebfilterProfileFtgdWfFilterOutput() WebfilterProfileFtgdWfFilterOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterOutput) ToWebfilterProfileFtgdWfFilterOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterOutput {
	return o
}

// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
func (o WebfilterProfileFtgdWfFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
func (o WebfilterProfileFtgdWfFilterOutput) AuthUsrGrps() WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) []WebfilterProfileFtgdWfFilterAuthUsrGrp { return v.AuthUsrGrps }).(WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput)
}

// Categories and groups the filter examines.
func (o WebfilterProfileFtgdWfFilterOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *int { return v.Category }).(pulumi.IntPtrOutput)
}

// ID number.
func (o WebfilterProfileFtgdWfFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o WebfilterProfileFtgdWfFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Override replacement message.
func (o WebfilterProfileFtgdWfFilterOutput) OverrideReplacemsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.OverrideReplacemsg }).(pulumi.StringPtrOutput)
}

// Duration of warnings.
func (o WebfilterProfileFtgdWfFilterOutput) WarnDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.WarnDuration }).(pulumi.StringPtrOutput)
}

// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
func (o WebfilterProfileFtgdWfFilterOutput) WarningDurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.WarningDurationType }).(pulumi.StringPtrOutput)
}

// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
func (o WebfilterProfileFtgdWfFilterOutput) WarningPrompt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilter) *string { return v.WarningPrompt }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFtgdWfFilterArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfFilter)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfFilterArrayOutput) ToWebfilterProfileFtgdWfFilterArrayOutput() WebfilterProfileFtgdWfFilterArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterArrayOutput) ToWebfilterProfileFtgdWfFilterArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterArrayOutput) Index(i pulumi.IntInput) WebfilterProfileFtgdWfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileFtgdWfFilter {
		return vs[0].([]WebfilterProfileFtgdWfFilter)[vs[1].(int)]
	}).(WebfilterProfileFtgdWfFilterOutput)
}

type WebfilterProfileFtgdWfFilterAuthUsrGrp struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// WebfilterProfileFtgdWfFilterAuthUsrGrpInput is an input type that accepts WebfilterProfileFtgdWfFilterAuthUsrGrpArgs and WebfilterProfileFtgdWfFilterAuthUsrGrpOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfFilterAuthUsrGrpInput` via:
//
//	WebfilterProfileFtgdWfFilterAuthUsrGrpArgs{...}
type WebfilterProfileFtgdWfFilterAuthUsrGrpInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpOutput
	ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutputWithContext(context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpOutput
}

type WebfilterProfileFtgdWfFilterAuthUsrGrpArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileFtgdWfFilterAuthUsrGrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfFilterAuthUsrGrpArgs) ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpOutput {
	return i.ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfFilterAuthUsrGrpArgs) ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfFilterAuthUsrGrpOutput)
}

// WebfilterProfileFtgdWfFilterAuthUsrGrpArrayInput is an input type that accepts WebfilterProfileFtgdWfFilterAuthUsrGrpArray and WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfFilterAuthUsrGrpArrayInput` via:
//
//	WebfilterProfileFtgdWfFilterAuthUsrGrpArray{ WebfilterProfileFtgdWfFilterAuthUsrGrpArgs{...} }
type WebfilterProfileFtgdWfFilterAuthUsrGrpArrayInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput
	ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput
}

type WebfilterProfileFtgdWfFilterAuthUsrGrpArray []WebfilterProfileFtgdWfFilterAuthUsrGrpInput

func (WebfilterProfileFtgdWfFilterAuthUsrGrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfFilterAuthUsrGrpArray) ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return i.ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfFilterAuthUsrGrpArray) ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput)
}

type WebfilterProfileFtgdWfFilterAuthUsrGrpOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfFilterAuthUsrGrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfFilterAuthUsrGrpOutput) ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterAuthUsrGrpOutput) ToWebfilterProfileFtgdWfFilterAuthUsrGrpOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpOutput {
	return o
}

// User group name.
func (o WebfilterProfileFtgdWfFilterAuthUsrGrpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfFilterAuthUsrGrp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput) ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput() WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput) ToWebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput) Index(i pulumi.IntInput) WebfilterProfileFtgdWfFilterAuthUsrGrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileFtgdWfFilterAuthUsrGrp {
		return vs[0].([]WebfilterProfileFtgdWfFilterAuthUsrGrp)[vs[1].(int)]
	}).(WebfilterProfileFtgdWfFilterAuthUsrGrpOutput)
}

type WebfilterProfileFtgdWfQuota struct {
	// FortiGuard categories to apply quota to (category action must be set to monitor).
	Category *string `pulumi:"category"`
	// Duration of quota.
	Duration *string `pulumi:"duration"`
	// ID number.
	Id *int `pulumi:"id"`
	// Override replacement message.
	OverrideReplacemsg *string `pulumi:"overrideReplacemsg"`
	// Quota type. Valid values: `time`, `traffic`.
	Type *string `pulumi:"type"`
	// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
	Unit *string `pulumi:"unit"`
	// Traffic quota value.
	Value *int `pulumi:"value"`
}

// WebfilterProfileFtgdWfQuotaInput is an input type that accepts WebfilterProfileFtgdWfQuotaArgs and WebfilterProfileFtgdWfQuotaOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfQuotaInput` via:
//
//	WebfilterProfileFtgdWfQuotaArgs{...}
type WebfilterProfileFtgdWfQuotaInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfQuotaOutput() WebfilterProfileFtgdWfQuotaOutput
	ToWebfilterProfileFtgdWfQuotaOutputWithContext(context.Context) WebfilterProfileFtgdWfQuotaOutput
}

type WebfilterProfileFtgdWfQuotaArgs struct {
	// FortiGuard categories to apply quota to (category action must be set to monitor).
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Duration of quota.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Override replacement message.
	OverrideReplacemsg pulumi.StringPtrInput `pulumi:"overrideReplacemsg"`
	// Quota type. Valid values: `time`, `traffic`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Traffic quota value.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (WebfilterProfileFtgdWfQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfQuota)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfQuotaArgs) ToWebfilterProfileFtgdWfQuotaOutput() WebfilterProfileFtgdWfQuotaOutput {
	return i.ToWebfilterProfileFtgdWfQuotaOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfQuotaArgs) ToWebfilterProfileFtgdWfQuotaOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfQuotaOutput)
}

// WebfilterProfileFtgdWfQuotaArrayInput is an input type that accepts WebfilterProfileFtgdWfQuotaArray and WebfilterProfileFtgdWfQuotaArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileFtgdWfQuotaArrayInput` via:
//
//	WebfilterProfileFtgdWfQuotaArray{ WebfilterProfileFtgdWfQuotaArgs{...} }
type WebfilterProfileFtgdWfQuotaArrayInput interface {
	pulumi.Input

	ToWebfilterProfileFtgdWfQuotaArrayOutput() WebfilterProfileFtgdWfQuotaArrayOutput
	ToWebfilterProfileFtgdWfQuotaArrayOutputWithContext(context.Context) WebfilterProfileFtgdWfQuotaArrayOutput
}

type WebfilterProfileFtgdWfQuotaArray []WebfilterProfileFtgdWfQuotaInput

func (WebfilterProfileFtgdWfQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfQuota)(nil)).Elem()
}

func (i WebfilterProfileFtgdWfQuotaArray) ToWebfilterProfileFtgdWfQuotaArrayOutput() WebfilterProfileFtgdWfQuotaArrayOutput {
	return i.ToWebfilterProfileFtgdWfQuotaArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileFtgdWfQuotaArray) ToWebfilterProfileFtgdWfQuotaArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileFtgdWfQuotaArrayOutput)
}

type WebfilterProfileFtgdWfQuotaOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileFtgdWfQuota)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfQuotaOutput) ToWebfilterProfileFtgdWfQuotaOutput() WebfilterProfileFtgdWfQuotaOutput {
	return o
}

func (o WebfilterProfileFtgdWfQuotaOutput) ToWebfilterProfileFtgdWfQuotaOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfQuotaOutput {
	return o
}

// FortiGuard categories to apply quota to (category action must be set to monitor).
func (o WebfilterProfileFtgdWfQuotaOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Duration of quota.
func (o WebfilterProfileFtgdWfQuotaOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// ID number.
func (o WebfilterProfileFtgdWfQuotaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Override replacement message.
func (o WebfilterProfileFtgdWfQuotaOutput) OverrideReplacemsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *string { return v.OverrideReplacemsg }).(pulumi.StringPtrOutput)
}

// Quota type. Valid values: `time`, `traffic`.
func (o WebfilterProfileFtgdWfQuotaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
func (o WebfilterProfileFtgdWfQuotaOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Traffic quota value.
func (o WebfilterProfileFtgdWfQuotaOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileFtgdWfQuota) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type WebfilterProfileFtgdWfQuotaArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileFtgdWfQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileFtgdWfQuota)(nil)).Elem()
}

func (o WebfilterProfileFtgdWfQuotaArrayOutput) ToWebfilterProfileFtgdWfQuotaArrayOutput() WebfilterProfileFtgdWfQuotaArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfQuotaArrayOutput) ToWebfilterProfileFtgdWfQuotaArrayOutputWithContext(ctx context.Context) WebfilterProfileFtgdWfQuotaArrayOutput {
	return o
}

func (o WebfilterProfileFtgdWfQuotaArrayOutput) Index(i pulumi.IntInput) WebfilterProfileFtgdWfQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileFtgdWfQuota {
		return vs[0].([]WebfilterProfileFtgdWfQuota)[vs[1].(int)]
	}).(WebfilterProfileFtgdWfQuotaOutput)
}

type WebfilterProfileOverride struct {
	// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
	OvrdCookie *string `pulumi:"ovrdCookie"`
	// Override duration.
	OvrdDur *string `pulumi:"ovrdDur"`
	// Override duration mode. Valid values: `constant`, `ask`.
	OvrdDurMode *string `pulumi:"ovrdDurMode"`
	// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
	OvrdScope *string `pulumi:"ovrdScope"`
	// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
	OvrdUserGroups []WebfilterProfileOverrideOvrdUserGroup `pulumi:"ovrdUserGroups"`
	// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	ProfileAttribute *string `pulumi:"profileAttribute"`
	// Override profile type. Valid values: `list`, `radius`.
	ProfileType *string `pulumi:"profileType"`
	// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
	Profiles []WebfilterProfileOverrideProfile `pulumi:"profiles"`
}

// WebfilterProfileOverrideInput is an input type that accepts WebfilterProfileOverrideArgs and WebfilterProfileOverrideOutput values.
// You can construct a concrete instance of `WebfilterProfileOverrideInput` via:
//
//	WebfilterProfileOverrideArgs{...}
type WebfilterProfileOverrideInput interface {
	pulumi.Input

	ToWebfilterProfileOverrideOutput() WebfilterProfileOverrideOutput
	ToWebfilterProfileOverrideOutputWithContext(context.Context) WebfilterProfileOverrideOutput
}

type WebfilterProfileOverrideArgs struct {
	// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
	OvrdCookie pulumi.StringPtrInput `pulumi:"ovrdCookie"`
	// Override duration.
	OvrdDur pulumi.StringPtrInput `pulumi:"ovrdDur"`
	// Override duration mode. Valid values: `constant`, `ask`.
	OvrdDurMode pulumi.StringPtrInput `pulumi:"ovrdDurMode"`
	// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
	OvrdScope pulumi.StringPtrInput `pulumi:"ovrdScope"`
	// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
	OvrdUserGroups WebfilterProfileOverrideOvrdUserGroupArrayInput `pulumi:"ovrdUserGroups"`
	// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	ProfileAttribute pulumi.StringPtrInput `pulumi:"profileAttribute"`
	// Override profile type. Valid values: `list`, `radius`.
	ProfileType pulumi.StringPtrInput `pulumi:"profileType"`
	// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
	Profiles WebfilterProfileOverrideProfileArrayInput `pulumi:"profiles"`
}

func (WebfilterProfileOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverride)(nil)).Elem()
}

func (i WebfilterProfileOverrideArgs) ToWebfilterProfileOverrideOutput() WebfilterProfileOverrideOutput {
	return i.ToWebfilterProfileOverrideOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideArgs) ToWebfilterProfileOverrideOutputWithContext(ctx context.Context) WebfilterProfileOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideOutput)
}

func (i WebfilterProfileOverrideArgs) ToWebfilterProfileOverridePtrOutput() WebfilterProfileOverridePtrOutput {
	return i.ToWebfilterProfileOverridePtrOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideArgs) ToWebfilterProfileOverridePtrOutputWithContext(ctx context.Context) WebfilterProfileOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideOutput).ToWebfilterProfileOverridePtrOutputWithContext(ctx)
}

// WebfilterProfileOverridePtrInput is an input type that accepts WebfilterProfileOverrideArgs, WebfilterProfileOverridePtr and WebfilterProfileOverridePtrOutput values.
// You can construct a concrete instance of `WebfilterProfileOverridePtrInput` via:
//
//	        WebfilterProfileOverrideArgs{...}
//
//	or:
//
//	        nil
type WebfilterProfileOverridePtrInput interface {
	pulumi.Input

	ToWebfilterProfileOverridePtrOutput() WebfilterProfileOverridePtrOutput
	ToWebfilterProfileOverridePtrOutputWithContext(context.Context) WebfilterProfileOverridePtrOutput
}

type webfilterProfileOverridePtrType WebfilterProfileOverrideArgs

func WebfilterProfileOverridePtr(v *WebfilterProfileOverrideArgs) WebfilterProfileOverridePtrInput {
	return (*webfilterProfileOverridePtrType)(v)
}

func (*webfilterProfileOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileOverride)(nil)).Elem()
}

func (i *webfilterProfileOverridePtrType) ToWebfilterProfileOverridePtrOutput() WebfilterProfileOverridePtrOutput {
	return i.ToWebfilterProfileOverridePtrOutputWithContext(context.Background())
}

func (i *webfilterProfileOverridePtrType) ToWebfilterProfileOverridePtrOutputWithContext(ctx context.Context) WebfilterProfileOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverridePtrOutput)
}

type WebfilterProfileOverrideOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverride)(nil)).Elem()
}

func (o WebfilterProfileOverrideOutput) ToWebfilterProfileOverrideOutput() WebfilterProfileOverrideOutput {
	return o
}

func (o WebfilterProfileOverrideOutput) ToWebfilterProfileOverrideOutputWithContext(ctx context.Context) WebfilterProfileOverrideOutput {
	return o
}

func (o WebfilterProfileOverrideOutput) ToWebfilterProfileOverridePtrOutput() WebfilterProfileOverridePtrOutput {
	return o.ToWebfilterProfileOverridePtrOutputWithContext(context.Background())
}

func (o WebfilterProfileOverrideOutput) ToWebfilterProfileOverridePtrOutputWithContext(ctx context.Context) WebfilterProfileOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebfilterProfileOverride) *WebfilterProfileOverride {
		return &v
	}).(WebfilterProfileOverridePtrOutput)
}

// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
func (o WebfilterProfileOverrideOutput) OvrdCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.OvrdCookie }).(pulumi.StringPtrOutput)
}

// Override duration.
func (o WebfilterProfileOverrideOutput) OvrdDur() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.OvrdDur }).(pulumi.StringPtrOutput)
}

// Override duration mode. Valid values: `constant`, `ask`.
func (o WebfilterProfileOverrideOutput) OvrdDurMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.OvrdDurMode }).(pulumi.StringPtrOutput)
}

// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
func (o WebfilterProfileOverrideOutput) OvrdScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.OvrdScope }).(pulumi.StringPtrOutput)
}

// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
func (o WebfilterProfileOverrideOutput) OvrdUserGroups() WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) []WebfilterProfileOverrideOvrdUserGroup { return v.OvrdUserGroups }).(WebfilterProfileOverrideOvrdUserGroupArrayOutput)
}

// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o WebfilterProfileOverrideOutput) ProfileAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.ProfileAttribute }).(pulumi.StringPtrOutput)
}

// Override profile type. Valid values: `list`, `radius`.
func (o WebfilterProfileOverrideOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) *string { return v.ProfileType }).(pulumi.StringPtrOutput)
}

// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
func (o WebfilterProfileOverrideOutput) Profiles() WebfilterProfileOverrideProfileArrayOutput {
	return o.ApplyT(func(v WebfilterProfileOverride) []WebfilterProfileOverrideProfile { return v.Profiles }).(WebfilterProfileOverrideProfileArrayOutput)
}

type WebfilterProfileOverridePtrOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileOverride)(nil)).Elem()
}

func (o WebfilterProfileOverridePtrOutput) ToWebfilterProfileOverridePtrOutput() WebfilterProfileOverridePtrOutput {
	return o
}

func (o WebfilterProfileOverridePtrOutput) ToWebfilterProfileOverridePtrOutputWithContext(ctx context.Context) WebfilterProfileOverridePtrOutput {
	return o
}

func (o WebfilterProfileOverridePtrOutput) Elem() WebfilterProfileOverrideOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) WebfilterProfileOverride {
		if v != nil {
			return *v
		}
		var ret WebfilterProfileOverride
		return ret
	}).(WebfilterProfileOverrideOutput)
}

// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
func (o WebfilterProfileOverridePtrOutput) OvrdCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdCookie
	}).(pulumi.StringPtrOutput)
}

// Override duration.
func (o WebfilterProfileOverridePtrOutput) OvrdDur() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdDur
	}).(pulumi.StringPtrOutput)
}

// Override duration mode. Valid values: `constant`, `ask`.
func (o WebfilterProfileOverridePtrOutput) OvrdDurMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdDurMode
	}).(pulumi.StringPtrOutput)
}

// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
func (o WebfilterProfileOverridePtrOutput) OvrdScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdScope
	}).(pulumi.StringPtrOutput)
}

// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
func (o WebfilterProfileOverridePtrOutput) OvrdUserGroups() WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) []WebfilterProfileOverrideOvrdUserGroup {
		if v == nil {
			return nil
		}
		return v.OvrdUserGroups
	}).(WebfilterProfileOverrideOvrdUserGroupArrayOutput)
}

// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o WebfilterProfileOverridePtrOutput) ProfileAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.ProfileAttribute
	}).(pulumi.StringPtrOutput)
}

// Override profile type. Valid values: `list`, `radius`.
func (o WebfilterProfileOverridePtrOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.ProfileType
	}).(pulumi.StringPtrOutput)
}

// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
func (o WebfilterProfileOverridePtrOutput) Profiles() WebfilterProfileOverrideProfileArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileOverride) []WebfilterProfileOverrideProfile {
		if v == nil {
			return nil
		}
		return v.Profiles
	}).(WebfilterProfileOverrideProfileArrayOutput)
}

type WebfilterProfileOverrideOvrdUserGroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// WebfilterProfileOverrideOvrdUserGroupInput is an input type that accepts WebfilterProfileOverrideOvrdUserGroupArgs and WebfilterProfileOverrideOvrdUserGroupOutput values.
// You can construct a concrete instance of `WebfilterProfileOverrideOvrdUserGroupInput` via:
//
//	WebfilterProfileOverrideOvrdUserGroupArgs{...}
type WebfilterProfileOverrideOvrdUserGroupInput interface {
	pulumi.Input

	ToWebfilterProfileOverrideOvrdUserGroupOutput() WebfilterProfileOverrideOvrdUserGroupOutput
	ToWebfilterProfileOverrideOvrdUserGroupOutputWithContext(context.Context) WebfilterProfileOverrideOvrdUserGroupOutput
}

type WebfilterProfileOverrideOvrdUserGroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileOverrideOvrdUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (i WebfilterProfileOverrideOvrdUserGroupArgs) ToWebfilterProfileOverrideOvrdUserGroupOutput() WebfilterProfileOverrideOvrdUserGroupOutput {
	return i.ToWebfilterProfileOverrideOvrdUserGroupOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideOvrdUserGroupArgs) ToWebfilterProfileOverrideOvrdUserGroupOutputWithContext(ctx context.Context) WebfilterProfileOverrideOvrdUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideOvrdUserGroupOutput)
}

// WebfilterProfileOverrideOvrdUserGroupArrayInput is an input type that accepts WebfilterProfileOverrideOvrdUserGroupArray and WebfilterProfileOverrideOvrdUserGroupArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileOverrideOvrdUserGroupArrayInput` via:
//
//	WebfilterProfileOverrideOvrdUserGroupArray{ WebfilterProfileOverrideOvrdUserGroupArgs{...} }
type WebfilterProfileOverrideOvrdUserGroupArrayInput interface {
	pulumi.Input

	ToWebfilterProfileOverrideOvrdUserGroupArrayOutput() WebfilterProfileOverrideOvrdUserGroupArrayOutput
	ToWebfilterProfileOverrideOvrdUserGroupArrayOutputWithContext(context.Context) WebfilterProfileOverrideOvrdUserGroupArrayOutput
}

type WebfilterProfileOverrideOvrdUserGroupArray []WebfilterProfileOverrideOvrdUserGroupInput

func (WebfilterProfileOverrideOvrdUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (i WebfilterProfileOverrideOvrdUserGroupArray) ToWebfilterProfileOverrideOvrdUserGroupArrayOutput() WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return i.ToWebfilterProfileOverrideOvrdUserGroupArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideOvrdUserGroupArray) ToWebfilterProfileOverrideOvrdUserGroupArrayOutputWithContext(ctx context.Context) WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideOvrdUserGroupArrayOutput)
}

type WebfilterProfileOverrideOvrdUserGroupOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverrideOvrdUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (o WebfilterProfileOverrideOvrdUserGroupOutput) ToWebfilterProfileOverrideOvrdUserGroupOutput() WebfilterProfileOverrideOvrdUserGroupOutput {
	return o
}

func (o WebfilterProfileOverrideOvrdUserGroupOutput) ToWebfilterProfileOverrideOvrdUserGroupOutputWithContext(ctx context.Context) WebfilterProfileOverrideOvrdUserGroupOutput {
	return o
}

// User group name.
func (o WebfilterProfileOverrideOvrdUserGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverrideOvrdUserGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileOverrideOvrdUserGroupArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverrideOvrdUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (o WebfilterProfileOverrideOvrdUserGroupArrayOutput) ToWebfilterProfileOverrideOvrdUserGroupArrayOutput() WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return o
}

func (o WebfilterProfileOverrideOvrdUserGroupArrayOutput) ToWebfilterProfileOverrideOvrdUserGroupArrayOutputWithContext(ctx context.Context) WebfilterProfileOverrideOvrdUserGroupArrayOutput {
	return o
}

func (o WebfilterProfileOverrideOvrdUserGroupArrayOutput) Index(i pulumi.IntInput) WebfilterProfileOverrideOvrdUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileOverrideOvrdUserGroup {
		return vs[0].([]WebfilterProfileOverrideOvrdUserGroup)[vs[1].(int)]
	}).(WebfilterProfileOverrideOvrdUserGroupOutput)
}

type WebfilterProfileOverrideProfile struct {
	// Web profile.
	Name *string `pulumi:"name"`
}

// WebfilterProfileOverrideProfileInput is an input type that accepts WebfilterProfileOverrideProfileArgs and WebfilterProfileOverrideProfileOutput values.
// You can construct a concrete instance of `WebfilterProfileOverrideProfileInput` via:
//
//	WebfilterProfileOverrideProfileArgs{...}
type WebfilterProfileOverrideProfileInput interface {
	pulumi.Input

	ToWebfilterProfileOverrideProfileOutput() WebfilterProfileOverrideProfileOutput
	ToWebfilterProfileOverrideProfileOutputWithContext(context.Context) WebfilterProfileOverrideProfileOutput
}

type WebfilterProfileOverrideProfileArgs struct {
	// Web profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileOverrideProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverrideProfile)(nil)).Elem()
}

func (i WebfilterProfileOverrideProfileArgs) ToWebfilterProfileOverrideProfileOutput() WebfilterProfileOverrideProfileOutput {
	return i.ToWebfilterProfileOverrideProfileOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideProfileArgs) ToWebfilterProfileOverrideProfileOutputWithContext(ctx context.Context) WebfilterProfileOverrideProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideProfileOutput)
}

// WebfilterProfileOverrideProfileArrayInput is an input type that accepts WebfilterProfileOverrideProfileArray and WebfilterProfileOverrideProfileArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileOverrideProfileArrayInput` via:
//
//	WebfilterProfileOverrideProfileArray{ WebfilterProfileOverrideProfileArgs{...} }
type WebfilterProfileOverrideProfileArrayInput interface {
	pulumi.Input

	ToWebfilterProfileOverrideProfileArrayOutput() WebfilterProfileOverrideProfileArrayOutput
	ToWebfilterProfileOverrideProfileArrayOutputWithContext(context.Context) WebfilterProfileOverrideProfileArrayOutput
}

type WebfilterProfileOverrideProfileArray []WebfilterProfileOverrideProfileInput

func (WebfilterProfileOverrideProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileOverrideProfile)(nil)).Elem()
}

func (i WebfilterProfileOverrideProfileArray) ToWebfilterProfileOverrideProfileArrayOutput() WebfilterProfileOverrideProfileArrayOutput {
	return i.ToWebfilterProfileOverrideProfileArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileOverrideProfileArray) ToWebfilterProfileOverrideProfileArrayOutputWithContext(ctx context.Context) WebfilterProfileOverrideProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileOverrideProfileArrayOutput)
}

type WebfilterProfileOverrideProfileOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverrideProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileOverrideProfile)(nil)).Elem()
}

func (o WebfilterProfileOverrideProfileOutput) ToWebfilterProfileOverrideProfileOutput() WebfilterProfileOverrideProfileOutput {
	return o
}

func (o WebfilterProfileOverrideProfileOutput) ToWebfilterProfileOverrideProfileOutputWithContext(ctx context.Context) WebfilterProfileOverrideProfileOutput {
	return o
}

// Web profile.
func (o WebfilterProfileOverrideProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileOverrideProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileOverrideProfileArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileOverrideProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileOverrideProfile)(nil)).Elem()
}

func (o WebfilterProfileOverrideProfileArrayOutput) ToWebfilterProfileOverrideProfileArrayOutput() WebfilterProfileOverrideProfileArrayOutput {
	return o
}

func (o WebfilterProfileOverrideProfileArrayOutput) ToWebfilterProfileOverrideProfileArrayOutputWithContext(ctx context.Context) WebfilterProfileOverrideProfileArrayOutput {
	return o
}

func (o WebfilterProfileOverrideProfileArrayOutput) Index(i pulumi.IntInput) WebfilterProfileOverrideProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileOverrideProfile {
		return vs[0].([]WebfilterProfileOverrideProfile)[vs[1].(int)]
	}).(WebfilterProfileOverrideProfileOutput)
}

type WebfilterProfileWeb struct {
	// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Allowlist *string `pulumi:"allowlist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
	Blacklist *string `pulumi:"blacklist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
	Blocklist *string `pulumi:"blocklist"`
	// Banned word table ID.
	BwordTable *int `pulumi:"bwordTable"`
	// Banned word score threshold.
	BwordThreshold *int `pulumi:"bwordThreshold"`
	// Content header list.
	ContentHeaderList *int `pulumi:"contentHeaderList"`
	// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
	KeywordMatches []WebfilterProfileWebKeywordMatch `pulumi:"keywordMatches"`
	// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
	LogSearch *string `pulumi:"logSearch"`
	// Safe search type. Valid values: `url`, `header`.
	SafeSearch *string `pulumi:"safeSearch"`
	// URL filter table ID.
	UrlfilterTable *int `pulumi:"urlfilterTable"`
	// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
	VimeoRestrict *string `pulumi:"vimeoRestrict"`
	// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Whitelist *string `pulumi:"whitelist"`
	// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
	YoutubeRestrict *string `pulumi:"youtubeRestrict"`
}

// WebfilterProfileWebInput is an input type that accepts WebfilterProfileWebArgs and WebfilterProfileWebOutput values.
// You can construct a concrete instance of `WebfilterProfileWebInput` via:
//
//	WebfilterProfileWebArgs{...}
type WebfilterProfileWebInput interface {
	pulumi.Input

	ToWebfilterProfileWebOutput() WebfilterProfileWebOutput
	ToWebfilterProfileWebOutputWithContext(context.Context) WebfilterProfileWebOutput
}

type WebfilterProfileWebArgs struct {
	// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Allowlist pulumi.StringPtrInput `pulumi:"allowlist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
	Blacklist pulumi.StringPtrInput `pulumi:"blacklist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
	Blocklist pulumi.StringPtrInput `pulumi:"blocklist"`
	// Banned word table ID.
	BwordTable pulumi.IntPtrInput `pulumi:"bwordTable"`
	// Banned word score threshold.
	BwordThreshold pulumi.IntPtrInput `pulumi:"bwordThreshold"`
	// Content header list.
	ContentHeaderList pulumi.IntPtrInput `pulumi:"contentHeaderList"`
	// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
	KeywordMatches WebfilterProfileWebKeywordMatchArrayInput `pulumi:"keywordMatches"`
	// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
	LogSearch pulumi.StringPtrInput `pulumi:"logSearch"`
	// Safe search type. Valid values: `url`, `header`.
	SafeSearch pulumi.StringPtrInput `pulumi:"safeSearch"`
	// URL filter table ID.
	UrlfilterTable pulumi.IntPtrInput `pulumi:"urlfilterTable"`
	// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
	VimeoRestrict pulumi.StringPtrInput `pulumi:"vimeoRestrict"`
	// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Whitelist pulumi.StringPtrInput `pulumi:"whitelist"`
	// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
	YoutubeRestrict pulumi.StringPtrInput `pulumi:"youtubeRestrict"`
}

func (WebfilterProfileWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWeb)(nil)).Elem()
}

func (i WebfilterProfileWebArgs) ToWebfilterProfileWebOutput() WebfilterProfileWebOutput {
	return i.ToWebfilterProfileWebOutputWithContext(context.Background())
}

func (i WebfilterProfileWebArgs) ToWebfilterProfileWebOutputWithContext(ctx context.Context) WebfilterProfileWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWebOutput)
}

func (i WebfilterProfileWebArgs) ToWebfilterProfileWebPtrOutput() WebfilterProfileWebPtrOutput {
	return i.ToWebfilterProfileWebPtrOutputWithContext(context.Background())
}

func (i WebfilterProfileWebArgs) ToWebfilterProfileWebPtrOutputWithContext(ctx context.Context) WebfilterProfileWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWebOutput).ToWebfilterProfileWebPtrOutputWithContext(ctx)
}

// WebfilterProfileWebPtrInput is an input type that accepts WebfilterProfileWebArgs, WebfilterProfileWebPtr and WebfilterProfileWebPtrOutput values.
// You can construct a concrete instance of `WebfilterProfileWebPtrInput` via:
//
//	        WebfilterProfileWebArgs{...}
//
//	or:
//
//	        nil
type WebfilterProfileWebPtrInput interface {
	pulumi.Input

	ToWebfilterProfileWebPtrOutput() WebfilterProfileWebPtrOutput
	ToWebfilterProfileWebPtrOutputWithContext(context.Context) WebfilterProfileWebPtrOutput
}

type webfilterProfileWebPtrType WebfilterProfileWebArgs

func WebfilterProfileWebPtr(v *WebfilterProfileWebArgs) WebfilterProfileWebPtrInput {
	return (*webfilterProfileWebPtrType)(v)
}

func (*webfilterProfileWebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileWeb)(nil)).Elem()
}

func (i *webfilterProfileWebPtrType) ToWebfilterProfileWebPtrOutput() WebfilterProfileWebPtrOutput {
	return i.ToWebfilterProfileWebPtrOutputWithContext(context.Background())
}

func (i *webfilterProfileWebPtrType) ToWebfilterProfileWebPtrOutputWithContext(ctx context.Context) WebfilterProfileWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWebPtrOutput)
}

type WebfilterProfileWebOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWeb)(nil)).Elem()
}

func (o WebfilterProfileWebOutput) ToWebfilterProfileWebOutput() WebfilterProfileWebOutput {
	return o
}

func (o WebfilterProfileWebOutput) ToWebfilterProfileWebOutputWithContext(ctx context.Context) WebfilterProfileWebOutput {
	return o
}

func (o WebfilterProfileWebOutput) ToWebfilterProfileWebPtrOutput() WebfilterProfileWebPtrOutput {
	return o.ToWebfilterProfileWebPtrOutputWithContext(context.Background())
}

func (o WebfilterProfileWebOutput) ToWebfilterProfileWebPtrOutputWithContext(ctx context.Context) WebfilterProfileWebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebfilterProfileWeb) *WebfilterProfileWeb {
		return &v
	}).(WebfilterProfileWebPtrOutput)
}

// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o WebfilterProfileWebOutput) Allowlist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.Allowlist }).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebOutput) Blacklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.Blacklist }).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebOutput) Blocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.Blocklist }).(pulumi.StringPtrOutput)
}

// Banned word table ID.
func (o WebfilterProfileWebOutput) BwordTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *int { return v.BwordTable }).(pulumi.IntPtrOutput)
}

// Banned word score threshold.
func (o WebfilterProfileWebOutput) BwordThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *int { return v.BwordThreshold }).(pulumi.IntPtrOutput)
}

// Content header list.
func (o WebfilterProfileWebOutput) ContentHeaderList() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *int { return v.ContentHeaderList }).(pulumi.IntPtrOutput)
}

// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
func (o WebfilterProfileWebOutput) KeywordMatches() WebfilterProfileWebKeywordMatchArrayOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) []WebfilterProfileWebKeywordMatch { return v.KeywordMatches }).(WebfilterProfileWebKeywordMatchArrayOutput)
}

// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebOutput) LogSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.LogSearch }).(pulumi.StringPtrOutput)
}

// Safe search type. Valid values: `url`, `header`.
func (o WebfilterProfileWebOutput) SafeSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.SafeSearch }).(pulumi.StringPtrOutput)
}

// URL filter table ID.
func (o WebfilterProfileWebOutput) UrlfilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *int { return v.UrlfilterTable }).(pulumi.IntPtrOutput)
}

// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
func (o WebfilterProfileWebOutput) VimeoRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.VimeoRestrict }).(pulumi.StringPtrOutput)
}

// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o WebfilterProfileWebOutput) Whitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.Whitelist }).(pulumi.StringPtrOutput)
}

// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
func (o WebfilterProfileWebOutput) YoutubeRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWeb) *string { return v.YoutubeRestrict }).(pulumi.StringPtrOutput)
}

type WebfilterProfileWebPtrOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterProfileWeb)(nil)).Elem()
}

func (o WebfilterProfileWebPtrOutput) ToWebfilterProfileWebPtrOutput() WebfilterProfileWebPtrOutput {
	return o
}

func (o WebfilterProfileWebPtrOutput) ToWebfilterProfileWebPtrOutputWithContext(ctx context.Context) WebfilterProfileWebPtrOutput {
	return o
}

func (o WebfilterProfileWebPtrOutput) Elem() WebfilterProfileWebOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) WebfilterProfileWeb {
		if v != nil {
			return *v
		}
		var ret WebfilterProfileWeb
		return ret
	}).(WebfilterProfileWebOutput)
}

// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o WebfilterProfileWebPtrOutput) Allowlist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Allowlist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebPtrOutput) Blacklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Blacklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebPtrOutput) Blocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Blocklist
	}).(pulumi.StringPtrOutput)
}

// Banned word table ID.
func (o WebfilterProfileWebPtrOutput) BwordTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.BwordTable
	}).(pulumi.IntPtrOutput)
}

// Banned word score threshold.
func (o WebfilterProfileWebPtrOutput) BwordThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.BwordThreshold
	}).(pulumi.IntPtrOutput)
}

// Content header list.
func (o WebfilterProfileWebPtrOutput) ContentHeaderList() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.ContentHeaderList
	}).(pulumi.IntPtrOutput)
}

// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
func (o WebfilterProfileWebPtrOutput) KeywordMatches() WebfilterProfileWebKeywordMatchArrayOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) []WebfilterProfileWebKeywordMatch {
		if v == nil {
			return nil
		}
		return v.KeywordMatches
	}).(WebfilterProfileWebKeywordMatchArrayOutput)
}

// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
func (o WebfilterProfileWebPtrOutput) LogSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.LogSearch
	}).(pulumi.StringPtrOutput)
}

// Safe search type. Valid values: `url`, `header`.
func (o WebfilterProfileWebPtrOutput) SafeSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.SafeSearch
	}).(pulumi.StringPtrOutput)
}

// URL filter table ID.
func (o WebfilterProfileWebPtrOutput) UrlfilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.UrlfilterTable
	}).(pulumi.IntPtrOutput)
}

// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
func (o WebfilterProfileWebPtrOutput) VimeoRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.VimeoRestrict
	}).(pulumi.StringPtrOutput)
}

// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o WebfilterProfileWebPtrOutput) Whitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringPtrOutput)
}

// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
func (o WebfilterProfileWebPtrOutput) YoutubeRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.YoutubeRestrict
	}).(pulumi.StringPtrOutput)
}

type WebfilterProfileWebKeywordMatch struct {
	// Pattern/keyword to search for.
	Pattern *string `pulumi:"pattern"`
}

// WebfilterProfileWebKeywordMatchInput is an input type that accepts WebfilterProfileWebKeywordMatchArgs and WebfilterProfileWebKeywordMatchOutput values.
// You can construct a concrete instance of `WebfilterProfileWebKeywordMatchInput` via:
//
//	WebfilterProfileWebKeywordMatchArgs{...}
type WebfilterProfileWebKeywordMatchInput interface {
	pulumi.Input

	ToWebfilterProfileWebKeywordMatchOutput() WebfilterProfileWebKeywordMatchOutput
	ToWebfilterProfileWebKeywordMatchOutputWithContext(context.Context) WebfilterProfileWebKeywordMatchOutput
}

type WebfilterProfileWebKeywordMatchArgs struct {
	// Pattern/keyword to search for.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (WebfilterProfileWebKeywordMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWebKeywordMatch)(nil)).Elem()
}

func (i WebfilterProfileWebKeywordMatchArgs) ToWebfilterProfileWebKeywordMatchOutput() WebfilterProfileWebKeywordMatchOutput {
	return i.ToWebfilterProfileWebKeywordMatchOutputWithContext(context.Background())
}

func (i WebfilterProfileWebKeywordMatchArgs) ToWebfilterProfileWebKeywordMatchOutputWithContext(ctx context.Context) WebfilterProfileWebKeywordMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWebKeywordMatchOutput)
}

// WebfilterProfileWebKeywordMatchArrayInput is an input type that accepts WebfilterProfileWebKeywordMatchArray and WebfilterProfileWebKeywordMatchArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileWebKeywordMatchArrayInput` via:
//
//	WebfilterProfileWebKeywordMatchArray{ WebfilterProfileWebKeywordMatchArgs{...} }
type WebfilterProfileWebKeywordMatchArrayInput interface {
	pulumi.Input

	ToWebfilterProfileWebKeywordMatchArrayOutput() WebfilterProfileWebKeywordMatchArrayOutput
	ToWebfilterProfileWebKeywordMatchArrayOutputWithContext(context.Context) WebfilterProfileWebKeywordMatchArrayOutput
}

type WebfilterProfileWebKeywordMatchArray []WebfilterProfileWebKeywordMatchInput

func (WebfilterProfileWebKeywordMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileWebKeywordMatch)(nil)).Elem()
}

func (i WebfilterProfileWebKeywordMatchArray) ToWebfilterProfileWebKeywordMatchArrayOutput() WebfilterProfileWebKeywordMatchArrayOutput {
	return i.ToWebfilterProfileWebKeywordMatchArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileWebKeywordMatchArray) ToWebfilterProfileWebKeywordMatchArrayOutputWithContext(ctx context.Context) WebfilterProfileWebKeywordMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWebKeywordMatchArrayOutput)
}

type WebfilterProfileWebKeywordMatchOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWebKeywordMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWebKeywordMatch)(nil)).Elem()
}

func (o WebfilterProfileWebKeywordMatchOutput) ToWebfilterProfileWebKeywordMatchOutput() WebfilterProfileWebKeywordMatchOutput {
	return o
}

func (o WebfilterProfileWebKeywordMatchOutput) ToWebfilterProfileWebKeywordMatchOutputWithContext(ctx context.Context) WebfilterProfileWebKeywordMatchOutput {
	return o
}

// Pattern/keyword to search for.
func (o WebfilterProfileWebKeywordMatchOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWebKeywordMatch) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type WebfilterProfileWebKeywordMatchArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWebKeywordMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileWebKeywordMatch)(nil)).Elem()
}

func (o WebfilterProfileWebKeywordMatchArrayOutput) ToWebfilterProfileWebKeywordMatchArrayOutput() WebfilterProfileWebKeywordMatchArrayOutput {
	return o
}

func (o WebfilterProfileWebKeywordMatchArrayOutput) ToWebfilterProfileWebKeywordMatchArrayOutputWithContext(ctx context.Context) WebfilterProfileWebKeywordMatchArrayOutput {
	return o
}

func (o WebfilterProfileWebKeywordMatchArrayOutput) Index(i pulumi.IntInput) WebfilterProfileWebKeywordMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileWebKeywordMatch {
		return vs[0].([]WebfilterProfileWebKeywordMatch)[vs[1].(int)]
	}).(WebfilterProfileWebKeywordMatchOutput)
}

type WebfilterProfileWispServer struct {
	// Server name.
	Name *string `pulumi:"name"`
}

// WebfilterProfileWispServerInput is an input type that accepts WebfilterProfileWispServerArgs and WebfilterProfileWispServerOutput values.
// You can construct a concrete instance of `WebfilterProfileWispServerInput` via:
//
//	WebfilterProfileWispServerArgs{...}
type WebfilterProfileWispServerInput interface {
	pulumi.Input

	ToWebfilterProfileWispServerOutput() WebfilterProfileWispServerOutput
	ToWebfilterProfileWispServerOutputWithContext(context.Context) WebfilterProfileWispServerOutput
}

type WebfilterProfileWispServerArgs struct {
	// Server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebfilterProfileWispServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWispServer)(nil)).Elem()
}

func (i WebfilterProfileWispServerArgs) ToWebfilterProfileWispServerOutput() WebfilterProfileWispServerOutput {
	return i.ToWebfilterProfileWispServerOutputWithContext(context.Background())
}

func (i WebfilterProfileWispServerArgs) ToWebfilterProfileWispServerOutputWithContext(ctx context.Context) WebfilterProfileWispServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWispServerOutput)
}

// WebfilterProfileWispServerArrayInput is an input type that accepts WebfilterProfileWispServerArray and WebfilterProfileWispServerArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileWispServerArrayInput` via:
//
//	WebfilterProfileWispServerArray{ WebfilterProfileWispServerArgs{...} }
type WebfilterProfileWispServerArrayInput interface {
	pulumi.Input

	ToWebfilterProfileWispServerArrayOutput() WebfilterProfileWispServerArrayOutput
	ToWebfilterProfileWispServerArrayOutputWithContext(context.Context) WebfilterProfileWispServerArrayOutput
}

type WebfilterProfileWispServerArray []WebfilterProfileWispServerInput

func (WebfilterProfileWispServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileWispServer)(nil)).Elem()
}

func (i WebfilterProfileWispServerArray) ToWebfilterProfileWispServerArrayOutput() WebfilterProfileWispServerArrayOutput {
	return i.ToWebfilterProfileWispServerArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileWispServerArray) ToWebfilterProfileWispServerArrayOutputWithContext(ctx context.Context) WebfilterProfileWispServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileWispServerArrayOutput)
}

type WebfilterProfileWispServerOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWispServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileWispServer)(nil)).Elem()
}

func (o WebfilterProfileWispServerOutput) ToWebfilterProfileWispServerOutput() WebfilterProfileWispServerOutput {
	return o
}

func (o WebfilterProfileWispServerOutput) ToWebfilterProfileWispServerOutputWithContext(ctx context.Context) WebfilterProfileWispServerOutput {
	return o
}

// Server name.
func (o WebfilterProfileWispServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileWispServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebfilterProfileWispServerArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileWispServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileWispServer)(nil)).Elem()
}

func (o WebfilterProfileWispServerArrayOutput) ToWebfilterProfileWispServerArrayOutput() WebfilterProfileWispServerArrayOutput {
	return o
}

func (o WebfilterProfileWispServerArrayOutput) ToWebfilterProfileWispServerArrayOutputWithContext(ctx context.Context) WebfilterProfileWispServerArrayOutput {
	return o
}

func (o WebfilterProfileWispServerArrayOutput) Index(i pulumi.IntInput) WebfilterProfileWispServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileWispServer {
		return vs[0].([]WebfilterProfileWispServer)[vs[1].(int)]
	}).(WebfilterProfileWispServerOutput)
}

type WebfilterProfileYoutubeChannelFilter struct {
	// YouTube channel ID to be filtered.
	ChannelId *string `pulumi:"channelId"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
}

// WebfilterProfileYoutubeChannelFilterInput is an input type that accepts WebfilterProfileYoutubeChannelFilterArgs and WebfilterProfileYoutubeChannelFilterOutput values.
// You can construct a concrete instance of `WebfilterProfileYoutubeChannelFilterInput` via:
//
//	WebfilterProfileYoutubeChannelFilterArgs{...}
type WebfilterProfileYoutubeChannelFilterInput interface {
	pulumi.Input

	ToWebfilterProfileYoutubeChannelFilterOutput() WebfilterProfileYoutubeChannelFilterOutput
	ToWebfilterProfileYoutubeChannelFilterOutputWithContext(context.Context) WebfilterProfileYoutubeChannelFilterOutput
}

type WebfilterProfileYoutubeChannelFilterArgs struct {
	// YouTube channel ID to be filtered.
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WebfilterProfileYoutubeChannelFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileYoutubeChannelFilter)(nil)).Elem()
}

func (i WebfilterProfileYoutubeChannelFilterArgs) ToWebfilterProfileYoutubeChannelFilterOutput() WebfilterProfileYoutubeChannelFilterOutput {
	return i.ToWebfilterProfileYoutubeChannelFilterOutputWithContext(context.Background())
}

func (i WebfilterProfileYoutubeChannelFilterArgs) ToWebfilterProfileYoutubeChannelFilterOutputWithContext(ctx context.Context) WebfilterProfileYoutubeChannelFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileYoutubeChannelFilterOutput)
}

// WebfilterProfileYoutubeChannelFilterArrayInput is an input type that accepts WebfilterProfileYoutubeChannelFilterArray and WebfilterProfileYoutubeChannelFilterArrayOutput values.
// You can construct a concrete instance of `WebfilterProfileYoutubeChannelFilterArrayInput` via:
//
//	WebfilterProfileYoutubeChannelFilterArray{ WebfilterProfileYoutubeChannelFilterArgs{...} }
type WebfilterProfileYoutubeChannelFilterArrayInput interface {
	pulumi.Input

	ToWebfilterProfileYoutubeChannelFilterArrayOutput() WebfilterProfileYoutubeChannelFilterArrayOutput
	ToWebfilterProfileYoutubeChannelFilterArrayOutputWithContext(context.Context) WebfilterProfileYoutubeChannelFilterArrayOutput
}

type WebfilterProfileYoutubeChannelFilterArray []WebfilterProfileYoutubeChannelFilterInput

func (WebfilterProfileYoutubeChannelFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileYoutubeChannelFilter)(nil)).Elem()
}

func (i WebfilterProfileYoutubeChannelFilterArray) ToWebfilterProfileYoutubeChannelFilterArrayOutput() WebfilterProfileYoutubeChannelFilterArrayOutput {
	return i.ToWebfilterProfileYoutubeChannelFilterArrayOutputWithContext(context.Background())
}

func (i WebfilterProfileYoutubeChannelFilterArray) ToWebfilterProfileYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) WebfilterProfileYoutubeChannelFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterProfileYoutubeChannelFilterArrayOutput)
}

type WebfilterProfileYoutubeChannelFilterOutput struct{ *pulumi.OutputState }

func (WebfilterProfileYoutubeChannelFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterProfileYoutubeChannelFilter)(nil)).Elem()
}

func (o WebfilterProfileYoutubeChannelFilterOutput) ToWebfilterProfileYoutubeChannelFilterOutput() WebfilterProfileYoutubeChannelFilterOutput {
	return o
}

func (o WebfilterProfileYoutubeChannelFilterOutput) ToWebfilterProfileYoutubeChannelFilterOutputWithContext(ctx context.Context) WebfilterProfileYoutubeChannelFilterOutput {
	return o
}

// YouTube channel ID to be filtered.
func (o WebfilterProfileYoutubeChannelFilterOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileYoutubeChannelFilter) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// Comment.
func (o WebfilterProfileYoutubeChannelFilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterProfileYoutubeChannelFilter) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o WebfilterProfileYoutubeChannelFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterProfileYoutubeChannelFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WebfilterProfileYoutubeChannelFilterArrayOutput struct{ *pulumi.OutputState }

func (WebfilterProfileYoutubeChannelFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterProfileYoutubeChannelFilter)(nil)).Elem()
}

func (o WebfilterProfileYoutubeChannelFilterArrayOutput) ToWebfilterProfileYoutubeChannelFilterArrayOutput() WebfilterProfileYoutubeChannelFilterArrayOutput {
	return o
}

func (o WebfilterProfileYoutubeChannelFilterArrayOutput) ToWebfilterProfileYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) WebfilterProfileYoutubeChannelFilterArrayOutput {
	return o
}

func (o WebfilterProfileYoutubeChannelFilterArrayOutput) Index(i pulumi.IntInput) WebfilterProfileYoutubeChannelFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterProfileYoutubeChannelFilter {
		return vs[0].([]WebfilterProfileYoutubeChannelFilter)[vs[1].(int)]
	}).(WebfilterProfileYoutubeChannelFilterOutput)
}

type WebfilterUrlfilterEntry struct {
	// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
	Action *string `pulumi:"action"`
	// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
	AntiphishAction *string `pulumi:"antiphishAction"`
	// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
	DnsAddressFamily *string `pulumi:"dnsAddressFamily"`
	// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
	Exempt *string `pulumi:"exempt"`
	// Id.
	Id *int `pulumi:"id"`
	// Referrer host name.
	ReferrerHost *string `pulumi:"referrerHost"`
	// Enable/disable this URL filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
	Type *string `pulumi:"type"`
	// URL to be filtered.
	Url *string `pulumi:"url"`
	// Web proxy profile.
	WebProxyProfile *string `pulumi:"webProxyProfile"`
}

// WebfilterUrlfilterEntryInput is an input type that accepts WebfilterUrlfilterEntryArgs and WebfilterUrlfilterEntryOutput values.
// You can construct a concrete instance of `WebfilterUrlfilterEntryInput` via:
//
//	WebfilterUrlfilterEntryArgs{...}
type WebfilterUrlfilterEntryInput interface {
	pulumi.Input

	ToWebfilterUrlfilterEntryOutput() WebfilterUrlfilterEntryOutput
	ToWebfilterUrlfilterEntryOutputWithContext(context.Context) WebfilterUrlfilterEntryOutput
}

type WebfilterUrlfilterEntryArgs struct {
	// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
	AntiphishAction pulumi.StringPtrInput `pulumi:"antiphishAction"`
	// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
	DnsAddressFamily pulumi.StringPtrInput `pulumi:"dnsAddressFamily"`
	// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
	Exempt pulumi.StringPtrInput `pulumi:"exempt"`
	// Id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Referrer host name.
	ReferrerHost pulumi.StringPtrInput `pulumi:"referrerHost"`
	// Enable/disable this URL filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URL to be filtered.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Web proxy profile.
	WebProxyProfile pulumi.StringPtrInput `pulumi:"webProxyProfile"`
}

func (WebfilterUrlfilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterUrlfilterEntry)(nil)).Elem()
}

func (i WebfilterUrlfilterEntryArgs) ToWebfilterUrlfilterEntryOutput() WebfilterUrlfilterEntryOutput {
	return i.ToWebfilterUrlfilterEntryOutputWithContext(context.Background())
}

func (i WebfilterUrlfilterEntryArgs) ToWebfilterUrlfilterEntryOutputWithContext(ctx context.Context) WebfilterUrlfilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterUrlfilterEntryOutput)
}

// WebfilterUrlfilterEntryArrayInput is an input type that accepts WebfilterUrlfilterEntryArray and WebfilterUrlfilterEntryArrayOutput values.
// You can construct a concrete instance of `WebfilterUrlfilterEntryArrayInput` via:
//
//	WebfilterUrlfilterEntryArray{ WebfilterUrlfilterEntryArgs{...} }
type WebfilterUrlfilterEntryArrayInput interface {
	pulumi.Input

	ToWebfilterUrlfilterEntryArrayOutput() WebfilterUrlfilterEntryArrayOutput
	ToWebfilterUrlfilterEntryArrayOutputWithContext(context.Context) WebfilterUrlfilterEntryArrayOutput
}

type WebfilterUrlfilterEntryArray []WebfilterUrlfilterEntryInput

func (WebfilterUrlfilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterUrlfilterEntry)(nil)).Elem()
}

func (i WebfilterUrlfilterEntryArray) ToWebfilterUrlfilterEntryArrayOutput() WebfilterUrlfilterEntryArrayOutput {
	return i.ToWebfilterUrlfilterEntryArrayOutputWithContext(context.Background())
}

func (i WebfilterUrlfilterEntryArray) ToWebfilterUrlfilterEntryArrayOutputWithContext(ctx context.Context) WebfilterUrlfilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterUrlfilterEntryArrayOutput)
}

type WebfilterUrlfilterEntryOutput struct{ *pulumi.OutputState }

func (WebfilterUrlfilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterUrlfilterEntry)(nil)).Elem()
}

func (o WebfilterUrlfilterEntryOutput) ToWebfilterUrlfilterEntryOutput() WebfilterUrlfilterEntryOutput {
	return o
}

func (o WebfilterUrlfilterEntryOutput) ToWebfilterUrlfilterEntryOutputWithContext(ctx context.Context) WebfilterUrlfilterEntryOutput {
	return o
}

// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
func (o WebfilterUrlfilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
func (o WebfilterUrlfilterEntryOutput) AntiphishAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.AntiphishAction }).(pulumi.StringPtrOutput)
}

// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
func (o WebfilterUrlfilterEntryOutput) DnsAddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.DnsAddressFamily }).(pulumi.StringPtrOutput)
}

// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
func (o WebfilterUrlfilterEntryOutput) Exempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.Exempt }).(pulumi.StringPtrOutput)
}

// Id.
func (o WebfilterUrlfilterEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Referrer host name.
func (o WebfilterUrlfilterEntryOutput) ReferrerHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.ReferrerHost }).(pulumi.StringPtrOutput)
}

// Enable/disable this URL filter. Valid values: `enable`, `disable`.
func (o WebfilterUrlfilterEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
func (o WebfilterUrlfilterEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// URL to be filtered.
func (o WebfilterUrlfilterEntryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Web proxy profile.
func (o WebfilterUrlfilterEntryOutput) WebProxyProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebfilterUrlfilterEntry) *string { return v.WebProxyProfile }).(pulumi.StringPtrOutput)
}

type WebfilterUrlfilterEntryArrayOutput struct{ *pulumi.OutputState }

func (WebfilterUrlfilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterUrlfilterEntry)(nil)).Elem()
}

func (o WebfilterUrlfilterEntryArrayOutput) ToWebfilterUrlfilterEntryArrayOutput() WebfilterUrlfilterEntryArrayOutput {
	return o
}

func (o WebfilterUrlfilterEntryArrayOutput) ToWebfilterUrlfilterEntryArrayOutputWithContext(ctx context.Context) WebfilterUrlfilterEntryArrayOutput {
	return o
}

func (o WebfilterUrlfilterEntryArrayOutput) Index(i pulumi.IntInput) WebfilterUrlfilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterUrlfilterEntry {
		return vs[0].([]WebfilterUrlfilterEntry)[vs[1].(int)]
	}).(WebfilterUrlfilterEntryOutput)
}

type WebproxyExplicitPacPolicy struct {
	// Optional comments.
	Comments *string `pulumi:"comments"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs []WebproxyExplicitPacPolicyDstaddr `pulumi:"dstaddrs"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData *string `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName *string `pulumi:"pacFileName"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Source address6 objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []WebproxyExplicitPacPolicySrcaddr6 `pulumi:"srcaddr6s"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs []WebproxyExplicitPacPolicySrcaddr `pulumi:"srcaddrs"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// WebproxyExplicitPacPolicyInput is an input type that accepts WebproxyExplicitPacPolicyArgs and WebproxyExplicitPacPolicyOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicyInput` via:
//
//	WebproxyExplicitPacPolicyArgs{...}
type WebproxyExplicitPacPolicyInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicyOutput() WebproxyExplicitPacPolicyOutput
	ToWebproxyExplicitPacPolicyOutputWithContext(context.Context) WebproxyExplicitPacPolicyOutput
}

type WebproxyExplicitPacPolicyArgs struct {
	// Optional comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs WebproxyExplicitPacPolicyDstaddrArrayInput `pulumi:"dstaddrs"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData pulumi.StringPtrInput `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName pulumi.StringPtrInput `pulumi:"pacFileName"`
	// Policy ID.
	Policyid pulumi.IntPtrInput `pulumi:"policyid"`
	// Source address6 objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s WebproxyExplicitPacPolicySrcaddr6ArrayInput `pulumi:"srcaddr6s"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs WebproxyExplicitPacPolicySrcaddrArrayInput `pulumi:"srcaddrs"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebproxyExplicitPacPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicy)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicyArgs) ToWebproxyExplicitPacPolicyOutput() WebproxyExplicitPacPolicyOutput {
	return i.ToWebproxyExplicitPacPolicyOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicyArgs) ToWebproxyExplicitPacPolicyOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicyOutput)
}

// WebproxyExplicitPacPolicyArrayInput is an input type that accepts WebproxyExplicitPacPolicyArray and WebproxyExplicitPacPolicyArrayOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicyArrayInput` via:
//
//	WebproxyExplicitPacPolicyArray{ WebproxyExplicitPacPolicyArgs{...} }
type WebproxyExplicitPacPolicyArrayInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicyArrayOutput() WebproxyExplicitPacPolicyArrayOutput
	ToWebproxyExplicitPacPolicyArrayOutputWithContext(context.Context) WebproxyExplicitPacPolicyArrayOutput
}

type WebproxyExplicitPacPolicyArray []WebproxyExplicitPacPolicyInput

func (WebproxyExplicitPacPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicy)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicyArray) ToWebproxyExplicitPacPolicyArrayOutput() WebproxyExplicitPacPolicyArrayOutput {
	return i.ToWebproxyExplicitPacPolicyArrayOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicyArray) ToWebproxyExplicitPacPolicyArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicyArrayOutput)
}

type WebproxyExplicitPacPolicyOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicy)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicyOutput) ToWebproxyExplicitPacPolicyOutput() WebproxyExplicitPacPolicyOutput {
	return o
}

func (o WebproxyExplicitPacPolicyOutput) ToWebproxyExplicitPacPolicyOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyOutput {
	return o
}

// Optional comments.
func (o WebproxyExplicitPacPolicyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Destination address objects. The structure of `dstaddr` block is documented below.
func (o WebproxyExplicitPacPolicyOutput) Dstaddrs() WebproxyExplicitPacPolicyDstaddrArrayOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) []WebproxyExplicitPacPolicyDstaddr { return v.Dstaddrs }).(WebproxyExplicitPacPolicyDstaddrArrayOutput)
}

// PAC file contents enclosed in quotes (maximum of 256K bytes).
func (o WebproxyExplicitPacPolicyOutput) PacFileData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) *string { return v.PacFileData }).(pulumi.StringPtrOutput)
}

// Pac file name.
func (o WebproxyExplicitPacPolicyOutput) PacFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) *string { return v.PacFileName }).(pulumi.StringPtrOutput)
}

// Policy ID.
func (o WebproxyExplicitPacPolicyOutput) Policyid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) *int { return v.Policyid }).(pulumi.IntPtrOutput)
}

// Source address6 objects. The structure of `srcaddr6` block is documented below.
func (o WebproxyExplicitPacPolicyOutput) Srcaddr6s() WebproxyExplicitPacPolicySrcaddr6ArrayOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) []WebproxyExplicitPacPolicySrcaddr6 { return v.Srcaddr6s }).(WebproxyExplicitPacPolicySrcaddr6ArrayOutput)
}

// Source address objects. The structure of `srcaddr` block is documented below.
func (o WebproxyExplicitPacPolicyOutput) Srcaddrs() WebproxyExplicitPacPolicySrcaddrArrayOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) []WebproxyExplicitPacPolicySrcaddr { return v.Srcaddrs }).(WebproxyExplicitPacPolicySrcaddrArrayOutput)
}

// Enable/disable policy. Valid values: `enable`, `disable`.
func (o WebproxyExplicitPacPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebproxyExplicitPacPolicyArrayOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicy)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicyArrayOutput) ToWebproxyExplicitPacPolicyArrayOutput() WebproxyExplicitPacPolicyArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicyArrayOutput) ToWebproxyExplicitPacPolicyArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicyArrayOutput) Index(i pulumi.IntInput) WebproxyExplicitPacPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyExplicitPacPolicy {
		return vs[0].([]WebproxyExplicitPacPolicy)[vs[1].(int)]
	}).(WebproxyExplicitPacPolicyOutput)
}

type WebproxyExplicitPacPolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WebproxyExplicitPacPolicyDstaddrInput is an input type that accepts WebproxyExplicitPacPolicyDstaddrArgs and WebproxyExplicitPacPolicyDstaddrOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicyDstaddrInput` via:
//
//	WebproxyExplicitPacPolicyDstaddrArgs{...}
type WebproxyExplicitPacPolicyDstaddrInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicyDstaddrOutput() WebproxyExplicitPacPolicyDstaddrOutput
	ToWebproxyExplicitPacPolicyDstaddrOutputWithContext(context.Context) WebproxyExplicitPacPolicyDstaddrOutput
}

type WebproxyExplicitPacPolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyExplicitPacPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicyDstaddrArgs) ToWebproxyExplicitPacPolicyDstaddrOutput() WebproxyExplicitPacPolicyDstaddrOutput {
	return i.ToWebproxyExplicitPacPolicyDstaddrOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicyDstaddrArgs) ToWebproxyExplicitPacPolicyDstaddrOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicyDstaddrOutput)
}

// WebproxyExplicitPacPolicyDstaddrArrayInput is an input type that accepts WebproxyExplicitPacPolicyDstaddrArray and WebproxyExplicitPacPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicyDstaddrArrayInput` via:
//
//	WebproxyExplicitPacPolicyDstaddrArray{ WebproxyExplicitPacPolicyDstaddrArgs{...} }
type WebproxyExplicitPacPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicyDstaddrArrayOutput() WebproxyExplicitPacPolicyDstaddrArrayOutput
	ToWebproxyExplicitPacPolicyDstaddrArrayOutputWithContext(context.Context) WebproxyExplicitPacPolicyDstaddrArrayOutput
}

type WebproxyExplicitPacPolicyDstaddrArray []WebproxyExplicitPacPolicyDstaddrInput

func (WebproxyExplicitPacPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicyDstaddrArray) ToWebproxyExplicitPacPolicyDstaddrArrayOutput() WebproxyExplicitPacPolicyDstaddrArrayOutput {
	return i.ToWebproxyExplicitPacPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicyDstaddrArray) ToWebproxyExplicitPacPolicyDstaddrArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicyDstaddrArrayOutput)
}

type WebproxyExplicitPacPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicyDstaddrOutput) ToWebproxyExplicitPacPolicyDstaddrOutput() WebproxyExplicitPacPolicyDstaddrOutput {
	return o
}

func (o WebproxyExplicitPacPolicyDstaddrOutput) ToWebproxyExplicitPacPolicyDstaddrOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyDstaddrOutput {
	return o
}

// Address name.
func (o WebproxyExplicitPacPolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyExplicitPacPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicyDstaddrArrayOutput) ToWebproxyExplicitPacPolicyDstaddrArrayOutput() WebproxyExplicitPacPolicyDstaddrArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicyDstaddrArrayOutput) ToWebproxyExplicitPacPolicyDstaddrArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicyDstaddrArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) WebproxyExplicitPacPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyExplicitPacPolicyDstaddr {
		return vs[0].([]WebproxyExplicitPacPolicyDstaddr)[vs[1].(int)]
	}).(WebproxyExplicitPacPolicyDstaddrOutput)
}

type WebproxyExplicitPacPolicySrcaddr6 struct {
	// Address name.
	//
	// The `srcaddr6` block supports:
	Name *string `pulumi:"name"`
}

// WebproxyExplicitPacPolicySrcaddr6Input is an input type that accepts WebproxyExplicitPacPolicySrcaddr6Args and WebproxyExplicitPacPolicySrcaddr6Output values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicySrcaddr6Input` via:
//
//	WebproxyExplicitPacPolicySrcaddr6Args{...}
type WebproxyExplicitPacPolicySrcaddr6Input interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicySrcaddr6Output() WebproxyExplicitPacPolicySrcaddr6Output
	ToWebproxyExplicitPacPolicySrcaddr6OutputWithContext(context.Context) WebproxyExplicitPacPolicySrcaddr6Output
}

type WebproxyExplicitPacPolicySrcaddr6Args struct {
	// Address name.
	//
	// The `srcaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyExplicitPacPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicySrcaddr6Args) ToWebproxyExplicitPacPolicySrcaddr6Output() WebproxyExplicitPacPolicySrcaddr6Output {
	return i.ToWebproxyExplicitPacPolicySrcaddr6OutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicySrcaddr6Args) ToWebproxyExplicitPacPolicySrcaddr6OutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicySrcaddr6Output)
}

// WebproxyExplicitPacPolicySrcaddr6ArrayInput is an input type that accepts WebproxyExplicitPacPolicySrcaddr6Array and WebproxyExplicitPacPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicySrcaddr6ArrayInput` via:
//
//	WebproxyExplicitPacPolicySrcaddr6Array{ WebproxyExplicitPacPolicySrcaddr6Args{...} }
type WebproxyExplicitPacPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicySrcaddr6ArrayOutput() WebproxyExplicitPacPolicySrcaddr6ArrayOutput
	ToWebproxyExplicitPacPolicySrcaddr6ArrayOutputWithContext(context.Context) WebproxyExplicitPacPolicySrcaddr6ArrayOutput
}

type WebproxyExplicitPacPolicySrcaddr6Array []WebproxyExplicitPacPolicySrcaddr6Input

func (WebproxyExplicitPacPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicySrcaddr6Array) ToWebproxyExplicitPacPolicySrcaddr6ArrayOutput() WebproxyExplicitPacPolicySrcaddr6ArrayOutput {
	return i.ToWebproxyExplicitPacPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicySrcaddr6Array) ToWebproxyExplicitPacPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicySrcaddr6ArrayOutput)
}

type WebproxyExplicitPacPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicySrcaddr6Output) ToWebproxyExplicitPacPolicySrcaddr6Output() WebproxyExplicitPacPolicySrcaddr6Output {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddr6Output) ToWebproxyExplicitPacPolicySrcaddr6OutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddr6Output {
	return o
}

// Address name.
//
// The `srcaddr6` block supports:
func (o WebproxyExplicitPacPolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyExplicitPacPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicySrcaddr6ArrayOutput) ToWebproxyExplicitPacPolicySrcaddr6ArrayOutput() WebproxyExplicitPacPolicySrcaddr6ArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddr6ArrayOutput) ToWebproxyExplicitPacPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddr6ArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) WebproxyExplicitPacPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyExplicitPacPolicySrcaddr6 {
		return vs[0].([]WebproxyExplicitPacPolicySrcaddr6)[vs[1].(int)]
	}).(WebproxyExplicitPacPolicySrcaddr6Output)
}

type WebproxyExplicitPacPolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WebproxyExplicitPacPolicySrcaddrInput is an input type that accepts WebproxyExplicitPacPolicySrcaddrArgs and WebproxyExplicitPacPolicySrcaddrOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicySrcaddrInput` via:
//
//	WebproxyExplicitPacPolicySrcaddrArgs{...}
type WebproxyExplicitPacPolicySrcaddrInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicySrcaddrOutput() WebproxyExplicitPacPolicySrcaddrOutput
	ToWebproxyExplicitPacPolicySrcaddrOutputWithContext(context.Context) WebproxyExplicitPacPolicySrcaddrOutput
}

type WebproxyExplicitPacPolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyExplicitPacPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicySrcaddrArgs) ToWebproxyExplicitPacPolicySrcaddrOutput() WebproxyExplicitPacPolicySrcaddrOutput {
	return i.ToWebproxyExplicitPacPolicySrcaddrOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicySrcaddrArgs) ToWebproxyExplicitPacPolicySrcaddrOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicySrcaddrOutput)
}

// WebproxyExplicitPacPolicySrcaddrArrayInput is an input type that accepts WebproxyExplicitPacPolicySrcaddrArray and WebproxyExplicitPacPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `WebproxyExplicitPacPolicySrcaddrArrayInput` via:
//
//	WebproxyExplicitPacPolicySrcaddrArray{ WebproxyExplicitPacPolicySrcaddrArgs{...} }
type WebproxyExplicitPacPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToWebproxyExplicitPacPolicySrcaddrArrayOutput() WebproxyExplicitPacPolicySrcaddrArrayOutput
	ToWebproxyExplicitPacPolicySrcaddrArrayOutputWithContext(context.Context) WebproxyExplicitPacPolicySrcaddrArrayOutput
}

type WebproxyExplicitPacPolicySrcaddrArray []WebproxyExplicitPacPolicySrcaddrInput

func (WebproxyExplicitPacPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (i WebproxyExplicitPacPolicySrcaddrArray) ToWebproxyExplicitPacPolicySrcaddrArrayOutput() WebproxyExplicitPacPolicySrcaddrArrayOutput {
	return i.ToWebproxyExplicitPacPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i WebproxyExplicitPacPolicySrcaddrArray) ToWebproxyExplicitPacPolicySrcaddrArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitPacPolicySrcaddrArrayOutput)
}

type WebproxyExplicitPacPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicySrcaddrOutput) ToWebproxyExplicitPacPolicySrcaddrOutput() WebproxyExplicitPacPolicySrcaddrOutput {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddrOutput) ToWebproxyExplicitPacPolicySrcaddrOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddrOutput {
	return o
}

// Address name.
func (o WebproxyExplicitPacPolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyExplicitPacPolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyExplicitPacPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitPacPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (o WebproxyExplicitPacPolicySrcaddrArrayOutput) ToWebproxyExplicitPacPolicySrcaddrArrayOutput() WebproxyExplicitPacPolicySrcaddrArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddrArrayOutput) ToWebproxyExplicitPacPolicySrcaddrArrayOutputWithContext(ctx context.Context) WebproxyExplicitPacPolicySrcaddrArrayOutput {
	return o
}

func (o WebproxyExplicitPacPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) WebproxyExplicitPacPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyExplicitPacPolicySrcaddr {
		return vs[0].([]WebproxyExplicitPacPolicySrcaddr)[vs[1].(int)]
	}).(WebproxyExplicitPacPolicySrcaddrOutput)
}

type WebproxyForwardservergroupServerList struct {
	// Forward server name.
	Name *string `pulumi:"name"`
	// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
	Weight *int `pulumi:"weight"`
}

// WebproxyForwardservergroupServerListInput is an input type that accepts WebproxyForwardservergroupServerListArgs and WebproxyForwardservergroupServerListOutput values.
// You can construct a concrete instance of `WebproxyForwardservergroupServerListInput` via:
//
//	WebproxyForwardservergroupServerListArgs{...}
type WebproxyForwardservergroupServerListInput interface {
	pulumi.Input

	ToWebproxyForwardservergroupServerListOutput() WebproxyForwardservergroupServerListOutput
	ToWebproxyForwardservergroupServerListOutputWithContext(context.Context) WebproxyForwardservergroupServerListOutput
}

type WebproxyForwardservergroupServerListArgs struct {
	// Forward server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WebproxyForwardservergroupServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyForwardservergroupServerList)(nil)).Elem()
}

func (i WebproxyForwardservergroupServerListArgs) ToWebproxyForwardservergroupServerListOutput() WebproxyForwardservergroupServerListOutput {
	return i.ToWebproxyForwardservergroupServerListOutputWithContext(context.Background())
}

func (i WebproxyForwardservergroupServerListArgs) ToWebproxyForwardservergroupServerListOutputWithContext(ctx context.Context) WebproxyForwardservergroupServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyForwardservergroupServerListOutput)
}

// WebproxyForwardservergroupServerListArrayInput is an input type that accepts WebproxyForwardservergroupServerListArray and WebproxyForwardservergroupServerListArrayOutput values.
// You can construct a concrete instance of `WebproxyForwardservergroupServerListArrayInput` via:
//
//	WebproxyForwardservergroupServerListArray{ WebproxyForwardservergroupServerListArgs{...} }
type WebproxyForwardservergroupServerListArrayInput interface {
	pulumi.Input

	ToWebproxyForwardservergroupServerListArrayOutput() WebproxyForwardservergroupServerListArrayOutput
	ToWebproxyForwardservergroupServerListArrayOutputWithContext(context.Context) WebproxyForwardservergroupServerListArrayOutput
}

type WebproxyForwardservergroupServerListArray []WebproxyForwardservergroupServerListInput

func (WebproxyForwardservergroupServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyForwardservergroupServerList)(nil)).Elem()
}

func (i WebproxyForwardservergroupServerListArray) ToWebproxyForwardservergroupServerListArrayOutput() WebproxyForwardservergroupServerListArrayOutput {
	return i.ToWebproxyForwardservergroupServerListArrayOutputWithContext(context.Background())
}

func (i WebproxyForwardservergroupServerListArray) ToWebproxyForwardservergroupServerListArrayOutputWithContext(ctx context.Context) WebproxyForwardservergroupServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyForwardservergroupServerListArrayOutput)
}

type WebproxyForwardservergroupServerListOutput struct{ *pulumi.OutputState }

func (WebproxyForwardservergroupServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyForwardservergroupServerList)(nil)).Elem()
}

func (o WebproxyForwardservergroupServerListOutput) ToWebproxyForwardservergroupServerListOutput() WebproxyForwardservergroupServerListOutput {
	return o
}

func (o WebproxyForwardservergroupServerListOutput) ToWebproxyForwardservergroupServerListOutputWithContext(ctx context.Context) WebproxyForwardservergroupServerListOutput {
	return o
}

// Forward server name.
func (o WebproxyForwardservergroupServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyForwardservergroupServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
func (o WebproxyForwardservergroupServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebproxyForwardservergroupServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WebproxyForwardservergroupServerListArrayOutput struct{ *pulumi.OutputState }

func (WebproxyForwardservergroupServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyForwardservergroupServerList)(nil)).Elem()
}

func (o WebproxyForwardservergroupServerListArrayOutput) ToWebproxyForwardservergroupServerListArrayOutput() WebproxyForwardservergroupServerListArrayOutput {
	return o
}

func (o WebproxyForwardservergroupServerListArrayOutput) ToWebproxyForwardservergroupServerListArrayOutputWithContext(ctx context.Context) WebproxyForwardservergroupServerListArrayOutput {
	return o
}

func (o WebproxyForwardservergroupServerListArrayOutput) Index(i pulumi.IntInput) WebproxyForwardservergroupServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyForwardservergroupServerList {
		return vs[0].([]WebproxyForwardservergroupServerList)[vs[1].(int)]
	}).(WebproxyForwardservergroupServerListOutput)
}

type WebproxyGlobalLearnClientIpSrcaddr6 struct {
	// Address name.
	//
	// The `learnClientIpSrcaddr6` block supports:
	Name *string `pulumi:"name"`
}

// WebproxyGlobalLearnClientIpSrcaddr6Input is an input type that accepts WebproxyGlobalLearnClientIpSrcaddr6Args and WebproxyGlobalLearnClientIpSrcaddr6Output values.
// You can construct a concrete instance of `WebproxyGlobalLearnClientIpSrcaddr6Input` via:
//
//	WebproxyGlobalLearnClientIpSrcaddr6Args{...}
type WebproxyGlobalLearnClientIpSrcaddr6Input interface {
	pulumi.Input

	ToWebproxyGlobalLearnClientIpSrcaddr6Output() WebproxyGlobalLearnClientIpSrcaddr6Output
	ToWebproxyGlobalLearnClientIpSrcaddr6OutputWithContext(context.Context) WebproxyGlobalLearnClientIpSrcaddr6Output
}

type WebproxyGlobalLearnClientIpSrcaddr6Args struct {
	// Address name.
	//
	// The `learnClientIpSrcaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyGlobalLearnClientIpSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (i WebproxyGlobalLearnClientIpSrcaddr6Args) ToWebproxyGlobalLearnClientIpSrcaddr6Output() WebproxyGlobalLearnClientIpSrcaddr6Output {
	return i.ToWebproxyGlobalLearnClientIpSrcaddr6OutputWithContext(context.Background())
}

func (i WebproxyGlobalLearnClientIpSrcaddr6Args) ToWebproxyGlobalLearnClientIpSrcaddr6OutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyGlobalLearnClientIpSrcaddr6Output)
}

// WebproxyGlobalLearnClientIpSrcaddr6ArrayInput is an input type that accepts WebproxyGlobalLearnClientIpSrcaddr6Array and WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `WebproxyGlobalLearnClientIpSrcaddr6ArrayInput` via:
//
//	WebproxyGlobalLearnClientIpSrcaddr6Array{ WebproxyGlobalLearnClientIpSrcaddr6Args{...} }
type WebproxyGlobalLearnClientIpSrcaddr6ArrayInput interface {
	pulumi.Input

	ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutput() WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput
	ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(context.Context) WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput
}

type WebproxyGlobalLearnClientIpSrcaddr6Array []WebproxyGlobalLearnClientIpSrcaddr6Input

func (WebproxyGlobalLearnClientIpSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyGlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (i WebproxyGlobalLearnClientIpSrcaddr6Array) ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutput() WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput {
	return i.ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i WebproxyGlobalLearnClientIpSrcaddr6Array) ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput)
}

type WebproxyGlobalLearnClientIpSrcaddr6Output struct{ *pulumi.OutputState }

func (WebproxyGlobalLearnClientIpSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (o WebproxyGlobalLearnClientIpSrcaddr6Output) ToWebproxyGlobalLearnClientIpSrcaddr6Output() WebproxyGlobalLearnClientIpSrcaddr6Output {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddr6Output) ToWebproxyGlobalLearnClientIpSrcaddr6OutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddr6Output {
	return o
}

// Address name.
//
// The `learnClientIpSrcaddr6` block supports:
func (o WebproxyGlobalLearnClientIpSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyGlobalLearnClientIpSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyGlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (o WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput) ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutput() WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput) ToWebproxyGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput) Index(i pulumi.IntInput) WebproxyGlobalLearnClientIpSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyGlobalLearnClientIpSrcaddr6 {
		return vs[0].([]WebproxyGlobalLearnClientIpSrcaddr6)[vs[1].(int)]
	}).(WebproxyGlobalLearnClientIpSrcaddr6Output)
}

type WebproxyGlobalLearnClientIpSrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WebproxyGlobalLearnClientIpSrcaddrInput is an input type that accepts WebproxyGlobalLearnClientIpSrcaddrArgs and WebproxyGlobalLearnClientIpSrcaddrOutput values.
// You can construct a concrete instance of `WebproxyGlobalLearnClientIpSrcaddrInput` via:
//
//	WebproxyGlobalLearnClientIpSrcaddrArgs{...}
type WebproxyGlobalLearnClientIpSrcaddrInput interface {
	pulumi.Input

	ToWebproxyGlobalLearnClientIpSrcaddrOutput() WebproxyGlobalLearnClientIpSrcaddrOutput
	ToWebproxyGlobalLearnClientIpSrcaddrOutputWithContext(context.Context) WebproxyGlobalLearnClientIpSrcaddrOutput
}

type WebproxyGlobalLearnClientIpSrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyGlobalLearnClientIpSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (i WebproxyGlobalLearnClientIpSrcaddrArgs) ToWebproxyGlobalLearnClientIpSrcaddrOutput() WebproxyGlobalLearnClientIpSrcaddrOutput {
	return i.ToWebproxyGlobalLearnClientIpSrcaddrOutputWithContext(context.Background())
}

func (i WebproxyGlobalLearnClientIpSrcaddrArgs) ToWebproxyGlobalLearnClientIpSrcaddrOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyGlobalLearnClientIpSrcaddrOutput)
}

// WebproxyGlobalLearnClientIpSrcaddrArrayInput is an input type that accepts WebproxyGlobalLearnClientIpSrcaddrArray and WebproxyGlobalLearnClientIpSrcaddrArrayOutput values.
// You can construct a concrete instance of `WebproxyGlobalLearnClientIpSrcaddrArrayInput` via:
//
//	WebproxyGlobalLearnClientIpSrcaddrArray{ WebproxyGlobalLearnClientIpSrcaddrArgs{...} }
type WebproxyGlobalLearnClientIpSrcaddrArrayInput interface {
	pulumi.Input

	ToWebproxyGlobalLearnClientIpSrcaddrArrayOutput() WebproxyGlobalLearnClientIpSrcaddrArrayOutput
	ToWebproxyGlobalLearnClientIpSrcaddrArrayOutputWithContext(context.Context) WebproxyGlobalLearnClientIpSrcaddrArrayOutput
}

type WebproxyGlobalLearnClientIpSrcaddrArray []WebproxyGlobalLearnClientIpSrcaddrInput

func (WebproxyGlobalLearnClientIpSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyGlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (i WebproxyGlobalLearnClientIpSrcaddrArray) ToWebproxyGlobalLearnClientIpSrcaddrArrayOutput() WebproxyGlobalLearnClientIpSrcaddrArrayOutput {
	return i.ToWebproxyGlobalLearnClientIpSrcaddrArrayOutputWithContext(context.Background())
}

func (i WebproxyGlobalLearnClientIpSrcaddrArray) ToWebproxyGlobalLearnClientIpSrcaddrArrayOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyGlobalLearnClientIpSrcaddrArrayOutput)
}

type WebproxyGlobalLearnClientIpSrcaddrOutput struct{ *pulumi.OutputState }

func (WebproxyGlobalLearnClientIpSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (o WebproxyGlobalLearnClientIpSrcaddrOutput) ToWebproxyGlobalLearnClientIpSrcaddrOutput() WebproxyGlobalLearnClientIpSrcaddrOutput {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddrOutput) ToWebproxyGlobalLearnClientIpSrcaddrOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddrOutput {
	return o
}

// Address name.
func (o WebproxyGlobalLearnClientIpSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyGlobalLearnClientIpSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyGlobalLearnClientIpSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (WebproxyGlobalLearnClientIpSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyGlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (o WebproxyGlobalLearnClientIpSrcaddrArrayOutput) ToWebproxyGlobalLearnClientIpSrcaddrArrayOutput() WebproxyGlobalLearnClientIpSrcaddrArrayOutput {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddrArrayOutput) ToWebproxyGlobalLearnClientIpSrcaddrArrayOutputWithContext(ctx context.Context) WebproxyGlobalLearnClientIpSrcaddrArrayOutput {
	return o
}

func (o WebproxyGlobalLearnClientIpSrcaddrArrayOutput) Index(i pulumi.IntInput) WebproxyGlobalLearnClientIpSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyGlobalLearnClientIpSrcaddr {
		return vs[0].([]WebproxyGlobalLearnClientIpSrcaddr)[vs[1].(int)]
	}).(WebproxyGlobalLearnClientIpSrcaddrOutput)
}

type WebproxyProfileHeader struct {
	// Action when the HTTP header is forwarded. Valid values: `add-to-request`, `add-to-response`, `remove-from-request`, `remove-from-response`.
	Action *string `pulumi:"action"`
	// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
	AddOption *string `pulumi:"addOption"`
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding *string `pulumi:"base64Encoding"`
	// HTTP header content.
	Content *string `pulumi:"content"`
	// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
	Dstaddr6s []WebproxyProfileHeaderDstaddr6 `pulumi:"dstaddr6s"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []WebproxyProfileHeaderDstaddr `pulumi:"dstaddrs"`
	// HTTP forwarded header id.
	Id *int `pulumi:"id"`
	// HTTP forwarded header name.
	Name *string `pulumi:"name"`
	// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
	Protocol *string `pulumi:"protocol"`
}

// WebproxyProfileHeaderInput is an input type that accepts WebproxyProfileHeaderArgs and WebproxyProfileHeaderOutput values.
// You can construct a concrete instance of `WebproxyProfileHeaderInput` via:
//
//	WebproxyProfileHeaderArgs{...}
type WebproxyProfileHeaderInput interface {
	pulumi.Input

	ToWebproxyProfileHeaderOutput() WebproxyProfileHeaderOutput
	ToWebproxyProfileHeaderOutputWithContext(context.Context) WebproxyProfileHeaderOutput
}

type WebproxyProfileHeaderArgs struct {
	// Action when the HTTP header is forwarded. Valid values: `add-to-request`, `add-to-response`, `remove-from-request`, `remove-from-response`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
	AddOption pulumi.StringPtrInput `pulumi:"addOption"`
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding pulumi.StringPtrInput `pulumi:"base64Encoding"`
	// HTTP header content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
	Dstaddr6s WebproxyProfileHeaderDstaddr6ArrayInput `pulumi:"dstaddr6s"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs WebproxyProfileHeaderDstaddrArrayInput `pulumi:"dstaddrs"`
	// HTTP forwarded header id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// HTTP forwarded header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WebproxyProfileHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeader)(nil)).Elem()
}

func (i WebproxyProfileHeaderArgs) ToWebproxyProfileHeaderOutput() WebproxyProfileHeaderOutput {
	return i.ToWebproxyProfileHeaderOutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderArgs) ToWebproxyProfileHeaderOutputWithContext(ctx context.Context) WebproxyProfileHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderOutput)
}

// WebproxyProfileHeaderArrayInput is an input type that accepts WebproxyProfileHeaderArray and WebproxyProfileHeaderArrayOutput values.
// You can construct a concrete instance of `WebproxyProfileHeaderArrayInput` via:
//
//	WebproxyProfileHeaderArray{ WebproxyProfileHeaderArgs{...} }
type WebproxyProfileHeaderArrayInput interface {
	pulumi.Input

	ToWebproxyProfileHeaderArrayOutput() WebproxyProfileHeaderArrayOutput
	ToWebproxyProfileHeaderArrayOutputWithContext(context.Context) WebproxyProfileHeaderArrayOutput
}

type WebproxyProfileHeaderArray []WebproxyProfileHeaderInput

func (WebproxyProfileHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeader)(nil)).Elem()
}

func (i WebproxyProfileHeaderArray) ToWebproxyProfileHeaderArrayOutput() WebproxyProfileHeaderArrayOutput {
	return i.ToWebproxyProfileHeaderArrayOutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderArray) ToWebproxyProfileHeaderArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderArrayOutput)
}

type WebproxyProfileHeaderOutput struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeader)(nil)).Elem()
}

func (o WebproxyProfileHeaderOutput) ToWebproxyProfileHeaderOutput() WebproxyProfileHeaderOutput {
	return o
}

func (o WebproxyProfileHeaderOutput) ToWebproxyProfileHeaderOutputWithContext(ctx context.Context) WebproxyProfileHeaderOutput {
	return o
}

// Action when the HTTP header is forwarded. Valid values: `add-to-request`, `add-to-response`, `remove-from-request`, `remove-from-response`.
func (o WebproxyProfileHeaderOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
func (o WebproxyProfileHeaderOutput) AddOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.AddOption }).(pulumi.StringPtrOutput)
}

// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
func (o WebproxyProfileHeaderOutput) Base64Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.Base64Encoding }).(pulumi.StringPtrOutput)
}

// HTTP header content.
func (o WebproxyProfileHeaderOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
func (o WebproxyProfileHeaderOutput) Dstaddr6s() WebproxyProfileHeaderDstaddr6ArrayOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) []WebproxyProfileHeaderDstaddr6 { return v.Dstaddr6s }).(WebproxyProfileHeaderDstaddr6ArrayOutput)
}

// Destination address and address group names. The structure of `dstaddr` block is documented below.
func (o WebproxyProfileHeaderOutput) Dstaddrs() WebproxyProfileHeaderDstaddrArrayOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) []WebproxyProfileHeaderDstaddr { return v.Dstaddrs }).(WebproxyProfileHeaderDstaddrArrayOutput)
}

// HTTP forwarded header id.
func (o WebproxyProfileHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// HTTP forwarded header name.
func (o WebproxyProfileHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
func (o WebproxyProfileHeaderOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeader) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WebproxyProfileHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeader)(nil)).Elem()
}

func (o WebproxyProfileHeaderArrayOutput) ToWebproxyProfileHeaderArrayOutput() WebproxyProfileHeaderArrayOutput {
	return o
}

func (o WebproxyProfileHeaderArrayOutput) ToWebproxyProfileHeaderArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderArrayOutput {
	return o
}

func (o WebproxyProfileHeaderArrayOutput) Index(i pulumi.IntInput) WebproxyProfileHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyProfileHeader {
		return vs[0].([]WebproxyProfileHeader)[vs[1].(int)]
	}).(WebproxyProfileHeaderOutput)
}

type WebproxyProfileHeaderDstaddr6 struct {
	// Profile name.
	Name *string `pulumi:"name"`
}

// WebproxyProfileHeaderDstaddr6Input is an input type that accepts WebproxyProfileHeaderDstaddr6Args and WebproxyProfileHeaderDstaddr6Output values.
// You can construct a concrete instance of `WebproxyProfileHeaderDstaddr6Input` via:
//
//	WebproxyProfileHeaderDstaddr6Args{...}
type WebproxyProfileHeaderDstaddr6Input interface {
	pulumi.Input

	ToWebproxyProfileHeaderDstaddr6Output() WebproxyProfileHeaderDstaddr6Output
	ToWebproxyProfileHeaderDstaddr6OutputWithContext(context.Context) WebproxyProfileHeaderDstaddr6Output
}

type WebproxyProfileHeaderDstaddr6Args struct {
	// Profile name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyProfileHeaderDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeaderDstaddr6)(nil)).Elem()
}

func (i WebproxyProfileHeaderDstaddr6Args) ToWebproxyProfileHeaderDstaddr6Output() WebproxyProfileHeaderDstaddr6Output {
	return i.ToWebproxyProfileHeaderDstaddr6OutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderDstaddr6Args) ToWebproxyProfileHeaderDstaddr6OutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderDstaddr6Output)
}

// WebproxyProfileHeaderDstaddr6ArrayInput is an input type that accepts WebproxyProfileHeaderDstaddr6Array and WebproxyProfileHeaderDstaddr6ArrayOutput values.
// You can construct a concrete instance of `WebproxyProfileHeaderDstaddr6ArrayInput` via:
//
//	WebproxyProfileHeaderDstaddr6Array{ WebproxyProfileHeaderDstaddr6Args{...} }
type WebproxyProfileHeaderDstaddr6ArrayInput interface {
	pulumi.Input

	ToWebproxyProfileHeaderDstaddr6ArrayOutput() WebproxyProfileHeaderDstaddr6ArrayOutput
	ToWebproxyProfileHeaderDstaddr6ArrayOutputWithContext(context.Context) WebproxyProfileHeaderDstaddr6ArrayOutput
}

type WebproxyProfileHeaderDstaddr6Array []WebproxyProfileHeaderDstaddr6Input

func (WebproxyProfileHeaderDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeaderDstaddr6)(nil)).Elem()
}

func (i WebproxyProfileHeaderDstaddr6Array) ToWebproxyProfileHeaderDstaddr6ArrayOutput() WebproxyProfileHeaderDstaddr6ArrayOutput {
	return i.ToWebproxyProfileHeaderDstaddr6ArrayOutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderDstaddr6Array) ToWebproxyProfileHeaderDstaddr6ArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderDstaddr6ArrayOutput)
}

type WebproxyProfileHeaderDstaddr6Output struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeaderDstaddr6)(nil)).Elem()
}

func (o WebproxyProfileHeaderDstaddr6Output) ToWebproxyProfileHeaderDstaddr6Output() WebproxyProfileHeaderDstaddr6Output {
	return o
}

func (o WebproxyProfileHeaderDstaddr6Output) ToWebproxyProfileHeaderDstaddr6OutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddr6Output {
	return o
}

// Profile name.
func (o WebproxyProfileHeaderDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeaderDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyProfileHeaderDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeaderDstaddr6)(nil)).Elem()
}

func (o WebproxyProfileHeaderDstaddr6ArrayOutput) ToWebproxyProfileHeaderDstaddr6ArrayOutput() WebproxyProfileHeaderDstaddr6ArrayOutput {
	return o
}

func (o WebproxyProfileHeaderDstaddr6ArrayOutput) ToWebproxyProfileHeaderDstaddr6ArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddr6ArrayOutput {
	return o
}

func (o WebproxyProfileHeaderDstaddr6ArrayOutput) Index(i pulumi.IntInput) WebproxyProfileHeaderDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyProfileHeaderDstaddr6 {
		return vs[0].([]WebproxyProfileHeaderDstaddr6)[vs[1].(int)]
	}).(WebproxyProfileHeaderDstaddr6Output)
}

type WebproxyProfileHeaderDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// WebproxyProfileHeaderDstaddrInput is an input type that accepts WebproxyProfileHeaderDstaddrArgs and WebproxyProfileHeaderDstaddrOutput values.
// You can construct a concrete instance of `WebproxyProfileHeaderDstaddrInput` via:
//
//	WebproxyProfileHeaderDstaddrArgs{...}
type WebproxyProfileHeaderDstaddrInput interface {
	pulumi.Input

	ToWebproxyProfileHeaderDstaddrOutput() WebproxyProfileHeaderDstaddrOutput
	ToWebproxyProfileHeaderDstaddrOutputWithContext(context.Context) WebproxyProfileHeaderDstaddrOutput
}

type WebproxyProfileHeaderDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebproxyProfileHeaderDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeaderDstaddr)(nil)).Elem()
}

func (i WebproxyProfileHeaderDstaddrArgs) ToWebproxyProfileHeaderDstaddrOutput() WebproxyProfileHeaderDstaddrOutput {
	return i.ToWebproxyProfileHeaderDstaddrOutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderDstaddrArgs) ToWebproxyProfileHeaderDstaddrOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderDstaddrOutput)
}

// WebproxyProfileHeaderDstaddrArrayInput is an input type that accepts WebproxyProfileHeaderDstaddrArray and WebproxyProfileHeaderDstaddrArrayOutput values.
// You can construct a concrete instance of `WebproxyProfileHeaderDstaddrArrayInput` via:
//
//	WebproxyProfileHeaderDstaddrArray{ WebproxyProfileHeaderDstaddrArgs{...} }
type WebproxyProfileHeaderDstaddrArrayInput interface {
	pulumi.Input

	ToWebproxyProfileHeaderDstaddrArrayOutput() WebproxyProfileHeaderDstaddrArrayOutput
	ToWebproxyProfileHeaderDstaddrArrayOutputWithContext(context.Context) WebproxyProfileHeaderDstaddrArrayOutput
}

type WebproxyProfileHeaderDstaddrArray []WebproxyProfileHeaderDstaddrInput

func (WebproxyProfileHeaderDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeaderDstaddr)(nil)).Elem()
}

func (i WebproxyProfileHeaderDstaddrArray) ToWebproxyProfileHeaderDstaddrArrayOutput() WebproxyProfileHeaderDstaddrArrayOutput {
	return i.ToWebproxyProfileHeaderDstaddrArrayOutputWithContext(context.Background())
}

func (i WebproxyProfileHeaderDstaddrArray) ToWebproxyProfileHeaderDstaddrArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyProfileHeaderDstaddrArrayOutput)
}

type WebproxyProfileHeaderDstaddrOutput struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebproxyProfileHeaderDstaddr)(nil)).Elem()
}

func (o WebproxyProfileHeaderDstaddrOutput) ToWebproxyProfileHeaderDstaddrOutput() WebproxyProfileHeaderDstaddrOutput {
	return o
}

func (o WebproxyProfileHeaderDstaddrOutput) ToWebproxyProfileHeaderDstaddrOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddrOutput {
	return o
}

// Address name.
func (o WebproxyProfileHeaderDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebproxyProfileHeaderDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebproxyProfileHeaderDstaddrArrayOutput struct{ *pulumi.OutputState }

func (WebproxyProfileHeaderDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebproxyProfileHeaderDstaddr)(nil)).Elem()
}

func (o WebproxyProfileHeaderDstaddrArrayOutput) ToWebproxyProfileHeaderDstaddrArrayOutput() WebproxyProfileHeaderDstaddrArrayOutput {
	return o
}

func (o WebproxyProfileHeaderDstaddrArrayOutput) ToWebproxyProfileHeaderDstaddrArrayOutputWithContext(ctx context.Context) WebproxyProfileHeaderDstaddrArrayOutput {
	return o
}

func (o WebproxyProfileHeaderDstaddrArrayOutput) Index(i pulumi.IntInput) WebproxyProfileHeaderDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebproxyProfileHeaderDstaddr {
		return vs[0].([]WebproxyProfileHeaderDstaddr)[vs[1].(int)]
	}).(WebproxyProfileHeaderDstaddrOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv4Rule struct {
	// Policy action (allow | deny). Valid values: `allow`, `deny`.
	Action *string `pulumi:"action"`
	// Description.
	Comment *string `pulumi:"comment"`
	// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Dstaddr *string `pulumi:"dstaddr"`
	// Destination port (0 - 65535, default = 0, meaning any).
	Dstport *int `pulumi:"dstport"`
	// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
	Protocol *int `pulumi:"protocol"`
	// Rule ID (1 - 65535).
	RuleId *int `pulumi:"ruleId"`
	// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Srcaddr *string `pulumi:"srcaddr"`
	// Source port (0 - 65535, default = 0, meaning any).
	Srcport *int `pulumi:"srcport"`
}

// WirelesscontrollerAccesscontrollistLayer3Ipv4RuleInput is an input type that accepts WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs and WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput values.
// You can construct a concrete instance of `WirelesscontrollerAccesscontrollistLayer3Ipv4RuleInput` via:
//
//	WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs{...}
type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleInput interface {
	pulumi.Input

	ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput
	ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutputWithContext(context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput
}

type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs struct {
	// Policy action (allow | deny). Valid values: `allow`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Destination port (0 - 65535, default = 0, meaning any).
	Dstport pulumi.IntPtrInput `pulumi:"dstport"`
	// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Rule ID (1 - 65535).
	RuleId pulumi.IntPtrInput `pulumi:"ruleId"`
	// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Source port (0 - 65535, default = 0, meaning any).
	Srcport pulumi.IntPtrInput `pulumi:"srcport"`
}

func (WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv4Rule)(nil)).Elem()
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput {
	return i.ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutputWithContext(context.Background())
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput)
}

// WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayInput is an input type that accepts WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray and WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayInput` via:
//
//	WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray{ WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs{...} }
type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput
	ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutputWithContext(context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput
}

type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray []WirelesscontrollerAccesscontrollistLayer3Ipv4RuleInput

func (WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAccesscontrollistLayer3Ipv4Rule)(nil)).Elem()
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput {
	return i.ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv4Rule)(nil)).Elem()
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput {
	return o
}

// Policy action (allow | deny). Valid values: `allow`, `deny`.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Destination port (0 - 65535, default = 0, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Dstport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *int { return v.Dstport }).(pulumi.IntPtrOutput)
}

// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Rule ID (1 - 65535).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Source port (0 - 65535, default = 0, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput) Srcport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv4Rule) *int { return v.Srcport }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAccesscontrollistLayer3Ipv4Rule)(nil)).Elem()
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerAccesscontrollistLayer3Ipv4Rule {
		return vs[0].([]WirelesscontrollerAccesscontrollistLayer3Ipv4Rule)[vs[1].(int)]
	}).(WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv6Rule struct {
	// Policy action (allow | deny). Valid values: `allow`, `deny`.
	Action *string `pulumi:"action"`
	// Description.
	Comment *string `pulumi:"comment"`
	// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Dstaddr *string `pulumi:"dstaddr"`
	// Destination port (0 - 65535, default = 0, meaning any).
	Dstport *int `pulumi:"dstport"`
	// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
	Protocol *int `pulumi:"protocol"`
	// Rule ID (1 - 65535).
	RuleId *int `pulumi:"ruleId"`
	// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Srcaddr *string `pulumi:"srcaddr"`
	// Source port (0 - 65535, default = 0, meaning any).
	Srcport *int `pulumi:"srcport"`
}

// WirelesscontrollerAccesscontrollistLayer3Ipv6RuleInput is an input type that accepts WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs and WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput values.
// You can construct a concrete instance of `WirelesscontrollerAccesscontrollistLayer3Ipv6RuleInput` via:
//
//	WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs{...}
type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleInput interface {
	pulumi.Input

	ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput
	ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutputWithContext(context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput
}

type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs struct {
	// Policy action (allow | deny). Valid values: `allow`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Destination port (0 - 65535, default = 0, meaning any).
	Dstport pulumi.IntPtrInput `pulumi:"dstport"`
	// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Rule ID (1 - 65535).
	RuleId pulumi.IntPtrInput `pulumi:"ruleId"`
	// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Source port (0 - 65535, default = 0, meaning any).
	Srcport pulumi.IntPtrInput `pulumi:"srcport"`
}

func (WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv6Rule)(nil)).Elem()
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput {
	return i.ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutputWithContext(context.Background())
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput)
}

// WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayInput is an input type that accepts WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray and WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayInput` via:
//
//	WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray{ WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs{...} }
type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput
	ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutputWithContext(context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput
}

type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray []WirelesscontrollerAccesscontrollistLayer3Ipv6RuleInput

func (WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAccesscontrollistLayer3Ipv6Rule)(nil)).Elem()
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput {
	return i.ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv6Rule)(nil)).Elem()
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput {
	return o
}

// Policy action (allow | deny). Valid values: `allow`, `deny`.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Destination IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Destination port (0 - 65535, default = 0, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Dstport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *int { return v.Dstport }).(pulumi.IntPtrOutput)
}

// Protocol type as defined by IANA (0 - 255, default = 255, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Rule ID (1 - 65535).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

// Source IPv6 address (any | local-LAN | IPv6 address[/prefix length]), default = any.
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Source port (0 - 65535, default = 0, meaning any).
func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput) Srcport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAccesscontrollistLayer3Ipv6Rule) *int { return v.Srcport }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAccesscontrollistLayer3Ipv6Rule)(nil)).Elem()
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput() WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput) ToWirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutputWithContext(ctx context.Context) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput {
	return o
}

func (o WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerAccesscontrollistLayer3Ipv6Rule {
		return vs[0].([]WirelesscontrollerAccesscontrollistLayer3Ipv6Rule)[vs[1].(int)]
	}).(WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput)
}

type WirelesscontrollerAddrgrpAddress struct {
	// Address ID.
	Id *string `pulumi:"id"`
}

// WirelesscontrollerAddrgrpAddressInput is an input type that accepts WirelesscontrollerAddrgrpAddressArgs and WirelesscontrollerAddrgrpAddressOutput values.
// You can construct a concrete instance of `WirelesscontrollerAddrgrpAddressInput` via:
//
//	WirelesscontrollerAddrgrpAddressArgs{...}
type WirelesscontrollerAddrgrpAddressInput interface {
	pulumi.Input

	ToWirelesscontrollerAddrgrpAddressOutput() WirelesscontrollerAddrgrpAddressOutput
	ToWirelesscontrollerAddrgrpAddressOutputWithContext(context.Context) WirelesscontrollerAddrgrpAddressOutput
}

type WirelesscontrollerAddrgrpAddressArgs struct {
	// Address ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (WirelesscontrollerAddrgrpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAddrgrpAddress)(nil)).Elem()
}

func (i WirelesscontrollerAddrgrpAddressArgs) ToWirelesscontrollerAddrgrpAddressOutput() WirelesscontrollerAddrgrpAddressOutput {
	return i.ToWirelesscontrollerAddrgrpAddressOutputWithContext(context.Background())
}

func (i WirelesscontrollerAddrgrpAddressArgs) ToWirelesscontrollerAddrgrpAddressOutputWithContext(ctx context.Context) WirelesscontrollerAddrgrpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAddrgrpAddressOutput)
}

// WirelesscontrollerAddrgrpAddressArrayInput is an input type that accepts WirelesscontrollerAddrgrpAddressArray and WirelesscontrollerAddrgrpAddressArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerAddrgrpAddressArrayInput` via:
//
//	WirelesscontrollerAddrgrpAddressArray{ WirelesscontrollerAddrgrpAddressArgs{...} }
type WirelesscontrollerAddrgrpAddressArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerAddrgrpAddressArrayOutput() WirelesscontrollerAddrgrpAddressArrayOutput
	ToWirelesscontrollerAddrgrpAddressArrayOutputWithContext(context.Context) WirelesscontrollerAddrgrpAddressArrayOutput
}

type WirelesscontrollerAddrgrpAddressArray []WirelesscontrollerAddrgrpAddressInput

func (WirelesscontrollerAddrgrpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAddrgrpAddress)(nil)).Elem()
}

func (i WirelesscontrollerAddrgrpAddressArray) ToWirelesscontrollerAddrgrpAddressArrayOutput() WirelesscontrollerAddrgrpAddressArrayOutput {
	return i.ToWirelesscontrollerAddrgrpAddressArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerAddrgrpAddressArray) ToWirelesscontrollerAddrgrpAddressArrayOutputWithContext(ctx context.Context) WirelesscontrollerAddrgrpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerAddrgrpAddressArrayOutput)
}

type WirelesscontrollerAddrgrpAddressOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAddrgrpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerAddrgrpAddress)(nil)).Elem()
}

func (o WirelesscontrollerAddrgrpAddressOutput) ToWirelesscontrollerAddrgrpAddressOutput() WirelesscontrollerAddrgrpAddressOutput {
	return o
}

func (o WirelesscontrollerAddrgrpAddressOutput) ToWirelesscontrollerAddrgrpAddressOutputWithContext(ctx context.Context) WirelesscontrollerAddrgrpAddressOutput {
	return o
}

// Address ID.
func (o WirelesscontrollerAddrgrpAddressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerAddrgrpAddress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerAddrgrpAddressArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerAddrgrpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerAddrgrpAddress)(nil)).Elem()
}

func (o WirelesscontrollerAddrgrpAddressArrayOutput) ToWirelesscontrollerAddrgrpAddressArrayOutput() WirelesscontrollerAddrgrpAddressArrayOutput {
	return o
}

func (o WirelesscontrollerAddrgrpAddressArrayOutput) ToWirelesscontrollerAddrgrpAddressArrayOutputWithContext(ctx context.Context) WirelesscontrollerAddrgrpAddressArrayOutput {
	return o
}

func (o WirelesscontrollerAddrgrpAddressArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerAddrgrpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerAddrgrpAddress {
		return vs[0].([]WirelesscontrollerAddrgrpAddress)[vs[1].(int)]
	}).(WirelesscontrollerAddrgrpAddressOutput)
}

type WirelesscontrollerApcfgprofileCommandList struct {
	// Command ID.
	Id *int `pulumi:"id"`
	// AP local configuration command name.
	Name *string `pulumi:"name"`
	// AP local configuration command password value.
	PasswdValue *string `pulumi:"passwdValue"`
	// The command type (default = non-password). Valid values: `non-password`, `password`.
	Type *string `pulumi:"type"`
	// AP local configuration command value.
	Value *string `pulumi:"value"`
}

// WirelesscontrollerApcfgprofileCommandListInput is an input type that accepts WirelesscontrollerApcfgprofileCommandListArgs and WirelesscontrollerApcfgprofileCommandListOutput values.
// You can construct a concrete instance of `WirelesscontrollerApcfgprofileCommandListInput` via:
//
//	WirelesscontrollerApcfgprofileCommandListArgs{...}
type WirelesscontrollerApcfgprofileCommandListInput interface {
	pulumi.Input

	ToWirelesscontrollerApcfgprofileCommandListOutput() WirelesscontrollerApcfgprofileCommandListOutput
	ToWirelesscontrollerApcfgprofileCommandListOutputWithContext(context.Context) WirelesscontrollerApcfgprofileCommandListOutput
}

type WirelesscontrollerApcfgprofileCommandListArgs struct {
	// Command ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// AP local configuration command name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// AP local configuration command password value.
	PasswdValue pulumi.StringPtrInput `pulumi:"passwdValue"`
	// The command type (default = non-password). Valid values: `non-password`, `password`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// AP local configuration command value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WirelesscontrollerApcfgprofileCommandListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerApcfgprofileCommandList)(nil)).Elem()
}

func (i WirelesscontrollerApcfgprofileCommandListArgs) ToWirelesscontrollerApcfgprofileCommandListOutput() WirelesscontrollerApcfgprofileCommandListOutput {
	return i.ToWirelesscontrollerApcfgprofileCommandListOutputWithContext(context.Background())
}

func (i WirelesscontrollerApcfgprofileCommandListArgs) ToWirelesscontrollerApcfgprofileCommandListOutputWithContext(ctx context.Context) WirelesscontrollerApcfgprofileCommandListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerApcfgprofileCommandListOutput)
}

// WirelesscontrollerApcfgprofileCommandListArrayInput is an input type that accepts WirelesscontrollerApcfgprofileCommandListArray and WirelesscontrollerApcfgprofileCommandListArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerApcfgprofileCommandListArrayInput` via:
//
//	WirelesscontrollerApcfgprofileCommandListArray{ WirelesscontrollerApcfgprofileCommandListArgs{...} }
type WirelesscontrollerApcfgprofileCommandListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerApcfgprofileCommandListArrayOutput() WirelesscontrollerApcfgprofileCommandListArrayOutput
	ToWirelesscontrollerApcfgprofileCommandListArrayOutputWithContext(context.Context) WirelesscontrollerApcfgprofileCommandListArrayOutput
}

type WirelesscontrollerApcfgprofileCommandListArray []WirelesscontrollerApcfgprofileCommandListInput

func (WirelesscontrollerApcfgprofileCommandListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerApcfgprofileCommandList)(nil)).Elem()
}

func (i WirelesscontrollerApcfgprofileCommandListArray) ToWirelesscontrollerApcfgprofileCommandListArrayOutput() WirelesscontrollerApcfgprofileCommandListArrayOutput {
	return i.ToWirelesscontrollerApcfgprofileCommandListArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerApcfgprofileCommandListArray) ToWirelesscontrollerApcfgprofileCommandListArrayOutputWithContext(ctx context.Context) WirelesscontrollerApcfgprofileCommandListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerApcfgprofileCommandListArrayOutput)
}

type WirelesscontrollerApcfgprofileCommandListOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerApcfgprofileCommandListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerApcfgprofileCommandList)(nil)).Elem()
}

func (o WirelesscontrollerApcfgprofileCommandListOutput) ToWirelesscontrollerApcfgprofileCommandListOutput() WirelesscontrollerApcfgprofileCommandListOutput {
	return o
}

func (o WirelesscontrollerApcfgprofileCommandListOutput) ToWirelesscontrollerApcfgprofileCommandListOutputWithContext(ctx context.Context) WirelesscontrollerApcfgprofileCommandListOutput {
	return o
}

// Command ID.
func (o WirelesscontrollerApcfgprofileCommandListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerApcfgprofileCommandList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// AP local configuration command name.
func (o WirelesscontrollerApcfgprofileCommandListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerApcfgprofileCommandList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// AP local configuration command password value.
func (o WirelesscontrollerApcfgprofileCommandListOutput) PasswdValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerApcfgprofileCommandList) *string { return v.PasswdValue }).(pulumi.StringPtrOutput)
}

// The command type (default = non-password). Valid values: `non-password`, `password`.
func (o WirelesscontrollerApcfgprofileCommandListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerApcfgprofileCommandList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// AP local configuration command value.
func (o WirelesscontrollerApcfgprofileCommandListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerApcfgprofileCommandList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerApcfgprofileCommandListArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerApcfgprofileCommandListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerApcfgprofileCommandList)(nil)).Elem()
}

func (o WirelesscontrollerApcfgprofileCommandListArrayOutput) ToWirelesscontrollerApcfgprofileCommandListArrayOutput() WirelesscontrollerApcfgprofileCommandListArrayOutput {
	return o
}

func (o WirelesscontrollerApcfgprofileCommandListArrayOutput) ToWirelesscontrollerApcfgprofileCommandListArrayOutputWithContext(ctx context.Context) WirelesscontrollerApcfgprofileCommandListArrayOutput {
	return o
}

func (o WirelesscontrollerApcfgprofileCommandListArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerApcfgprofileCommandListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerApcfgprofileCommandList {
		return vs[0].([]WirelesscontrollerApcfgprofileCommandList)[vs[1].(int)]
	}).(WirelesscontrollerApcfgprofileCommandListOutput)
}

type WirelesscontrollerArrpprofileDarrpOptimizeSchedule struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerArrpprofileDarrpOptimizeScheduleInput is an input type that accepts WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs and WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerArrpprofileDarrpOptimizeScheduleInput` via:
//
//	WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs{...}
type WirelesscontrollerArrpprofileDarrpOptimizeScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput
	ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutputWithContext(context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput
}

type WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerArrpprofileDarrpOptimizeSchedule)(nil)).Elem()
}

func (i WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput {
	return i.ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutputWithContext(ctx context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput)
}

// WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayInput is an input type that accepts WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray and WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayInput` via:
//
//	WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray{ WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs{...} }
type WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput
	ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutputWithContext(context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput
}

type WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray []WirelesscontrollerArrpprofileDarrpOptimizeScheduleInput

func (WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerArrpprofileDarrpOptimizeSchedule)(nil)).Elem()
}

func (i WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput {
	return i.ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput)
}

type WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerArrpprofileDarrpOptimizeSchedule)(nil)).Elem()
}

func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput {
	return o
}

func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleOutputWithContext(ctx context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput {
	return o
}

// Schedule name.
func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerArrpprofileDarrpOptimizeSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerArrpprofileDarrpOptimizeSchedule)(nil)).Elem()
}

func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput() WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput) ToWirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerArrpprofileDarrpOptimizeSchedule {
		return vs[0].([]WirelesscontrollerArrpprofileDarrpOptimizeSchedule)[vs[1].(int)]
	}).(WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput)
}

type WirelesscontrollerBonjourprofilePolicyList struct {
	// Description.
	Description *string `pulumi:"description"`
	// VLAN ID from which the Bonjour service is advertised (0 - 4094, default = 0).
	FromVlan *string `pulumi:"fromVlan"`
	// Policy ID.
	PolicyId *int `pulumi:"policyId"`
	// Bonjour services for the VLAN connecting to the Bonjour network. Valid values: `all`, `airplay`, `afp`, `bit-torrent`, `ftp`, `ichat`, `itunes`, `printers`, `samba`, `scanners`, `ssh`, `chromecast`.
	Services *string `pulumi:"services"`
	// VLAN ID to which the Bonjour service is made available (0 - 4094, default = all).
	ToVlan *string `pulumi:"toVlan"`
}

// WirelesscontrollerBonjourprofilePolicyListInput is an input type that accepts WirelesscontrollerBonjourprofilePolicyListArgs and WirelesscontrollerBonjourprofilePolicyListOutput values.
// You can construct a concrete instance of `WirelesscontrollerBonjourprofilePolicyListInput` via:
//
//	WirelesscontrollerBonjourprofilePolicyListArgs{...}
type WirelesscontrollerBonjourprofilePolicyListInput interface {
	pulumi.Input

	ToWirelesscontrollerBonjourprofilePolicyListOutput() WirelesscontrollerBonjourprofilePolicyListOutput
	ToWirelesscontrollerBonjourprofilePolicyListOutputWithContext(context.Context) WirelesscontrollerBonjourprofilePolicyListOutput
}

type WirelesscontrollerBonjourprofilePolicyListArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// VLAN ID from which the Bonjour service is advertised (0 - 4094, default = 0).
	FromVlan pulumi.StringPtrInput `pulumi:"fromVlan"`
	// Policy ID.
	PolicyId pulumi.IntPtrInput `pulumi:"policyId"`
	// Bonjour services for the VLAN connecting to the Bonjour network. Valid values: `all`, `airplay`, `afp`, `bit-torrent`, `ftp`, `ichat`, `itunes`, `printers`, `samba`, `scanners`, `ssh`, `chromecast`.
	Services pulumi.StringPtrInput `pulumi:"services"`
	// VLAN ID to which the Bonjour service is made available (0 - 4094, default = all).
	ToVlan pulumi.StringPtrInput `pulumi:"toVlan"`
}

func (WirelesscontrollerBonjourprofilePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerBonjourprofilePolicyList)(nil)).Elem()
}

func (i WirelesscontrollerBonjourprofilePolicyListArgs) ToWirelesscontrollerBonjourprofilePolicyListOutput() WirelesscontrollerBonjourprofilePolicyListOutput {
	return i.ToWirelesscontrollerBonjourprofilePolicyListOutputWithContext(context.Background())
}

func (i WirelesscontrollerBonjourprofilePolicyListArgs) ToWirelesscontrollerBonjourprofilePolicyListOutputWithContext(ctx context.Context) WirelesscontrollerBonjourprofilePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerBonjourprofilePolicyListOutput)
}

// WirelesscontrollerBonjourprofilePolicyListArrayInput is an input type that accepts WirelesscontrollerBonjourprofilePolicyListArray and WirelesscontrollerBonjourprofilePolicyListArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerBonjourprofilePolicyListArrayInput` via:
//
//	WirelesscontrollerBonjourprofilePolicyListArray{ WirelesscontrollerBonjourprofilePolicyListArgs{...} }
type WirelesscontrollerBonjourprofilePolicyListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerBonjourprofilePolicyListArrayOutput() WirelesscontrollerBonjourprofilePolicyListArrayOutput
	ToWirelesscontrollerBonjourprofilePolicyListArrayOutputWithContext(context.Context) WirelesscontrollerBonjourprofilePolicyListArrayOutput
}

type WirelesscontrollerBonjourprofilePolicyListArray []WirelesscontrollerBonjourprofilePolicyListInput

func (WirelesscontrollerBonjourprofilePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerBonjourprofilePolicyList)(nil)).Elem()
}

func (i WirelesscontrollerBonjourprofilePolicyListArray) ToWirelesscontrollerBonjourprofilePolicyListArrayOutput() WirelesscontrollerBonjourprofilePolicyListArrayOutput {
	return i.ToWirelesscontrollerBonjourprofilePolicyListArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerBonjourprofilePolicyListArray) ToWirelesscontrollerBonjourprofilePolicyListArrayOutputWithContext(ctx context.Context) WirelesscontrollerBonjourprofilePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerBonjourprofilePolicyListArrayOutput)
}

type WirelesscontrollerBonjourprofilePolicyListOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerBonjourprofilePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerBonjourprofilePolicyList)(nil)).Elem()
}

func (o WirelesscontrollerBonjourprofilePolicyListOutput) ToWirelesscontrollerBonjourprofilePolicyListOutput() WirelesscontrollerBonjourprofilePolicyListOutput {
	return o
}

func (o WirelesscontrollerBonjourprofilePolicyListOutput) ToWirelesscontrollerBonjourprofilePolicyListOutputWithContext(ctx context.Context) WirelesscontrollerBonjourprofilePolicyListOutput {
	return o
}

// Description.
func (o WirelesscontrollerBonjourprofilePolicyListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerBonjourprofilePolicyList) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// VLAN ID from which the Bonjour service is advertised (0 - 4094, default = 0).
func (o WirelesscontrollerBonjourprofilePolicyListOutput) FromVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerBonjourprofilePolicyList) *string { return v.FromVlan }).(pulumi.StringPtrOutput)
}

// Policy ID.
func (o WirelesscontrollerBonjourprofilePolicyListOutput) PolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerBonjourprofilePolicyList) *int { return v.PolicyId }).(pulumi.IntPtrOutput)
}

// Bonjour services for the VLAN connecting to the Bonjour network. Valid values: `all`, `airplay`, `afp`, `bit-torrent`, `ftp`, `ichat`, `itunes`, `printers`, `samba`, `scanners`, `ssh`, `chromecast`.
func (o WirelesscontrollerBonjourprofilePolicyListOutput) Services() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerBonjourprofilePolicyList) *string { return v.Services }).(pulumi.StringPtrOutput)
}

// VLAN ID to which the Bonjour service is made available (0 - 4094, default = all).
func (o WirelesscontrollerBonjourprofilePolicyListOutput) ToVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerBonjourprofilePolicyList) *string { return v.ToVlan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerBonjourprofilePolicyListArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerBonjourprofilePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerBonjourprofilePolicyList)(nil)).Elem()
}

func (o WirelesscontrollerBonjourprofilePolicyListArrayOutput) ToWirelesscontrollerBonjourprofilePolicyListArrayOutput() WirelesscontrollerBonjourprofilePolicyListArrayOutput {
	return o
}

func (o WirelesscontrollerBonjourprofilePolicyListArrayOutput) ToWirelesscontrollerBonjourprofilePolicyListArrayOutputWithContext(ctx context.Context) WirelesscontrollerBonjourprofilePolicyListArrayOutput {
	return o
}

func (o WirelesscontrollerBonjourprofilePolicyListArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerBonjourprofilePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerBonjourprofilePolicyList {
		return vs[0].([]WirelesscontrollerBonjourprofilePolicyList)[vs[1].(int)]
	}).(WirelesscontrollerBonjourprofilePolicyListOutput)
}

type WirelesscontrollerIntercontrollerInterControllerPeer struct {
	// ID.
	Id *int `pulumi:"id"`
	// Peer wireless controller's IP address.
	PeerIp *string `pulumi:"peerIp"`
	// Port used by the wireless controller's for inter-controller communications (1024 - 49150, default = 5246).
	PeerPort *int `pulumi:"peerPort"`
	// Peer wireless controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
	PeerPriority *string `pulumi:"peerPriority"`
}

// WirelesscontrollerIntercontrollerInterControllerPeerInput is an input type that accepts WirelesscontrollerIntercontrollerInterControllerPeerArgs and WirelesscontrollerIntercontrollerInterControllerPeerOutput values.
// You can construct a concrete instance of `WirelesscontrollerIntercontrollerInterControllerPeerInput` via:
//
//	WirelesscontrollerIntercontrollerInterControllerPeerArgs{...}
type WirelesscontrollerIntercontrollerInterControllerPeerInput interface {
	pulumi.Input

	ToWirelesscontrollerIntercontrollerInterControllerPeerOutput() WirelesscontrollerIntercontrollerInterControllerPeerOutput
	ToWirelesscontrollerIntercontrollerInterControllerPeerOutputWithContext(context.Context) WirelesscontrollerIntercontrollerInterControllerPeerOutput
}

type WirelesscontrollerIntercontrollerInterControllerPeerArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Peer wireless controller's IP address.
	PeerIp pulumi.StringPtrInput `pulumi:"peerIp"`
	// Port used by the wireless controller's for inter-controller communications (1024 - 49150, default = 5246).
	PeerPort pulumi.IntPtrInput `pulumi:"peerPort"`
	// Peer wireless controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
	PeerPriority pulumi.StringPtrInput `pulumi:"peerPriority"`
}

func (WirelesscontrollerIntercontrollerInterControllerPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerIntercontrollerInterControllerPeer)(nil)).Elem()
}

func (i WirelesscontrollerIntercontrollerInterControllerPeerArgs) ToWirelesscontrollerIntercontrollerInterControllerPeerOutput() WirelesscontrollerIntercontrollerInterControllerPeerOutput {
	return i.ToWirelesscontrollerIntercontrollerInterControllerPeerOutputWithContext(context.Background())
}

func (i WirelesscontrollerIntercontrollerInterControllerPeerArgs) ToWirelesscontrollerIntercontrollerInterControllerPeerOutputWithContext(ctx context.Context) WirelesscontrollerIntercontrollerInterControllerPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerIntercontrollerInterControllerPeerOutput)
}

// WirelesscontrollerIntercontrollerInterControllerPeerArrayInput is an input type that accepts WirelesscontrollerIntercontrollerInterControllerPeerArray and WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerIntercontrollerInterControllerPeerArrayInput` via:
//
//	WirelesscontrollerIntercontrollerInterControllerPeerArray{ WirelesscontrollerIntercontrollerInterControllerPeerArgs{...} }
type WirelesscontrollerIntercontrollerInterControllerPeerArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutput() WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput
	ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutputWithContext(context.Context) WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput
}

type WirelesscontrollerIntercontrollerInterControllerPeerArray []WirelesscontrollerIntercontrollerInterControllerPeerInput

func (WirelesscontrollerIntercontrollerInterControllerPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerIntercontrollerInterControllerPeer)(nil)).Elem()
}

func (i WirelesscontrollerIntercontrollerInterControllerPeerArray) ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutput() WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput {
	return i.ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerIntercontrollerInterControllerPeerArray) ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutputWithContext(ctx context.Context) WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput)
}

type WirelesscontrollerIntercontrollerInterControllerPeerOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerIntercontrollerInterControllerPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerIntercontrollerInterControllerPeer)(nil)).Elem()
}

func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) ToWirelesscontrollerIntercontrollerInterControllerPeerOutput() WirelesscontrollerIntercontrollerInterControllerPeerOutput {
	return o
}

func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) ToWirelesscontrollerIntercontrollerInterControllerPeerOutputWithContext(ctx context.Context) WirelesscontrollerIntercontrollerInterControllerPeerOutput {
	return o
}

// ID.
func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerIntercontrollerInterControllerPeer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Peer wireless controller's IP address.
func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) PeerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerIntercontrollerInterControllerPeer) *string { return v.PeerIp }).(pulumi.StringPtrOutput)
}

// Port used by the wireless controller's for inter-controller communications (1024 - 49150, default = 5246).
func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) PeerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerIntercontrollerInterControllerPeer) *int { return v.PeerPort }).(pulumi.IntPtrOutput)
}

// Peer wireless controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
func (o WirelesscontrollerIntercontrollerInterControllerPeerOutput) PeerPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerIntercontrollerInterControllerPeer) *string { return v.PeerPriority }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerIntercontrollerInterControllerPeer)(nil)).Elem()
}

func (o WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput) ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutput() WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput {
	return o
}

func (o WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput) ToWirelesscontrollerIntercontrollerInterControllerPeerArrayOutputWithContext(ctx context.Context) WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput {
	return o
}

func (o WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerIntercontrollerInterControllerPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerIntercontrollerInterControllerPeer {
		return vs[0].([]WirelesscontrollerIntercontrollerInterControllerPeer)[vs[1].(int)]
	}).(WirelesscontrollerIntercontrollerInterControllerPeerOutput)
}

type WirelesscontrollerMpskprofileMpskGroup struct {
	// List of multiple PSK entries. The structure of `mpskKey` block is documented below.
	MpskKeys []WirelesscontrollerMpskprofileMpskGroupMpskKey `pulumi:"mpskKeys"`
	// MPSK group name.
	Name *string `pulumi:"name"`
	// Optional VLAN ID.
	VlanId *int `pulumi:"vlanId"`
	// MPSK group VLAN options. Valid values: `no-vlan`, `fixed-vlan`.
	VlanType *string `pulumi:"vlanType"`
}

// WirelesscontrollerMpskprofileMpskGroupInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupArgs and WirelesscontrollerMpskprofileMpskGroupOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupArgs{...}
type WirelesscontrollerMpskprofileMpskGroupInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupOutput() WirelesscontrollerMpskprofileMpskGroupOutput
	ToWirelesscontrollerMpskprofileMpskGroupOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupOutput
}

type WirelesscontrollerMpskprofileMpskGroupArgs struct {
	// List of multiple PSK entries. The structure of `mpskKey` block is documented below.
	MpskKeys WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayInput `pulumi:"mpskKeys"`
	// MPSK group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
	// MPSK group VLAN options. Valid values: `no-vlan`, `fixed-vlan`.
	VlanType pulumi.StringPtrInput `pulumi:"vlanType"`
}

func (WirelesscontrollerMpskprofileMpskGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroup)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupArgs) ToWirelesscontrollerMpskprofileMpskGroupOutput() WirelesscontrollerMpskprofileMpskGroupOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupArgs) ToWirelesscontrollerMpskprofileMpskGroupOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupOutput)
}

// WirelesscontrollerMpskprofileMpskGroupArrayInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupArray and WirelesscontrollerMpskprofileMpskGroupArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupArrayInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupArray{ WirelesscontrollerMpskprofileMpskGroupArgs{...} }
type WirelesscontrollerMpskprofileMpskGroupArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupArrayOutput() WirelesscontrollerMpskprofileMpskGroupArrayOutput
	ToWirelesscontrollerMpskprofileMpskGroupArrayOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupArrayOutput
}

type WirelesscontrollerMpskprofileMpskGroupArray []WirelesscontrollerMpskprofileMpskGroupInput

func (WirelesscontrollerMpskprofileMpskGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroup)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupArray) ToWirelesscontrollerMpskprofileMpskGroupArrayOutput() WirelesscontrollerMpskprofileMpskGroupArrayOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupArray) ToWirelesscontrollerMpskprofileMpskGroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupArrayOutput)
}

type WirelesscontrollerMpskprofileMpskGroupOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroup)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupOutput) ToWirelesscontrollerMpskprofileMpskGroupOutput() WirelesscontrollerMpskprofileMpskGroupOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupOutput) ToWirelesscontrollerMpskprofileMpskGroupOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupOutput {
	return o
}

// List of multiple PSK entries. The structure of `mpskKey` block is documented below.
func (o WirelesscontrollerMpskprofileMpskGroupOutput) MpskKeys() WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroup) []WirelesscontrollerMpskprofileMpskGroupMpskKey {
		return v.MpskKeys
	}).(WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput)
}

// MPSK group name.
func (o WirelesscontrollerMpskprofileMpskGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional VLAN ID.
func (o WirelesscontrollerMpskprofileMpskGroupOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroup) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

// MPSK group VLAN options. Valid values: `no-vlan`, `fixed-vlan`.
func (o WirelesscontrollerMpskprofileMpskGroupOutput) VlanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroup) *string { return v.VlanType }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerMpskprofileMpskGroupArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroup)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupArrayOutput() WirelesscontrollerMpskprofileMpskGroupArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerMpskprofileMpskGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerMpskprofileMpskGroup {
		return vs[0].([]WirelesscontrollerMpskprofileMpskGroup)[vs[1].(int)]
	}).(WirelesscontrollerMpskprofileMpskGroupOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKey struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// MPSK client limit type options. Valid values: `default`, `unlimited`, `specified`.
	ConcurrentClientLimitType *string `pulumi:"concurrentClientLimitType"`
	// Number of clients that can connect using this pre-shared key (1 - 65535, default is 256).
	ConcurrentClients *int `pulumi:"concurrentClients"`
	// MAC address.
	Mac *string `pulumi:"mac"`
	// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
	MpskSchedules []WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule `pulumi:"mpskSchedules"`
	// Pre-shared key name.
	Name *string `pulumi:"name"`
	// WPA Pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
}

// WirelesscontrollerMpskprofileMpskGroupMpskKeyInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs and WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupMpskKeyInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs{...}
type WirelesscontrollerMpskprofileMpskGroupMpskKeyInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput
	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// MPSK client limit type options. Valid values: `default`, `unlimited`, `specified`.
	ConcurrentClientLimitType pulumi.StringPtrInput `pulumi:"concurrentClientLimitType"`
	// Number of clients that can connect using this pre-shared key (1 - 65535, default is 256).
	ConcurrentClients pulumi.IntPtrInput `pulumi:"concurrentClients"`
	// MAC address.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
	MpskSchedules WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayInput `pulumi:"mpskSchedules"`
	// Pre-shared key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// WPA Pre-shared key.
	Passphrase pulumi.StringPtrInput `pulumi:"passphrase"`
}

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKey)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput)
}

// WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupMpskKeyArray and WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupMpskKeyArray{ WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs{...} }
type WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput
	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyArray []WirelesscontrollerMpskprofileMpskGroupMpskKeyInput

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroupMpskKey)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyArray) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyArray) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKey)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput {
	return o
}

// Comment.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// MPSK client limit type options. Valid values: `default`, `unlimited`, `specified`.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) ConcurrentClientLimitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *string { return v.ConcurrentClientLimitType }).(pulumi.StringPtrOutput)
}

// Number of clients that can connect using this pre-shared key (1 - 65535, default is 256).
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) ConcurrentClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *int { return v.ConcurrentClients }).(pulumi.IntPtrOutput)
}

// MAC address.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) MpskSchedules() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) []WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule {
		return v.MpskSchedules
	}).(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput)
}

// Pre-shared key name.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// WPA Pre-shared key.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKey) *string { return v.Passphrase }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroupMpskKey)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerMpskprofileMpskGroupMpskKey {
		return vs[0].([]WirelesscontrollerMpskprofileMpskGroupMpskKey)[vs[1].(int)]
	}).(WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs and WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs{...}
type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput
	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput)
}

// WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayInput is an input type that accepts WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray and WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayInput` via:
//
//	WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray{ WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs{...} }
type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput
	ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutputWithContext(context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray []WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleInput

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule)(nil)).Elem()
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput {
	return i.ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput {
	return o
}

// Schedule name.
func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule)(nil)).Elem()
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput() WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput) ToWirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule {
		return vs[0].([]WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskSchedule)[vs[1].(int)]
	}).(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput)
}

type WirelesscontrollerQosprofileDscpWmmBe struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id *int `pulumi:"id"`
}

// WirelesscontrollerQosprofileDscpWmmBeInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmBeArgs and WirelesscontrollerQosprofileDscpWmmBeOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmBeInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmBeArgs{...}
type WirelesscontrollerQosprofileDscpWmmBeInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmBeOutput() WirelesscontrollerQosprofileDscpWmmBeOutput
	ToWirelesscontrollerQosprofileDscpWmmBeOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmBeOutput
}

type WirelesscontrollerQosprofileDscpWmmBeArgs struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerQosprofileDscpWmmBeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBe)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmBeArgs) ToWirelesscontrollerQosprofileDscpWmmBeOutput() WirelesscontrollerQosprofileDscpWmmBeOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmBeOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmBeArgs) ToWirelesscontrollerQosprofileDscpWmmBeOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmBeOutput)
}

// WirelesscontrollerQosprofileDscpWmmBeArrayInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmBeArray and WirelesscontrollerQosprofileDscpWmmBeArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmBeArrayInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmBeArray{ WirelesscontrollerQosprofileDscpWmmBeArgs{...} }
type WirelesscontrollerQosprofileDscpWmmBeArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmBeArrayOutput() WirelesscontrollerQosprofileDscpWmmBeArrayOutput
	ToWirelesscontrollerQosprofileDscpWmmBeArrayOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmBeArrayOutput
}

type WirelesscontrollerQosprofileDscpWmmBeArray []WirelesscontrollerQosprofileDscpWmmBeInput

func (WirelesscontrollerQosprofileDscpWmmBeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmBe)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmBeArray) ToWirelesscontrollerQosprofileDscpWmmBeArrayOutput() WirelesscontrollerQosprofileDscpWmmBeArrayOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmBeArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmBeArray) ToWirelesscontrollerQosprofileDscpWmmBeArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmBeArrayOutput)
}

type WirelesscontrollerQosprofileDscpWmmBeOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmBeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBe)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmBeOutput) ToWirelesscontrollerQosprofileDscpWmmBeOutput() WirelesscontrollerQosprofileDscpWmmBeOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBeOutput) ToWirelesscontrollerQosprofileDscpWmmBeOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBeOutput {
	return o
}

// DSCP WMM mapping numbers (0 - 63).
func (o WirelesscontrollerQosprofileDscpWmmBeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerQosprofileDscpWmmBe) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerQosprofileDscpWmmBeArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmBeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmBe)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmBeArrayOutput) ToWirelesscontrollerQosprofileDscpWmmBeArrayOutput() WirelesscontrollerQosprofileDscpWmmBeArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBeArrayOutput) ToWirelesscontrollerQosprofileDscpWmmBeArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBeArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBeArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerQosprofileDscpWmmBeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerQosprofileDscpWmmBe {
		return vs[0].([]WirelesscontrollerQosprofileDscpWmmBe)[vs[1].(int)]
	}).(WirelesscontrollerQosprofileDscpWmmBeOutput)
}

type WirelesscontrollerQosprofileDscpWmmBk struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id *int `pulumi:"id"`
}

// WirelesscontrollerQosprofileDscpWmmBkInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmBkArgs and WirelesscontrollerQosprofileDscpWmmBkOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmBkInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmBkArgs{...}
type WirelesscontrollerQosprofileDscpWmmBkInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmBkOutput() WirelesscontrollerQosprofileDscpWmmBkOutput
	ToWirelesscontrollerQosprofileDscpWmmBkOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmBkOutput
}

type WirelesscontrollerQosprofileDscpWmmBkArgs struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerQosprofileDscpWmmBkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBk)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmBkArgs) ToWirelesscontrollerQosprofileDscpWmmBkOutput() WirelesscontrollerQosprofileDscpWmmBkOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmBkOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmBkArgs) ToWirelesscontrollerQosprofileDscpWmmBkOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmBkOutput)
}

// WirelesscontrollerQosprofileDscpWmmBkArrayInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmBkArray and WirelesscontrollerQosprofileDscpWmmBkArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmBkArrayInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmBkArray{ WirelesscontrollerQosprofileDscpWmmBkArgs{...} }
type WirelesscontrollerQosprofileDscpWmmBkArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmBkArrayOutput() WirelesscontrollerQosprofileDscpWmmBkArrayOutput
	ToWirelesscontrollerQosprofileDscpWmmBkArrayOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmBkArrayOutput
}

type WirelesscontrollerQosprofileDscpWmmBkArray []WirelesscontrollerQosprofileDscpWmmBkInput

func (WirelesscontrollerQosprofileDscpWmmBkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmBk)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmBkArray) ToWirelesscontrollerQosprofileDscpWmmBkArrayOutput() WirelesscontrollerQosprofileDscpWmmBkArrayOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmBkArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmBkArray) ToWirelesscontrollerQosprofileDscpWmmBkArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmBkArrayOutput)
}

type WirelesscontrollerQosprofileDscpWmmBkOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmBkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBk)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmBkOutput) ToWirelesscontrollerQosprofileDscpWmmBkOutput() WirelesscontrollerQosprofileDscpWmmBkOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBkOutput) ToWirelesscontrollerQosprofileDscpWmmBkOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBkOutput {
	return o
}

// DSCP WMM mapping numbers (0 - 63).
func (o WirelesscontrollerQosprofileDscpWmmBkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerQosprofileDscpWmmBk) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerQosprofileDscpWmmBkArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmBkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmBk)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmBkArrayOutput) ToWirelesscontrollerQosprofileDscpWmmBkArrayOutput() WirelesscontrollerQosprofileDscpWmmBkArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBkArrayOutput) ToWirelesscontrollerQosprofileDscpWmmBkArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmBkArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmBkArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerQosprofileDscpWmmBkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerQosprofileDscpWmmBk {
		return vs[0].([]WirelesscontrollerQosprofileDscpWmmBk)[vs[1].(int)]
	}).(WirelesscontrollerQosprofileDscpWmmBkOutput)
}

type WirelesscontrollerQosprofileDscpWmmVi struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id *int `pulumi:"id"`
}

// WirelesscontrollerQosprofileDscpWmmViInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmViArgs and WirelesscontrollerQosprofileDscpWmmViOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmViInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmViArgs{...}
type WirelesscontrollerQosprofileDscpWmmViInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmViOutput() WirelesscontrollerQosprofileDscpWmmViOutput
	ToWirelesscontrollerQosprofileDscpWmmViOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmViOutput
}

type WirelesscontrollerQosprofileDscpWmmViArgs struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerQosprofileDscpWmmViArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVi)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmViArgs) ToWirelesscontrollerQosprofileDscpWmmViOutput() WirelesscontrollerQosprofileDscpWmmViOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmViOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmViArgs) ToWirelesscontrollerQosprofileDscpWmmViOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmViOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmViOutput)
}

// WirelesscontrollerQosprofileDscpWmmViArrayInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmViArray and WirelesscontrollerQosprofileDscpWmmViArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmViArrayInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmViArray{ WirelesscontrollerQosprofileDscpWmmViArgs{...} }
type WirelesscontrollerQosprofileDscpWmmViArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmViArrayOutput() WirelesscontrollerQosprofileDscpWmmViArrayOutput
	ToWirelesscontrollerQosprofileDscpWmmViArrayOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmViArrayOutput
}

type WirelesscontrollerQosprofileDscpWmmViArray []WirelesscontrollerQosprofileDscpWmmViInput

func (WirelesscontrollerQosprofileDscpWmmViArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmVi)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmViArray) ToWirelesscontrollerQosprofileDscpWmmViArrayOutput() WirelesscontrollerQosprofileDscpWmmViArrayOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmViArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmViArray) ToWirelesscontrollerQosprofileDscpWmmViArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmViArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmViArrayOutput)
}

type WirelesscontrollerQosprofileDscpWmmViOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmViOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVi)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmViOutput) ToWirelesscontrollerQosprofileDscpWmmViOutput() WirelesscontrollerQosprofileDscpWmmViOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmViOutput) ToWirelesscontrollerQosprofileDscpWmmViOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmViOutput {
	return o
}

// DSCP WMM mapping numbers (0 - 63).
func (o WirelesscontrollerQosprofileDscpWmmViOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerQosprofileDscpWmmVi) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerQosprofileDscpWmmViArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmViArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmVi)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmViArrayOutput) ToWirelesscontrollerQosprofileDscpWmmViArrayOutput() WirelesscontrollerQosprofileDscpWmmViArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmViArrayOutput) ToWirelesscontrollerQosprofileDscpWmmViArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmViArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmViArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerQosprofileDscpWmmViOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerQosprofileDscpWmmVi {
		return vs[0].([]WirelesscontrollerQosprofileDscpWmmVi)[vs[1].(int)]
	}).(WirelesscontrollerQosprofileDscpWmmViOutput)
}

type WirelesscontrollerQosprofileDscpWmmVo struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id *int `pulumi:"id"`
}

// WirelesscontrollerQosprofileDscpWmmVoInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmVoArgs and WirelesscontrollerQosprofileDscpWmmVoOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmVoInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmVoArgs{...}
type WirelesscontrollerQosprofileDscpWmmVoInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmVoOutput() WirelesscontrollerQosprofileDscpWmmVoOutput
	ToWirelesscontrollerQosprofileDscpWmmVoOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmVoOutput
}

type WirelesscontrollerQosprofileDscpWmmVoArgs struct {
	// DSCP WMM mapping numbers (0 - 63).
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerQosprofileDscpWmmVoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVo)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmVoArgs) ToWirelesscontrollerQosprofileDscpWmmVoOutput() WirelesscontrollerQosprofileDscpWmmVoOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmVoOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmVoArgs) ToWirelesscontrollerQosprofileDscpWmmVoOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmVoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmVoOutput)
}

// WirelesscontrollerQosprofileDscpWmmVoArrayInput is an input type that accepts WirelesscontrollerQosprofileDscpWmmVoArray and WirelesscontrollerQosprofileDscpWmmVoArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerQosprofileDscpWmmVoArrayInput` via:
//
//	WirelesscontrollerQosprofileDscpWmmVoArray{ WirelesscontrollerQosprofileDscpWmmVoArgs{...} }
type WirelesscontrollerQosprofileDscpWmmVoArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerQosprofileDscpWmmVoArrayOutput() WirelesscontrollerQosprofileDscpWmmVoArrayOutput
	ToWirelesscontrollerQosprofileDscpWmmVoArrayOutputWithContext(context.Context) WirelesscontrollerQosprofileDscpWmmVoArrayOutput
}

type WirelesscontrollerQosprofileDscpWmmVoArray []WirelesscontrollerQosprofileDscpWmmVoInput

func (WirelesscontrollerQosprofileDscpWmmVoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmVo)(nil)).Elem()
}

func (i WirelesscontrollerQosprofileDscpWmmVoArray) ToWirelesscontrollerQosprofileDscpWmmVoArrayOutput() WirelesscontrollerQosprofileDscpWmmVoArrayOutput {
	return i.ToWirelesscontrollerQosprofileDscpWmmVoArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerQosprofileDscpWmmVoArray) ToWirelesscontrollerQosprofileDscpWmmVoArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmVoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerQosprofileDscpWmmVoArrayOutput)
}

type WirelesscontrollerQosprofileDscpWmmVoOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmVoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVo)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmVoOutput) ToWirelesscontrollerQosprofileDscpWmmVoOutput() WirelesscontrollerQosprofileDscpWmmVoOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmVoOutput) ToWirelesscontrollerQosprofileDscpWmmVoOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmVoOutput {
	return o
}

// DSCP WMM mapping numbers (0 - 63).
func (o WirelesscontrollerQosprofileDscpWmmVoOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerQosprofileDscpWmmVo) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerQosprofileDscpWmmVoArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerQosprofileDscpWmmVoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerQosprofileDscpWmmVo)(nil)).Elem()
}

func (o WirelesscontrollerQosprofileDscpWmmVoArrayOutput) ToWirelesscontrollerQosprofileDscpWmmVoArrayOutput() WirelesscontrollerQosprofileDscpWmmVoArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmVoArrayOutput) ToWirelesscontrollerQosprofileDscpWmmVoArrayOutputWithContext(ctx context.Context) WirelesscontrollerQosprofileDscpWmmVoArrayOutput {
	return o
}

func (o WirelesscontrollerQosprofileDscpWmmVoArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerQosprofileDscpWmmVoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerQosprofileDscpWmmVo {
		return vs[0].([]WirelesscontrollerQosprofileDscpWmmVo)[vs[1].(int)]
	}).(WirelesscontrollerQosprofileDscpWmmVoOutput)
}

type WirelesscontrollerSettingDarrpOptimizeSchedule struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerSettingDarrpOptimizeScheduleInput is an input type that accepts WirelesscontrollerSettingDarrpOptimizeScheduleArgs and WirelesscontrollerSettingDarrpOptimizeScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerSettingDarrpOptimizeScheduleInput` via:
//
//	WirelesscontrollerSettingDarrpOptimizeScheduleArgs{...}
type WirelesscontrollerSettingDarrpOptimizeScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerSettingDarrpOptimizeScheduleOutput() WirelesscontrollerSettingDarrpOptimizeScheduleOutput
	ToWirelesscontrollerSettingDarrpOptimizeScheduleOutputWithContext(context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleOutput
}

type WirelesscontrollerSettingDarrpOptimizeScheduleArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerSettingDarrpOptimizeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSettingDarrpOptimizeSchedule)(nil)).Elem()
}

func (i WirelesscontrollerSettingDarrpOptimizeScheduleArgs) ToWirelesscontrollerSettingDarrpOptimizeScheduleOutput() WirelesscontrollerSettingDarrpOptimizeScheduleOutput {
	return i.ToWirelesscontrollerSettingDarrpOptimizeScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerSettingDarrpOptimizeScheduleArgs) ToWirelesscontrollerSettingDarrpOptimizeScheduleOutputWithContext(ctx context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSettingDarrpOptimizeScheduleOutput)
}

// WirelesscontrollerSettingDarrpOptimizeScheduleArrayInput is an input type that accepts WirelesscontrollerSettingDarrpOptimizeScheduleArray and WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerSettingDarrpOptimizeScheduleArrayInput` via:
//
//	WirelesscontrollerSettingDarrpOptimizeScheduleArray{ WirelesscontrollerSettingDarrpOptimizeScheduleArgs{...} }
type WirelesscontrollerSettingDarrpOptimizeScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput() WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput
	ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutputWithContext(context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput
}

type WirelesscontrollerSettingDarrpOptimizeScheduleArray []WirelesscontrollerSettingDarrpOptimizeScheduleInput

func (WirelesscontrollerSettingDarrpOptimizeScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSettingDarrpOptimizeSchedule)(nil)).Elem()
}

func (i WirelesscontrollerSettingDarrpOptimizeScheduleArray) ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput() WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput {
	return i.ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerSettingDarrpOptimizeScheduleArray) ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput)
}

type WirelesscontrollerSettingDarrpOptimizeScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSettingDarrpOptimizeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSettingDarrpOptimizeSchedule)(nil)).Elem()
}

func (o WirelesscontrollerSettingDarrpOptimizeScheduleOutput) ToWirelesscontrollerSettingDarrpOptimizeScheduleOutput() WirelesscontrollerSettingDarrpOptimizeScheduleOutput {
	return o
}

func (o WirelesscontrollerSettingDarrpOptimizeScheduleOutput) ToWirelesscontrollerSettingDarrpOptimizeScheduleOutputWithContext(ctx context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleOutput {
	return o
}

// Schedule name.
func (o WirelesscontrollerSettingDarrpOptimizeScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSettingDarrpOptimizeSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSettingDarrpOptimizeSchedule)(nil)).Elem()
}

func (o WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput) ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput() WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput) ToWirelesscontrollerSettingDarrpOptimizeScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerSettingDarrpOptimizeScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerSettingDarrpOptimizeSchedule {
		return vs[0].([]WirelesscontrollerSettingDarrpOptimizeSchedule)[vs[1].(int)]
	}).(WirelesscontrollerSettingDarrpOptimizeScheduleOutput)
}

type WirelesscontrollerSettingOffendingSsid struct {
	// Actions taken for detected offending SSID. Valid values: `log`, `suppress`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Define offending SSID pattern (case insensitive), eg: word, word*, *word, wo*rd.
	SsidPattern *string `pulumi:"ssidPattern"`
}

// WirelesscontrollerSettingOffendingSsidInput is an input type that accepts WirelesscontrollerSettingOffendingSsidArgs and WirelesscontrollerSettingOffendingSsidOutput values.
// You can construct a concrete instance of `WirelesscontrollerSettingOffendingSsidInput` via:
//
//	WirelesscontrollerSettingOffendingSsidArgs{...}
type WirelesscontrollerSettingOffendingSsidInput interface {
	pulumi.Input

	ToWirelesscontrollerSettingOffendingSsidOutput() WirelesscontrollerSettingOffendingSsidOutput
	ToWirelesscontrollerSettingOffendingSsidOutputWithContext(context.Context) WirelesscontrollerSettingOffendingSsidOutput
}

type WirelesscontrollerSettingOffendingSsidArgs struct {
	// Actions taken for detected offending SSID. Valid values: `log`, `suppress`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Define offending SSID pattern (case insensitive), eg: word, word*, *word, wo*rd.
	SsidPattern pulumi.StringPtrInput `pulumi:"ssidPattern"`
}

func (WirelesscontrollerSettingOffendingSsidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSettingOffendingSsid)(nil)).Elem()
}

func (i WirelesscontrollerSettingOffendingSsidArgs) ToWirelesscontrollerSettingOffendingSsidOutput() WirelesscontrollerSettingOffendingSsidOutput {
	return i.ToWirelesscontrollerSettingOffendingSsidOutputWithContext(context.Background())
}

func (i WirelesscontrollerSettingOffendingSsidArgs) ToWirelesscontrollerSettingOffendingSsidOutputWithContext(ctx context.Context) WirelesscontrollerSettingOffendingSsidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSettingOffendingSsidOutput)
}

// WirelesscontrollerSettingOffendingSsidArrayInput is an input type that accepts WirelesscontrollerSettingOffendingSsidArray and WirelesscontrollerSettingOffendingSsidArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerSettingOffendingSsidArrayInput` via:
//
//	WirelesscontrollerSettingOffendingSsidArray{ WirelesscontrollerSettingOffendingSsidArgs{...} }
type WirelesscontrollerSettingOffendingSsidArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerSettingOffendingSsidArrayOutput() WirelesscontrollerSettingOffendingSsidArrayOutput
	ToWirelesscontrollerSettingOffendingSsidArrayOutputWithContext(context.Context) WirelesscontrollerSettingOffendingSsidArrayOutput
}

type WirelesscontrollerSettingOffendingSsidArray []WirelesscontrollerSettingOffendingSsidInput

func (WirelesscontrollerSettingOffendingSsidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSettingOffendingSsid)(nil)).Elem()
}

func (i WirelesscontrollerSettingOffendingSsidArray) ToWirelesscontrollerSettingOffendingSsidArrayOutput() WirelesscontrollerSettingOffendingSsidArrayOutput {
	return i.ToWirelesscontrollerSettingOffendingSsidArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerSettingOffendingSsidArray) ToWirelesscontrollerSettingOffendingSsidArrayOutputWithContext(ctx context.Context) WirelesscontrollerSettingOffendingSsidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSettingOffendingSsidArrayOutput)
}

type WirelesscontrollerSettingOffendingSsidOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSettingOffendingSsidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSettingOffendingSsid)(nil)).Elem()
}

func (o WirelesscontrollerSettingOffendingSsidOutput) ToWirelesscontrollerSettingOffendingSsidOutput() WirelesscontrollerSettingOffendingSsidOutput {
	return o
}

func (o WirelesscontrollerSettingOffendingSsidOutput) ToWirelesscontrollerSettingOffendingSsidOutputWithContext(ctx context.Context) WirelesscontrollerSettingOffendingSsidOutput {
	return o
}

// Actions taken for detected offending SSID. Valid values: `log`, `suppress`.
func (o WirelesscontrollerSettingOffendingSsidOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSettingOffendingSsid) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o WirelesscontrollerSettingOffendingSsidOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSettingOffendingSsid) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Define offending SSID pattern (case insensitive), eg: word, word*, *word, wo*rd.
func (o WirelesscontrollerSettingOffendingSsidOutput) SsidPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSettingOffendingSsid) *string { return v.SsidPattern }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerSettingOffendingSsidArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSettingOffendingSsidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSettingOffendingSsid)(nil)).Elem()
}

func (o WirelesscontrollerSettingOffendingSsidArrayOutput) ToWirelesscontrollerSettingOffendingSsidArrayOutput() WirelesscontrollerSettingOffendingSsidArrayOutput {
	return o
}

func (o WirelesscontrollerSettingOffendingSsidArrayOutput) ToWirelesscontrollerSettingOffendingSsidArrayOutputWithContext(ctx context.Context) WirelesscontrollerSettingOffendingSsidArrayOutput {
	return o
}

func (o WirelesscontrollerSettingOffendingSsidArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerSettingOffendingSsidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerSettingOffendingSsid {
		return vs[0].([]WirelesscontrollerSettingOffendingSsid)[vs[1].(int)]
	}).(WirelesscontrollerSettingOffendingSsidOutput)
}

type WirelesscontrollerSnmpCommunity struct {
	// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
	Hosts []WirelesscontrollerSnmpCommunityHost `pulumi:"hosts"`
	// Community ID.
	Id *int `pulumi:"id"`
	// Community name.
	Name *string `pulumi:"name"`
	// Enable/disable SNMP v1 queries. Valid values: `enable`, `disable`.
	QueryV1Status *string `pulumi:"queryV1Status"`
	// Enable/disable SNMP v2c queries. Valid values: `enable`, `disable`.
	QueryV2cStatus *string `pulumi:"queryV2cStatus"`
	// Enable/disable this SNMP community. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable SNMP v1 traps. Valid values: `enable`, `disable`.
	TrapV1Status *string `pulumi:"trapV1Status"`
	// Enable/disable SNMP v2c traps. Valid values: `enable`, `disable`.
	TrapV2cStatus *string `pulumi:"trapV2cStatus"`
}

// WirelesscontrollerSnmpCommunityInput is an input type that accepts WirelesscontrollerSnmpCommunityArgs and WirelesscontrollerSnmpCommunityOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpCommunityInput` via:
//
//	WirelesscontrollerSnmpCommunityArgs{...}
type WirelesscontrollerSnmpCommunityInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpCommunityOutput() WirelesscontrollerSnmpCommunityOutput
	ToWirelesscontrollerSnmpCommunityOutputWithContext(context.Context) WirelesscontrollerSnmpCommunityOutput
}

type WirelesscontrollerSnmpCommunityArgs struct {
	// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
	Hosts WirelesscontrollerSnmpCommunityHostArrayInput `pulumi:"hosts"`
	// Community ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Community name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable/disable SNMP v1 queries. Valid values: `enable`, `disable`.
	QueryV1Status pulumi.StringPtrInput `pulumi:"queryV1Status"`
	// Enable/disable SNMP v2c queries. Valid values: `enable`, `disable`.
	QueryV2cStatus pulumi.StringPtrInput `pulumi:"queryV2cStatus"`
	// Enable/disable this SNMP community. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable SNMP v1 traps. Valid values: `enable`, `disable`.
	TrapV1Status pulumi.StringPtrInput `pulumi:"trapV1Status"`
	// Enable/disable SNMP v2c traps. Valid values: `enable`, `disable`.
	TrapV2cStatus pulumi.StringPtrInput `pulumi:"trapV2cStatus"`
}

func (WirelesscontrollerSnmpCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpCommunity)(nil)).Elem()
}

func (i WirelesscontrollerSnmpCommunityArgs) ToWirelesscontrollerSnmpCommunityOutput() WirelesscontrollerSnmpCommunityOutput {
	return i.ToWirelesscontrollerSnmpCommunityOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpCommunityArgs) ToWirelesscontrollerSnmpCommunityOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpCommunityOutput)
}

// WirelesscontrollerSnmpCommunityArrayInput is an input type that accepts WirelesscontrollerSnmpCommunityArray and WirelesscontrollerSnmpCommunityArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpCommunityArrayInput` via:
//
//	WirelesscontrollerSnmpCommunityArray{ WirelesscontrollerSnmpCommunityArgs{...} }
type WirelesscontrollerSnmpCommunityArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpCommunityArrayOutput() WirelesscontrollerSnmpCommunityArrayOutput
	ToWirelesscontrollerSnmpCommunityArrayOutputWithContext(context.Context) WirelesscontrollerSnmpCommunityArrayOutput
}

type WirelesscontrollerSnmpCommunityArray []WirelesscontrollerSnmpCommunityInput

func (WirelesscontrollerSnmpCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpCommunity)(nil)).Elem()
}

func (i WirelesscontrollerSnmpCommunityArray) ToWirelesscontrollerSnmpCommunityArrayOutput() WirelesscontrollerSnmpCommunityArrayOutput {
	return i.ToWirelesscontrollerSnmpCommunityArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpCommunityArray) ToWirelesscontrollerSnmpCommunityArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpCommunityArrayOutput)
}

type WirelesscontrollerSnmpCommunityOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpCommunity)(nil)).Elem()
}

func (o WirelesscontrollerSnmpCommunityOutput) ToWirelesscontrollerSnmpCommunityOutput() WirelesscontrollerSnmpCommunityOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityOutput) ToWirelesscontrollerSnmpCommunityOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityOutput {
	return o
}

// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
func (o WirelesscontrollerSnmpCommunityOutput) Hosts() WirelesscontrollerSnmpCommunityHostArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) []WirelesscontrollerSnmpCommunityHost { return v.Hosts }).(WirelesscontrollerSnmpCommunityHostArrayOutput)
}

// Community ID.
func (o WirelesscontrollerSnmpCommunityOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Community name.
func (o WirelesscontrollerSnmpCommunityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP v1 queries. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpCommunityOutput) QueryV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.QueryV1Status }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP v2c queries. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpCommunityOutput) QueryV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.QueryV2cStatus }).(pulumi.StringPtrOutput)
}

// Enable/disable this SNMP community. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpCommunityOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP v1 traps. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpCommunityOutput) TrapV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.TrapV1Status }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP v2c traps. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpCommunityOutput) TrapV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunity) *string { return v.TrapV2cStatus }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerSnmpCommunityArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpCommunity)(nil)).Elem()
}

func (o WirelesscontrollerSnmpCommunityArrayOutput) ToWirelesscontrollerSnmpCommunityArrayOutput() WirelesscontrollerSnmpCommunityArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityArrayOutput) ToWirelesscontrollerSnmpCommunityArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerSnmpCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerSnmpCommunity {
		return vs[0].([]WirelesscontrollerSnmpCommunity)[vs[1].(int)]
	}).(WirelesscontrollerSnmpCommunityOutput)
}

type WirelesscontrollerSnmpCommunityHost struct {
	// Host entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip *string `pulumi:"ip"`
}

// WirelesscontrollerSnmpCommunityHostInput is an input type that accepts WirelesscontrollerSnmpCommunityHostArgs and WirelesscontrollerSnmpCommunityHostOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpCommunityHostInput` via:
//
//	WirelesscontrollerSnmpCommunityHostArgs{...}
type WirelesscontrollerSnmpCommunityHostInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpCommunityHostOutput() WirelesscontrollerSnmpCommunityHostOutput
	ToWirelesscontrollerSnmpCommunityHostOutputWithContext(context.Context) WirelesscontrollerSnmpCommunityHostOutput
}

type WirelesscontrollerSnmpCommunityHostArgs struct {
	// Host entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (WirelesscontrollerSnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpCommunityHost)(nil)).Elem()
}

func (i WirelesscontrollerSnmpCommunityHostArgs) ToWirelesscontrollerSnmpCommunityHostOutput() WirelesscontrollerSnmpCommunityHostOutput {
	return i.ToWirelesscontrollerSnmpCommunityHostOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpCommunityHostArgs) ToWirelesscontrollerSnmpCommunityHostOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpCommunityHostOutput)
}

// WirelesscontrollerSnmpCommunityHostArrayInput is an input type that accepts WirelesscontrollerSnmpCommunityHostArray and WirelesscontrollerSnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpCommunityHostArrayInput` via:
//
//	WirelesscontrollerSnmpCommunityHostArray{ WirelesscontrollerSnmpCommunityHostArgs{...} }
type WirelesscontrollerSnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpCommunityHostArrayOutput() WirelesscontrollerSnmpCommunityHostArrayOutput
	ToWirelesscontrollerSnmpCommunityHostArrayOutputWithContext(context.Context) WirelesscontrollerSnmpCommunityHostArrayOutput
}

type WirelesscontrollerSnmpCommunityHostArray []WirelesscontrollerSnmpCommunityHostInput

func (WirelesscontrollerSnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpCommunityHost)(nil)).Elem()
}

func (i WirelesscontrollerSnmpCommunityHostArray) ToWirelesscontrollerSnmpCommunityHostArrayOutput() WirelesscontrollerSnmpCommunityHostArrayOutput {
	return i.ToWirelesscontrollerSnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpCommunityHostArray) ToWirelesscontrollerSnmpCommunityHostArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpCommunityHostArrayOutput)
}

type WirelesscontrollerSnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpCommunityHost)(nil)).Elem()
}

func (o WirelesscontrollerSnmpCommunityHostOutput) ToWirelesscontrollerSnmpCommunityHostOutput() WirelesscontrollerSnmpCommunityHostOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityHostOutput) ToWirelesscontrollerSnmpCommunityHostOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityHostOutput {
	return o
}

// Host entry ID.
func (o WirelesscontrollerSnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the SNMP manager (host).
func (o WirelesscontrollerSnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerSnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpCommunityHost)(nil)).Elem()
}

func (o WirelesscontrollerSnmpCommunityHostArrayOutput) ToWirelesscontrollerSnmpCommunityHostArrayOutput() WirelesscontrollerSnmpCommunityHostArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityHostArrayOutput) ToWirelesscontrollerSnmpCommunityHostArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpCommunityHostArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerSnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerSnmpCommunityHost {
		return vs[0].([]WirelesscontrollerSnmpCommunityHost)[vs[1].(int)]
	}).(WirelesscontrollerSnmpCommunityHostOutput)
}

type WirelesscontrollerSnmpUser struct {
	// Authentication protocol. Valid values: `md5`, `sha`.
	AuthProto *string `pulumi:"authProto"`
	// Password for authentication protocol.
	AuthPwd *string `pulumi:"authPwd"`
	// SNMP User Name
	Name *string `pulumi:"name"`
	// Configure SNMP User Notify Hosts.
	NotifyHosts *string `pulumi:"notifyHosts"`
	// Privacy (encryption) protocol. Valid values: `aes`, `des`, `aes256`, `aes256cisco`.
	PrivProto *string `pulumi:"privProto"`
	// Password for privacy (encryption) protocol.
	PrivPwd *string `pulumi:"privPwd"`
	// Enable/disable SNMP queries for this user. Valid values: `enable`, `disable`.
	Queries *string `pulumi:"queries"`
	// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
	SecurityLevel *string `pulumi:"securityLevel"`
	// SNMP User Enable Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable traps for this SNMP user. Valid values: `enable`, `disable`.
	TrapStatus *string `pulumi:"trapStatus"`
}

// WirelesscontrollerSnmpUserInput is an input type that accepts WirelesscontrollerSnmpUserArgs and WirelesscontrollerSnmpUserOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpUserInput` via:
//
//	WirelesscontrollerSnmpUserArgs{...}
type WirelesscontrollerSnmpUserInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpUserOutput() WirelesscontrollerSnmpUserOutput
	ToWirelesscontrollerSnmpUserOutputWithContext(context.Context) WirelesscontrollerSnmpUserOutput
}

type WirelesscontrollerSnmpUserArgs struct {
	// Authentication protocol. Valid values: `md5`, `sha`.
	AuthProto pulumi.StringPtrInput `pulumi:"authProto"`
	// Password for authentication protocol.
	AuthPwd pulumi.StringPtrInput `pulumi:"authPwd"`
	// SNMP User Name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure SNMP User Notify Hosts.
	NotifyHosts pulumi.StringPtrInput `pulumi:"notifyHosts"`
	// Privacy (encryption) protocol. Valid values: `aes`, `des`, `aes256`, `aes256cisco`.
	PrivProto pulumi.StringPtrInput `pulumi:"privProto"`
	// Password for privacy (encryption) protocol.
	PrivPwd pulumi.StringPtrInput `pulumi:"privPwd"`
	// Enable/disable SNMP queries for this user. Valid values: `enable`, `disable`.
	Queries pulumi.StringPtrInput `pulumi:"queries"`
	// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
	// SNMP User Enable Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable traps for this SNMP user. Valid values: `enable`, `disable`.
	TrapStatus pulumi.StringPtrInput `pulumi:"trapStatus"`
}

func (WirelesscontrollerSnmpUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpUser)(nil)).Elem()
}

func (i WirelesscontrollerSnmpUserArgs) ToWirelesscontrollerSnmpUserOutput() WirelesscontrollerSnmpUserOutput {
	return i.ToWirelesscontrollerSnmpUserOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpUserArgs) ToWirelesscontrollerSnmpUserOutputWithContext(ctx context.Context) WirelesscontrollerSnmpUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpUserOutput)
}

// WirelesscontrollerSnmpUserArrayInput is an input type that accepts WirelesscontrollerSnmpUserArray and WirelesscontrollerSnmpUserArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerSnmpUserArrayInput` via:
//
//	WirelesscontrollerSnmpUserArray{ WirelesscontrollerSnmpUserArgs{...} }
type WirelesscontrollerSnmpUserArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerSnmpUserArrayOutput() WirelesscontrollerSnmpUserArrayOutput
	ToWirelesscontrollerSnmpUserArrayOutputWithContext(context.Context) WirelesscontrollerSnmpUserArrayOutput
}

type WirelesscontrollerSnmpUserArray []WirelesscontrollerSnmpUserInput

func (WirelesscontrollerSnmpUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpUser)(nil)).Elem()
}

func (i WirelesscontrollerSnmpUserArray) ToWirelesscontrollerSnmpUserArrayOutput() WirelesscontrollerSnmpUserArrayOutput {
	return i.ToWirelesscontrollerSnmpUserArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerSnmpUserArray) ToWirelesscontrollerSnmpUserArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerSnmpUserArrayOutput)
}

type WirelesscontrollerSnmpUserOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerSnmpUser)(nil)).Elem()
}

func (o WirelesscontrollerSnmpUserOutput) ToWirelesscontrollerSnmpUserOutput() WirelesscontrollerSnmpUserOutput {
	return o
}

func (o WirelesscontrollerSnmpUserOutput) ToWirelesscontrollerSnmpUserOutputWithContext(ctx context.Context) WirelesscontrollerSnmpUserOutput {
	return o
}

// Authentication protocol. Valid values: `md5`, `sha`.
func (o WirelesscontrollerSnmpUserOutput) AuthProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.AuthProto }).(pulumi.StringPtrOutput)
}

// Password for authentication protocol.
func (o WirelesscontrollerSnmpUserOutput) AuthPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.AuthPwd }).(pulumi.StringPtrOutput)
}

// SNMP User Name
func (o WirelesscontrollerSnmpUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure SNMP User Notify Hosts.
func (o WirelesscontrollerSnmpUserOutput) NotifyHosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.NotifyHosts }).(pulumi.StringPtrOutput)
}

// Privacy (encryption) protocol. Valid values: `aes`, `des`, `aes256`, `aes256cisco`.
func (o WirelesscontrollerSnmpUserOutput) PrivProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.PrivProto }).(pulumi.StringPtrOutput)
}

// Password for privacy (encryption) protocol.
func (o WirelesscontrollerSnmpUserOutput) PrivPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.PrivPwd }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP queries for this user. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpUserOutput) Queries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.Queries }).(pulumi.StringPtrOutput)
}

// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
func (o WirelesscontrollerSnmpUserOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

// SNMP User Enable Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpUserOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable traps for this SNMP user. Valid values: `enable`, `disable`.
func (o WirelesscontrollerSnmpUserOutput) TrapStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerSnmpUser) *string { return v.TrapStatus }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerSnmpUserArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerSnmpUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerSnmpUser)(nil)).Elem()
}

func (o WirelesscontrollerSnmpUserArrayOutput) ToWirelesscontrollerSnmpUserArrayOutput() WirelesscontrollerSnmpUserArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpUserArrayOutput) ToWirelesscontrollerSnmpUserArrayOutputWithContext(ctx context.Context) WirelesscontrollerSnmpUserArrayOutput {
	return o
}

func (o WirelesscontrollerSnmpUserArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerSnmpUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerSnmpUser {
		return vs[0].([]WirelesscontrollerSnmpUser)[vs[1].(int)]
	}).(WirelesscontrollerSnmpUserOutput)
}

type WirelesscontrollerTimersDarrpTime struct {
	// Time.
	Time *string `pulumi:"time"`
}

// WirelesscontrollerTimersDarrpTimeInput is an input type that accepts WirelesscontrollerTimersDarrpTimeArgs and WirelesscontrollerTimersDarrpTimeOutput values.
// You can construct a concrete instance of `WirelesscontrollerTimersDarrpTimeInput` via:
//
//	WirelesscontrollerTimersDarrpTimeArgs{...}
type WirelesscontrollerTimersDarrpTimeInput interface {
	pulumi.Input

	ToWirelesscontrollerTimersDarrpTimeOutput() WirelesscontrollerTimersDarrpTimeOutput
	ToWirelesscontrollerTimersDarrpTimeOutputWithContext(context.Context) WirelesscontrollerTimersDarrpTimeOutput
}

type WirelesscontrollerTimersDarrpTimeArgs struct {
	// Time.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (WirelesscontrollerTimersDarrpTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerTimersDarrpTime)(nil)).Elem()
}

func (i WirelesscontrollerTimersDarrpTimeArgs) ToWirelesscontrollerTimersDarrpTimeOutput() WirelesscontrollerTimersDarrpTimeOutput {
	return i.ToWirelesscontrollerTimersDarrpTimeOutputWithContext(context.Background())
}

func (i WirelesscontrollerTimersDarrpTimeArgs) ToWirelesscontrollerTimersDarrpTimeOutputWithContext(ctx context.Context) WirelesscontrollerTimersDarrpTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerTimersDarrpTimeOutput)
}

// WirelesscontrollerTimersDarrpTimeArrayInput is an input type that accepts WirelesscontrollerTimersDarrpTimeArray and WirelesscontrollerTimersDarrpTimeArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerTimersDarrpTimeArrayInput` via:
//
//	WirelesscontrollerTimersDarrpTimeArray{ WirelesscontrollerTimersDarrpTimeArgs{...} }
type WirelesscontrollerTimersDarrpTimeArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerTimersDarrpTimeArrayOutput() WirelesscontrollerTimersDarrpTimeArrayOutput
	ToWirelesscontrollerTimersDarrpTimeArrayOutputWithContext(context.Context) WirelesscontrollerTimersDarrpTimeArrayOutput
}

type WirelesscontrollerTimersDarrpTimeArray []WirelesscontrollerTimersDarrpTimeInput

func (WirelesscontrollerTimersDarrpTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerTimersDarrpTime)(nil)).Elem()
}

func (i WirelesscontrollerTimersDarrpTimeArray) ToWirelesscontrollerTimersDarrpTimeArrayOutput() WirelesscontrollerTimersDarrpTimeArrayOutput {
	return i.ToWirelesscontrollerTimersDarrpTimeArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerTimersDarrpTimeArray) ToWirelesscontrollerTimersDarrpTimeArrayOutputWithContext(ctx context.Context) WirelesscontrollerTimersDarrpTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerTimersDarrpTimeArrayOutput)
}

type WirelesscontrollerTimersDarrpTimeOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerTimersDarrpTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerTimersDarrpTime)(nil)).Elem()
}

func (o WirelesscontrollerTimersDarrpTimeOutput) ToWirelesscontrollerTimersDarrpTimeOutput() WirelesscontrollerTimersDarrpTimeOutput {
	return o
}

func (o WirelesscontrollerTimersDarrpTimeOutput) ToWirelesscontrollerTimersDarrpTimeOutputWithContext(ctx context.Context) WirelesscontrollerTimersDarrpTimeOutput {
	return o
}

// Time.
func (o WirelesscontrollerTimersDarrpTimeOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerTimersDarrpTime) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerTimersDarrpTimeArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerTimersDarrpTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerTimersDarrpTime)(nil)).Elem()
}

func (o WirelesscontrollerTimersDarrpTimeArrayOutput) ToWirelesscontrollerTimersDarrpTimeArrayOutput() WirelesscontrollerTimersDarrpTimeArrayOutput {
	return o
}

func (o WirelesscontrollerTimersDarrpTimeArrayOutput) ToWirelesscontrollerTimersDarrpTimeArrayOutputWithContext(ctx context.Context) WirelesscontrollerTimersDarrpTimeArrayOutput {
	return o
}

func (o WirelesscontrollerTimersDarrpTimeArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerTimersDarrpTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerTimersDarrpTime {
		return vs[0].([]WirelesscontrollerTimersDarrpTime)[vs[1].(int)]
	}).(WirelesscontrollerTimersDarrpTimeOutput)
}

type WirelesscontrollerVapMacFilterList struct {
	// ID.
	Id *int `pulumi:"id"`
	// MAC address.
	Mac *string `pulumi:"mac"`
	// Deny or allow the client with this MAC address. Valid values: `allow`, `deny`.
	MacFilterPolicy *string `pulumi:"macFilterPolicy"`
}

// WirelesscontrollerVapMacFilterListInput is an input type that accepts WirelesscontrollerVapMacFilterListArgs and WirelesscontrollerVapMacFilterListOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMacFilterListInput` via:
//
//	WirelesscontrollerVapMacFilterListArgs{...}
type WirelesscontrollerVapMacFilterListInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMacFilterListOutput() WirelesscontrollerVapMacFilterListOutput
	ToWirelesscontrollerVapMacFilterListOutputWithContext(context.Context) WirelesscontrollerVapMacFilterListOutput
}

type WirelesscontrollerVapMacFilterListArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MAC address.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Deny or allow the client with this MAC address. Valid values: `allow`, `deny`.
	MacFilterPolicy pulumi.StringPtrInput `pulumi:"macFilterPolicy"`
}

func (WirelesscontrollerVapMacFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMacFilterList)(nil)).Elem()
}

func (i WirelesscontrollerVapMacFilterListArgs) ToWirelesscontrollerVapMacFilterListOutput() WirelesscontrollerVapMacFilterListOutput {
	return i.ToWirelesscontrollerVapMacFilterListOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMacFilterListArgs) ToWirelesscontrollerVapMacFilterListOutputWithContext(ctx context.Context) WirelesscontrollerVapMacFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMacFilterListOutput)
}

// WirelesscontrollerVapMacFilterListArrayInput is an input type that accepts WirelesscontrollerVapMacFilterListArray and WirelesscontrollerVapMacFilterListArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMacFilterListArrayInput` via:
//
//	WirelesscontrollerVapMacFilterListArray{ WirelesscontrollerVapMacFilterListArgs{...} }
type WirelesscontrollerVapMacFilterListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMacFilterListArrayOutput() WirelesscontrollerVapMacFilterListArrayOutput
	ToWirelesscontrollerVapMacFilterListArrayOutputWithContext(context.Context) WirelesscontrollerVapMacFilterListArrayOutput
}

type WirelesscontrollerVapMacFilterListArray []WirelesscontrollerVapMacFilterListInput

func (WirelesscontrollerVapMacFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMacFilterList)(nil)).Elem()
}

func (i WirelesscontrollerVapMacFilterListArray) ToWirelesscontrollerVapMacFilterListArrayOutput() WirelesscontrollerVapMacFilterListArrayOutput {
	return i.ToWirelesscontrollerVapMacFilterListArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMacFilterListArray) ToWirelesscontrollerVapMacFilterListArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMacFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMacFilterListArrayOutput)
}

type WirelesscontrollerVapMacFilterListOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMacFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMacFilterList)(nil)).Elem()
}

func (o WirelesscontrollerVapMacFilterListOutput) ToWirelesscontrollerVapMacFilterListOutput() WirelesscontrollerVapMacFilterListOutput {
	return o
}

func (o WirelesscontrollerVapMacFilterListOutput) ToWirelesscontrollerVapMacFilterListOutputWithContext(ctx context.Context) WirelesscontrollerVapMacFilterListOutput {
	return o
}

// ID.
func (o WirelesscontrollerVapMacFilterListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMacFilterList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MAC address.
func (o WirelesscontrollerVapMacFilterListOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMacFilterList) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Deny or allow the client with this MAC address. Valid values: `allow`, `deny`.
func (o WirelesscontrollerVapMacFilterListOutput) MacFilterPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMacFilterList) *string { return v.MacFilterPolicy }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapMacFilterListArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMacFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMacFilterList)(nil)).Elem()
}

func (o WirelesscontrollerVapMacFilterListArrayOutput) ToWirelesscontrollerVapMacFilterListArrayOutput() WirelesscontrollerVapMacFilterListArrayOutput {
	return o
}

func (o WirelesscontrollerVapMacFilterListArrayOutput) ToWirelesscontrollerVapMacFilterListArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMacFilterListArrayOutput {
	return o
}

func (o WirelesscontrollerVapMacFilterListArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapMacFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapMacFilterList {
		return vs[0].([]WirelesscontrollerVapMacFilterList)[vs[1].(int)]
	}).(WirelesscontrollerVapMacFilterListOutput)
}

type WirelesscontrollerVapMpskKey struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Number of clients that can connect using this pre-shared key.
	ConcurrentClients *string `pulumi:"concurrentClients"`
	// Pre-shared key name.
	KeyName *string `pulumi:"keyName"`
	// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
	MpskSchedules []WirelesscontrollerVapMpskKeyMpskSchedule `pulumi:"mpskSchedules"`
	// WPA Pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
}

// WirelesscontrollerVapMpskKeyInput is an input type that accepts WirelesscontrollerVapMpskKeyArgs and WirelesscontrollerVapMpskKeyOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMpskKeyInput` via:
//
//	WirelesscontrollerVapMpskKeyArgs{...}
type WirelesscontrollerVapMpskKeyInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMpskKeyOutput() WirelesscontrollerVapMpskKeyOutput
	ToWirelesscontrollerVapMpskKeyOutputWithContext(context.Context) WirelesscontrollerVapMpskKeyOutput
}

type WirelesscontrollerVapMpskKeyArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Number of clients that can connect using this pre-shared key.
	ConcurrentClients pulumi.StringPtrInput `pulumi:"concurrentClients"`
	// Pre-shared key name.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
	MpskSchedules WirelesscontrollerVapMpskKeyMpskScheduleArrayInput `pulumi:"mpskSchedules"`
	// WPA Pre-shared key.
	Passphrase pulumi.StringPtrInput `pulumi:"passphrase"`
}

func (WirelesscontrollerVapMpskKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMpskKey)(nil)).Elem()
}

func (i WirelesscontrollerVapMpskKeyArgs) ToWirelesscontrollerVapMpskKeyOutput() WirelesscontrollerVapMpskKeyOutput {
	return i.ToWirelesscontrollerVapMpskKeyOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMpskKeyArgs) ToWirelesscontrollerVapMpskKeyOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMpskKeyOutput)
}

// WirelesscontrollerVapMpskKeyArrayInput is an input type that accepts WirelesscontrollerVapMpskKeyArray and WirelesscontrollerVapMpskKeyArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMpskKeyArrayInput` via:
//
//	WirelesscontrollerVapMpskKeyArray{ WirelesscontrollerVapMpskKeyArgs{...} }
type WirelesscontrollerVapMpskKeyArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMpskKeyArrayOutput() WirelesscontrollerVapMpskKeyArrayOutput
	ToWirelesscontrollerVapMpskKeyArrayOutputWithContext(context.Context) WirelesscontrollerVapMpskKeyArrayOutput
}

type WirelesscontrollerVapMpskKeyArray []WirelesscontrollerVapMpskKeyInput

func (WirelesscontrollerVapMpskKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMpskKey)(nil)).Elem()
}

func (i WirelesscontrollerVapMpskKeyArray) ToWirelesscontrollerVapMpskKeyArrayOutput() WirelesscontrollerVapMpskKeyArrayOutput {
	return i.ToWirelesscontrollerVapMpskKeyArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMpskKeyArray) ToWirelesscontrollerVapMpskKeyArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMpskKeyArrayOutput)
}

type WirelesscontrollerVapMpskKeyOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMpskKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMpskKey)(nil)).Elem()
}

func (o WirelesscontrollerVapMpskKeyOutput) ToWirelesscontrollerVapMpskKeyOutput() WirelesscontrollerVapMpskKeyOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyOutput) ToWirelesscontrollerVapMpskKeyOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyOutput {
	return o
}

// Comment.
func (o WirelesscontrollerVapMpskKeyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKey) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Number of clients that can connect using this pre-shared key.
func (o WirelesscontrollerVapMpskKeyOutput) ConcurrentClients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKey) *string { return v.ConcurrentClients }).(pulumi.StringPtrOutput)
}

// Pre-shared key name.
func (o WirelesscontrollerVapMpskKeyOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKey) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// Firewall schedule for MPSK passphrase. The passphrase will be effective only when at least one schedule is valid. The structure of `mpskSchedules` block is documented below.
func (o WirelesscontrollerVapMpskKeyOutput) MpskSchedules() WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKey) []WirelesscontrollerVapMpskKeyMpskSchedule {
		return v.MpskSchedules
	}).(WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput)
}

// WPA Pre-shared key.
func (o WirelesscontrollerVapMpskKeyOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKey) *string { return v.Passphrase }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapMpskKeyArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMpskKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMpskKey)(nil)).Elem()
}

func (o WirelesscontrollerVapMpskKeyArrayOutput) ToWirelesscontrollerVapMpskKeyArrayOutput() WirelesscontrollerVapMpskKeyArrayOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyArrayOutput) ToWirelesscontrollerVapMpskKeyArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyArrayOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapMpskKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapMpskKey {
		return vs[0].([]WirelesscontrollerVapMpskKey)[vs[1].(int)]
	}).(WirelesscontrollerVapMpskKeyOutput)
}

type WirelesscontrollerVapMpskKeyMpskSchedule struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerVapMpskKeyMpskScheduleInput is an input type that accepts WirelesscontrollerVapMpskKeyMpskScheduleArgs and WirelesscontrollerVapMpskKeyMpskScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMpskKeyMpskScheduleInput` via:
//
//	WirelesscontrollerVapMpskKeyMpskScheduleArgs{...}
type WirelesscontrollerVapMpskKeyMpskScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMpskKeyMpskScheduleOutput() WirelesscontrollerVapMpskKeyMpskScheduleOutput
	ToWirelesscontrollerVapMpskKeyMpskScheduleOutputWithContext(context.Context) WirelesscontrollerVapMpskKeyMpskScheduleOutput
}

type WirelesscontrollerVapMpskKeyMpskScheduleArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerVapMpskKeyMpskScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMpskKeyMpskSchedule)(nil)).Elem()
}

func (i WirelesscontrollerVapMpskKeyMpskScheduleArgs) ToWirelesscontrollerVapMpskKeyMpskScheduleOutput() WirelesscontrollerVapMpskKeyMpskScheduleOutput {
	return i.ToWirelesscontrollerVapMpskKeyMpskScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMpskKeyMpskScheduleArgs) ToWirelesscontrollerVapMpskKeyMpskScheduleOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyMpskScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMpskKeyMpskScheduleOutput)
}

// WirelesscontrollerVapMpskKeyMpskScheduleArrayInput is an input type that accepts WirelesscontrollerVapMpskKeyMpskScheduleArray and WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapMpskKeyMpskScheduleArrayInput` via:
//
//	WirelesscontrollerVapMpskKeyMpskScheduleArray{ WirelesscontrollerVapMpskKeyMpskScheduleArgs{...} }
type WirelesscontrollerVapMpskKeyMpskScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutput() WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput
	ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutputWithContext(context.Context) WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput
}

type WirelesscontrollerVapMpskKeyMpskScheduleArray []WirelesscontrollerVapMpskKeyMpskScheduleInput

func (WirelesscontrollerVapMpskKeyMpskScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMpskKeyMpskSchedule)(nil)).Elem()
}

func (i WirelesscontrollerVapMpskKeyMpskScheduleArray) ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutput() WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput {
	return i.ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapMpskKeyMpskScheduleArray) ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput)
}

type WirelesscontrollerVapMpskKeyMpskScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMpskKeyMpskScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapMpskKeyMpskSchedule)(nil)).Elem()
}

func (o WirelesscontrollerVapMpskKeyMpskScheduleOutput) ToWirelesscontrollerVapMpskKeyMpskScheduleOutput() WirelesscontrollerVapMpskKeyMpskScheduleOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyMpskScheduleOutput) ToWirelesscontrollerVapMpskKeyMpskScheduleOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyMpskScheduleOutput {
	return o
}

// Schedule name.
func (o WirelesscontrollerVapMpskKeyMpskScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapMpskKeyMpskSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapMpskKeyMpskSchedule)(nil)).Elem()
}

func (o WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput) ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutput() WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput) ToWirelesscontrollerVapMpskKeyMpskScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapMpskKeyMpskScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapMpskKeyMpskSchedule {
		return vs[0].([]WirelesscontrollerVapMpskKeyMpskSchedule)[vs[1].(int)]
	}).(WirelesscontrollerVapMpskKeyMpskScheduleOutput)
}

type WirelesscontrollerVapPortalMessageOverrides struct {
	// Override auth-disclaimer-page message with message from portal-message-overrides group.
	AuthDisclaimerPage *string `pulumi:"authDisclaimerPage"`
	// Override auth-login-failed-page message with message from portal-message-overrides group.
	AuthLoginFailedPage *string `pulumi:"authLoginFailedPage"`
	// Override auth-login-page message with message from portal-message-overrides group.
	AuthLoginPage *string `pulumi:"authLoginPage"`
	// Override auth-reject-page message with message from portal-message-overrides group.
	AuthRejectPage *string `pulumi:"authRejectPage"`
}

// WirelesscontrollerVapPortalMessageOverridesInput is an input type that accepts WirelesscontrollerVapPortalMessageOverridesArgs and WirelesscontrollerVapPortalMessageOverridesOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapPortalMessageOverridesInput` via:
//
//	WirelesscontrollerVapPortalMessageOverridesArgs{...}
type WirelesscontrollerVapPortalMessageOverridesInput interface {
	pulumi.Input

	ToWirelesscontrollerVapPortalMessageOverridesOutput() WirelesscontrollerVapPortalMessageOverridesOutput
	ToWirelesscontrollerVapPortalMessageOverridesOutputWithContext(context.Context) WirelesscontrollerVapPortalMessageOverridesOutput
}

type WirelesscontrollerVapPortalMessageOverridesArgs struct {
	// Override auth-disclaimer-page message with message from portal-message-overrides group.
	AuthDisclaimerPage pulumi.StringPtrInput `pulumi:"authDisclaimerPage"`
	// Override auth-login-failed-page message with message from portal-message-overrides group.
	AuthLoginFailedPage pulumi.StringPtrInput `pulumi:"authLoginFailedPage"`
	// Override auth-login-page message with message from portal-message-overrides group.
	AuthLoginPage pulumi.StringPtrInput `pulumi:"authLoginPage"`
	// Override auth-reject-page message with message from portal-message-overrides group.
	AuthRejectPage pulumi.StringPtrInput `pulumi:"authRejectPage"`
}

func (WirelesscontrollerVapPortalMessageOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapPortalMessageOverrides)(nil)).Elem()
}

func (i WirelesscontrollerVapPortalMessageOverridesArgs) ToWirelesscontrollerVapPortalMessageOverridesOutput() WirelesscontrollerVapPortalMessageOverridesOutput {
	return i.ToWirelesscontrollerVapPortalMessageOverridesOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapPortalMessageOverridesArgs) ToWirelesscontrollerVapPortalMessageOverridesOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapPortalMessageOverridesOutput)
}

func (i WirelesscontrollerVapPortalMessageOverridesArgs) ToWirelesscontrollerVapPortalMessageOverridesPtrOutput() WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return i.ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapPortalMessageOverridesArgs) ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapPortalMessageOverridesOutput).ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(ctx)
}

// WirelesscontrollerVapPortalMessageOverridesPtrInput is an input type that accepts WirelesscontrollerVapPortalMessageOverridesArgs, WirelesscontrollerVapPortalMessageOverridesPtr and WirelesscontrollerVapPortalMessageOverridesPtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapPortalMessageOverridesPtrInput` via:
//
//	        WirelesscontrollerVapPortalMessageOverridesArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerVapPortalMessageOverridesPtrInput interface {
	pulumi.Input

	ToWirelesscontrollerVapPortalMessageOverridesPtrOutput() WirelesscontrollerVapPortalMessageOverridesPtrOutput
	ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(context.Context) WirelesscontrollerVapPortalMessageOverridesPtrOutput
}

type wirelesscontrollerVapPortalMessageOverridesPtrType WirelesscontrollerVapPortalMessageOverridesArgs

func WirelesscontrollerVapPortalMessageOverridesPtr(v *WirelesscontrollerVapPortalMessageOverridesArgs) WirelesscontrollerVapPortalMessageOverridesPtrInput {
	return (*wirelesscontrollerVapPortalMessageOverridesPtrType)(v)
}

func (*wirelesscontrollerVapPortalMessageOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerVapPortalMessageOverrides)(nil)).Elem()
}

func (i *wirelesscontrollerVapPortalMessageOverridesPtrType) ToWirelesscontrollerVapPortalMessageOverridesPtrOutput() WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return i.ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerVapPortalMessageOverridesPtrType) ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapPortalMessageOverridesPtrOutput)
}

type WirelesscontrollerVapPortalMessageOverridesOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapPortalMessageOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapPortalMessageOverrides)(nil)).Elem()
}

func (o WirelesscontrollerVapPortalMessageOverridesOutput) ToWirelesscontrollerVapPortalMessageOverridesOutput() WirelesscontrollerVapPortalMessageOverridesOutput {
	return o
}

func (o WirelesscontrollerVapPortalMessageOverridesOutput) ToWirelesscontrollerVapPortalMessageOverridesOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesOutput {
	return o
}

func (o WirelesscontrollerVapPortalMessageOverridesOutput) ToWirelesscontrollerVapPortalMessageOverridesPtrOutput() WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return o.ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerVapPortalMessageOverridesOutput) ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerVapPortalMessageOverrides) *WirelesscontrollerVapPortalMessageOverrides {
		return &v
	}).(WirelesscontrollerVapPortalMessageOverridesPtrOutput)
}

// Override auth-disclaimer-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapPortalMessageOverrides) *string { return v.AuthDisclaimerPage }).(pulumi.StringPtrOutput)
}

// Override auth-login-failed-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapPortalMessageOverrides) *string { return v.AuthLoginFailedPage }).(pulumi.StringPtrOutput)
}

// Override auth-login-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapPortalMessageOverrides) *string { return v.AuthLoginPage }).(pulumi.StringPtrOutput)
}

// Override auth-reject-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapPortalMessageOverrides) *string { return v.AuthRejectPage }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapPortalMessageOverridesPtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapPortalMessageOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerVapPortalMessageOverrides)(nil)).Elem()
}

func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) ToWirelesscontrollerVapPortalMessageOverridesPtrOutput() WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return o
}

func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) ToWirelesscontrollerVapPortalMessageOverridesPtrOutputWithContext(ctx context.Context) WirelesscontrollerVapPortalMessageOverridesPtrOutput {
	return o
}

func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) Elem() WirelesscontrollerVapPortalMessageOverridesOutput {
	return o.ApplyT(func(v *WirelesscontrollerVapPortalMessageOverrides) WirelesscontrollerVapPortalMessageOverrides {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerVapPortalMessageOverrides
		return ret
	}).(WirelesscontrollerVapPortalMessageOverridesOutput)
}

// Override auth-disclaimer-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerVapPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthDisclaimerPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-login-failed-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerVapPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginFailedPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-login-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerVapPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-reject-page message with message from portal-message-overrides group.
func (o WirelesscontrollerVapPortalMessageOverridesPtrOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerVapPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthRejectPage
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapRadiusMacAuthUsergroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerVapRadiusMacAuthUsergroupInput is an input type that accepts WirelesscontrollerVapRadiusMacAuthUsergroupArgs and WirelesscontrollerVapRadiusMacAuthUsergroupOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapRadiusMacAuthUsergroupInput` via:
//
//	WirelesscontrollerVapRadiusMacAuthUsergroupArgs{...}
type WirelesscontrollerVapRadiusMacAuthUsergroupInput interface {
	pulumi.Input

	ToWirelesscontrollerVapRadiusMacAuthUsergroupOutput() WirelesscontrollerVapRadiusMacAuthUsergroupOutput
	ToWirelesscontrollerVapRadiusMacAuthUsergroupOutputWithContext(context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupOutput
}

type WirelesscontrollerVapRadiusMacAuthUsergroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerVapRadiusMacAuthUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapRadiusMacAuthUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapRadiusMacAuthUsergroupArgs) ToWirelesscontrollerVapRadiusMacAuthUsergroupOutput() WirelesscontrollerVapRadiusMacAuthUsergroupOutput {
	return i.ToWirelesscontrollerVapRadiusMacAuthUsergroupOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapRadiusMacAuthUsergroupArgs) ToWirelesscontrollerVapRadiusMacAuthUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapRadiusMacAuthUsergroupOutput)
}

// WirelesscontrollerVapRadiusMacAuthUsergroupArrayInput is an input type that accepts WirelesscontrollerVapRadiusMacAuthUsergroupArray and WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapRadiusMacAuthUsergroupArrayInput` via:
//
//	WirelesscontrollerVapRadiusMacAuthUsergroupArray{ WirelesscontrollerVapRadiusMacAuthUsergroupArgs{...} }
type WirelesscontrollerVapRadiusMacAuthUsergroupArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput() WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput
	ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutputWithContext(context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput
}

type WirelesscontrollerVapRadiusMacAuthUsergroupArray []WirelesscontrollerVapRadiusMacAuthUsergroupInput

func (WirelesscontrollerVapRadiusMacAuthUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapRadiusMacAuthUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapRadiusMacAuthUsergroupArray) ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput() WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput {
	return i.ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapRadiusMacAuthUsergroupArray) ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput)
}

type WirelesscontrollerVapRadiusMacAuthUsergroupOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapRadiusMacAuthUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapRadiusMacAuthUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapRadiusMacAuthUsergroupOutput) ToWirelesscontrollerVapRadiusMacAuthUsergroupOutput() WirelesscontrollerVapRadiusMacAuthUsergroupOutput {
	return o
}

func (o WirelesscontrollerVapRadiusMacAuthUsergroupOutput) ToWirelesscontrollerVapRadiusMacAuthUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupOutput {
	return o
}

// User group name.
func (o WirelesscontrollerVapRadiusMacAuthUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapRadiusMacAuthUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapRadiusMacAuthUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput) ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput() WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput) ToWirelesscontrollerVapRadiusMacAuthUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapRadiusMacAuthUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapRadiusMacAuthUsergroup {
		return vs[0].([]WirelesscontrollerVapRadiusMacAuthUsergroup)[vs[1].(int)]
	}).(WirelesscontrollerVapRadiusMacAuthUsergroupOutput)
}

type WirelesscontrollerVapSelectedUsergroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerVapSelectedUsergroupInput is an input type that accepts WirelesscontrollerVapSelectedUsergroupArgs and WirelesscontrollerVapSelectedUsergroupOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapSelectedUsergroupInput` via:
//
//	WirelesscontrollerVapSelectedUsergroupArgs{...}
type WirelesscontrollerVapSelectedUsergroupInput interface {
	pulumi.Input

	ToWirelesscontrollerVapSelectedUsergroupOutput() WirelesscontrollerVapSelectedUsergroupOutput
	ToWirelesscontrollerVapSelectedUsergroupOutputWithContext(context.Context) WirelesscontrollerVapSelectedUsergroupOutput
}

type WirelesscontrollerVapSelectedUsergroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerVapSelectedUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapSelectedUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapSelectedUsergroupArgs) ToWirelesscontrollerVapSelectedUsergroupOutput() WirelesscontrollerVapSelectedUsergroupOutput {
	return i.ToWirelesscontrollerVapSelectedUsergroupOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapSelectedUsergroupArgs) ToWirelesscontrollerVapSelectedUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapSelectedUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapSelectedUsergroupOutput)
}

// WirelesscontrollerVapSelectedUsergroupArrayInput is an input type that accepts WirelesscontrollerVapSelectedUsergroupArray and WirelesscontrollerVapSelectedUsergroupArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapSelectedUsergroupArrayInput` via:
//
//	WirelesscontrollerVapSelectedUsergroupArray{ WirelesscontrollerVapSelectedUsergroupArgs{...} }
type WirelesscontrollerVapSelectedUsergroupArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapSelectedUsergroupArrayOutput() WirelesscontrollerVapSelectedUsergroupArrayOutput
	ToWirelesscontrollerVapSelectedUsergroupArrayOutputWithContext(context.Context) WirelesscontrollerVapSelectedUsergroupArrayOutput
}

type WirelesscontrollerVapSelectedUsergroupArray []WirelesscontrollerVapSelectedUsergroupInput

func (WirelesscontrollerVapSelectedUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapSelectedUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapSelectedUsergroupArray) ToWirelesscontrollerVapSelectedUsergroupArrayOutput() WirelesscontrollerVapSelectedUsergroupArrayOutput {
	return i.ToWirelesscontrollerVapSelectedUsergroupArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapSelectedUsergroupArray) ToWirelesscontrollerVapSelectedUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapSelectedUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapSelectedUsergroupArrayOutput)
}

type WirelesscontrollerVapSelectedUsergroupOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapSelectedUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapSelectedUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapSelectedUsergroupOutput) ToWirelesscontrollerVapSelectedUsergroupOutput() WirelesscontrollerVapSelectedUsergroupOutput {
	return o
}

func (o WirelesscontrollerVapSelectedUsergroupOutput) ToWirelesscontrollerVapSelectedUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapSelectedUsergroupOutput {
	return o
}

// User group name.
func (o WirelesscontrollerVapSelectedUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapSelectedUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapSelectedUsergroupArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapSelectedUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapSelectedUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapSelectedUsergroupArrayOutput) ToWirelesscontrollerVapSelectedUsergroupArrayOutput() WirelesscontrollerVapSelectedUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapSelectedUsergroupArrayOutput) ToWirelesscontrollerVapSelectedUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapSelectedUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapSelectedUsergroupArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapSelectedUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapSelectedUsergroup {
		return vs[0].([]WirelesscontrollerVapSelectedUsergroup)[vs[1].(int)]
	}).(WirelesscontrollerVapSelectedUsergroupOutput)
}

type WirelesscontrollerVapUsergroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerVapUsergroupInput is an input type that accepts WirelesscontrollerVapUsergroupArgs and WirelesscontrollerVapUsergroupOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapUsergroupInput` via:
//
//	WirelesscontrollerVapUsergroupArgs{...}
type WirelesscontrollerVapUsergroupInput interface {
	pulumi.Input

	ToWirelesscontrollerVapUsergroupOutput() WirelesscontrollerVapUsergroupOutput
	ToWirelesscontrollerVapUsergroupOutputWithContext(context.Context) WirelesscontrollerVapUsergroupOutput
}

type WirelesscontrollerVapUsergroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerVapUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapUsergroupArgs) ToWirelesscontrollerVapUsergroupOutput() WirelesscontrollerVapUsergroupOutput {
	return i.ToWirelesscontrollerVapUsergroupOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapUsergroupArgs) ToWirelesscontrollerVapUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapUsergroupOutput)
}

// WirelesscontrollerVapUsergroupArrayInput is an input type that accepts WirelesscontrollerVapUsergroupArray and WirelesscontrollerVapUsergroupArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapUsergroupArrayInput` via:
//
//	WirelesscontrollerVapUsergroupArray{ WirelesscontrollerVapUsergroupArgs{...} }
type WirelesscontrollerVapUsergroupArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapUsergroupArrayOutput() WirelesscontrollerVapUsergroupArrayOutput
	ToWirelesscontrollerVapUsergroupArrayOutputWithContext(context.Context) WirelesscontrollerVapUsergroupArrayOutput
}

type WirelesscontrollerVapUsergroupArray []WirelesscontrollerVapUsergroupInput

func (WirelesscontrollerVapUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapUsergroup)(nil)).Elem()
}

func (i WirelesscontrollerVapUsergroupArray) ToWirelesscontrollerVapUsergroupArrayOutput() WirelesscontrollerVapUsergroupArrayOutput {
	return i.ToWirelesscontrollerVapUsergroupArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapUsergroupArray) ToWirelesscontrollerVapUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapUsergroupArrayOutput)
}

type WirelesscontrollerVapUsergroupOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapUsergroupOutput) ToWirelesscontrollerVapUsergroupOutput() WirelesscontrollerVapUsergroupOutput {
	return o
}

func (o WirelesscontrollerVapUsergroupOutput) ToWirelesscontrollerVapUsergroupOutputWithContext(ctx context.Context) WirelesscontrollerVapUsergroupOutput {
	return o
}

// User group name.
func (o WirelesscontrollerVapUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapUsergroupArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapUsergroup)(nil)).Elem()
}

func (o WirelesscontrollerVapUsergroupArrayOutput) ToWirelesscontrollerVapUsergroupArrayOutput() WirelesscontrollerVapUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapUsergroupArrayOutput) ToWirelesscontrollerVapUsergroupArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapUsergroupArrayOutput {
	return o
}

func (o WirelesscontrollerVapUsergroupArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapUsergroup {
		return vs[0].([]WirelesscontrollerVapUsergroup)[vs[1].(int)]
	}).(WirelesscontrollerVapUsergroupOutput)
}

type WirelesscontrollerVapVlanName struct {
	// VLAN name.
	Name *string `pulumi:"name"`
	// VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// WirelesscontrollerVapVlanNameInput is an input type that accepts WirelesscontrollerVapVlanNameArgs and WirelesscontrollerVapVlanNameOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapVlanNameInput` via:
//
//	WirelesscontrollerVapVlanNameArgs{...}
type WirelesscontrollerVapVlanNameInput interface {
	pulumi.Input

	ToWirelesscontrollerVapVlanNameOutput() WirelesscontrollerVapVlanNameOutput
	ToWirelesscontrollerVapVlanNameOutputWithContext(context.Context) WirelesscontrollerVapVlanNameOutput
}

type WirelesscontrollerVapVlanNameArgs struct {
	// VLAN name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (WirelesscontrollerVapVlanNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapVlanName)(nil)).Elem()
}

func (i WirelesscontrollerVapVlanNameArgs) ToWirelesscontrollerVapVlanNameOutput() WirelesscontrollerVapVlanNameOutput {
	return i.ToWirelesscontrollerVapVlanNameOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapVlanNameArgs) ToWirelesscontrollerVapVlanNameOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapVlanNameOutput)
}

// WirelesscontrollerVapVlanNameArrayInput is an input type that accepts WirelesscontrollerVapVlanNameArray and WirelesscontrollerVapVlanNameArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapVlanNameArrayInput` via:
//
//	WirelesscontrollerVapVlanNameArray{ WirelesscontrollerVapVlanNameArgs{...} }
type WirelesscontrollerVapVlanNameArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapVlanNameArrayOutput() WirelesscontrollerVapVlanNameArrayOutput
	ToWirelesscontrollerVapVlanNameArrayOutputWithContext(context.Context) WirelesscontrollerVapVlanNameArrayOutput
}

type WirelesscontrollerVapVlanNameArray []WirelesscontrollerVapVlanNameInput

func (WirelesscontrollerVapVlanNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapVlanName)(nil)).Elem()
}

func (i WirelesscontrollerVapVlanNameArray) ToWirelesscontrollerVapVlanNameArrayOutput() WirelesscontrollerVapVlanNameArrayOutput {
	return i.ToWirelesscontrollerVapVlanNameArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapVlanNameArray) ToWirelesscontrollerVapVlanNameArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapVlanNameArrayOutput)
}

type WirelesscontrollerVapVlanNameOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapVlanNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapVlanName)(nil)).Elem()
}

func (o WirelesscontrollerVapVlanNameOutput) ToWirelesscontrollerVapVlanNameOutput() WirelesscontrollerVapVlanNameOutput {
	return o
}

func (o WirelesscontrollerVapVlanNameOutput) ToWirelesscontrollerVapVlanNameOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanNameOutput {
	return o
}

// VLAN name.
func (o WirelesscontrollerVapVlanNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapVlanName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// VLAN ID.
func (o WirelesscontrollerVapVlanNameOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapVlanName) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerVapVlanNameArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapVlanNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapVlanName)(nil)).Elem()
}

func (o WirelesscontrollerVapVlanNameArrayOutput) ToWirelesscontrollerVapVlanNameArrayOutput() WirelesscontrollerVapVlanNameArrayOutput {
	return o
}

func (o WirelesscontrollerVapVlanNameArrayOutput) ToWirelesscontrollerVapVlanNameArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanNameArrayOutput {
	return o
}

func (o WirelesscontrollerVapVlanNameArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapVlanNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapVlanName {
		return vs[0].([]WirelesscontrollerVapVlanName)[vs[1].(int)]
	}).(WirelesscontrollerVapVlanNameOutput)
}

type WirelesscontrollerVapVlanPool struct {
	// ID.
	Id *int `pulumi:"id"`
	// WTP group name.
	WtpGroup *string `pulumi:"wtpGroup"`
}

// WirelesscontrollerVapVlanPoolInput is an input type that accepts WirelesscontrollerVapVlanPoolArgs and WirelesscontrollerVapVlanPoolOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapVlanPoolInput` via:
//
//	WirelesscontrollerVapVlanPoolArgs{...}
type WirelesscontrollerVapVlanPoolInput interface {
	pulumi.Input

	ToWirelesscontrollerVapVlanPoolOutput() WirelesscontrollerVapVlanPoolOutput
	ToWirelesscontrollerVapVlanPoolOutputWithContext(context.Context) WirelesscontrollerVapVlanPoolOutput
}

type WirelesscontrollerVapVlanPoolArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// WTP group name.
	WtpGroup pulumi.StringPtrInput `pulumi:"wtpGroup"`
}

func (WirelesscontrollerVapVlanPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapVlanPool)(nil)).Elem()
}

func (i WirelesscontrollerVapVlanPoolArgs) ToWirelesscontrollerVapVlanPoolOutput() WirelesscontrollerVapVlanPoolOutput {
	return i.ToWirelesscontrollerVapVlanPoolOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapVlanPoolArgs) ToWirelesscontrollerVapVlanPoolOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapVlanPoolOutput)
}

// WirelesscontrollerVapVlanPoolArrayInput is an input type that accepts WirelesscontrollerVapVlanPoolArray and WirelesscontrollerVapVlanPoolArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapVlanPoolArrayInput` via:
//
//	WirelesscontrollerVapVlanPoolArray{ WirelesscontrollerVapVlanPoolArgs{...} }
type WirelesscontrollerVapVlanPoolArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapVlanPoolArrayOutput() WirelesscontrollerVapVlanPoolArrayOutput
	ToWirelesscontrollerVapVlanPoolArrayOutputWithContext(context.Context) WirelesscontrollerVapVlanPoolArrayOutput
}

type WirelesscontrollerVapVlanPoolArray []WirelesscontrollerVapVlanPoolInput

func (WirelesscontrollerVapVlanPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapVlanPool)(nil)).Elem()
}

func (i WirelesscontrollerVapVlanPoolArray) ToWirelesscontrollerVapVlanPoolArrayOutput() WirelesscontrollerVapVlanPoolArrayOutput {
	return i.ToWirelesscontrollerVapVlanPoolArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapVlanPoolArray) ToWirelesscontrollerVapVlanPoolArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapVlanPoolArrayOutput)
}

type WirelesscontrollerVapVlanPoolOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapVlanPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapVlanPool)(nil)).Elem()
}

func (o WirelesscontrollerVapVlanPoolOutput) ToWirelesscontrollerVapVlanPoolOutput() WirelesscontrollerVapVlanPoolOutput {
	return o
}

func (o WirelesscontrollerVapVlanPoolOutput) ToWirelesscontrollerVapVlanPoolOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanPoolOutput {
	return o
}

// ID.
func (o WirelesscontrollerVapVlanPoolOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapVlanPool) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// WTP group name.
func (o WirelesscontrollerVapVlanPoolOutput) WtpGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapVlanPool) *string { return v.WtpGroup }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapVlanPoolArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapVlanPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapVlanPool)(nil)).Elem()
}

func (o WirelesscontrollerVapVlanPoolArrayOutput) ToWirelesscontrollerVapVlanPoolArrayOutput() WirelesscontrollerVapVlanPoolArrayOutput {
	return o
}

func (o WirelesscontrollerVapVlanPoolArrayOutput) ToWirelesscontrollerVapVlanPoolArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapVlanPoolArrayOutput {
	return o
}

func (o WirelesscontrollerVapVlanPoolArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapVlanPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapVlanPool {
		return vs[0].([]WirelesscontrollerVapVlanPool)[vs[1].(int)]
	}).(WirelesscontrollerVapVlanPoolOutput)
}

type WirelesscontrollerVapgroupVap struct {
	// vap name
	Name *string `pulumi:"name"`
}

// WirelesscontrollerVapgroupVapInput is an input type that accepts WirelesscontrollerVapgroupVapArgs and WirelesscontrollerVapgroupVapOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapgroupVapInput` via:
//
//	WirelesscontrollerVapgroupVapArgs{...}
type WirelesscontrollerVapgroupVapInput interface {
	pulumi.Input

	ToWirelesscontrollerVapgroupVapOutput() WirelesscontrollerVapgroupVapOutput
	ToWirelesscontrollerVapgroupVapOutputWithContext(context.Context) WirelesscontrollerVapgroupVapOutput
}

type WirelesscontrollerVapgroupVapArgs struct {
	// vap name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerVapgroupVapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapgroupVap)(nil)).Elem()
}

func (i WirelesscontrollerVapgroupVapArgs) ToWirelesscontrollerVapgroupVapOutput() WirelesscontrollerVapgroupVapOutput {
	return i.ToWirelesscontrollerVapgroupVapOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapgroupVapArgs) ToWirelesscontrollerVapgroupVapOutputWithContext(ctx context.Context) WirelesscontrollerVapgroupVapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapgroupVapOutput)
}

// WirelesscontrollerVapgroupVapArrayInput is an input type that accepts WirelesscontrollerVapgroupVapArray and WirelesscontrollerVapgroupVapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerVapgroupVapArrayInput` via:
//
//	WirelesscontrollerVapgroupVapArray{ WirelesscontrollerVapgroupVapArgs{...} }
type WirelesscontrollerVapgroupVapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerVapgroupVapArrayOutput() WirelesscontrollerVapgroupVapArrayOutput
	ToWirelesscontrollerVapgroupVapArrayOutputWithContext(context.Context) WirelesscontrollerVapgroupVapArrayOutput
}

type WirelesscontrollerVapgroupVapArray []WirelesscontrollerVapgroupVapInput

func (WirelesscontrollerVapgroupVapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapgroupVap)(nil)).Elem()
}

func (i WirelesscontrollerVapgroupVapArray) ToWirelesscontrollerVapgroupVapArrayOutput() WirelesscontrollerVapgroupVapArrayOutput {
	return i.ToWirelesscontrollerVapgroupVapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerVapgroupVapArray) ToWirelesscontrollerVapgroupVapArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapgroupVapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerVapgroupVapArrayOutput)
}

type WirelesscontrollerVapgroupVapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapgroupVapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerVapgroupVap)(nil)).Elem()
}

func (o WirelesscontrollerVapgroupVapOutput) ToWirelesscontrollerVapgroupVapOutput() WirelesscontrollerVapgroupVapOutput {
	return o
}

func (o WirelesscontrollerVapgroupVapOutput) ToWirelesscontrollerVapgroupVapOutputWithContext(ctx context.Context) WirelesscontrollerVapgroupVapOutput {
	return o
}

// vap name
func (o WirelesscontrollerVapgroupVapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerVapgroupVap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerVapgroupVapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerVapgroupVapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerVapgroupVap)(nil)).Elem()
}

func (o WirelesscontrollerVapgroupVapArrayOutput) ToWirelesscontrollerVapgroupVapArrayOutput() WirelesscontrollerVapgroupVapArrayOutput {
	return o
}

func (o WirelesscontrollerVapgroupVapArrayOutput) ToWirelesscontrollerVapgroupVapArrayOutputWithContext(ctx context.Context) WirelesscontrollerVapgroupVapArrayOutput {
	return o
}

func (o WirelesscontrollerVapgroupVapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerVapgroupVapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerVapgroupVap {
		return vs[0].([]WirelesscontrollerVapgroupVap)[vs[1].(int)]
	}).(WirelesscontrollerVapgroupVapOutput)
}

type WirelesscontrollerWidsprofileApBgscanDisableSchedule struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWidsprofileApBgscanDisableScheduleInput is an input type that accepts WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs and WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerWidsprofileApBgscanDisableScheduleInput` via:
//
//	WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs{...}
type WirelesscontrollerWidsprofileApBgscanDisableScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput
	ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutputWithContext(context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput
}

type WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWidsprofileApBgscanDisableSchedule)(nil)).Elem()
}

func (i WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput {
	return i.ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutputWithContext(ctx context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput)
}

// WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayInput is an input type that accepts WirelesscontrollerWidsprofileApBgscanDisableScheduleArray and WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayInput` via:
//
//	WirelesscontrollerWidsprofileApBgscanDisableScheduleArray{ WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs{...} }
type WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput
	ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutputWithContext(context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput
}

type WirelesscontrollerWidsprofileApBgscanDisableScheduleArray []WirelesscontrollerWidsprofileApBgscanDisableScheduleInput

func (WirelesscontrollerWidsprofileApBgscanDisableScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWidsprofileApBgscanDisableSchedule)(nil)).Elem()
}

func (i WirelesscontrollerWidsprofileApBgscanDisableScheduleArray) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput {
	return i.ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWidsprofileApBgscanDisableScheduleArray) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput)
}

type WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWidsprofileApBgscanDisableSchedule)(nil)).Elem()
}

func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput {
	return o
}

func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleOutputWithContext(ctx context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput {
	return o
}

// Schedule name.
func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWidsprofileApBgscanDisableSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWidsprofileApBgscanDisableSchedule)(nil)).Elem()
}

func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput() WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput) ToWirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWidsprofileApBgscanDisableSchedule {
		return vs[0].([]WirelesscontrollerWidsprofileApBgscanDisableSchedule)[vs[1].(int)]
	}).(WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput)
}

type WirelesscontrollerWtpLan struct {
	// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port1Mode *string `pulumi:"port1Mode"`
	// Bridge LAN port 1 to SSID.
	Port1Ssid *string `pulumi:"port1Ssid"`
	// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port2Mode *string `pulumi:"port2Mode"`
	// Bridge LAN port 2 to SSID.
	Port2Ssid *string `pulumi:"port2Ssid"`
	// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port3Mode *string `pulumi:"port3Mode"`
	// Bridge LAN port 3 to SSID.
	Port3Ssid *string `pulumi:"port3Ssid"`
	// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port4Mode *string `pulumi:"port4Mode"`
	// Bridge LAN port 4 to SSID.
	Port4Ssid *string `pulumi:"port4Ssid"`
	// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port5Mode *string `pulumi:"port5Mode"`
	// Bridge LAN port 5 to SSID.
	Port5Ssid *string `pulumi:"port5Ssid"`
	// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port6Mode *string `pulumi:"port6Mode"`
	// Bridge LAN port 6 to SSID.
	Port6Ssid *string `pulumi:"port6Ssid"`
	// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port7Mode *string `pulumi:"port7Mode"`
	// Bridge LAN port 7 to SSID.
	Port7Ssid *string `pulumi:"port7Ssid"`
	// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port8Mode *string `pulumi:"port8Mode"`
	// Bridge LAN port 8 to SSID.
	Port8Ssid *string `pulumi:"port8Ssid"`
	// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortEslMode *string `pulumi:"portEslMode"`
	// Bridge ESL port to SSID.
	//
	// The `radio1` block supports:
	PortEslSsid *string `pulumi:"portEslSsid"`
	// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortMode *string `pulumi:"portMode"`
	// Bridge LAN port to SSID.
	PortSsid *string `pulumi:"portSsid"`
}

// WirelesscontrollerWtpLanInput is an input type that accepts WirelesscontrollerWtpLanArgs and WirelesscontrollerWtpLanOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpLanInput` via:
//
//	WirelesscontrollerWtpLanArgs{...}
type WirelesscontrollerWtpLanInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpLanOutput() WirelesscontrollerWtpLanOutput
	ToWirelesscontrollerWtpLanOutputWithContext(context.Context) WirelesscontrollerWtpLanOutput
}

type WirelesscontrollerWtpLanArgs struct {
	// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port1Mode pulumi.StringPtrInput `pulumi:"port1Mode"`
	// Bridge LAN port 1 to SSID.
	Port1Ssid pulumi.StringPtrInput `pulumi:"port1Ssid"`
	// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port2Mode pulumi.StringPtrInput `pulumi:"port2Mode"`
	// Bridge LAN port 2 to SSID.
	Port2Ssid pulumi.StringPtrInput `pulumi:"port2Ssid"`
	// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port3Mode pulumi.StringPtrInput `pulumi:"port3Mode"`
	// Bridge LAN port 3 to SSID.
	Port3Ssid pulumi.StringPtrInput `pulumi:"port3Ssid"`
	// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port4Mode pulumi.StringPtrInput `pulumi:"port4Mode"`
	// Bridge LAN port 4 to SSID.
	Port4Ssid pulumi.StringPtrInput `pulumi:"port4Ssid"`
	// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port5Mode pulumi.StringPtrInput `pulumi:"port5Mode"`
	// Bridge LAN port 5 to SSID.
	Port5Ssid pulumi.StringPtrInput `pulumi:"port5Ssid"`
	// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port6Mode pulumi.StringPtrInput `pulumi:"port6Mode"`
	// Bridge LAN port 6 to SSID.
	Port6Ssid pulumi.StringPtrInput `pulumi:"port6Ssid"`
	// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port7Mode pulumi.StringPtrInput `pulumi:"port7Mode"`
	// Bridge LAN port 7 to SSID.
	Port7Ssid pulumi.StringPtrInput `pulumi:"port7Ssid"`
	// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port8Mode pulumi.StringPtrInput `pulumi:"port8Mode"`
	// Bridge LAN port 8 to SSID.
	Port8Ssid pulumi.StringPtrInput `pulumi:"port8Ssid"`
	// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortEslMode pulumi.StringPtrInput `pulumi:"portEslMode"`
	// Bridge ESL port to SSID.
	//
	// The `radio1` block supports:
	PortEslSsid pulumi.StringPtrInput `pulumi:"portEslSsid"`
	// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortMode pulumi.StringPtrInput `pulumi:"portMode"`
	// Bridge LAN port to SSID.
	PortSsid pulumi.StringPtrInput `pulumi:"portSsid"`
}

func (WirelesscontrollerWtpLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpLan)(nil)).Elem()
}

func (i WirelesscontrollerWtpLanArgs) ToWirelesscontrollerWtpLanOutput() WirelesscontrollerWtpLanOutput {
	return i.ToWirelesscontrollerWtpLanOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpLanArgs) ToWirelesscontrollerWtpLanOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpLanOutput)
}

func (i WirelesscontrollerWtpLanArgs) ToWirelesscontrollerWtpLanPtrOutput() WirelesscontrollerWtpLanPtrOutput {
	return i.ToWirelesscontrollerWtpLanPtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpLanArgs) ToWirelesscontrollerWtpLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpLanOutput).ToWirelesscontrollerWtpLanPtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpLanPtrInput is an input type that accepts WirelesscontrollerWtpLanArgs, WirelesscontrollerWtpLanPtr and WirelesscontrollerWtpLanPtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpLanPtrInput` via:
//
//	        WirelesscontrollerWtpLanArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpLanPtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpLanPtrOutput() WirelesscontrollerWtpLanPtrOutput
	ToWirelesscontrollerWtpLanPtrOutputWithContext(context.Context) WirelesscontrollerWtpLanPtrOutput
}

type wirelesscontrollerWtpLanPtrType WirelesscontrollerWtpLanArgs

func WirelesscontrollerWtpLanPtr(v *WirelesscontrollerWtpLanArgs) WirelesscontrollerWtpLanPtrInput {
	return (*wirelesscontrollerWtpLanPtrType)(v)
}

func (*wirelesscontrollerWtpLanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpLan)(nil)).Elem()
}

func (i *wirelesscontrollerWtpLanPtrType) ToWirelesscontrollerWtpLanPtrOutput() WirelesscontrollerWtpLanPtrOutput {
	return i.ToWirelesscontrollerWtpLanPtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpLanPtrType) ToWirelesscontrollerWtpLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpLanPtrOutput)
}

type WirelesscontrollerWtpLanOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpLan)(nil)).Elem()
}

func (o WirelesscontrollerWtpLanOutput) ToWirelesscontrollerWtpLanOutput() WirelesscontrollerWtpLanOutput {
	return o
}

func (o WirelesscontrollerWtpLanOutput) ToWirelesscontrollerWtpLanOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanOutput {
	return o
}

func (o WirelesscontrollerWtpLanOutput) ToWirelesscontrollerWtpLanPtrOutput() WirelesscontrollerWtpLanPtrOutput {
	return o.ToWirelesscontrollerWtpLanPtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpLanOutput) ToWirelesscontrollerWtpLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpLan) *WirelesscontrollerWtpLan {
		return &v
	}).(WirelesscontrollerWtpLanPtrOutput)
}

// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port1Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port1Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 1 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port1Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port1Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port2Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port2Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 2 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port2Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port2Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port3Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port3Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 3 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port3Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port3Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port4Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port4Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 4 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port4Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port4Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port5Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port5Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 5 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port5Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port5Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port6Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 6 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port6Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port6Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port7Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port7Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 7 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port7Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port7Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) Port8Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port8Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 8 to SSID.
func (o WirelesscontrollerWtpLanOutput) Port8Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.Port8Ssid }).(pulumi.StringPtrOutput)
}

// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) PortEslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.PortEslMode }).(pulumi.StringPtrOutput)
}

// Bridge ESL port to SSID.
//
// The `radio1` block supports:
func (o WirelesscontrollerWtpLanOutput) PortEslSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.PortEslSsid }).(pulumi.StringPtrOutput)
}

// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanOutput) PortMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.PortMode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port to SSID.
func (o WirelesscontrollerWtpLanOutput) PortSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpLan) *string { return v.PortSsid }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpLanPtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpLanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpLan)(nil)).Elem()
}

func (o WirelesscontrollerWtpLanPtrOutput) ToWirelesscontrollerWtpLanPtrOutput() WirelesscontrollerWtpLanPtrOutput {
	return o
}

func (o WirelesscontrollerWtpLanPtrOutput) ToWirelesscontrollerWtpLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpLanPtrOutput {
	return o
}

func (o WirelesscontrollerWtpLanPtrOutput) Elem() WirelesscontrollerWtpLanOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) WirelesscontrollerWtpLan {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpLan
		return ret
	}).(WirelesscontrollerWtpLanOutput)
}

// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port1Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port1Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 1 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port1Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port1Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port2Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port2Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 2 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port2Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port2Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port3Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port3Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 3 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port3Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port3Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port4Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port4Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 4 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port4Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port4Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port5Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port5Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 5 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port5Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port5Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port6Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 6 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port6Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port6Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port7Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port7Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 7 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port7Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port7Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) Port8Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port8Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 8 to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) Port8Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.Port8Ssid
	}).(pulumi.StringPtrOutput)
}

// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) PortEslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.PortEslMode
	}).(pulumi.StringPtrOutput)
}

// Bridge ESL port to SSID.
//
// The `radio1` block supports:
func (o WirelesscontrollerWtpLanPtrOutput) PortEslSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.PortEslSsid
	}).(pulumi.StringPtrOutput)
}

// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpLanPtrOutput) PortMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.PortMode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port to SSID.
func (o WirelesscontrollerWtpLanPtrOutput) PortSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpLan) *string {
		if v == nil {
			return nil
		}
		return v.PortSsid
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio1 struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpRadio1Channel `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode *string `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis *string `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand *string `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel *string `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower *string `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps *string `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// radio-id
	RadioId *int `pulumi:"radioId"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpRadio1Vap `pulumi:"vaps"`
}

// WirelesscontrollerWtpRadio1Input is an input type that accepts WirelesscontrollerWtpRadio1Args and WirelesscontrollerWtpRadio1Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1Input` via:
//
//	WirelesscontrollerWtpRadio1Args{...}
type WirelesscontrollerWtpRadio1Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1Output() WirelesscontrollerWtpRadio1Output
	ToWirelesscontrollerWtpRadio1OutputWithContext(context.Context) WirelesscontrollerWtpRadio1Output
}

type WirelesscontrollerWtpRadio1Args struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpRadio1ChannelArrayInput `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode pulumi.StringPtrInput `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis pulumi.StringPtrInput `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand pulumi.StringPtrInput `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel pulumi.StringPtrInput `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower pulumi.StringPtrInput `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps pulumi.StringPtrInput `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// radio-id
	RadioId pulumi.IntPtrInput `pulumi:"radioId"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpRadio1VapArrayInput `pulumi:"vaps"`
}

func (WirelesscontrollerWtpRadio1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio1Args) ToWirelesscontrollerWtpRadio1Output() WirelesscontrollerWtpRadio1Output {
	return i.ToWirelesscontrollerWtpRadio1OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1Args) ToWirelesscontrollerWtpRadio1OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1Output)
}

func (i WirelesscontrollerWtpRadio1Args) ToWirelesscontrollerWtpRadio1PtrOutput() WirelesscontrollerWtpRadio1PtrOutput {
	return i.ToWirelesscontrollerWtpRadio1PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1Args) ToWirelesscontrollerWtpRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1Output).ToWirelesscontrollerWtpRadio1PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpRadio1PtrInput is an input type that accepts WirelesscontrollerWtpRadio1Args, WirelesscontrollerWtpRadio1Ptr and WirelesscontrollerWtpRadio1PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1PtrInput` via:
//
//	        WirelesscontrollerWtpRadio1Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpRadio1PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1PtrOutput() WirelesscontrollerWtpRadio1PtrOutput
	ToWirelesscontrollerWtpRadio1PtrOutputWithContext(context.Context) WirelesscontrollerWtpRadio1PtrOutput
}

type wirelesscontrollerWtpRadio1PtrType WirelesscontrollerWtpRadio1Args

func WirelesscontrollerWtpRadio1Ptr(v *WirelesscontrollerWtpRadio1Args) WirelesscontrollerWtpRadio1PtrInput {
	return (*wirelesscontrollerWtpRadio1PtrType)(v)
}

func (*wirelesscontrollerWtpRadio1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio1)(nil)).Elem()
}

func (i *wirelesscontrollerWtpRadio1PtrType) ToWirelesscontrollerWtpRadio1PtrOutput() WirelesscontrollerWtpRadio1PtrOutput {
	return i.ToWirelesscontrollerWtpRadio1PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpRadio1PtrType) ToWirelesscontrollerWtpRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1PtrOutput)
}

type WirelesscontrollerWtpRadio1Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1Output) ToWirelesscontrollerWtpRadio1Output() WirelesscontrollerWtpRadio1Output {
	return o
}

func (o WirelesscontrollerWtpRadio1Output) ToWirelesscontrollerWtpRadio1OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1Output {
	return o
}

func (o WirelesscontrollerWtpRadio1Output) ToWirelesscontrollerWtpRadio1PtrOutput() WirelesscontrollerWtpRadio1PtrOutput {
	return o.ToWirelesscontrollerWtpRadio1PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpRadio1Output) ToWirelesscontrollerWtpRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpRadio1) *WirelesscontrollerWtpRadio1 {
		return &v
	}).(WirelesscontrollerWtpRadio1PtrOutput)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio1Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio1Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio1Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio1Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio1Output) Channels() WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) []WirelesscontrollerWtpRadio1Channel { return v.Channels }).(WirelesscontrollerWtpRadio1ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio1Output) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.DrmaManualMode }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.OverrideAnalysis }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.OverrideBand }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.OverrideChannel }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.OverrideTxpower }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1Output) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.OverrideVaps }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio1Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio1Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio1Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpRadio1Output) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *int { return v.RadioId }).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio1Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio1Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio1Output) Vaps() WirelesscontrollerWtpRadio1VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1) []WirelesscontrollerWtpRadio1Vap { return v.Vaps }).(WirelesscontrollerWtpRadio1VapArrayOutput)
}

type WirelesscontrollerWtpRadio1PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio1)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1PtrOutput) ToWirelesscontrollerWtpRadio1PtrOutput() WirelesscontrollerWtpRadio1PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1PtrOutput) ToWirelesscontrollerWtpRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1PtrOutput) Elem() WirelesscontrollerWtpRadio1Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) WirelesscontrollerWtpRadio1 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpRadio1
		return ret
	}).(WirelesscontrollerWtpRadio1Output)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio1PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio1PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio1PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio1PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio1PtrOutput) Channels() WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) []WirelesscontrollerWtpRadio1Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpRadio1ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio1PtrOutput) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.DrmaManualMode
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OverrideAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OverrideBand
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OverrideChannel
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OverrideTxpower
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio1PtrOutput) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OverrideVaps
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio1PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio1PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio1PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpRadio1PtrOutput) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *int {
		if v == nil {
			return nil
		}
		return v.RadioId
	}).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio1PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio1PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio1PtrOutput) Vaps() WirelesscontrollerWtpRadio1VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio1) []WirelesscontrollerWtpRadio1Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpRadio1VapArrayOutput)
}

type WirelesscontrollerWtpRadio1Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpRadio1ChannelInput is an input type that accepts WirelesscontrollerWtpRadio1ChannelArgs and WirelesscontrollerWtpRadio1ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1ChannelInput` via:
//
//	WirelesscontrollerWtpRadio1ChannelArgs{...}
type WirelesscontrollerWtpRadio1ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1ChannelOutput() WirelesscontrollerWtpRadio1ChannelOutput
	ToWirelesscontrollerWtpRadio1ChannelOutputWithContext(context.Context) WirelesscontrollerWtpRadio1ChannelOutput
}

type WirelesscontrollerWtpRadio1ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpRadio1ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio1ChannelArgs) ToWirelesscontrollerWtpRadio1ChannelOutput() WirelesscontrollerWtpRadio1ChannelOutput {
	return i.ToWirelesscontrollerWtpRadio1ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1ChannelArgs) ToWirelesscontrollerWtpRadio1ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1ChannelOutput)
}

// WirelesscontrollerWtpRadio1ChannelArrayInput is an input type that accepts WirelesscontrollerWtpRadio1ChannelArray and WirelesscontrollerWtpRadio1ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1ChannelArrayInput` via:
//
//	WirelesscontrollerWtpRadio1ChannelArray{ WirelesscontrollerWtpRadio1ChannelArgs{...} }
type WirelesscontrollerWtpRadio1ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1ChannelArrayOutput() WirelesscontrollerWtpRadio1ChannelArrayOutput
	ToWirelesscontrollerWtpRadio1ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio1ChannelArrayOutput
}

type WirelesscontrollerWtpRadio1ChannelArray []WirelesscontrollerWtpRadio1ChannelInput

func (WirelesscontrollerWtpRadio1ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio1Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio1ChannelArray) ToWirelesscontrollerWtpRadio1ChannelArrayOutput() WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpRadio1ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1ChannelArray) ToWirelesscontrollerWtpRadio1ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1ChannelArrayOutput)
}

type WirelesscontrollerWtpRadio1ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1ChannelOutput) ToWirelesscontrollerWtpRadio1ChannelOutput() WirelesscontrollerWtpRadio1ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1ChannelOutput) ToWirelesscontrollerWtpRadio1ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpRadio1ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio1ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio1Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1ChannelArrayOutput) ToWirelesscontrollerWtpRadio1ChannelArrayOutput() WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1ChannelArrayOutput) ToWirelesscontrollerWtpRadio1ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio1ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio1Channel {
		return vs[0].([]WirelesscontrollerWtpRadio1Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio1ChannelOutput)
}

type WirelesscontrollerWtpRadio1Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpRadio1VapInput is an input type that accepts WirelesscontrollerWtpRadio1VapArgs and WirelesscontrollerWtpRadio1VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1VapInput` via:
//
//	WirelesscontrollerWtpRadio1VapArgs{...}
type WirelesscontrollerWtpRadio1VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1VapOutput() WirelesscontrollerWtpRadio1VapOutput
	ToWirelesscontrollerWtpRadio1VapOutputWithContext(context.Context) WirelesscontrollerWtpRadio1VapOutput
}

type WirelesscontrollerWtpRadio1VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpRadio1VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio1VapArgs) ToWirelesscontrollerWtpRadio1VapOutput() WirelesscontrollerWtpRadio1VapOutput {
	return i.ToWirelesscontrollerWtpRadio1VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1VapArgs) ToWirelesscontrollerWtpRadio1VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1VapOutput)
}

// WirelesscontrollerWtpRadio1VapArrayInput is an input type that accepts WirelesscontrollerWtpRadio1VapArray and WirelesscontrollerWtpRadio1VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio1VapArrayInput` via:
//
//	WirelesscontrollerWtpRadio1VapArray{ WirelesscontrollerWtpRadio1VapArgs{...} }
type WirelesscontrollerWtpRadio1VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio1VapArrayOutput() WirelesscontrollerWtpRadio1VapArrayOutput
	ToWirelesscontrollerWtpRadio1VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio1VapArrayOutput
}

type WirelesscontrollerWtpRadio1VapArray []WirelesscontrollerWtpRadio1VapInput

func (WirelesscontrollerWtpRadio1VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio1Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio1VapArray) ToWirelesscontrollerWtpRadio1VapArrayOutput() WirelesscontrollerWtpRadio1VapArrayOutput {
	return i.ToWirelesscontrollerWtpRadio1VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio1VapArray) ToWirelesscontrollerWtpRadio1VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio1VapArrayOutput)
}

type WirelesscontrollerWtpRadio1VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio1Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1VapOutput) ToWirelesscontrollerWtpRadio1VapOutput() WirelesscontrollerWtpRadio1VapOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1VapOutput) ToWirelesscontrollerWtpRadio1VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpRadio1VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio1Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio1VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio1VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio1Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio1VapArrayOutput) ToWirelesscontrollerWtpRadio1VapArrayOutput() WirelesscontrollerWtpRadio1VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1VapArrayOutput) ToWirelesscontrollerWtpRadio1VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio1VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio1VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio1VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio1Vap {
		return vs[0].([]WirelesscontrollerWtpRadio1Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio1VapOutput)
}

type WirelesscontrollerWtpRadio2 struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpRadio2Channel `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode *string `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis *string `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand *string `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel *string `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower *string `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps *string `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// radio-id
	RadioId *int `pulumi:"radioId"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpRadio2Vap `pulumi:"vaps"`
}

// WirelesscontrollerWtpRadio2Input is an input type that accepts WirelesscontrollerWtpRadio2Args and WirelesscontrollerWtpRadio2Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2Input` via:
//
//	WirelesscontrollerWtpRadio2Args{...}
type WirelesscontrollerWtpRadio2Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2Output() WirelesscontrollerWtpRadio2Output
	ToWirelesscontrollerWtpRadio2OutputWithContext(context.Context) WirelesscontrollerWtpRadio2Output
}

type WirelesscontrollerWtpRadio2Args struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpRadio2ChannelArrayInput `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode pulumi.StringPtrInput `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis pulumi.StringPtrInput `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand pulumi.StringPtrInput `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel pulumi.StringPtrInput `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower pulumi.StringPtrInput `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps pulumi.StringPtrInput `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// radio-id
	RadioId pulumi.IntPtrInput `pulumi:"radioId"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpRadio2VapArrayInput `pulumi:"vaps"`
}

func (WirelesscontrollerWtpRadio2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio2Args) ToWirelesscontrollerWtpRadio2Output() WirelesscontrollerWtpRadio2Output {
	return i.ToWirelesscontrollerWtpRadio2OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2Args) ToWirelesscontrollerWtpRadio2OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2Output)
}

func (i WirelesscontrollerWtpRadio2Args) ToWirelesscontrollerWtpRadio2PtrOutput() WirelesscontrollerWtpRadio2PtrOutput {
	return i.ToWirelesscontrollerWtpRadio2PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2Args) ToWirelesscontrollerWtpRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2Output).ToWirelesscontrollerWtpRadio2PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpRadio2PtrInput is an input type that accepts WirelesscontrollerWtpRadio2Args, WirelesscontrollerWtpRadio2Ptr and WirelesscontrollerWtpRadio2PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2PtrInput` via:
//
//	        WirelesscontrollerWtpRadio2Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpRadio2PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2PtrOutput() WirelesscontrollerWtpRadio2PtrOutput
	ToWirelesscontrollerWtpRadio2PtrOutputWithContext(context.Context) WirelesscontrollerWtpRadio2PtrOutput
}

type wirelesscontrollerWtpRadio2PtrType WirelesscontrollerWtpRadio2Args

func WirelesscontrollerWtpRadio2Ptr(v *WirelesscontrollerWtpRadio2Args) WirelesscontrollerWtpRadio2PtrInput {
	return (*wirelesscontrollerWtpRadio2PtrType)(v)
}

func (*wirelesscontrollerWtpRadio2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio2)(nil)).Elem()
}

func (i *wirelesscontrollerWtpRadio2PtrType) ToWirelesscontrollerWtpRadio2PtrOutput() WirelesscontrollerWtpRadio2PtrOutput {
	return i.ToWirelesscontrollerWtpRadio2PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpRadio2PtrType) ToWirelesscontrollerWtpRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2PtrOutput)
}

type WirelesscontrollerWtpRadio2Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2Output) ToWirelesscontrollerWtpRadio2Output() WirelesscontrollerWtpRadio2Output {
	return o
}

func (o WirelesscontrollerWtpRadio2Output) ToWirelesscontrollerWtpRadio2OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2Output {
	return o
}

func (o WirelesscontrollerWtpRadio2Output) ToWirelesscontrollerWtpRadio2PtrOutput() WirelesscontrollerWtpRadio2PtrOutput {
	return o.ToWirelesscontrollerWtpRadio2PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpRadio2Output) ToWirelesscontrollerWtpRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpRadio2) *WirelesscontrollerWtpRadio2 {
		return &v
	}).(WirelesscontrollerWtpRadio2PtrOutput)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio2Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio2Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio2Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio2Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio2Output) Channels() WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) []WirelesscontrollerWtpRadio2Channel { return v.Channels }).(WirelesscontrollerWtpRadio2ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio2Output) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.DrmaManualMode }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.OverrideAnalysis }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.OverrideBand }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.OverrideChannel }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.OverrideTxpower }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2Output) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.OverrideVaps }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio2Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio2Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio2Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpRadio2Output) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *int { return v.RadioId }).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio2Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio2Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio2Output) Vaps() WirelesscontrollerWtpRadio2VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2) []WirelesscontrollerWtpRadio2Vap { return v.Vaps }).(WirelesscontrollerWtpRadio2VapArrayOutput)
}

type WirelesscontrollerWtpRadio2PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio2)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2PtrOutput) ToWirelesscontrollerWtpRadio2PtrOutput() WirelesscontrollerWtpRadio2PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2PtrOutput) ToWirelesscontrollerWtpRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2PtrOutput) Elem() WirelesscontrollerWtpRadio2Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) WirelesscontrollerWtpRadio2 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpRadio2
		return ret
	}).(WirelesscontrollerWtpRadio2Output)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio2PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio2PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio2PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio2PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio2PtrOutput) Channels() WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) []WirelesscontrollerWtpRadio2Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpRadio2ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio2PtrOutput) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.DrmaManualMode
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OverrideAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OverrideBand
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OverrideChannel
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OverrideTxpower
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio2PtrOutput) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OverrideVaps
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio2PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio2PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio2PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpRadio2PtrOutput) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *int {
		if v == nil {
			return nil
		}
		return v.RadioId
	}).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio2PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio2PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio2PtrOutput) Vaps() WirelesscontrollerWtpRadio2VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio2) []WirelesscontrollerWtpRadio2Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpRadio2VapArrayOutput)
}

type WirelesscontrollerWtpRadio2Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpRadio2ChannelInput is an input type that accepts WirelesscontrollerWtpRadio2ChannelArgs and WirelesscontrollerWtpRadio2ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2ChannelInput` via:
//
//	WirelesscontrollerWtpRadio2ChannelArgs{...}
type WirelesscontrollerWtpRadio2ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2ChannelOutput() WirelesscontrollerWtpRadio2ChannelOutput
	ToWirelesscontrollerWtpRadio2ChannelOutputWithContext(context.Context) WirelesscontrollerWtpRadio2ChannelOutput
}

type WirelesscontrollerWtpRadio2ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpRadio2ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio2ChannelArgs) ToWirelesscontrollerWtpRadio2ChannelOutput() WirelesscontrollerWtpRadio2ChannelOutput {
	return i.ToWirelesscontrollerWtpRadio2ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2ChannelArgs) ToWirelesscontrollerWtpRadio2ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2ChannelOutput)
}

// WirelesscontrollerWtpRadio2ChannelArrayInput is an input type that accepts WirelesscontrollerWtpRadio2ChannelArray and WirelesscontrollerWtpRadio2ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2ChannelArrayInput` via:
//
//	WirelesscontrollerWtpRadio2ChannelArray{ WirelesscontrollerWtpRadio2ChannelArgs{...} }
type WirelesscontrollerWtpRadio2ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2ChannelArrayOutput() WirelesscontrollerWtpRadio2ChannelArrayOutput
	ToWirelesscontrollerWtpRadio2ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio2ChannelArrayOutput
}

type WirelesscontrollerWtpRadio2ChannelArray []WirelesscontrollerWtpRadio2ChannelInput

func (WirelesscontrollerWtpRadio2ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio2Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio2ChannelArray) ToWirelesscontrollerWtpRadio2ChannelArrayOutput() WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpRadio2ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2ChannelArray) ToWirelesscontrollerWtpRadio2ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2ChannelArrayOutput)
}

type WirelesscontrollerWtpRadio2ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2ChannelOutput) ToWirelesscontrollerWtpRadio2ChannelOutput() WirelesscontrollerWtpRadio2ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2ChannelOutput) ToWirelesscontrollerWtpRadio2ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpRadio2ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio2ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio2Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2ChannelArrayOutput) ToWirelesscontrollerWtpRadio2ChannelArrayOutput() WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2ChannelArrayOutput) ToWirelesscontrollerWtpRadio2ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio2ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio2Channel {
		return vs[0].([]WirelesscontrollerWtpRadio2Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio2ChannelOutput)
}

type WirelesscontrollerWtpRadio2Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpRadio2VapInput is an input type that accepts WirelesscontrollerWtpRadio2VapArgs and WirelesscontrollerWtpRadio2VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2VapInput` via:
//
//	WirelesscontrollerWtpRadio2VapArgs{...}
type WirelesscontrollerWtpRadio2VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2VapOutput() WirelesscontrollerWtpRadio2VapOutput
	ToWirelesscontrollerWtpRadio2VapOutputWithContext(context.Context) WirelesscontrollerWtpRadio2VapOutput
}

type WirelesscontrollerWtpRadio2VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpRadio2VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio2VapArgs) ToWirelesscontrollerWtpRadio2VapOutput() WirelesscontrollerWtpRadio2VapOutput {
	return i.ToWirelesscontrollerWtpRadio2VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2VapArgs) ToWirelesscontrollerWtpRadio2VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2VapOutput)
}

// WirelesscontrollerWtpRadio2VapArrayInput is an input type that accepts WirelesscontrollerWtpRadio2VapArray and WirelesscontrollerWtpRadio2VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio2VapArrayInput` via:
//
//	WirelesscontrollerWtpRadio2VapArray{ WirelesscontrollerWtpRadio2VapArgs{...} }
type WirelesscontrollerWtpRadio2VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio2VapArrayOutput() WirelesscontrollerWtpRadio2VapArrayOutput
	ToWirelesscontrollerWtpRadio2VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio2VapArrayOutput
}

type WirelesscontrollerWtpRadio2VapArray []WirelesscontrollerWtpRadio2VapInput

func (WirelesscontrollerWtpRadio2VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio2Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio2VapArray) ToWirelesscontrollerWtpRadio2VapArrayOutput() WirelesscontrollerWtpRadio2VapArrayOutput {
	return i.ToWirelesscontrollerWtpRadio2VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio2VapArray) ToWirelesscontrollerWtpRadio2VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio2VapArrayOutput)
}

type WirelesscontrollerWtpRadio2VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio2Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2VapOutput) ToWirelesscontrollerWtpRadio2VapOutput() WirelesscontrollerWtpRadio2VapOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2VapOutput) ToWirelesscontrollerWtpRadio2VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpRadio2VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio2Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio2VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio2VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio2Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio2VapArrayOutput) ToWirelesscontrollerWtpRadio2VapArrayOutput() WirelesscontrollerWtpRadio2VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2VapArrayOutput) ToWirelesscontrollerWtpRadio2VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio2VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio2VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio2VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio2Vap {
		return vs[0].([]WirelesscontrollerWtpRadio2Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio2VapOutput)
}

type WirelesscontrollerWtpRadio3 struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpRadio3Channel `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode *string `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis *string `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand *string `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel *string `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower *string `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps *string `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpRadio3Vap `pulumi:"vaps"`
}

// WirelesscontrollerWtpRadio3Input is an input type that accepts WirelesscontrollerWtpRadio3Args and WirelesscontrollerWtpRadio3Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3Input` via:
//
//	WirelesscontrollerWtpRadio3Args{...}
type WirelesscontrollerWtpRadio3Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3Output() WirelesscontrollerWtpRadio3Output
	ToWirelesscontrollerWtpRadio3OutputWithContext(context.Context) WirelesscontrollerWtpRadio3Output
}

type WirelesscontrollerWtpRadio3Args struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpRadio3ChannelArrayInput `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode pulumi.StringPtrInput `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis pulumi.StringPtrInput `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand pulumi.StringPtrInput `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel pulumi.StringPtrInput `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower pulumi.StringPtrInput `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps pulumi.StringPtrInput `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpRadio3VapArrayInput `pulumi:"vaps"`
}

func (WirelesscontrollerWtpRadio3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio3Args) ToWirelesscontrollerWtpRadio3Output() WirelesscontrollerWtpRadio3Output {
	return i.ToWirelesscontrollerWtpRadio3OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3Args) ToWirelesscontrollerWtpRadio3OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3Output)
}

func (i WirelesscontrollerWtpRadio3Args) ToWirelesscontrollerWtpRadio3PtrOutput() WirelesscontrollerWtpRadio3PtrOutput {
	return i.ToWirelesscontrollerWtpRadio3PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3Args) ToWirelesscontrollerWtpRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3Output).ToWirelesscontrollerWtpRadio3PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpRadio3PtrInput is an input type that accepts WirelesscontrollerWtpRadio3Args, WirelesscontrollerWtpRadio3Ptr and WirelesscontrollerWtpRadio3PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3PtrInput` via:
//
//	        WirelesscontrollerWtpRadio3Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpRadio3PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3PtrOutput() WirelesscontrollerWtpRadio3PtrOutput
	ToWirelesscontrollerWtpRadio3PtrOutputWithContext(context.Context) WirelesscontrollerWtpRadio3PtrOutput
}

type wirelesscontrollerWtpRadio3PtrType WirelesscontrollerWtpRadio3Args

func WirelesscontrollerWtpRadio3Ptr(v *WirelesscontrollerWtpRadio3Args) WirelesscontrollerWtpRadio3PtrInput {
	return (*wirelesscontrollerWtpRadio3PtrType)(v)
}

func (*wirelesscontrollerWtpRadio3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio3)(nil)).Elem()
}

func (i *wirelesscontrollerWtpRadio3PtrType) ToWirelesscontrollerWtpRadio3PtrOutput() WirelesscontrollerWtpRadio3PtrOutput {
	return i.ToWirelesscontrollerWtpRadio3PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpRadio3PtrType) ToWirelesscontrollerWtpRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3PtrOutput)
}

type WirelesscontrollerWtpRadio3Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3Output) ToWirelesscontrollerWtpRadio3Output() WirelesscontrollerWtpRadio3Output {
	return o
}

func (o WirelesscontrollerWtpRadio3Output) ToWirelesscontrollerWtpRadio3OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3Output {
	return o
}

func (o WirelesscontrollerWtpRadio3Output) ToWirelesscontrollerWtpRadio3PtrOutput() WirelesscontrollerWtpRadio3PtrOutput {
	return o.ToWirelesscontrollerWtpRadio3PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpRadio3Output) ToWirelesscontrollerWtpRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpRadio3) *WirelesscontrollerWtpRadio3 {
		return &v
	}).(WirelesscontrollerWtpRadio3PtrOutput)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio3Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio3Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio3Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio3Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio3Output) Channels() WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) []WirelesscontrollerWtpRadio3Channel { return v.Channels }).(WirelesscontrollerWtpRadio3ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio3Output) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.DrmaManualMode }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.OverrideAnalysis }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.OverrideBand }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.OverrideChannel }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.OverrideTxpower }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3Output) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.OverrideVaps }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio3Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio3Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio3Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio3Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio3Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio3Output) Vaps() WirelesscontrollerWtpRadio3VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3) []WirelesscontrollerWtpRadio3Vap { return v.Vaps }).(WirelesscontrollerWtpRadio3VapArrayOutput)
}

type WirelesscontrollerWtpRadio3PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio3)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3PtrOutput) ToWirelesscontrollerWtpRadio3PtrOutput() WirelesscontrollerWtpRadio3PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3PtrOutput) ToWirelesscontrollerWtpRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3PtrOutput) Elem() WirelesscontrollerWtpRadio3Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) WirelesscontrollerWtpRadio3 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpRadio3
		return ret
	}).(WirelesscontrollerWtpRadio3Output)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio3PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio3PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio3PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio3PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio3PtrOutput) Channels() WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) []WirelesscontrollerWtpRadio3Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpRadio3ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio3PtrOutput) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.DrmaManualMode
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.OverrideAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.OverrideBand
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.OverrideChannel
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.OverrideTxpower
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio3PtrOutput) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.OverrideVaps
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio3PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio3PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio3PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio3PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio3PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio3PtrOutput) Vaps() WirelesscontrollerWtpRadio3VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio3) []WirelesscontrollerWtpRadio3Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpRadio3VapArrayOutput)
}

type WirelesscontrollerWtpRadio3Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpRadio3ChannelInput is an input type that accepts WirelesscontrollerWtpRadio3ChannelArgs and WirelesscontrollerWtpRadio3ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3ChannelInput` via:
//
//	WirelesscontrollerWtpRadio3ChannelArgs{...}
type WirelesscontrollerWtpRadio3ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3ChannelOutput() WirelesscontrollerWtpRadio3ChannelOutput
	ToWirelesscontrollerWtpRadio3ChannelOutputWithContext(context.Context) WirelesscontrollerWtpRadio3ChannelOutput
}

type WirelesscontrollerWtpRadio3ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpRadio3ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio3ChannelArgs) ToWirelesscontrollerWtpRadio3ChannelOutput() WirelesscontrollerWtpRadio3ChannelOutput {
	return i.ToWirelesscontrollerWtpRadio3ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3ChannelArgs) ToWirelesscontrollerWtpRadio3ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3ChannelOutput)
}

// WirelesscontrollerWtpRadio3ChannelArrayInput is an input type that accepts WirelesscontrollerWtpRadio3ChannelArray and WirelesscontrollerWtpRadio3ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3ChannelArrayInput` via:
//
//	WirelesscontrollerWtpRadio3ChannelArray{ WirelesscontrollerWtpRadio3ChannelArgs{...} }
type WirelesscontrollerWtpRadio3ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3ChannelArrayOutput() WirelesscontrollerWtpRadio3ChannelArrayOutput
	ToWirelesscontrollerWtpRadio3ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio3ChannelArrayOutput
}

type WirelesscontrollerWtpRadio3ChannelArray []WirelesscontrollerWtpRadio3ChannelInput

func (WirelesscontrollerWtpRadio3ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio3Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio3ChannelArray) ToWirelesscontrollerWtpRadio3ChannelArrayOutput() WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpRadio3ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3ChannelArray) ToWirelesscontrollerWtpRadio3ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3ChannelArrayOutput)
}

type WirelesscontrollerWtpRadio3ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3ChannelOutput) ToWirelesscontrollerWtpRadio3ChannelOutput() WirelesscontrollerWtpRadio3ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3ChannelOutput) ToWirelesscontrollerWtpRadio3ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpRadio3ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio3ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio3Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3ChannelArrayOutput) ToWirelesscontrollerWtpRadio3ChannelArrayOutput() WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3ChannelArrayOutput) ToWirelesscontrollerWtpRadio3ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio3ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio3Channel {
		return vs[0].([]WirelesscontrollerWtpRadio3Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio3ChannelOutput)
}

type WirelesscontrollerWtpRadio3Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpRadio3VapInput is an input type that accepts WirelesscontrollerWtpRadio3VapArgs and WirelesscontrollerWtpRadio3VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3VapInput` via:
//
//	WirelesscontrollerWtpRadio3VapArgs{...}
type WirelesscontrollerWtpRadio3VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3VapOutput() WirelesscontrollerWtpRadio3VapOutput
	ToWirelesscontrollerWtpRadio3VapOutputWithContext(context.Context) WirelesscontrollerWtpRadio3VapOutput
}

type WirelesscontrollerWtpRadio3VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpRadio3VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio3VapArgs) ToWirelesscontrollerWtpRadio3VapOutput() WirelesscontrollerWtpRadio3VapOutput {
	return i.ToWirelesscontrollerWtpRadio3VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3VapArgs) ToWirelesscontrollerWtpRadio3VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3VapOutput)
}

// WirelesscontrollerWtpRadio3VapArrayInput is an input type that accepts WirelesscontrollerWtpRadio3VapArray and WirelesscontrollerWtpRadio3VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio3VapArrayInput` via:
//
//	WirelesscontrollerWtpRadio3VapArray{ WirelesscontrollerWtpRadio3VapArgs{...} }
type WirelesscontrollerWtpRadio3VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio3VapArrayOutput() WirelesscontrollerWtpRadio3VapArrayOutput
	ToWirelesscontrollerWtpRadio3VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio3VapArrayOutput
}

type WirelesscontrollerWtpRadio3VapArray []WirelesscontrollerWtpRadio3VapInput

func (WirelesscontrollerWtpRadio3VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio3Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio3VapArray) ToWirelesscontrollerWtpRadio3VapArrayOutput() WirelesscontrollerWtpRadio3VapArrayOutput {
	return i.ToWirelesscontrollerWtpRadio3VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio3VapArray) ToWirelesscontrollerWtpRadio3VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio3VapArrayOutput)
}

type WirelesscontrollerWtpRadio3VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio3Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3VapOutput) ToWirelesscontrollerWtpRadio3VapOutput() WirelesscontrollerWtpRadio3VapOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3VapOutput) ToWirelesscontrollerWtpRadio3VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpRadio3VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio3Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio3VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio3VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio3Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio3VapArrayOutput) ToWirelesscontrollerWtpRadio3VapArrayOutput() WirelesscontrollerWtpRadio3VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3VapArrayOutput) ToWirelesscontrollerWtpRadio3VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio3VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio3VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio3VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio3Vap {
		return vs[0].([]WirelesscontrollerWtpRadio3Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio3VapOutput)
}

type WirelesscontrollerWtpRadio4 struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpRadio4Channel `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode *string `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis *string `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand *string `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel *string `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower *string `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps *string `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpRadio4Vap `pulumi:"vaps"`
}

// WirelesscontrollerWtpRadio4Input is an input type that accepts WirelesscontrollerWtpRadio4Args and WirelesscontrollerWtpRadio4Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4Input` via:
//
//	WirelesscontrollerWtpRadio4Args{...}
type WirelesscontrollerWtpRadio4Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4Output() WirelesscontrollerWtpRadio4Output
	ToWirelesscontrollerWtpRadio4OutputWithContext(context.Context) WirelesscontrollerWtpRadio4Output
}

type WirelesscontrollerWtpRadio4Args struct {
	// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpRadio4ChannelArrayInput `pulumi:"channels"`
	// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
	DrmaManualMode pulumi.StringPtrInput `pulumi:"drmaManualMode"`
	// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
	OverrideAnalysis pulumi.StringPtrInput `pulumi:"overrideAnalysis"`
	// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
	OverrideBand pulumi.StringPtrInput `pulumi:"overrideBand"`
	// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
	OverrideChannel pulumi.StringPtrInput `pulumi:"overrideChannel"`
	// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
	OverrideTxpower pulumi.StringPtrInput `pulumi:"overrideTxpower"`
	// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
	OverrideVaps pulumi.StringPtrInput `pulumi:"overrideVaps"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpRadio4VapArrayInput `pulumi:"vaps"`
}

func (WirelesscontrollerWtpRadio4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio4Args) ToWirelesscontrollerWtpRadio4Output() WirelesscontrollerWtpRadio4Output {
	return i.ToWirelesscontrollerWtpRadio4OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4Args) ToWirelesscontrollerWtpRadio4OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4Output)
}

func (i WirelesscontrollerWtpRadio4Args) ToWirelesscontrollerWtpRadio4PtrOutput() WirelesscontrollerWtpRadio4PtrOutput {
	return i.ToWirelesscontrollerWtpRadio4PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4Args) ToWirelesscontrollerWtpRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4Output).ToWirelesscontrollerWtpRadio4PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpRadio4PtrInput is an input type that accepts WirelesscontrollerWtpRadio4Args, WirelesscontrollerWtpRadio4Ptr and WirelesscontrollerWtpRadio4PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4PtrInput` via:
//
//	        WirelesscontrollerWtpRadio4Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpRadio4PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4PtrOutput() WirelesscontrollerWtpRadio4PtrOutput
	ToWirelesscontrollerWtpRadio4PtrOutputWithContext(context.Context) WirelesscontrollerWtpRadio4PtrOutput
}

type wirelesscontrollerWtpRadio4PtrType WirelesscontrollerWtpRadio4Args

func WirelesscontrollerWtpRadio4Ptr(v *WirelesscontrollerWtpRadio4Args) WirelesscontrollerWtpRadio4PtrInput {
	return (*wirelesscontrollerWtpRadio4PtrType)(v)
}

func (*wirelesscontrollerWtpRadio4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio4)(nil)).Elem()
}

func (i *wirelesscontrollerWtpRadio4PtrType) ToWirelesscontrollerWtpRadio4PtrOutput() WirelesscontrollerWtpRadio4PtrOutput {
	return i.ToWirelesscontrollerWtpRadio4PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpRadio4PtrType) ToWirelesscontrollerWtpRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4PtrOutput)
}

type WirelesscontrollerWtpRadio4Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4Output) ToWirelesscontrollerWtpRadio4Output() WirelesscontrollerWtpRadio4Output {
	return o
}

func (o WirelesscontrollerWtpRadio4Output) ToWirelesscontrollerWtpRadio4OutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4Output {
	return o
}

func (o WirelesscontrollerWtpRadio4Output) ToWirelesscontrollerWtpRadio4PtrOutput() WirelesscontrollerWtpRadio4PtrOutput {
	return o.ToWirelesscontrollerWtpRadio4PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpRadio4Output) ToWirelesscontrollerWtpRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpRadio4) *WirelesscontrollerWtpRadio4 {
		return &v
	}).(WirelesscontrollerWtpRadio4PtrOutput)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio4Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio4Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio4Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio4Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio4Output) Channels() WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) []WirelesscontrollerWtpRadio4Channel { return v.Channels }).(WirelesscontrollerWtpRadio4ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio4Output) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.DrmaManualMode }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.OverrideAnalysis }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.OverrideBand }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.OverrideChannel }).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.OverrideTxpower }).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4Output) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.OverrideVaps }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio4Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio4Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio4Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio4Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio4Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio4Output) Vaps() WirelesscontrollerWtpRadio4VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4) []WirelesscontrollerWtpRadio4Vap { return v.Vaps }).(WirelesscontrollerWtpRadio4VapArrayOutput)
}

type WirelesscontrollerWtpRadio4PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpRadio4)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4PtrOutput) ToWirelesscontrollerWtpRadio4PtrOutput() WirelesscontrollerWtpRadio4PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4PtrOutput) ToWirelesscontrollerWtpRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4PtrOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4PtrOutput) Elem() WirelesscontrollerWtpRadio4Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) WirelesscontrollerWtpRadio4 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpRadio4
		return ret
	}).(WirelesscontrollerWtpRadio4Output)
}

// Automatic transmission power high limit in decibels (dB) of the measured power referenced to one milliwatt (mW), or dBm (10 - 17 dBm, default = 17).
func (o WirelesscontrollerWtpRadio4PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpRadio4PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpRadio4PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpRadio4PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpRadio4PtrOutput) Channels() WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) []WirelesscontrollerWtpRadio4Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpRadio4ChannelArrayOutput)
}

// Radio mode to be used for DRMA manual mode (default = ncf). Valid values: `ap`, `monitor`, `ncf`, `ncf-peek`.
func (o WirelesscontrollerWtpRadio4PtrOutput) DrmaManualMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.DrmaManualMode
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile spectrum analysis configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) OverrideAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.OverrideAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile band setting. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) OverrideBand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.OverrideBand
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile channel settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) OverrideChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.OverrideChannel
	}).(pulumi.StringPtrOutput)
}

// Enable to override the WTP profile power level configuration. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) OverrideTxpower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.OverrideTxpower
	}).(pulumi.StringPtrOutput)
}

// Enable to override WTP profile Virtual Access Point (VAP) settings. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpRadio4PtrOutput) OverrideVaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.OverrideVaps
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpRadio4PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpRadio4PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpRadio4PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpRadio4PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpRadio4PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpRadio4PtrOutput) Vaps() WirelesscontrollerWtpRadio4VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpRadio4) []WirelesscontrollerWtpRadio4Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpRadio4VapArrayOutput)
}

type WirelesscontrollerWtpRadio4Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpRadio4ChannelInput is an input type that accepts WirelesscontrollerWtpRadio4ChannelArgs and WirelesscontrollerWtpRadio4ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4ChannelInput` via:
//
//	WirelesscontrollerWtpRadio4ChannelArgs{...}
type WirelesscontrollerWtpRadio4ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4ChannelOutput() WirelesscontrollerWtpRadio4ChannelOutput
	ToWirelesscontrollerWtpRadio4ChannelOutputWithContext(context.Context) WirelesscontrollerWtpRadio4ChannelOutput
}

type WirelesscontrollerWtpRadio4ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpRadio4ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio4ChannelArgs) ToWirelesscontrollerWtpRadio4ChannelOutput() WirelesscontrollerWtpRadio4ChannelOutput {
	return i.ToWirelesscontrollerWtpRadio4ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4ChannelArgs) ToWirelesscontrollerWtpRadio4ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4ChannelOutput)
}

// WirelesscontrollerWtpRadio4ChannelArrayInput is an input type that accepts WirelesscontrollerWtpRadio4ChannelArray and WirelesscontrollerWtpRadio4ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4ChannelArrayInput` via:
//
//	WirelesscontrollerWtpRadio4ChannelArray{ WirelesscontrollerWtpRadio4ChannelArgs{...} }
type WirelesscontrollerWtpRadio4ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4ChannelArrayOutput() WirelesscontrollerWtpRadio4ChannelArrayOutput
	ToWirelesscontrollerWtpRadio4ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio4ChannelArrayOutput
}

type WirelesscontrollerWtpRadio4ChannelArray []WirelesscontrollerWtpRadio4ChannelInput

func (WirelesscontrollerWtpRadio4ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio4Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio4ChannelArray) ToWirelesscontrollerWtpRadio4ChannelArrayOutput() WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpRadio4ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4ChannelArray) ToWirelesscontrollerWtpRadio4ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4ChannelArrayOutput)
}

type WirelesscontrollerWtpRadio4ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4ChannelOutput) ToWirelesscontrollerWtpRadio4ChannelOutput() WirelesscontrollerWtpRadio4ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4ChannelOutput) ToWirelesscontrollerWtpRadio4ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpRadio4ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio4ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio4Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4ChannelArrayOutput) ToWirelesscontrollerWtpRadio4ChannelArrayOutput() WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4ChannelArrayOutput) ToWirelesscontrollerWtpRadio4ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio4ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio4Channel {
		return vs[0].([]WirelesscontrollerWtpRadio4Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio4ChannelOutput)
}

type WirelesscontrollerWtpRadio4Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpRadio4VapInput is an input type that accepts WirelesscontrollerWtpRadio4VapArgs and WirelesscontrollerWtpRadio4VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4VapInput` via:
//
//	WirelesscontrollerWtpRadio4VapArgs{...}
type WirelesscontrollerWtpRadio4VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4VapOutput() WirelesscontrollerWtpRadio4VapOutput
	ToWirelesscontrollerWtpRadio4VapOutputWithContext(context.Context) WirelesscontrollerWtpRadio4VapOutput
}

type WirelesscontrollerWtpRadio4VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpRadio4VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio4VapArgs) ToWirelesscontrollerWtpRadio4VapOutput() WirelesscontrollerWtpRadio4VapOutput {
	return i.ToWirelesscontrollerWtpRadio4VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4VapArgs) ToWirelesscontrollerWtpRadio4VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4VapOutput)
}

// WirelesscontrollerWtpRadio4VapArrayInput is an input type that accepts WirelesscontrollerWtpRadio4VapArray and WirelesscontrollerWtpRadio4VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpRadio4VapArrayInput` via:
//
//	WirelesscontrollerWtpRadio4VapArray{ WirelesscontrollerWtpRadio4VapArgs{...} }
type WirelesscontrollerWtpRadio4VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpRadio4VapArrayOutput() WirelesscontrollerWtpRadio4VapArrayOutput
	ToWirelesscontrollerWtpRadio4VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpRadio4VapArrayOutput
}

type WirelesscontrollerWtpRadio4VapArray []WirelesscontrollerWtpRadio4VapInput

func (WirelesscontrollerWtpRadio4VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio4Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpRadio4VapArray) ToWirelesscontrollerWtpRadio4VapArrayOutput() WirelesscontrollerWtpRadio4VapArrayOutput {
	return i.ToWirelesscontrollerWtpRadio4VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpRadio4VapArray) ToWirelesscontrollerWtpRadio4VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpRadio4VapArrayOutput)
}

type WirelesscontrollerWtpRadio4VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpRadio4Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4VapOutput) ToWirelesscontrollerWtpRadio4VapOutput() WirelesscontrollerWtpRadio4VapOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4VapOutput) ToWirelesscontrollerWtpRadio4VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpRadio4VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpRadio4Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpRadio4VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpRadio4VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpRadio4Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpRadio4VapArrayOutput) ToWirelesscontrollerWtpRadio4VapArrayOutput() WirelesscontrollerWtpRadio4VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4VapArrayOutput) ToWirelesscontrollerWtpRadio4VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpRadio4VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpRadio4VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpRadio4VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpRadio4Vap {
		return vs[0].([]WirelesscontrollerWtpRadio4Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpRadio4VapOutput)
}

type WirelesscontrollerWtpSplitTunnelingAcl struct {
	// Destination IP and mask for the split-tunneling subnet.
	DestIp *string `pulumi:"destIp"`
	// ID.
	Id *int `pulumi:"id"`
}

// WirelesscontrollerWtpSplitTunnelingAclInput is an input type that accepts WirelesscontrollerWtpSplitTunnelingAclArgs and WirelesscontrollerWtpSplitTunnelingAclOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpSplitTunnelingAclInput` via:
//
//	WirelesscontrollerWtpSplitTunnelingAclArgs{...}
type WirelesscontrollerWtpSplitTunnelingAclInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpSplitTunnelingAclOutput() WirelesscontrollerWtpSplitTunnelingAclOutput
	ToWirelesscontrollerWtpSplitTunnelingAclOutputWithContext(context.Context) WirelesscontrollerWtpSplitTunnelingAclOutput
}

type WirelesscontrollerWtpSplitTunnelingAclArgs struct {
	// Destination IP and mask for the split-tunneling subnet.
	DestIp pulumi.StringPtrInput `pulumi:"destIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerWtpSplitTunnelingAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpSplitTunnelingAcl)(nil)).Elem()
}

func (i WirelesscontrollerWtpSplitTunnelingAclArgs) ToWirelesscontrollerWtpSplitTunnelingAclOutput() WirelesscontrollerWtpSplitTunnelingAclOutput {
	return i.ToWirelesscontrollerWtpSplitTunnelingAclOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpSplitTunnelingAclArgs) ToWirelesscontrollerWtpSplitTunnelingAclOutputWithContext(ctx context.Context) WirelesscontrollerWtpSplitTunnelingAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpSplitTunnelingAclOutput)
}

// WirelesscontrollerWtpSplitTunnelingAclArrayInput is an input type that accepts WirelesscontrollerWtpSplitTunnelingAclArray and WirelesscontrollerWtpSplitTunnelingAclArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpSplitTunnelingAclArrayInput` via:
//
//	WirelesscontrollerWtpSplitTunnelingAclArray{ WirelesscontrollerWtpSplitTunnelingAclArgs{...} }
type WirelesscontrollerWtpSplitTunnelingAclArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpSplitTunnelingAclArrayOutput() WirelesscontrollerWtpSplitTunnelingAclArrayOutput
	ToWirelesscontrollerWtpSplitTunnelingAclArrayOutputWithContext(context.Context) WirelesscontrollerWtpSplitTunnelingAclArrayOutput
}

type WirelesscontrollerWtpSplitTunnelingAclArray []WirelesscontrollerWtpSplitTunnelingAclInput

func (WirelesscontrollerWtpSplitTunnelingAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpSplitTunnelingAcl)(nil)).Elem()
}

func (i WirelesscontrollerWtpSplitTunnelingAclArray) ToWirelesscontrollerWtpSplitTunnelingAclArrayOutput() WirelesscontrollerWtpSplitTunnelingAclArrayOutput {
	return i.ToWirelesscontrollerWtpSplitTunnelingAclArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpSplitTunnelingAclArray) ToWirelesscontrollerWtpSplitTunnelingAclArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpSplitTunnelingAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpSplitTunnelingAclArrayOutput)
}

type WirelesscontrollerWtpSplitTunnelingAclOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpSplitTunnelingAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpSplitTunnelingAcl)(nil)).Elem()
}

func (o WirelesscontrollerWtpSplitTunnelingAclOutput) ToWirelesscontrollerWtpSplitTunnelingAclOutput() WirelesscontrollerWtpSplitTunnelingAclOutput {
	return o
}

func (o WirelesscontrollerWtpSplitTunnelingAclOutput) ToWirelesscontrollerWtpSplitTunnelingAclOutputWithContext(ctx context.Context) WirelesscontrollerWtpSplitTunnelingAclOutput {
	return o
}

// Destination IP and mask for the split-tunneling subnet.
func (o WirelesscontrollerWtpSplitTunnelingAclOutput) DestIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpSplitTunnelingAcl) *string { return v.DestIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o WirelesscontrollerWtpSplitTunnelingAclOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpSplitTunnelingAcl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerWtpSplitTunnelingAclArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpSplitTunnelingAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpSplitTunnelingAcl)(nil)).Elem()
}

func (o WirelesscontrollerWtpSplitTunnelingAclArrayOutput) ToWirelesscontrollerWtpSplitTunnelingAclArrayOutput() WirelesscontrollerWtpSplitTunnelingAclArrayOutput {
	return o
}

func (o WirelesscontrollerWtpSplitTunnelingAclArrayOutput) ToWirelesscontrollerWtpSplitTunnelingAclArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpSplitTunnelingAclArrayOutput {
	return o
}

func (o WirelesscontrollerWtpSplitTunnelingAclArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpSplitTunnelingAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpSplitTunnelingAcl {
		return vs[0].([]WirelesscontrollerWtpSplitTunnelingAcl)[vs[1].(int)]
	}).(WirelesscontrollerWtpSplitTunnelingAclOutput)
}

type WirelesscontrollerWtpgroupWtp struct {
	// WTP ID.
	WtpId *string `pulumi:"wtpId"`
}

// WirelesscontrollerWtpgroupWtpInput is an input type that accepts WirelesscontrollerWtpgroupWtpArgs and WirelesscontrollerWtpgroupWtpOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpgroupWtpInput` via:
//
//	WirelesscontrollerWtpgroupWtpArgs{...}
type WirelesscontrollerWtpgroupWtpInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpgroupWtpOutput() WirelesscontrollerWtpgroupWtpOutput
	ToWirelesscontrollerWtpgroupWtpOutputWithContext(context.Context) WirelesscontrollerWtpgroupWtpOutput
}

type WirelesscontrollerWtpgroupWtpArgs struct {
	// WTP ID.
	WtpId pulumi.StringPtrInput `pulumi:"wtpId"`
}

func (WirelesscontrollerWtpgroupWtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpgroupWtp)(nil)).Elem()
}

func (i WirelesscontrollerWtpgroupWtpArgs) ToWirelesscontrollerWtpgroupWtpOutput() WirelesscontrollerWtpgroupWtpOutput {
	return i.ToWirelesscontrollerWtpgroupWtpOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpgroupWtpArgs) ToWirelesscontrollerWtpgroupWtpOutputWithContext(ctx context.Context) WirelesscontrollerWtpgroupWtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpgroupWtpOutput)
}

// WirelesscontrollerWtpgroupWtpArrayInput is an input type that accepts WirelesscontrollerWtpgroupWtpArray and WirelesscontrollerWtpgroupWtpArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpgroupWtpArrayInput` via:
//
//	WirelesscontrollerWtpgroupWtpArray{ WirelesscontrollerWtpgroupWtpArgs{...} }
type WirelesscontrollerWtpgroupWtpArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpgroupWtpArrayOutput() WirelesscontrollerWtpgroupWtpArrayOutput
	ToWirelesscontrollerWtpgroupWtpArrayOutputWithContext(context.Context) WirelesscontrollerWtpgroupWtpArrayOutput
}

type WirelesscontrollerWtpgroupWtpArray []WirelesscontrollerWtpgroupWtpInput

func (WirelesscontrollerWtpgroupWtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpgroupWtp)(nil)).Elem()
}

func (i WirelesscontrollerWtpgroupWtpArray) ToWirelesscontrollerWtpgroupWtpArrayOutput() WirelesscontrollerWtpgroupWtpArrayOutput {
	return i.ToWirelesscontrollerWtpgroupWtpArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpgroupWtpArray) ToWirelesscontrollerWtpgroupWtpArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpgroupWtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpgroupWtpArrayOutput)
}

type WirelesscontrollerWtpgroupWtpOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpgroupWtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpgroupWtp)(nil)).Elem()
}

func (o WirelesscontrollerWtpgroupWtpOutput) ToWirelesscontrollerWtpgroupWtpOutput() WirelesscontrollerWtpgroupWtpOutput {
	return o
}

func (o WirelesscontrollerWtpgroupWtpOutput) ToWirelesscontrollerWtpgroupWtpOutputWithContext(ctx context.Context) WirelesscontrollerWtpgroupWtpOutput {
	return o
}

// WTP ID.
func (o WirelesscontrollerWtpgroupWtpOutput) WtpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpgroupWtp) *string { return v.WtpId }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpgroupWtpArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpgroupWtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpgroupWtp)(nil)).Elem()
}

func (o WirelesscontrollerWtpgroupWtpArrayOutput) ToWirelesscontrollerWtpgroupWtpArrayOutput() WirelesscontrollerWtpgroupWtpArrayOutput {
	return o
}

func (o WirelesscontrollerWtpgroupWtpArrayOutput) ToWirelesscontrollerWtpgroupWtpArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpgroupWtpArrayOutput {
	return o
}

func (o WirelesscontrollerWtpgroupWtpArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpgroupWtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpgroupWtp {
		return vs[0].([]WirelesscontrollerWtpgroupWtp)[vs[1].(int)]
	}).(WirelesscontrollerWtpgroupWtpOutput)
}

type WirelesscontrollerWtpprofileDenyMacList struct {
	// ID.
	Id *int `pulumi:"id"`
	// A WiFi device with this MAC address is denied access to this WTP, FortiAP or AP.
	Mac *string `pulumi:"mac"`
}

// WirelesscontrollerWtpprofileDenyMacListInput is an input type that accepts WirelesscontrollerWtpprofileDenyMacListArgs and WirelesscontrollerWtpprofileDenyMacListOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileDenyMacListInput` via:
//
//	WirelesscontrollerWtpprofileDenyMacListArgs{...}
type WirelesscontrollerWtpprofileDenyMacListInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileDenyMacListOutput() WirelesscontrollerWtpprofileDenyMacListOutput
	ToWirelesscontrollerWtpprofileDenyMacListOutputWithContext(context.Context) WirelesscontrollerWtpprofileDenyMacListOutput
}

type WirelesscontrollerWtpprofileDenyMacListArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// A WiFi device with this MAC address is denied access to this WTP, FortiAP or AP.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
}

func (WirelesscontrollerWtpprofileDenyMacListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileDenyMacList)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileDenyMacListArgs) ToWirelesscontrollerWtpprofileDenyMacListOutput() WirelesscontrollerWtpprofileDenyMacListOutput {
	return i.ToWirelesscontrollerWtpprofileDenyMacListOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileDenyMacListArgs) ToWirelesscontrollerWtpprofileDenyMacListOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileDenyMacListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileDenyMacListOutput)
}

// WirelesscontrollerWtpprofileDenyMacListArrayInput is an input type that accepts WirelesscontrollerWtpprofileDenyMacListArray and WirelesscontrollerWtpprofileDenyMacListArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileDenyMacListArrayInput` via:
//
//	WirelesscontrollerWtpprofileDenyMacListArray{ WirelesscontrollerWtpprofileDenyMacListArgs{...} }
type WirelesscontrollerWtpprofileDenyMacListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileDenyMacListArrayOutput() WirelesscontrollerWtpprofileDenyMacListArrayOutput
	ToWirelesscontrollerWtpprofileDenyMacListArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileDenyMacListArrayOutput
}

type WirelesscontrollerWtpprofileDenyMacListArray []WirelesscontrollerWtpprofileDenyMacListInput

func (WirelesscontrollerWtpprofileDenyMacListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileDenyMacList)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileDenyMacListArray) ToWirelesscontrollerWtpprofileDenyMacListArrayOutput() WirelesscontrollerWtpprofileDenyMacListArrayOutput {
	return i.ToWirelesscontrollerWtpprofileDenyMacListArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileDenyMacListArray) ToWirelesscontrollerWtpprofileDenyMacListArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileDenyMacListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileDenyMacListArrayOutput)
}

type WirelesscontrollerWtpprofileDenyMacListOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileDenyMacListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileDenyMacList)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileDenyMacListOutput) ToWirelesscontrollerWtpprofileDenyMacListOutput() WirelesscontrollerWtpprofileDenyMacListOutput {
	return o
}

func (o WirelesscontrollerWtpprofileDenyMacListOutput) ToWirelesscontrollerWtpprofileDenyMacListOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileDenyMacListOutput {
	return o
}

// ID.
func (o WirelesscontrollerWtpprofileDenyMacListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileDenyMacList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// A WiFi device with this MAC address is denied access to this WTP, FortiAP or AP.
func (o WirelesscontrollerWtpprofileDenyMacListOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileDenyMacList) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileDenyMacListArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileDenyMacListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileDenyMacList)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileDenyMacListArrayOutput) ToWirelesscontrollerWtpprofileDenyMacListArrayOutput() WirelesscontrollerWtpprofileDenyMacListArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileDenyMacListArrayOutput) ToWirelesscontrollerWtpprofileDenyMacListArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileDenyMacListArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileDenyMacListArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileDenyMacListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileDenyMacList {
		return vs[0].([]WirelesscontrollerWtpprofileDenyMacList)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileDenyMacListOutput)
}

type WirelesscontrollerWtpprofileEslSesDongle struct {
	// ESL SES-imagotag APC address type (default = fqdn). Valid values: `fqdn`, `ip`.
	ApcAddrType *string `pulumi:"apcAddrType"`
	// FQDN of ESL SES-imagotag Access Point Controller (APC).
	ApcFqdn *string `pulumi:"apcFqdn"`
	// IP address of ESL SES-imagotag Access Point Controller (APC).
	ApcIp *string `pulumi:"apcIp"`
	// Port of ESL SES-imagotag Access Point Controller (APC).
	ApcPort *int `pulumi:"apcPort"`
	// ESL SES-imagotag dongle coexistence level (default = none). Valid values: `none`.
	CoexLevel *string `pulumi:"coexLevel"`
	// Compliance levels for the ESL solution integration (default = compliance-level-2). Valid values: `compliance-level-2`.
	ComplianceLevel *string `pulumi:"complianceLevel"`
	// ESL SES-imagotag dongle channel (default = 127). Valid values: `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `127`.
	EslChannel *string `pulumi:"eslChannel"`
	// ESL SES-imagotag dongle output power (default = A). Valid values: `a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`.
	OutputPower *string `pulumi:"outputPower"`
	// Enable/disable ESL SES-imagotag Serial Communication Daemon (SCD) (default = disable). Valid values: `enable`, `disable`.
	ScdEnable *string `pulumi:"scdEnable"`
	// Enable/disable TLS Certificate verification. (default = enable). Valid values: `enable`, `disable`.
	TlsCertVerification *string `pulumi:"tlsCertVerification"`
	// Enable/disable TLS Certificate verification. (default = disable). Valid values: `enable`, `disable`.
	TlsFqdnVerification *string `pulumi:"tlsFqdnVerification"`
}

// WirelesscontrollerWtpprofileEslSesDongleInput is an input type that accepts WirelesscontrollerWtpprofileEslSesDongleArgs and WirelesscontrollerWtpprofileEslSesDongleOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileEslSesDongleInput` via:
//
//	WirelesscontrollerWtpprofileEslSesDongleArgs{...}
type WirelesscontrollerWtpprofileEslSesDongleInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileEslSesDongleOutput() WirelesscontrollerWtpprofileEslSesDongleOutput
	ToWirelesscontrollerWtpprofileEslSesDongleOutputWithContext(context.Context) WirelesscontrollerWtpprofileEslSesDongleOutput
}

type WirelesscontrollerWtpprofileEslSesDongleArgs struct {
	// ESL SES-imagotag APC address type (default = fqdn). Valid values: `fqdn`, `ip`.
	ApcAddrType pulumi.StringPtrInput `pulumi:"apcAddrType"`
	// FQDN of ESL SES-imagotag Access Point Controller (APC).
	ApcFqdn pulumi.StringPtrInput `pulumi:"apcFqdn"`
	// IP address of ESL SES-imagotag Access Point Controller (APC).
	ApcIp pulumi.StringPtrInput `pulumi:"apcIp"`
	// Port of ESL SES-imagotag Access Point Controller (APC).
	ApcPort pulumi.IntPtrInput `pulumi:"apcPort"`
	// ESL SES-imagotag dongle coexistence level (default = none). Valid values: `none`.
	CoexLevel pulumi.StringPtrInput `pulumi:"coexLevel"`
	// Compliance levels for the ESL solution integration (default = compliance-level-2). Valid values: `compliance-level-2`.
	ComplianceLevel pulumi.StringPtrInput `pulumi:"complianceLevel"`
	// ESL SES-imagotag dongle channel (default = 127). Valid values: `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `127`.
	EslChannel pulumi.StringPtrInput `pulumi:"eslChannel"`
	// ESL SES-imagotag dongle output power (default = A). Valid values: `a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`.
	OutputPower pulumi.StringPtrInput `pulumi:"outputPower"`
	// Enable/disable ESL SES-imagotag Serial Communication Daemon (SCD) (default = disable). Valid values: `enable`, `disable`.
	ScdEnable pulumi.StringPtrInput `pulumi:"scdEnable"`
	// Enable/disable TLS Certificate verification. (default = enable). Valid values: `enable`, `disable`.
	TlsCertVerification pulumi.StringPtrInput `pulumi:"tlsCertVerification"`
	// Enable/disable TLS Certificate verification. (default = disable). Valid values: `enable`, `disable`.
	TlsFqdnVerification pulumi.StringPtrInput `pulumi:"tlsFqdnVerification"`
}

func (WirelesscontrollerWtpprofileEslSesDongleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileEslSesDongle)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileEslSesDongleArgs) ToWirelesscontrollerWtpprofileEslSesDongleOutput() WirelesscontrollerWtpprofileEslSesDongleOutput {
	return i.ToWirelesscontrollerWtpprofileEslSesDongleOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileEslSesDongleArgs) ToWirelesscontrollerWtpprofileEslSesDongleOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDongleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileEslSesDongleOutput)
}

func (i WirelesscontrollerWtpprofileEslSesDongleArgs) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutput() WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return i.ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileEslSesDongleArgs) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileEslSesDongleOutput).ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileEslSesDonglePtrInput is an input type that accepts WirelesscontrollerWtpprofileEslSesDongleArgs, WirelesscontrollerWtpprofileEslSesDonglePtr and WirelesscontrollerWtpprofileEslSesDonglePtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileEslSesDonglePtrInput` via:
//
//	        WirelesscontrollerWtpprofileEslSesDongleArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileEslSesDonglePtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileEslSesDonglePtrOutput() WirelesscontrollerWtpprofileEslSesDonglePtrOutput
	ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileEslSesDonglePtrOutput
}

type wirelesscontrollerWtpprofileEslSesDonglePtrType WirelesscontrollerWtpprofileEslSesDongleArgs

func WirelesscontrollerWtpprofileEslSesDonglePtr(v *WirelesscontrollerWtpprofileEslSesDongleArgs) WirelesscontrollerWtpprofileEslSesDonglePtrInput {
	return (*wirelesscontrollerWtpprofileEslSesDonglePtrType)(v)
}

func (*wirelesscontrollerWtpprofileEslSesDonglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileEslSesDongle)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileEslSesDonglePtrType) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutput() WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return i.ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileEslSesDonglePtrType) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileEslSesDonglePtrOutput)
}

type WirelesscontrollerWtpprofileEslSesDongleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileEslSesDongleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileEslSesDongle)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ToWirelesscontrollerWtpprofileEslSesDongleOutput() WirelesscontrollerWtpprofileEslSesDongleOutput {
	return o
}

func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ToWirelesscontrollerWtpprofileEslSesDongleOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDongleOutput {
	return o
}

func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutput() WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return o.ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileEslSesDongle) *WirelesscontrollerWtpprofileEslSesDongle {
		return &v
	}).(WirelesscontrollerWtpprofileEslSesDonglePtrOutput)
}

// ESL SES-imagotag APC address type (default = fqdn). Valid values: `fqdn`, `ip`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ApcAddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.ApcAddrType }).(pulumi.StringPtrOutput)
}

// FQDN of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ApcFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.ApcFqdn }).(pulumi.StringPtrOutput)
}

// IP address of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ApcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.ApcIp }).(pulumi.StringPtrOutput)
}

// Port of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ApcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *int { return v.ApcPort }).(pulumi.IntPtrOutput)
}

// ESL SES-imagotag dongle coexistence level (default = none). Valid values: `none`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) CoexLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.CoexLevel }).(pulumi.StringPtrOutput)
}

// Compliance levels for the ESL solution integration (default = compliance-level-2). Valid values: `compliance-level-2`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ComplianceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.ComplianceLevel }).(pulumi.StringPtrOutput)
}

// ESL SES-imagotag dongle channel (default = 127). Valid values: `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `127`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) EslChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.EslChannel }).(pulumi.StringPtrOutput)
}

// ESL SES-imagotag dongle output power (default = A). Valid values: `a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) OutputPower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.OutputPower }).(pulumi.StringPtrOutput)
}

// Enable/disable ESL SES-imagotag Serial Communication Daemon (SCD) (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) ScdEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.ScdEnable }).(pulumi.StringPtrOutput)
}

// Enable/disable TLS Certificate verification. (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) TlsCertVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.TlsCertVerification }).(pulumi.StringPtrOutput)
}

// Enable/disable TLS Certificate verification. (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDongleOutput) TlsFqdnVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileEslSesDongle) *string { return v.TlsFqdnVerification }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileEslSesDonglePtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileEslSesDongle)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutput() WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ToWirelesscontrollerWtpprofileEslSesDonglePtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileEslSesDonglePtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) Elem() WirelesscontrollerWtpprofileEslSesDongleOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) WirelesscontrollerWtpprofileEslSesDongle {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileEslSesDongle
		return ret
	}).(WirelesscontrollerWtpprofileEslSesDongleOutput)
}

// ESL SES-imagotag APC address type (default = fqdn). Valid values: `fqdn`, `ip`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ApcAddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.ApcAddrType
	}).(pulumi.StringPtrOutput)
}

// FQDN of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ApcFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.ApcFqdn
	}).(pulumi.StringPtrOutput)
}

// IP address of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ApcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.ApcIp
	}).(pulumi.StringPtrOutput)
}

// Port of ESL SES-imagotag Access Point Controller (APC).
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ApcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *int {
		if v == nil {
			return nil
		}
		return v.ApcPort
	}).(pulumi.IntPtrOutput)
}

// ESL SES-imagotag dongle coexistence level (default = none). Valid values: `none`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) CoexLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.CoexLevel
	}).(pulumi.StringPtrOutput)
}

// Compliance levels for the ESL solution integration (default = compliance-level-2). Valid values: `compliance-level-2`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ComplianceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.ComplianceLevel
	}).(pulumi.StringPtrOutput)
}

// ESL SES-imagotag dongle channel (default = 127). Valid values: `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `127`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) EslChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.EslChannel
	}).(pulumi.StringPtrOutput)
}

// ESL SES-imagotag dongle output power (default = A). Valid values: `a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) OutputPower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.OutputPower
	}).(pulumi.StringPtrOutput)
}

// Enable/disable ESL SES-imagotag Serial Communication Daemon (SCD) (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) ScdEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.ScdEnable
	}).(pulumi.StringPtrOutput)
}

// Enable/disable TLS Certificate verification. (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) TlsCertVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.TlsCertVerification
	}).(pulumi.StringPtrOutput)
}

// Enable/disable TLS Certificate verification. (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileEslSesDonglePtrOutput) TlsFqdnVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileEslSesDongle) *string {
		if v == nil {
			return nil
		}
		return v.TlsFqdnVerification
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLan struct {
	// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port1Mode *string `pulumi:"port1Mode"`
	// Bridge LAN port 1 to SSID.
	Port1Ssid *string `pulumi:"port1Ssid"`
	// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port2Mode *string `pulumi:"port2Mode"`
	// Bridge LAN port 2 to SSID.
	Port2Ssid *string `pulumi:"port2Ssid"`
	// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port3Mode *string `pulumi:"port3Mode"`
	// Bridge LAN port 3 to SSID.
	Port3Ssid *string `pulumi:"port3Ssid"`
	// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port4Mode *string `pulumi:"port4Mode"`
	// Bridge LAN port 4 to SSID.
	Port4Ssid *string `pulumi:"port4Ssid"`
	// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port5Mode *string `pulumi:"port5Mode"`
	// Bridge LAN port 5 to SSID.
	Port5Ssid *string `pulumi:"port5Ssid"`
	// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port6Mode *string `pulumi:"port6Mode"`
	// Bridge LAN port 6 to SSID.
	Port6Ssid *string `pulumi:"port6Ssid"`
	// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port7Mode *string `pulumi:"port7Mode"`
	// Bridge LAN port 7 to SSID.
	Port7Ssid *string `pulumi:"port7Ssid"`
	// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port8Mode *string `pulumi:"port8Mode"`
	// Bridge LAN port 8 to SSID.
	Port8Ssid *string `pulumi:"port8Ssid"`
	// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortEslMode *string `pulumi:"portEslMode"`
	// Bridge ESL port to SSID.
	PortEslSsid *string `pulumi:"portEslSsid"`
	// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortMode *string `pulumi:"portMode"`
	// Bridge LAN port to SSID.
	PortSsid *string `pulumi:"portSsid"`
}

// WirelesscontrollerWtpprofileLanInput is an input type that accepts WirelesscontrollerWtpprofileLanArgs and WirelesscontrollerWtpprofileLanOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLanInput` via:
//
//	WirelesscontrollerWtpprofileLanArgs{...}
type WirelesscontrollerWtpprofileLanInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLanOutput() WirelesscontrollerWtpprofileLanOutput
	ToWirelesscontrollerWtpprofileLanOutputWithContext(context.Context) WirelesscontrollerWtpprofileLanOutput
}

type WirelesscontrollerWtpprofileLanArgs struct {
	// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port1Mode pulumi.StringPtrInput `pulumi:"port1Mode"`
	// Bridge LAN port 1 to SSID.
	Port1Ssid pulumi.StringPtrInput `pulumi:"port1Ssid"`
	// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port2Mode pulumi.StringPtrInput `pulumi:"port2Mode"`
	// Bridge LAN port 2 to SSID.
	Port2Ssid pulumi.StringPtrInput `pulumi:"port2Ssid"`
	// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port3Mode pulumi.StringPtrInput `pulumi:"port3Mode"`
	// Bridge LAN port 3 to SSID.
	Port3Ssid pulumi.StringPtrInput `pulumi:"port3Ssid"`
	// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port4Mode pulumi.StringPtrInput `pulumi:"port4Mode"`
	// Bridge LAN port 4 to SSID.
	Port4Ssid pulumi.StringPtrInput `pulumi:"port4Ssid"`
	// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port5Mode pulumi.StringPtrInput `pulumi:"port5Mode"`
	// Bridge LAN port 5 to SSID.
	Port5Ssid pulumi.StringPtrInput `pulumi:"port5Ssid"`
	// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port6Mode pulumi.StringPtrInput `pulumi:"port6Mode"`
	// Bridge LAN port 6 to SSID.
	Port6Ssid pulumi.StringPtrInput `pulumi:"port6Ssid"`
	// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port7Mode pulumi.StringPtrInput `pulumi:"port7Mode"`
	// Bridge LAN port 7 to SSID.
	Port7Ssid pulumi.StringPtrInput `pulumi:"port7Ssid"`
	// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	Port8Mode pulumi.StringPtrInput `pulumi:"port8Mode"`
	// Bridge LAN port 8 to SSID.
	Port8Ssid pulumi.StringPtrInput `pulumi:"port8Ssid"`
	// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortEslMode pulumi.StringPtrInput `pulumi:"portEslMode"`
	// Bridge ESL port to SSID.
	PortEslSsid pulumi.StringPtrInput `pulumi:"portEslSsid"`
	// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
	PortMode pulumi.StringPtrInput `pulumi:"portMode"`
	// Bridge LAN port to SSID.
	PortSsid pulumi.StringPtrInput `pulumi:"portSsid"`
}

func (WirelesscontrollerWtpprofileLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLan)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileLanArgs) ToWirelesscontrollerWtpprofileLanOutput() WirelesscontrollerWtpprofileLanOutput {
	return i.ToWirelesscontrollerWtpprofileLanOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLanArgs) ToWirelesscontrollerWtpprofileLanOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLanOutput)
}

func (i WirelesscontrollerWtpprofileLanArgs) ToWirelesscontrollerWtpprofileLanPtrOutput() WirelesscontrollerWtpprofileLanPtrOutput {
	return i.ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLanArgs) ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLanOutput).ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileLanPtrInput is an input type that accepts WirelesscontrollerWtpprofileLanArgs, WirelesscontrollerWtpprofileLanPtr and WirelesscontrollerWtpprofileLanPtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLanPtrInput` via:
//
//	        WirelesscontrollerWtpprofileLanArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileLanPtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLanPtrOutput() WirelesscontrollerWtpprofileLanPtrOutput
	ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileLanPtrOutput
}

type wirelesscontrollerWtpprofileLanPtrType WirelesscontrollerWtpprofileLanArgs

func WirelesscontrollerWtpprofileLanPtr(v *WirelesscontrollerWtpprofileLanArgs) WirelesscontrollerWtpprofileLanPtrInput {
	return (*wirelesscontrollerWtpprofileLanPtrType)(v)
}

func (*wirelesscontrollerWtpprofileLanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileLan)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileLanPtrType) ToWirelesscontrollerWtpprofileLanPtrOutput() WirelesscontrollerWtpprofileLanPtrOutput {
	return i.ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileLanPtrType) ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLanPtrOutput)
}

type WirelesscontrollerWtpprofileLanOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLan)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLanOutput) ToWirelesscontrollerWtpprofileLanOutput() WirelesscontrollerWtpprofileLanOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLanOutput) ToWirelesscontrollerWtpprofileLanOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLanOutput) ToWirelesscontrollerWtpprofileLanPtrOutput() WirelesscontrollerWtpprofileLanPtrOutput {
	return o.ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileLanOutput) ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileLan) *WirelesscontrollerWtpprofileLan {
		return &v
	}).(WirelesscontrollerWtpprofileLanPtrOutput)
}

// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port1Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port1Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 1 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port1Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port1Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port2Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port2Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 2 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port2Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port2Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port3Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port3Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 3 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port3Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port3Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port4Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port4Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 4 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port4Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port4Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port5Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port5Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 5 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port5Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port5Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port6Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 6 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port6Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port6Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port7Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port7Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 7 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port7Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port7Ssid }).(pulumi.StringPtrOutput)
}

// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) Port8Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port8Mode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port 8 to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) Port8Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.Port8Ssid }).(pulumi.StringPtrOutput)
}

// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) PortEslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.PortEslMode }).(pulumi.StringPtrOutput)
}

// Bridge ESL port to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) PortEslSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.PortEslSsid }).(pulumi.StringPtrOutput)
}

// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanOutput) PortMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.PortMode }).(pulumi.StringPtrOutput)
}

// Bridge LAN port to SSID.
func (o WirelesscontrollerWtpprofileLanOutput) PortSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLan) *string { return v.PortSsid }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLanPtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileLan)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLanPtrOutput) ToWirelesscontrollerWtpprofileLanPtrOutput() WirelesscontrollerWtpprofileLanPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLanPtrOutput) ToWirelesscontrollerWtpprofileLanPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLanPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLanPtrOutput) Elem() WirelesscontrollerWtpprofileLanOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) WirelesscontrollerWtpprofileLan {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileLan
		return ret
	}).(WirelesscontrollerWtpprofileLanOutput)
}

// LAN port 1 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port1Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port1Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 1 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port1Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port1Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 2 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port2Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port2Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 2 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port2Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port2Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 3 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port3Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port3Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 3 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port3Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port3Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 4 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port4Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port4Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 4 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port4Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port4Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 5 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port5Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port5Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 5 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port5Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port5Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 6 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port6Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 6 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port6Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port6Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 7 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port7Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port7Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 7 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port7Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port7Ssid
	}).(pulumi.StringPtrOutput)
}

// LAN port 8 mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port8Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port8Mode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port 8 to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) Port8Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.Port8Ssid
	}).(pulumi.StringPtrOutput)
}

// ESL port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) PortEslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.PortEslMode
	}).(pulumi.StringPtrOutput)
}

// Bridge ESL port to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) PortEslSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.PortEslSsid
	}).(pulumi.StringPtrOutput)
}

// LAN port mode. Valid values: `offline`, `nat-to-wan`, `bridge-to-wan`, `bridge-to-ssid`.
func (o WirelesscontrollerWtpprofileLanPtrOutput) PortMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.PortMode
	}).(pulumi.StringPtrOutput)
}

// Bridge LAN port to SSID.
func (o WirelesscontrollerWtpprofileLanPtrOutput) PortSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLan) *string {
		if v == nil {
			return nil
		}
		return v.PortSsid
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLbs struct {
	// Enable/disable AeroScout Real Time Location Service (RTLS) support. Valid values: `enable`, `disable`.
	Aeroscout *string `pulumi:"aeroscout"`
	// Use BSSID or board MAC address as AP MAC address in the Aeroscout AP message. Valid values: `bssid`, `board-mac`.
	AeroscoutApMac *string `pulumi:"aeroscoutApMac"`
	// Enable/disable MU compounded report. Valid values: `enable`, `disable`.
	AeroscoutMmuReport *string `pulumi:"aeroscoutMmuReport"`
	// Enable/disable AeroScout support. Valid values: `enable`, `disable`.
	AeroscoutMu *string `pulumi:"aeroscoutMu"`
	// AeroScout Mobile Unit (MU) mode dilution factor (default = 20).
	AeroscoutMuFactor *int `pulumi:"aeroscoutMuFactor"`
	// AeroScout MU mode timeout (0 - 65535 sec, default = 5).
	AeroscoutMuTimeout *int `pulumi:"aeroscoutMuTimeout"`
	// IP address of AeroScout server.
	AeroscoutServerIp *string `pulumi:"aeroscoutServerIp"`
	// AeroScout server UDP listening port.
	AeroscoutServerPort *int `pulumi:"aeroscoutServerPort"`
	// Enable/disable Ekahua blink mode (also called AiRISTA Flow Blink Mode) to find the location of devices connected to a wireless LAN (default = disable). Valid values: `enable`, `disable`.
	EkahauBlinkMode *string `pulumi:"ekahauBlinkMode"`
	// WiFi frame MAC address or WiFi Tag.
	EkahauTag *string `pulumi:"ekahauTag"`
	// IP address of Ekahua RTLS Controller (ERC).
	ErcServerIp *string `pulumi:"ercServerIp"`
	// Ekahua RTLS Controller (ERC) UDP listening port.
	ErcServerPort *int `pulumi:"ercServerPort"`
	// Enable/disable FortiPresence to monitor the location and activity of WiFi clients even if they don't connect to this WiFi network (default = disable). Valid values: `foreign`, `both`, `disable`.
	Fortipresence *string `pulumi:"fortipresence"`
	// Enable/disable FortiPresence finding and reporting BLE devices. Valid values: `enable`, `disable`.
	FortipresenceBle *string `pulumi:"fortipresenceBle"`
	// FortiPresence report transmit frequency (5 - 65535 sec, default = 30).
	FortipresenceFrequency *int `pulumi:"fortipresenceFrequency"`
	// FortiPresence server UDP listening port (default = 3000).
	FortipresencePort *int `pulumi:"fortipresencePort"`
	// FortiPresence project name (max. 16 characters, default = fortipresence).
	FortipresenceProject *string `pulumi:"fortipresenceProject"`
	// Enable/disable FortiPresence finding and reporting rogue APs. Valid values: `enable`, `disable`.
	FortipresenceRogue *string `pulumi:"fortipresenceRogue"`
	// FortiPresence secret password (max. 16 characters).
	FortipresenceSecret *string `pulumi:"fortipresenceSecret"`
	// FortiPresence server IP address.
	FortipresenceServer *string `pulumi:"fortipresenceServer"`
	// FortiPresence server address type (default = ipv4). Valid values: `ipv4`, `fqdn`.
	FortipresenceServerAddrType *string `pulumi:"fortipresenceServerAddrType"`
	// FQDN of FortiPresence server.
	FortipresenceServerFqdn *string `pulumi:"fortipresenceServerFqdn"`
	// Enable/disable FortiPresence finding and reporting unassociated stations. Valid values: `enable`, `disable`.
	FortipresenceUnassoc *string `pulumi:"fortipresenceUnassoc"`
	// Enable/disable client station locating services for all clients, whether associated or not (default = disable). Valid values: `enable`, `disable`.
	StationLocate *string `pulumi:"stationLocate"`
}

// WirelesscontrollerWtpprofileLbsInput is an input type that accepts WirelesscontrollerWtpprofileLbsArgs and WirelesscontrollerWtpprofileLbsOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLbsInput` via:
//
//	WirelesscontrollerWtpprofileLbsArgs{...}
type WirelesscontrollerWtpprofileLbsInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLbsOutput() WirelesscontrollerWtpprofileLbsOutput
	ToWirelesscontrollerWtpprofileLbsOutputWithContext(context.Context) WirelesscontrollerWtpprofileLbsOutput
}

type WirelesscontrollerWtpprofileLbsArgs struct {
	// Enable/disable AeroScout Real Time Location Service (RTLS) support. Valid values: `enable`, `disable`.
	Aeroscout pulumi.StringPtrInput `pulumi:"aeroscout"`
	// Use BSSID or board MAC address as AP MAC address in the Aeroscout AP message. Valid values: `bssid`, `board-mac`.
	AeroscoutApMac pulumi.StringPtrInput `pulumi:"aeroscoutApMac"`
	// Enable/disable MU compounded report. Valid values: `enable`, `disable`.
	AeroscoutMmuReport pulumi.StringPtrInput `pulumi:"aeroscoutMmuReport"`
	// Enable/disable AeroScout support. Valid values: `enable`, `disable`.
	AeroscoutMu pulumi.StringPtrInput `pulumi:"aeroscoutMu"`
	// AeroScout Mobile Unit (MU) mode dilution factor (default = 20).
	AeroscoutMuFactor pulumi.IntPtrInput `pulumi:"aeroscoutMuFactor"`
	// AeroScout MU mode timeout (0 - 65535 sec, default = 5).
	AeroscoutMuTimeout pulumi.IntPtrInput `pulumi:"aeroscoutMuTimeout"`
	// IP address of AeroScout server.
	AeroscoutServerIp pulumi.StringPtrInput `pulumi:"aeroscoutServerIp"`
	// AeroScout server UDP listening port.
	AeroscoutServerPort pulumi.IntPtrInput `pulumi:"aeroscoutServerPort"`
	// Enable/disable Ekahua blink mode (also called AiRISTA Flow Blink Mode) to find the location of devices connected to a wireless LAN (default = disable). Valid values: `enable`, `disable`.
	EkahauBlinkMode pulumi.StringPtrInput `pulumi:"ekahauBlinkMode"`
	// WiFi frame MAC address or WiFi Tag.
	EkahauTag pulumi.StringPtrInput `pulumi:"ekahauTag"`
	// IP address of Ekahua RTLS Controller (ERC).
	ErcServerIp pulumi.StringPtrInput `pulumi:"ercServerIp"`
	// Ekahua RTLS Controller (ERC) UDP listening port.
	ErcServerPort pulumi.IntPtrInput `pulumi:"ercServerPort"`
	// Enable/disable FortiPresence to monitor the location and activity of WiFi clients even if they don't connect to this WiFi network (default = disable). Valid values: `foreign`, `both`, `disable`.
	Fortipresence pulumi.StringPtrInput `pulumi:"fortipresence"`
	// Enable/disable FortiPresence finding and reporting BLE devices. Valid values: `enable`, `disable`.
	FortipresenceBle pulumi.StringPtrInput `pulumi:"fortipresenceBle"`
	// FortiPresence report transmit frequency (5 - 65535 sec, default = 30).
	FortipresenceFrequency pulumi.IntPtrInput `pulumi:"fortipresenceFrequency"`
	// FortiPresence server UDP listening port (default = 3000).
	FortipresencePort pulumi.IntPtrInput `pulumi:"fortipresencePort"`
	// FortiPresence project name (max. 16 characters, default = fortipresence).
	FortipresenceProject pulumi.StringPtrInput `pulumi:"fortipresenceProject"`
	// Enable/disable FortiPresence finding and reporting rogue APs. Valid values: `enable`, `disable`.
	FortipresenceRogue pulumi.StringPtrInput `pulumi:"fortipresenceRogue"`
	// FortiPresence secret password (max. 16 characters).
	FortipresenceSecret pulumi.StringPtrInput `pulumi:"fortipresenceSecret"`
	// FortiPresence server IP address.
	FortipresenceServer pulumi.StringPtrInput `pulumi:"fortipresenceServer"`
	// FortiPresence server address type (default = ipv4). Valid values: `ipv4`, `fqdn`.
	FortipresenceServerAddrType pulumi.StringPtrInput `pulumi:"fortipresenceServerAddrType"`
	// FQDN of FortiPresence server.
	FortipresenceServerFqdn pulumi.StringPtrInput `pulumi:"fortipresenceServerFqdn"`
	// Enable/disable FortiPresence finding and reporting unassociated stations. Valid values: `enable`, `disable`.
	FortipresenceUnassoc pulumi.StringPtrInput `pulumi:"fortipresenceUnassoc"`
	// Enable/disable client station locating services for all clients, whether associated or not (default = disable). Valid values: `enable`, `disable`.
	StationLocate pulumi.StringPtrInput `pulumi:"stationLocate"`
}

func (WirelesscontrollerWtpprofileLbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLbs)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileLbsArgs) ToWirelesscontrollerWtpprofileLbsOutput() WirelesscontrollerWtpprofileLbsOutput {
	return i.ToWirelesscontrollerWtpprofileLbsOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLbsArgs) ToWirelesscontrollerWtpprofileLbsOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLbsOutput)
}

func (i WirelesscontrollerWtpprofileLbsArgs) ToWirelesscontrollerWtpprofileLbsPtrOutput() WirelesscontrollerWtpprofileLbsPtrOutput {
	return i.ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLbsArgs) ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLbsOutput).ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileLbsPtrInput is an input type that accepts WirelesscontrollerWtpprofileLbsArgs, WirelesscontrollerWtpprofileLbsPtr and WirelesscontrollerWtpprofileLbsPtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLbsPtrInput` via:
//
//	        WirelesscontrollerWtpprofileLbsArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileLbsPtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLbsPtrOutput() WirelesscontrollerWtpprofileLbsPtrOutput
	ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileLbsPtrOutput
}

type wirelesscontrollerWtpprofileLbsPtrType WirelesscontrollerWtpprofileLbsArgs

func WirelesscontrollerWtpprofileLbsPtr(v *WirelesscontrollerWtpprofileLbsArgs) WirelesscontrollerWtpprofileLbsPtrInput {
	return (*wirelesscontrollerWtpprofileLbsPtrType)(v)
}

func (*wirelesscontrollerWtpprofileLbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileLbs)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileLbsPtrType) ToWirelesscontrollerWtpprofileLbsPtrOutput() WirelesscontrollerWtpprofileLbsPtrOutput {
	return i.ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileLbsPtrType) ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLbsPtrOutput)
}

type WirelesscontrollerWtpprofileLbsOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLbs)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLbsOutput) ToWirelesscontrollerWtpprofileLbsOutput() WirelesscontrollerWtpprofileLbsOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLbsOutput) ToWirelesscontrollerWtpprofileLbsOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLbsOutput) ToWirelesscontrollerWtpprofileLbsPtrOutput() WirelesscontrollerWtpprofileLbsPtrOutput {
	return o.ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileLbsOutput) ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileLbs) *WirelesscontrollerWtpprofileLbs {
		return &v
	}).(WirelesscontrollerWtpprofileLbsPtrOutput)
}

// Enable/disable AeroScout Real Time Location Service (RTLS) support. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) Aeroscout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.Aeroscout }).(pulumi.StringPtrOutput)
}

// Use BSSID or board MAC address as AP MAC address in the Aeroscout AP message. Valid values: `bssid`, `board-mac`.
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutApMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.AeroscoutApMac }).(pulumi.StringPtrOutput)
}

// Enable/disable MU compounded report. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutMmuReport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.AeroscoutMmuReport }).(pulumi.StringPtrOutput)
}

// Enable/disable AeroScout support. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutMu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.AeroscoutMu }).(pulumi.StringPtrOutput)
}

// AeroScout Mobile Unit (MU) mode dilution factor (default = 20).
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutMuFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.AeroscoutMuFactor }).(pulumi.IntPtrOutput)
}

// AeroScout MU mode timeout (0 - 65535 sec, default = 5).
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutMuTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.AeroscoutMuTimeout }).(pulumi.IntPtrOutput)
}

// IP address of AeroScout server.
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.AeroscoutServerIp }).(pulumi.StringPtrOutput)
}

// AeroScout server UDP listening port.
func (o WirelesscontrollerWtpprofileLbsOutput) AeroscoutServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.AeroscoutServerPort }).(pulumi.IntPtrOutput)
}

// Enable/disable Ekahua blink mode (also called AiRISTA Flow Blink Mode) to find the location of devices connected to a wireless LAN (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) EkahauBlinkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.EkahauBlinkMode }).(pulumi.StringPtrOutput)
}

// WiFi frame MAC address or WiFi Tag.
func (o WirelesscontrollerWtpprofileLbsOutput) EkahauTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.EkahauTag }).(pulumi.StringPtrOutput)
}

// IP address of Ekahua RTLS Controller (ERC).
func (o WirelesscontrollerWtpprofileLbsOutput) ErcServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.ErcServerIp }).(pulumi.StringPtrOutput)
}

// Ekahua RTLS Controller (ERC) UDP listening port.
func (o WirelesscontrollerWtpprofileLbsOutput) ErcServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.ErcServerPort }).(pulumi.IntPtrOutput)
}

// Enable/disable FortiPresence to monitor the location and activity of WiFi clients even if they don't connect to this WiFi network (default = disable). Valid values: `foreign`, `both`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) Fortipresence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.Fortipresence }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting BLE devices. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceBle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceBle }).(pulumi.StringPtrOutput)
}

// FortiPresence report transmit frequency (5 - 65535 sec, default = 30).
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.FortipresenceFrequency }).(pulumi.IntPtrOutput)
}

// FortiPresence server UDP listening port (default = 3000).
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresencePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *int { return v.FortipresencePort }).(pulumi.IntPtrOutput)
}

// FortiPresence project name (max. 16 characters, default = fortipresence).
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceProject }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting rogue APs. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceRogue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceRogue }).(pulumi.StringPtrOutput)
}

// FortiPresence secret password (max. 16 characters).
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceSecret }).(pulumi.StringPtrOutput)
}

// FortiPresence server IP address.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceServer }).(pulumi.StringPtrOutput)
}

// FortiPresence server address type (default = ipv4). Valid values: `ipv4`, `fqdn`.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceServerAddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceServerAddrType }).(pulumi.StringPtrOutput)
}

// FQDN of FortiPresence server.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceServerFqdn }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting unassociated stations. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) FortipresenceUnassoc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.FortipresenceUnassoc }).(pulumi.StringPtrOutput)
}

// Enable/disable client station locating services for all clients, whether associated or not (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsOutput) StationLocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLbs) *string { return v.StationLocate }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLbsPtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileLbs)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLbsPtrOutput) ToWirelesscontrollerWtpprofileLbsPtrOutput() WirelesscontrollerWtpprofileLbsPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLbsPtrOutput) ToWirelesscontrollerWtpprofileLbsPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLbsPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLbsPtrOutput) Elem() WirelesscontrollerWtpprofileLbsOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) WirelesscontrollerWtpprofileLbs {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileLbs
		return ret
	}).(WirelesscontrollerWtpprofileLbsOutput)
}

// Enable/disable AeroScout Real Time Location Service (RTLS) support. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) Aeroscout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.Aeroscout
	}).(pulumi.StringPtrOutput)
}

// Use BSSID or board MAC address as AP MAC address in the Aeroscout AP message. Valid values: `bssid`, `board-mac`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutApMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.AeroscoutApMac
	}).(pulumi.StringPtrOutput)
}

// Enable/disable MU compounded report. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutMmuReport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.AeroscoutMmuReport
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AeroScout support. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutMu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.AeroscoutMu
	}).(pulumi.StringPtrOutput)
}

// AeroScout Mobile Unit (MU) mode dilution factor (default = 20).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutMuFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.AeroscoutMuFactor
	}).(pulumi.IntPtrOutput)
}

// AeroScout MU mode timeout (0 - 65535 sec, default = 5).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutMuTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.AeroscoutMuTimeout
	}).(pulumi.IntPtrOutput)
}

// IP address of AeroScout server.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.AeroscoutServerIp
	}).(pulumi.StringPtrOutput)
}

// AeroScout server UDP listening port.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) AeroscoutServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.AeroscoutServerPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable Ekahua blink mode (also called AiRISTA Flow Blink Mode) to find the location of devices connected to a wireless LAN (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) EkahauBlinkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.EkahauBlinkMode
	}).(pulumi.StringPtrOutput)
}

// WiFi frame MAC address or WiFi Tag.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) EkahauTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.EkahauTag
	}).(pulumi.StringPtrOutput)
}

// IP address of Ekahua RTLS Controller (ERC).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) ErcServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.ErcServerIp
	}).(pulumi.StringPtrOutput)
}

// Ekahua RTLS Controller (ERC) UDP listening port.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) ErcServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.ErcServerPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable FortiPresence to monitor the location and activity of WiFi clients even if they don't connect to this WiFi network (default = disable). Valid values: `foreign`, `both`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) Fortipresence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.Fortipresence
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting BLE devices. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceBle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceBle
	}).(pulumi.StringPtrOutput)
}

// FortiPresence report transmit frequency (5 - 65535 sec, default = 30).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.FortipresenceFrequency
	}).(pulumi.IntPtrOutput)
}

// FortiPresence server UDP listening port (default = 3000).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresencePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *int {
		if v == nil {
			return nil
		}
		return v.FortipresencePort
	}).(pulumi.IntPtrOutput)
}

// FortiPresence project name (max. 16 characters, default = fortipresence).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceProject
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting rogue APs. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceRogue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceRogue
	}).(pulumi.StringPtrOutput)
}

// FortiPresence secret password (max. 16 characters).
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceSecret
	}).(pulumi.StringPtrOutput)
}

// FortiPresence server IP address.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceServer
	}).(pulumi.StringPtrOutput)
}

// FortiPresence server address type (default = ipv4). Valid values: `ipv4`, `fqdn`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceServerAddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceServerAddrType
	}).(pulumi.StringPtrOutput)
}

// FQDN of FortiPresence server.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceServerFqdn
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiPresence finding and reporting unassociated stations. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) FortipresenceUnassoc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.FortipresenceUnassoc
	}).(pulumi.StringPtrOutput)
}

// Enable/disable client station locating services for all clients, whether associated or not (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileLbsPtrOutput) StationLocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileLbs) *string {
		if v == nil {
			return nil
		}
		return v.StationLocate
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLedSchedule struct {
	// LED schedule name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpprofileLedScheduleInput is an input type that accepts WirelesscontrollerWtpprofileLedScheduleArgs and WirelesscontrollerWtpprofileLedScheduleOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLedScheduleInput` via:
//
//	WirelesscontrollerWtpprofileLedScheduleArgs{...}
type WirelesscontrollerWtpprofileLedScheduleInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLedScheduleOutput() WirelesscontrollerWtpprofileLedScheduleOutput
	ToWirelesscontrollerWtpprofileLedScheduleOutputWithContext(context.Context) WirelesscontrollerWtpprofileLedScheduleOutput
}

type WirelesscontrollerWtpprofileLedScheduleArgs struct {
	// LED schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpprofileLedScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLedSchedule)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileLedScheduleArgs) ToWirelesscontrollerWtpprofileLedScheduleOutput() WirelesscontrollerWtpprofileLedScheduleOutput {
	return i.ToWirelesscontrollerWtpprofileLedScheduleOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLedScheduleArgs) ToWirelesscontrollerWtpprofileLedScheduleOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLedScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLedScheduleOutput)
}

// WirelesscontrollerWtpprofileLedScheduleArrayInput is an input type that accepts WirelesscontrollerWtpprofileLedScheduleArray and WirelesscontrollerWtpprofileLedScheduleArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileLedScheduleArrayInput` via:
//
//	WirelesscontrollerWtpprofileLedScheduleArray{ WirelesscontrollerWtpprofileLedScheduleArgs{...} }
type WirelesscontrollerWtpprofileLedScheduleArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileLedScheduleArrayOutput() WirelesscontrollerWtpprofileLedScheduleArrayOutput
	ToWirelesscontrollerWtpprofileLedScheduleArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileLedScheduleArrayOutput
}

type WirelesscontrollerWtpprofileLedScheduleArray []WirelesscontrollerWtpprofileLedScheduleInput

func (WirelesscontrollerWtpprofileLedScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileLedSchedule)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileLedScheduleArray) ToWirelesscontrollerWtpprofileLedScheduleArrayOutput() WirelesscontrollerWtpprofileLedScheduleArrayOutput {
	return i.ToWirelesscontrollerWtpprofileLedScheduleArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileLedScheduleArray) ToWirelesscontrollerWtpprofileLedScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLedScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileLedScheduleArrayOutput)
}

type WirelesscontrollerWtpprofileLedScheduleOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLedScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileLedSchedule)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLedScheduleOutput) ToWirelesscontrollerWtpprofileLedScheduleOutput() WirelesscontrollerWtpprofileLedScheduleOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLedScheduleOutput) ToWirelesscontrollerWtpprofileLedScheduleOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLedScheduleOutput {
	return o
}

// LED schedule name.
func (o WirelesscontrollerWtpprofileLedScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileLedSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileLedScheduleArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileLedScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileLedSchedule)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileLedScheduleArrayOutput) ToWirelesscontrollerWtpprofileLedScheduleArrayOutput() WirelesscontrollerWtpprofileLedScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLedScheduleArrayOutput) ToWirelesscontrollerWtpprofileLedScheduleArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileLedScheduleArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileLedScheduleArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileLedScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileLedSchedule {
		return vs[0].([]WirelesscontrollerWtpprofileLedSchedule)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileLedScheduleOutput)
}

type WirelesscontrollerWtpprofilePlatform struct {
	// Enable/disable use of one radio for dedicated dual-band scanning to detect RF characterization and wireless threat management. Valid values: `enable`, `disable`.
	Ddscan *string `pulumi:"ddscan"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode *string `pulumi:"mode"`
	// WTP, FortiAP or AP platform type. There are built-in WTP profiles for all supported FortiAP models. You can select a built-in profile and customize it or create a new profile.
	Type *string `pulumi:"type"`
}

// WirelesscontrollerWtpprofilePlatformInput is an input type that accepts WirelesscontrollerWtpprofilePlatformArgs and WirelesscontrollerWtpprofilePlatformOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofilePlatformInput` via:
//
//	WirelesscontrollerWtpprofilePlatformArgs{...}
type WirelesscontrollerWtpprofilePlatformInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofilePlatformOutput() WirelesscontrollerWtpprofilePlatformOutput
	ToWirelesscontrollerWtpprofilePlatformOutputWithContext(context.Context) WirelesscontrollerWtpprofilePlatformOutput
}

type WirelesscontrollerWtpprofilePlatformArgs struct {
	// Enable/disable use of one radio for dedicated dual-band scanning to detect RF characterization and wireless threat management. Valid values: `enable`, `disable`.
	Ddscan pulumi.StringPtrInput `pulumi:"ddscan"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// WTP, FortiAP or AP platform type. There are built-in WTP profiles for all supported FortiAP models. You can select a built-in profile and customize it or create a new profile.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WirelesscontrollerWtpprofilePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofilePlatform)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofilePlatformArgs) ToWirelesscontrollerWtpprofilePlatformOutput() WirelesscontrollerWtpprofilePlatformOutput {
	return i.ToWirelesscontrollerWtpprofilePlatformOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofilePlatformArgs) ToWirelesscontrollerWtpprofilePlatformOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofilePlatformOutput)
}

func (i WirelesscontrollerWtpprofilePlatformArgs) ToWirelesscontrollerWtpprofilePlatformPtrOutput() WirelesscontrollerWtpprofilePlatformPtrOutput {
	return i.ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofilePlatformArgs) ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofilePlatformOutput).ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofilePlatformPtrInput is an input type that accepts WirelesscontrollerWtpprofilePlatformArgs, WirelesscontrollerWtpprofilePlatformPtr and WirelesscontrollerWtpprofilePlatformPtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofilePlatformPtrInput` via:
//
//	        WirelesscontrollerWtpprofilePlatformArgs{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofilePlatformPtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofilePlatformPtrOutput() WirelesscontrollerWtpprofilePlatformPtrOutput
	ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(context.Context) WirelesscontrollerWtpprofilePlatformPtrOutput
}

type wirelesscontrollerWtpprofilePlatformPtrType WirelesscontrollerWtpprofilePlatformArgs

func WirelesscontrollerWtpprofilePlatformPtr(v *WirelesscontrollerWtpprofilePlatformArgs) WirelesscontrollerWtpprofilePlatformPtrInput {
	return (*wirelesscontrollerWtpprofilePlatformPtrType)(v)
}

func (*wirelesscontrollerWtpprofilePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofilePlatform)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofilePlatformPtrType) ToWirelesscontrollerWtpprofilePlatformPtrOutput() WirelesscontrollerWtpprofilePlatformPtrOutput {
	return i.ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofilePlatformPtrType) ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofilePlatformPtrOutput)
}

type WirelesscontrollerWtpprofilePlatformOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofilePlatform)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofilePlatformOutput) ToWirelesscontrollerWtpprofilePlatformOutput() WirelesscontrollerWtpprofilePlatformOutput {
	return o
}

func (o WirelesscontrollerWtpprofilePlatformOutput) ToWirelesscontrollerWtpprofilePlatformOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformOutput {
	return o
}

func (o WirelesscontrollerWtpprofilePlatformOutput) ToWirelesscontrollerWtpprofilePlatformPtrOutput() WirelesscontrollerWtpprofilePlatformPtrOutput {
	return o.ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofilePlatformOutput) ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofilePlatform) *WirelesscontrollerWtpprofilePlatform {
		return &v
	}).(WirelesscontrollerWtpprofilePlatformPtrOutput)
}

// Enable/disable use of one radio for dedicated dual-band scanning to detect RF characterization and wireless threat management. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofilePlatformOutput) Ddscan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofilePlatform) *string { return v.Ddscan }).(pulumi.StringPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofilePlatformOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofilePlatform) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// WTP, FortiAP or AP platform type. There are built-in WTP profiles for all supported FortiAP models. You can select a built-in profile and customize it or create a new profile.
func (o WirelesscontrollerWtpprofilePlatformOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofilePlatform) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofilePlatformPtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofilePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofilePlatform)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofilePlatformPtrOutput) ToWirelesscontrollerWtpprofilePlatformPtrOutput() WirelesscontrollerWtpprofilePlatformPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofilePlatformPtrOutput) ToWirelesscontrollerWtpprofilePlatformPtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofilePlatformPtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofilePlatformPtrOutput) Elem() WirelesscontrollerWtpprofilePlatformOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofilePlatform) WirelesscontrollerWtpprofilePlatform {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofilePlatform
		return ret
	}).(WirelesscontrollerWtpprofilePlatformOutput)
}

// Enable/disable use of one radio for dedicated dual-band scanning to detect RF characterization and wireless threat management. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofilePlatformPtrOutput) Ddscan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofilePlatform) *string {
		if v == nil {
			return nil
		}
		return v.Ddscan
	}).(pulumi.StringPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofilePlatformPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofilePlatform) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// WTP, FortiAP or AP platform type. There are built-in WTP profiles for all supported FortiAP models. You can select a built-in profile and customize it or create a new profile.
func (o WirelesscontrollerWtpprofilePlatformPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofilePlatform) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio1 struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness *string `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu *string `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff *string `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr *string `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize *int `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan *int `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl *string `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData *string `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon *string `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther *string `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe *string `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile *string `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType *string `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl *string `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity *int `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval *int `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor *int `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode *string `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl *string `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity *int `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding *string `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization *string `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpprofileRadio1Channel `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence *string `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp *string `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma *string `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity *string `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim *int `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold *int `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff *string `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol *string `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort *int `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance *int `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode *string `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d *string `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize *string `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode *string `pulumi:"protectionMode"`
	// radio-id
	RadioId *int `pulumi:"radioId"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold *int `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid *string `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal *string `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString *string `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString *string `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword *string `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString *string `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl *string `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername *string `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword *string `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv *int `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType *string `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn *string `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp *string `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType *string `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid *string `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest *string `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername *string `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval *string `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize *string `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpprofileRadio1Vap `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile *string `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs *string `pulumi:"zeroWaitDfs"`
}

// WirelesscontrollerWtpprofileRadio1Input is an input type that accepts WirelesscontrollerWtpprofileRadio1Args and WirelesscontrollerWtpprofileRadio1Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1Input` via:
//
//	WirelesscontrollerWtpprofileRadio1Args{...}
type WirelesscontrollerWtpprofileRadio1Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1Output() WirelesscontrollerWtpprofileRadio1Output
	ToWirelesscontrollerWtpprofileRadio1OutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1Output
}

type WirelesscontrollerWtpprofileRadio1Args struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness pulumi.StringPtrInput `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu pulumi.StringPtrInput `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff pulumi.StringPtrInput `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr pulumi.StringPtrInput `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize pulumi.IntPtrInput `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan pulumi.IntPtrInput `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl pulumi.StringPtrInput `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData pulumi.StringPtrInput `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon pulumi.StringPtrInput `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther pulumi.StringPtrInput `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe pulumi.StringPtrInput `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile pulumi.StringPtrInput `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType pulumi.StringPtrInput `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl pulumi.StringPtrInput `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity pulumi.IntPtrInput `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval pulumi.IntPtrInput `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor pulumi.IntPtrInput `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode pulumi.StringPtrInput `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl pulumi.StringPtrInput `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity pulumi.IntPtrInput `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding pulumi.StringPtrInput `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization pulumi.StringPtrInput `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpprofileRadio1ChannelArrayInput `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence pulumi.StringPtrInput `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp pulumi.StringPtrInput `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma pulumi.StringPtrInput `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity pulumi.StringPtrInput `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim pulumi.IntPtrInput `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold pulumi.IntPtrInput `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff pulumi.StringPtrInput `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol pulumi.StringPtrInput `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort pulumi.IntPtrInput `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients pulumi.IntPtrInput `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance pulumi.IntPtrInput `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d pulumi.StringPtrInput `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize pulumi.StringPtrInput `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
	// radio-id
	RadioId pulumi.IntPtrInput `pulumi:"radioId"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold pulumi.IntPtrInput `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid pulumi.StringPtrInput `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal pulumi.StringPtrInput `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString pulumi.StringPtrInput `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString pulumi.StringPtrInput `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword pulumi.StringPtrInput `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString pulumi.StringPtrInput `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl pulumi.StringPtrInput `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername pulumi.StringPtrInput `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword pulumi.StringPtrInput `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv pulumi.IntPtrInput `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType pulumi.StringPtrInput `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn pulumi.StringPtrInput `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp pulumi.StringPtrInput `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType pulumi.StringPtrInput `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid pulumi.StringPtrInput `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest pulumi.StringPtrInput `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername pulumi.StringPtrInput `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval pulumi.StringPtrInput `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize pulumi.StringPtrInput `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpprofileRadio1VapArrayInput `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile pulumi.StringPtrInput `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs pulumi.StringPtrInput `pulumi:"zeroWaitDfs"`
}

func (WirelesscontrollerWtpprofileRadio1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio1Args) ToWirelesscontrollerWtpprofileRadio1Output() WirelesscontrollerWtpprofileRadio1Output {
	return i.ToWirelesscontrollerWtpprofileRadio1OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1Args) ToWirelesscontrollerWtpprofileRadio1OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1Output)
}

func (i WirelesscontrollerWtpprofileRadio1Args) ToWirelesscontrollerWtpprofileRadio1PtrOutput() WirelesscontrollerWtpprofileRadio1PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1Args) ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1Output).ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileRadio1PtrInput is an input type that accepts WirelesscontrollerWtpprofileRadio1Args, WirelesscontrollerWtpprofileRadio1Ptr and WirelesscontrollerWtpprofileRadio1PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1PtrInput` via:
//
//	        WirelesscontrollerWtpprofileRadio1Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileRadio1PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1PtrOutput() WirelesscontrollerWtpprofileRadio1PtrOutput
	ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1PtrOutput
}

type wirelesscontrollerWtpprofileRadio1PtrType WirelesscontrollerWtpprofileRadio1Args

func WirelesscontrollerWtpprofileRadio1Ptr(v *WirelesscontrollerWtpprofileRadio1Args) WirelesscontrollerWtpprofileRadio1PtrInput {
	return (*wirelesscontrollerWtpprofileRadio1PtrType)(v)
}

func (*wirelesscontrollerWtpprofileRadio1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio1)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileRadio1PtrType) ToWirelesscontrollerWtpprofileRadio1PtrOutput() WirelesscontrollerWtpprofileRadio1PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileRadio1PtrType) ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1PtrOutput)
}

type WirelesscontrollerWtpprofileRadio1Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1Output) ToWirelesscontrollerWtpprofileRadio1Output() WirelesscontrollerWtpprofileRadio1Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1Output) ToWirelesscontrollerWtpprofileRadio1OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1Output) ToWirelesscontrollerWtpprofileRadio1PtrOutput() WirelesscontrollerWtpprofileRadio1PtrOutput {
	return o.ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileRadio1Output) ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileRadio1) *WirelesscontrollerWtpprofileRadio1 {
		return &v
	}).(WirelesscontrollerWtpprofileRadio1PtrOutput)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.AirtimeFairness }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Amsdu }).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApHandoff }).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferAddr }).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.ApSnifferBufsize }).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.ApSnifferChan }).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferCtl }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferData }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferMgmtBeacon }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferMgmtOther }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ApSnifferMgmtProbe }).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio1Output) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ArrpProfile }).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio1Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio1Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio1Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio1Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio1Output) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Band5gType }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.BandwidthAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio1Output) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.BandwidthCapacity }).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio1Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio1Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio1Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.CallAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio1Output) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.CallCapacity }).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio1Output) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ChannelBonding }).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ChannelUtilization }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio1Output) Channels() WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) []WirelesscontrollerWtpprofileRadio1Channel {
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio1ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Coexistence }).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Darrp }).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio1Output) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Drma }).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio1Output) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.DrmaSensitivity }).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio1Output) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.Dtim }).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio1Output) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.FragThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.FrequencyHandoff }).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio1Output) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.IperfProtocol }).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio1Output) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.IperfServerPort }).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio1Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio1Output) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.MaxDistance }).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio1Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio1Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio1Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio1Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio1Output) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.PowersaveOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpprofileRadio1Output) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.RadioId }).(pulumi.IntPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio1Output) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.RtsThreshold }).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio1Output) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamBssid }).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCaptivePortal }).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpFailureString }).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpMatchString }).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpPassword }).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpSuccessString }).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpTestUrl }).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio1Output) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamCwpUsername }).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio1Output) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamPassword }).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio1Output) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *int { return v.SamReportIntv }).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio1Output) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamSecurityType }).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio1Output) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamServerFqdn }).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio1Output) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamServerIp }).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio1Output) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamServerType }).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio1Output) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamSsid }).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio1Output) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamTest }).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio1Output) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SamUsername }).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ShortGuardInterval }).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio1Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio1Output) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.TransmitOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio1Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio1Output) Vaps() WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) []WirelesscontrollerWtpprofileRadio1Vap { return v.Vaps }).(WirelesscontrollerWtpprofileRadio1VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio1Output) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.WidsProfile }).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1Output) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1) *string { return v.ZeroWaitDfs }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio1PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio1)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ToWirelesscontrollerWtpprofileRadio1PtrOutput() WirelesscontrollerWtpprofileRadio1PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ToWirelesscontrollerWtpprofileRadio1PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Elem() WirelesscontrollerWtpprofileRadio1Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) WirelesscontrollerWtpprofileRadio1 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileRadio1
		return ret
	}).(WirelesscontrollerWtpprofileRadio1Output)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.AirtimeFairness
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Amsdu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApHandoff
	}).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferAddr
	}).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferBufsize
	}).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferChan
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferCtl
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferData
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtBeacon
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtOther
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtProbe
	}).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ArrpProfile
	}).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Band5gType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.CallAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.CallCapacity
	}).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ChannelBonding
	}).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ChannelUtilization
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Channels() WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) []WirelesscontrollerWtpprofileRadio1Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio1ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Coexistence
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Darrp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Drma
	}).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.DrmaSensitivity
	}).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.Dtim
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.FragThreshold
	}).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyHandoff
	}).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.IperfProtocol
	}).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.IperfServerPort
	}).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.MaxDistance
	}).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.PowersaveOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.RadioId
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.RtsThreshold
	}).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamBssid
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCaptivePortal
	}).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpFailureString
	}).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpMatchString
	}).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpPassword
	}).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpSuccessString
	}).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpTestUrl
	}).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpUsername
	}).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamPassword
	}).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *int {
		if v == nil {
			return nil
		}
		return v.SamReportIntv
	}).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamSecurityType
	}).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamServerFqdn
	}).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamServerIp
	}).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamServerType
	}).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamSsid
	}).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamTest
	}).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SamUsername
	}).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ShortGuardInterval
	}).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.TransmitOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) Vaps() WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) []WirelesscontrollerWtpprofileRadio1Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpprofileRadio1VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.WidsProfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio1PtrOutput) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ZeroWaitDfs
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio1Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpprofileRadio1ChannelInput is an input type that accepts WirelesscontrollerWtpprofileRadio1ChannelArgs and WirelesscontrollerWtpprofileRadio1ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1ChannelInput` via:
//
//	WirelesscontrollerWtpprofileRadio1ChannelArgs{...}
type WirelesscontrollerWtpprofileRadio1ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1ChannelOutput() WirelesscontrollerWtpprofileRadio1ChannelOutput
	ToWirelesscontrollerWtpprofileRadio1ChannelOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1ChannelOutput
}

type WirelesscontrollerWtpprofileRadio1ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpprofileRadio1ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio1ChannelArgs) ToWirelesscontrollerWtpprofileRadio1ChannelOutput() WirelesscontrollerWtpprofileRadio1ChannelOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1ChannelArgs) ToWirelesscontrollerWtpprofileRadio1ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1ChannelOutput)
}

// WirelesscontrollerWtpprofileRadio1ChannelArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio1ChannelArray and WirelesscontrollerWtpprofileRadio1ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1ChannelArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio1ChannelArray{ WirelesscontrollerWtpprofileRadio1ChannelArgs{...} }
type WirelesscontrollerWtpprofileRadio1ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutput() WirelesscontrollerWtpprofileRadio1ChannelArrayOutput
	ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1ChannelArrayOutput
}

type WirelesscontrollerWtpprofileRadio1ChannelArray []WirelesscontrollerWtpprofileRadio1ChannelInput

func (WirelesscontrollerWtpprofileRadio1ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio1Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio1ChannelArray) ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutput() WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1ChannelArray) ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1ChannelArrayOutput)
}

type WirelesscontrollerWtpprofileRadio1ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1ChannelOutput) ToWirelesscontrollerWtpprofileRadio1ChannelOutput() WirelesscontrollerWtpprofileRadio1ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1ChannelOutput) ToWirelesscontrollerWtpprofileRadio1ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpprofileRadio1ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio1ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio1Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutput() WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio1ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio1ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio1Channel {
		return vs[0].([]WirelesscontrollerWtpprofileRadio1Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio1ChannelOutput)
}

type WirelesscontrollerWtpprofileRadio1Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpprofileRadio1VapInput is an input type that accepts WirelesscontrollerWtpprofileRadio1VapArgs and WirelesscontrollerWtpprofileRadio1VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1VapInput` via:
//
//	WirelesscontrollerWtpprofileRadio1VapArgs{...}
type WirelesscontrollerWtpprofileRadio1VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1VapOutput() WirelesscontrollerWtpprofileRadio1VapOutput
	ToWirelesscontrollerWtpprofileRadio1VapOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1VapOutput
}

type WirelesscontrollerWtpprofileRadio1VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpprofileRadio1VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio1VapArgs) ToWirelesscontrollerWtpprofileRadio1VapOutput() WirelesscontrollerWtpprofileRadio1VapOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1VapArgs) ToWirelesscontrollerWtpprofileRadio1VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1VapOutput)
}

// WirelesscontrollerWtpprofileRadio1VapArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio1VapArray and WirelesscontrollerWtpprofileRadio1VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio1VapArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio1VapArray{ WirelesscontrollerWtpprofileRadio1VapArgs{...} }
type WirelesscontrollerWtpprofileRadio1VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio1VapArrayOutput() WirelesscontrollerWtpprofileRadio1VapArrayOutput
	ToWirelesscontrollerWtpprofileRadio1VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio1VapArrayOutput
}

type WirelesscontrollerWtpprofileRadio1VapArray []WirelesscontrollerWtpprofileRadio1VapInput

func (WirelesscontrollerWtpprofileRadio1VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio1Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio1VapArray) ToWirelesscontrollerWtpprofileRadio1VapArrayOutput() WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio1VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio1VapArray) ToWirelesscontrollerWtpprofileRadio1VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio1VapArrayOutput)
}

type WirelesscontrollerWtpprofileRadio1VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1VapOutput) ToWirelesscontrollerWtpprofileRadio1VapOutput() WirelesscontrollerWtpprofileRadio1VapOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1VapOutput) ToWirelesscontrollerWtpprofileRadio1VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpprofileRadio1VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio1Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio1VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio1VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio1Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio1VapArrayOutput) ToWirelesscontrollerWtpprofileRadio1VapArrayOutput() WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1VapArrayOutput) ToWirelesscontrollerWtpprofileRadio1VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio1VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio1VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio1VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio1Vap {
		return vs[0].([]WirelesscontrollerWtpprofileRadio1Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio1VapOutput)
}

type WirelesscontrollerWtpprofileRadio2 struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness *string `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu *string `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff *string `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr *string `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize *int `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan *int `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl *string `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData *string `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon *string `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther *string `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe *string `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile *string `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType *string `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl *string `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity *int `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval *int `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor *int `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode *string `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl *string `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity *int `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding *string `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization *string `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpprofileRadio2Channel `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence *string `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp *string `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma *string `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity *string `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim *int `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold *int `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff *string `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol *string `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort *int `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance *int `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode *string `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d *string `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize *string `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode *string `pulumi:"protectionMode"`
	// radio-id
	RadioId *int `pulumi:"radioId"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold *int `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid *string `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal *string `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString *string `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString *string `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword *string `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString *string `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl *string `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername *string `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword *string `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv *int `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType *string `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn *string `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp *string `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType *string `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid *string `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest *string `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername *string `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval *string `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize *string `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpprofileRadio2Vap `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile *string `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs *string `pulumi:"zeroWaitDfs"`
}

// WirelesscontrollerWtpprofileRadio2Input is an input type that accepts WirelesscontrollerWtpprofileRadio2Args and WirelesscontrollerWtpprofileRadio2Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2Input` via:
//
//	WirelesscontrollerWtpprofileRadio2Args{...}
type WirelesscontrollerWtpprofileRadio2Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2Output() WirelesscontrollerWtpprofileRadio2Output
	ToWirelesscontrollerWtpprofileRadio2OutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2Output
}

type WirelesscontrollerWtpprofileRadio2Args struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness pulumi.StringPtrInput `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu pulumi.StringPtrInput `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff pulumi.StringPtrInput `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr pulumi.StringPtrInput `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize pulumi.IntPtrInput `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan pulumi.IntPtrInput `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl pulumi.StringPtrInput `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData pulumi.StringPtrInput `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon pulumi.StringPtrInput `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther pulumi.StringPtrInput `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe pulumi.StringPtrInput `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile pulumi.StringPtrInput `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType pulumi.StringPtrInput `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl pulumi.StringPtrInput `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity pulumi.IntPtrInput `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval pulumi.IntPtrInput `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor pulumi.IntPtrInput `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode pulumi.StringPtrInput `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl pulumi.StringPtrInput `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity pulumi.IntPtrInput `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding pulumi.StringPtrInput `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization pulumi.StringPtrInput `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpprofileRadio2ChannelArrayInput `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence pulumi.StringPtrInput `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp pulumi.StringPtrInput `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma pulumi.StringPtrInput `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity pulumi.StringPtrInput `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim pulumi.IntPtrInput `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold pulumi.IntPtrInput `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff pulumi.StringPtrInput `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol pulumi.StringPtrInput `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort pulumi.IntPtrInput `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients pulumi.IntPtrInput `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance pulumi.IntPtrInput `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d pulumi.StringPtrInput `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize pulumi.StringPtrInput `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
	// radio-id
	RadioId pulumi.IntPtrInput `pulumi:"radioId"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold pulumi.IntPtrInput `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid pulumi.StringPtrInput `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal pulumi.StringPtrInput `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString pulumi.StringPtrInput `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString pulumi.StringPtrInput `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword pulumi.StringPtrInput `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString pulumi.StringPtrInput `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl pulumi.StringPtrInput `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername pulumi.StringPtrInput `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword pulumi.StringPtrInput `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv pulumi.IntPtrInput `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType pulumi.StringPtrInput `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn pulumi.StringPtrInput `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp pulumi.StringPtrInput `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType pulumi.StringPtrInput `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid pulumi.StringPtrInput `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest pulumi.StringPtrInput `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername pulumi.StringPtrInput `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval pulumi.StringPtrInput `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize pulumi.StringPtrInput `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpprofileRadio2VapArrayInput `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile pulumi.StringPtrInput `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs pulumi.StringPtrInput `pulumi:"zeroWaitDfs"`
}

func (WirelesscontrollerWtpprofileRadio2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio2Args) ToWirelesscontrollerWtpprofileRadio2Output() WirelesscontrollerWtpprofileRadio2Output {
	return i.ToWirelesscontrollerWtpprofileRadio2OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2Args) ToWirelesscontrollerWtpprofileRadio2OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2Output)
}

func (i WirelesscontrollerWtpprofileRadio2Args) ToWirelesscontrollerWtpprofileRadio2PtrOutput() WirelesscontrollerWtpprofileRadio2PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2Args) ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2Output).ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileRadio2PtrInput is an input type that accepts WirelesscontrollerWtpprofileRadio2Args, WirelesscontrollerWtpprofileRadio2Ptr and WirelesscontrollerWtpprofileRadio2PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2PtrInput` via:
//
//	        WirelesscontrollerWtpprofileRadio2Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileRadio2PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2PtrOutput() WirelesscontrollerWtpprofileRadio2PtrOutput
	ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2PtrOutput
}

type wirelesscontrollerWtpprofileRadio2PtrType WirelesscontrollerWtpprofileRadio2Args

func WirelesscontrollerWtpprofileRadio2Ptr(v *WirelesscontrollerWtpprofileRadio2Args) WirelesscontrollerWtpprofileRadio2PtrInput {
	return (*wirelesscontrollerWtpprofileRadio2PtrType)(v)
}

func (*wirelesscontrollerWtpprofileRadio2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio2)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileRadio2PtrType) ToWirelesscontrollerWtpprofileRadio2PtrOutput() WirelesscontrollerWtpprofileRadio2PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileRadio2PtrType) ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2PtrOutput)
}

type WirelesscontrollerWtpprofileRadio2Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2Output) ToWirelesscontrollerWtpprofileRadio2Output() WirelesscontrollerWtpprofileRadio2Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2Output) ToWirelesscontrollerWtpprofileRadio2OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2Output) ToWirelesscontrollerWtpprofileRadio2PtrOutput() WirelesscontrollerWtpprofileRadio2PtrOutput {
	return o.ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileRadio2Output) ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileRadio2) *WirelesscontrollerWtpprofileRadio2 {
		return &v
	}).(WirelesscontrollerWtpprofileRadio2PtrOutput)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.AirtimeFairness }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Amsdu }).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApHandoff }).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferAddr }).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.ApSnifferBufsize }).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.ApSnifferChan }).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferCtl }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferData }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferMgmtBeacon }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferMgmtOther }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ApSnifferMgmtProbe }).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio2Output) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ArrpProfile }).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio2Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio2Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio2Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio2Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio2Output) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Band5gType }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.BandwidthAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio2Output) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.BandwidthCapacity }).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio2Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio2Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio2Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.CallAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio2Output) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.CallCapacity }).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio2Output) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ChannelBonding }).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ChannelUtilization }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio2Output) Channels() WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) []WirelesscontrollerWtpprofileRadio2Channel {
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio2ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Coexistence }).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Darrp }).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio2Output) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Drma }).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio2Output) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.DrmaSensitivity }).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio2Output) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.Dtim }).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio2Output) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.FragThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.FrequencyHandoff }).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio2Output) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.IperfProtocol }).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio2Output) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.IperfServerPort }).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio2Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio2Output) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.MaxDistance }).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio2Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio2Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio2Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio2Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio2Output) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.PowersaveOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpprofileRadio2Output) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.RadioId }).(pulumi.IntPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio2Output) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.RtsThreshold }).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio2Output) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamBssid }).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCaptivePortal }).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpFailureString }).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpMatchString }).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpPassword }).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpSuccessString }).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpTestUrl }).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio2Output) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamCwpUsername }).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio2Output) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamPassword }).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio2Output) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *int { return v.SamReportIntv }).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio2Output) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamSecurityType }).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio2Output) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamServerFqdn }).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio2Output) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamServerIp }).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio2Output) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamServerType }).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio2Output) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamSsid }).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio2Output) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamTest }).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio2Output) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SamUsername }).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ShortGuardInterval }).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio2Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio2Output) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.TransmitOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio2Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio2Output) Vaps() WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) []WirelesscontrollerWtpprofileRadio2Vap { return v.Vaps }).(WirelesscontrollerWtpprofileRadio2VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio2Output) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.WidsProfile }).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2Output) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2) *string { return v.ZeroWaitDfs }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio2PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio2)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ToWirelesscontrollerWtpprofileRadio2PtrOutput() WirelesscontrollerWtpprofileRadio2PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ToWirelesscontrollerWtpprofileRadio2PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Elem() WirelesscontrollerWtpprofileRadio2Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) WirelesscontrollerWtpprofileRadio2 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileRadio2
		return ret
	}).(WirelesscontrollerWtpprofileRadio2Output)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.AirtimeFairness
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Amsdu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApHandoff
	}).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferAddr
	}).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferBufsize
	}).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferChan
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferCtl
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferData
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtBeacon
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtOther
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtProbe
	}).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ArrpProfile
	}).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Band5gType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.CallAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.CallCapacity
	}).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ChannelBonding
	}).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ChannelUtilization
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Channels() WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) []WirelesscontrollerWtpprofileRadio2Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio2ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Coexistence
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Darrp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Drma
	}).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.DrmaSensitivity
	}).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.Dtim
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.FragThreshold
	}).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyHandoff
	}).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.IperfProtocol
	}).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.IperfServerPort
	}).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.MaxDistance
	}).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.PowersaveOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// radio-id
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) RadioId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.RadioId
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.RtsThreshold
	}).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamBssid
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCaptivePortal
	}).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpFailureString
	}).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpMatchString
	}).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpPassword
	}).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpSuccessString
	}).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpTestUrl
	}).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpUsername
	}).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamPassword
	}).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *int {
		if v == nil {
			return nil
		}
		return v.SamReportIntv
	}).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamSecurityType
	}).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamServerFqdn
	}).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamServerIp
	}).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamServerType
	}).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamSsid
	}).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamTest
	}).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SamUsername
	}).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ShortGuardInterval
	}).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.TransmitOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) Vaps() WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) []WirelesscontrollerWtpprofileRadio2Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpprofileRadio2VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.WidsProfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio2PtrOutput) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ZeroWaitDfs
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio2Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpprofileRadio2ChannelInput is an input type that accepts WirelesscontrollerWtpprofileRadio2ChannelArgs and WirelesscontrollerWtpprofileRadio2ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2ChannelInput` via:
//
//	WirelesscontrollerWtpprofileRadio2ChannelArgs{...}
type WirelesscontrollerWtpprofileRadio2ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2ChannelOutput() WirelesscontrollerWtpprofileRadio2ChannelOutput
	ToWirelesscontrollerWtpprofileRadio2ChannelOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2ChannelOutput
}

type WirelesscontrollerWtpprofileRadio2ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpprofileRadio2ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio2ChannelArgs) ToWirelesscontrollerWtpprofileRadio2ChannelOutput() WirelesscontrollerWtpprofileRadio2ChannelOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2ChannelArgs) ToWirelesscontrollerWtpprofileRadio2ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2ChannelOutput)
}

// WirelesscontrollerWtpprofileRadio2ChannelArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio2ChannelArray and WirelesscontrollerWtpprofileRadio2ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2ChannelArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio2ChannelArray{ WirelesscontrollerWtpprofileRadio2ChannelArgs{...} }
type WirelesscontrollerWtpprofileRadio2ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutput() WirelesscontrollerWtpprofileRadio2ChannelArrayOutput
	ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2ChannelArrayOutput
}

type WirelesscontrollerWtpprofileRadio2ChannelArray []WirelesscontrollerWtpprofileRadio2ChannelInput

func (WirelesscontrollerWtpprofileRadio2ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio2Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio2ChannelArray) ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutput() WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2ChannelArray) ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2ChannelArrayOutput)
}

type WirelesscontrollerWtpprofileRadio2ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2ChannelOutput) ToWirelesscontrollerWtpprofileRadio2ChannelOutput() WirelesscontrollerWtpprofileRadio2ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2ChannelOutput) ToWirelesscontrollerWtpprofileRadio2ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpprofileRadio2ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio2ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio2Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutput() WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio2ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio2ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio2Channel {
		return vs[0].([]WirelesscontrollerWtpprofileRadio2Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio2ChannelOutput)
}

type WirelesscontrollerWtpprofileRadio2Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpprofileRadio2VapInput is an input type that accepts WirelesscontrollerWtpprofileRadio2VapArgs and WirelesscontrollerWtpprofileRadio2VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2VapInput` via:
//
//	WirelesscontrollerWtpprofileRadio2VapArgs{...}
type WirelesscontrollerWtpprofileRadio2VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2VapOutput() WirelesscontrollerWtpprofileRadio2VapOutput
	ToWirelesscontrollerWtpprofileRadio2VapOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2VapOutput
}

type WirelesscontrollerWtpprofileRadio2VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpprofileRadio2VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio2VapArgs) ToWirelesscontrollerWtpprofileRadio2VapOutput() WirelesscontrollerWtpprofileRadio2VapOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2VapArgs) ToWirelesscontrollerWtpprofileRadio2VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2VapOutput)
}

// WirelesscontrollerWtpprofileRadio2VapArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio2VapArray and WirelesscontrollerWtpprofileRadio2VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio2VapArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio2VapArray{ WirelesscontrollerWtpprofileRadio2VapArgs{...} }
type WirelesscontrollerWtpprofileRadio2VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio2VapArrayOutput() WirelesscontrollerWtpprofileRadio2VapArrayOutput
	ToWirelesscontrollerWtpprofileRadio2VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio2VapArrayOutput
}

type WirelesscontrollerWtpprofileRadio2VapArray []WirelesscontrollerWtpprofileRadio2VapInput

func (WirelesscontrollerWtpprofileRadio2VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio2Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio2VapArray) ToWirelesscontrollerWtpprofileRadio2VapArrayOutput() WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio2VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio2VapArray) ToWirelesscontrollerWtpprofileRadio2VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio2VapArrayOutput)
}

type WirelesscontrollerWtpprofileRadio2VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2VapOutput) ToWirelesscontrollerWtpprofileRadio2VapOutput() WirelesscontrollerWtpprofileRadio2VapOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2VapOutput) ToWirelesscontrollerWtpprofileRadio2VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpprofileRadio2VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio2Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio2VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio2VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio2Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio2VapArrayOutput) ToWirelesscontrollerWtpprofileRadio2VapArrayOutput() WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2VapArrayOutput) ToWirelesscontrollerWtpprofileRadio2VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio2VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio2VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio2VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio2Vap {
		return vs[0].([]WirelesscontrollerWtpprofileRadio2Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio2VapOutput)
}

type WirelesscontrollerWtpprofileRadio3 struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness *string `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu *string `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff *string `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr *string `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize *int `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan *int `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl *string `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData *string `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon *string `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther *string `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe *string `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile *string `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType *string `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl *string `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity *int `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval *int `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor *int `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode *string `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl *string `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity *int `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding *string `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization *string `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpprofileRadio3Channel `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence *string `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp *string `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma *string `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity *string `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim *int `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold *int `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff *string `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol *string `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort *int `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance *int `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode *string `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d *string `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize *string `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode *string `pulumi:"protectionMode"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold *int `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid *string `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal *string `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString *string `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString *string `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword *string `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString *string `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl *string `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername *string `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword *string `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv *int `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType *string `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn *string `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp *string `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType *string `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid *string `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest *string `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername *string `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval *string `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize *string `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpprofileRadio3Vap `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile *string `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs *string `pulumi:"zeroWaitDfs"`
}

// WirelesscontrollerWtpprofileRadio3Input is an input type that accepts WirelesscontrollerWtpprofileRadio3Args and WirelesscontrollerWtpprofileRadio3Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3Input` via:
//
//	WirelesscontrollerWtpprofileRadio3Args{...}
type WirelesscontrollerWtpprofileRadio3Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3Output() WirelesscontrollerWtpprofileRadio3Output
	ToWirelesscontrollerWtpprofileRadio3OutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3Output
}

type WirelesscontrollerWtpprofileRadio3Args struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness pulumi.StringPtrInput `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu pulumi.StringPtrInput `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff pulumi.StringPtrInput `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr pulumi.StringPtrInput `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize pulumi.IntPtrInput `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan pulumi.IntPtrInput `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl pulumi.StringPtrInput `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData pulumi.StringPtrInput `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon pulumi.StringPtrInput `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther pulumi.StringPtrInput `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe pulumi.StringPtrInput `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile pulumi.StringPtrInput `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType pulumi.StringPtrInput `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl pulumi.StringPtrInput `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity pulumi.IntPtrInput `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval pulumi.IntPtrInput `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor pulumi.IntPtrInput `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode pulumi.StringPtrInput `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl pulumi.StringPtrInput `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity pulumi.IntPtrInput `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding pulumi.StringPtrInput `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization pulumi.StringPtrInput `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpprofileRadio3ChannelArrayInput `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence pulumi.StringPtrInput `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp pulumi.StringPtrInput `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma pulumi.StringPtrInput `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity pulumi.StringPtrInput `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim pulumi.IntPtrInput `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold pulumi.IntPtrInput `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff pulumi.StringPtrInput `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol pulumi.StringPtrInput `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort pulumi.IntPtrInput `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients pulumi.IntPtrInput `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance pulumi.IntPtrInput `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d pulumi.StringPtrInput `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize pulumi.StringPtrInput `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold pulumi.IntPtrInput `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid pulumi.StringPtrInput `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal pulumi.StringPtrInput `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString pulumi.StringPtrInput `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString pulumi.StringPtrInput `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword pulumi.StringPtrInput `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString pulumi.StringPtrInput `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl pulumi.StringPtrInput `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername pulumi.StringPtrInput `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword pulumi.StringPtrInput `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv pulumi.IntPtrInput `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType pulumi.StringPtrInput `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn pulumi.StringPtrInput `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp pulumi.StringPtrInput `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType pulumi.StringPtrInput `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid pulumi.StringPtrInput `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest pulumi.StringPtrInput `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername pulumi.StringPtrInput `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval pulumi.StringPtrInput `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize pulumi.StringPtrInput `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpprofileRadio3VapArrayInput `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile pulumi.StringPtrInput `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs pulumi.StringPtrInput `pulumi:"zeroWaitDfs"`
}

func (WirelesscontrollerWtpprofileRadio3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio3Args) ToWirelesscontrollerWtpprofileRadio3Output() WirelesscontrollerWtpprofileRadio3Output {
	return i.ToWirelesscontrollerWtpprofileRadio3OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3Args) ToWirelesscontrollerWtpprofileRadio3OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3Output)
}

func (i WirelesscontrollerWtpprofileRadio3Args) ToWirelesscontrollerWtpprofileRadio3PtrOutput() WirelesscontrollerWtpprofileRadio3PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3Args) ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3Output).ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileRadio3PtrInput is an input type that accepts WirelesscontrollerWtpprofileRadio3Args, WirelesscontrollerWtpprofileRadio3Ptr and WirelesscontrollerWtpprofileRadio3PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3PtrInput` via:
//
//	        WirelesscontrollerWtpprofileRadio3Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileRadio3PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3PtrOutput() WirelesscontrollerWtpprofileRadio3PtrOutput
	ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3PtrOutput
}

type wirelesscontrollerWtpprofileRadio3PtrType WirelesscontrollerWtpprofileRadio3Args

func WirelesscontrollerWtpprofileRadio3Ptr(v *WirelesscontrollerWtpprofileRadio3Args) WirelesscontrollerWtpprofileRadio3PtrInput {
	return (*wirelesscontrollerWtpprofileRadio3PtrType)(v)
}

func (*wirelesscontrollerWtpprofileRadio3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio3)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileRadio3PtrType) ToWirelesscontrollerWtpprofileRadio3PtrOutput() WirelesscontrollerWtpprofileRadio3PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileRadio3PtrType) ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3PtrOutput)
}

type WirelesscontrollerWtpprofileRadio3Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3Output) ToWirelesscontrollerWtpprofileRadio3Output() WirelesscontrollerWtpprofileRadio3Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3Output) ToWirelesscontrollerWtpprofileRadio3OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3Output) ToWirelesscontrollerWtpprofileRadio3PtrOutput() WirelesscontrollerWtpprofileRadio3PtrOutput {
	return o.ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileRadio3Output) ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileRadio3) *WirelesscontrollerWtpprofileRadio3 {
		return &v
	}).(WirelesscontrollerWtpprofileRadio3PtrOutput)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.AirtimeFairness }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Amsdu }).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApHandoff }).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferAddr }).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.ApSnifferBufsize }).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.ApSnifferChan }).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferCtl }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferData }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferMgmtBeacon }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferMgmtOther }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ApSnifferMgmtProbe }).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio3Output) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ArrpProfile }).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio3Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio3Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio3Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio3Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio3Output) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Band5gType }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.BandwidthAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio3Output) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.BandwidthCapacity }).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio3Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio3Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio3Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.CallAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio3Output) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.CallCapacity }).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio3Output) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ChannelBonding }).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ChannelUtilization }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio3Output) Channels() WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) []WirelesscontrollerWtpprofileRadio3Channel {
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio3ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Coexistence }).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Darrp }).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio3Output) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Drma }).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio3Output) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.DrmaSensitivity }).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio3Output) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.Dtim }).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio3Output) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.FragThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.FrequencyHandoff }).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio3Output) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.IperfProtocol }).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio3Output) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.IperfServerPort }).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio3Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio3Output) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.MaxDistance }).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio3Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio3Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio3Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio3Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio3Output) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.PowersaveOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio3Output) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.RtsThreshold }).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio3Output) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamBssid }).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCaptivePortal }).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpFailureString }).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpMatchString }).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpPassword }).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpSuccessString }).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpTestUrl }).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio3Output) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamCwpUsername }).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio3Output) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamPassword }).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio3Output) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *int { return v.SamReportIntv }).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio3Output) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamSecurityType }).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio3Output) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamServerFqdn }).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio3Output) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamServerIp }).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio3Output) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamServerType }).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio3Output) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamSsid }).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio3Output) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamTest }).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio3Output) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SamUsername }).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ShortGuardInterval }).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio3Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio3Output) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.TransmitOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio3Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio3Output) Vaps() WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) []WirelesscontrollerWtpprofileRadio3Vap { return v.Vaps }).(WirelesscontrollerWtpprofileRadio3VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio3Output) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.WidsProfile }).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3Output) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3) *string { return v.ZeroWaitDfs }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio3PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio3)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ToWirelesscontrollerWtpprofileRadio3PtrOutput() WirelesscontrollerWtpprofileRadio3PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ToWirelesscontrollerWtpprofileRadio3PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Elem() WirelesscontrollerWtpprofileRadio3Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) WirelesscontrollerWtpprofileRadio3 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileRadio3
		return ret
	}).(WirelesscontrollerWtpprofileRadio3Output)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.AirtimeFairness
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Amsdu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApHandoff
	}).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferAddr
	}).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferBufsize
	}).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferChan
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferCtl
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferData
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtBeacon
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtOther
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtProbe
	}).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ArrpProfile
	}).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Band5gType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.CallAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.CallCapacity
	}).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ChannelBonding
	}).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ChannelUtilization
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Channels() WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) []WirelesscontrollerWtpprofileRadio3Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio3ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Coexistence
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Darrp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Drma
	}).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.DrmaSensitivity
	}).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.Dtim
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.FragThreshold
	}).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyHandoff
	}).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.IperfProtocol
	}).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.IperfServerPort
	}).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.MaxDistance
	}).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.PowersaveOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.RtsThreshold
	}).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamBssid
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCaptivePortal
	}).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpFailureString
	}).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpMatchString
	}).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpPassword
	}).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpSuccessString
	}).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpTestUrl
	}).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpUsername
	}).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamPassword
	}).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *int {
		if v == nil {
			return nil
		}
		return v.SamReportIntv
	}).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamSecurityType
	}).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamServerFqdn
	}).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamServerIp
	}).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamServerType
	}).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamSsid
	}).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamTest
	}).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SamUsername
	}).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ShortGuardInterval
	}).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.TransmitOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) Vaps() WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) []WirelesscontrollerWtpprofileRadio3Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpprofileRadio3VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.WidsProfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio3PtrOutput) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio3) *string {
		if v == nil {
			return nil
		}
		return v.ZeroWaitDfs
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio3Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpprofileRadio3ChannelInput is an input type that accepts WirelesscontrollerWtpprofileRadio3ChannelArgs and WirelesscontrollerWtpprofileRadio3ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3ChannelInput` via:
//
//	WirelesscontrollerWtpprofileRadio3ChannelArgs{...}
type WirelesscontrollerWtpprofileRadio3ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3ChannelOutput() WirelesscontrollerWtpprofileRadio3ChannelOutput
	ToWirelesscontrollerWtpprofileRadio3ChannelOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3ChannelOutput
}

type WirelesscontrollerWtpprofileRadio3ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpprofileRadio3ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio3ChannelArgs) ToWirelesscontrollerWtpprofileRadio3ChannelOutput() WirelesscontrollerWtpprofileRadio3ChannelOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3ChannelArgs) ToWirelesscontrollerWtpprofileRadio3ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3ChannelOutput)
}

// WirelesscontrollerWtpprofileRadio3ChannelArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio3ChannelArray and WirelesscontrollerWtpprofileRadio3ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3ChannelArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio3ChannelArray{ WirelesscontrollerWtpprofileRadio3ChannelArgs{...} }
type WirelesscontrollerWtpprofileRadio3ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutput() WirelesscontrollerWtpprofileRadio3ChannelArrayOutput
	ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3ChannelArrayOutput
}

type WirelesscontrollerWtpprofileRadio3ChannelArray []WirelesscontrollerWtpprofileRadio3ChannelInput

func (WirelesscontrollerWtpprofileRadio3ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio3Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio3ChannelArray) ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutput() WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3ChannelArray) ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3ChannelArrayOutput)
}

type WirelesscontrollerWtpprofileRadio3ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3ChannelOutput) ToWirelesscontrollerWtpprofileRadio3ChannelOutput() WirelesscontrollerWtpprofileRadio3ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3ChannelOutput) ToWirelesscontrollerWtpprofileRadio3ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpprofileRadio3ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio3ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio3Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutput() WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio3ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio3ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio3Channel {
		return vs[0].([]WirelesscontrollerWtpprofileRadio3Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio3ChannelOutput)
}

type WirelesscontrollerWtpprofileRadio3Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpprofileRadio3VapInput is an input type that accepts WirelesscontrollerWtpprofileRadio3VapArgs and WirelesscontrollerWtpprofileRadio3VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3VapInput` via:
//
//	WirelesscontrollerWtpprofileRadio3VapArgs{...}
type WirelesscontrollerWtpprofileRadio3VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3VapOutput() WirelesscontrollerWtpprofileRadio3VapOutput
	ToWirelesscontrollerWtpprofileRadio3VapOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3VapOutput
}

type WirelesscontrollerWtpprofileRadio3VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpprofileRadio3VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio3VapArgs) ToWirelesscontrollerWtpprofileRadio3VapOutput() WirelesscontrollerWtpprofileRadio3VapOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3VapArgs) ToWirelesscontrollerWtpprofileRadio3VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3VapOutput)
}

// WirelesscontrollerWtpprofileRadio3VapArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio3VapArray and WirelesscontrollerWtpprofileRadio3VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio3VapArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio3VapArray{ WirelesscontrollerWtpprofileRadio3VapArgs{...} }
type WirelesscontrollerWtpprofileRadio3VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio3VapArrayOutput() WirelesscontrollerWtpprofileRadio3VapArrayOutput
	ToWirelesscontrollerWtpprofileRadio3VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio3VapArrayOutput
}

type WirelesscontrollerWtpprofileRadio3VapArray []WirelesscontrollerWtpprofileRadio3VapInput

func (WirelesscontrollerWtpprofileRadio3VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio3Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio3VapArray) ToWirelesscontrollerWtpprofileRadio3VapArrayOutput() WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio3VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio3VapArray) ToWirelesscontrollerWtpprofileRadio3VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio3VapArrayOutput)
}

type WirelesscontrollerWtpprofileRadio3VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3VapOutput) ToWirelesscontrollerWtpprofileRadio3VapOutput() WirelesscontrollerWtpprofileRadio3VapOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3VapOutput) ToWirelesscontrollerWtpprofileRadio3VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpprofileRadio3VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio3Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio3VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio3VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio3Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio3VapArrayOutput) ToWirelesscontrollerWtpprofileRadio3VapArrayOutput() WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3VapArrayOutput) ToWirelesscontrollerWtpprofileRadio3VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio3VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio3VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio3VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio3Vap {
		return vs[0].([]WirelesscontrollerWtpprofileRadio3Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio3VapOutput)
}

type WirelesscontrollerWtpprofileRadio4 struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness *string `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu *string `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff *string `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr *string `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize *int `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan *int `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl *string `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData *string `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon *string `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther *string `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe *string `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile *string `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh *int `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel *string `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow *int `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget *string `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band *string `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType *string `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl *string `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity *int `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval *int `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor *int `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode *string `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl *string `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity *int `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding *string `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization *string `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels []WirelesscontrollerWtpprofileRadio4Channel `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence *string `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp *string `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma *string `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity *string `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim *int `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold *int `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff *string `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol *string `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort *int `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance *int `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode *string `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d *string `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel *int `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode *string `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue *int `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize *string `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode *string `pulumi:"protectionMode"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold *int `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid *string `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal *string `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString *string `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString *string `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword *string `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString *string `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl *string `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername *string `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword *string `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv *int `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType *string `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn *string `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp *string `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType *string `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid *string `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest *string `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername *string `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval *string `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis *string `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize *string `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll *string `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps []WirelesscontrollerWtpprofileRadio4Vap `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile *string `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs *string `pulumi:"zeroWaitDfs"`
}

// WirelesscontrollerWtpprofileRadio4Input is an input type that accepts WirelesscontrollerWtpprofileRadio4Args and WirelesscontrollerWtpprofileRadio4Output values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4Input` via:
//
//	WirelesscontrollerWtpprofileRadio4Args{...}
type WirelesscontrollerWtpprofileRadio4Input interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4Output() WirelesscontrollerWtpprofileRadio4Output
	ToWirelesscontrollerWtpprofileRadio4OutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4Output
}

type WirelesscontrollerWtpprofileRadio4Args struct {
	// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
	AirtimeFairness pulumi.StringPtrInput `pulumi:"airtimeFairness"`
	// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
	Amsdu pulumi.StringPtrInput `pulumi:"amsdu"`
	// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
	ApHandoff pulumi.StringPtrInput `pulumi:"apHandoff"`
	// MAC address to monitor.
	ApSnifferAddr pulumi.StringPtrInput `pulumi:"apSnifferAddr"`
	// Sniffer buffer size (1 - 32 MB, default = 16).
	ApSnifferBufsize pulumi.IntPtrInput `pulumi:"apSnifferBufsize"`
	// Channel on which to operate the sniffer (default = 6).
	ApSnifferChan pulumi.IntPtrInput `pulumi:"apSnifferChan"`
	// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferCtl pulumi.StringPtrInput `pulumi:"apSnifferCtl"`
	// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
	ApSnifferData pulumi.StringPtrInput `pulumi:"apSnifferData"`
	// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtBeacon pulumi.StringPtrInput `pulumi:"apSnifferMgmtBeacon"`
	// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtOther pulumi.StringPtrInput `pulumi:"apSnifferMgmtOther"`
	// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
	ApSnifferMgmtProbe pulumi.StringPtrInput `pulumi:"apSnifferMgmtProbe"`
	// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
	ArrpProfile pulumi.StringPtrInput `pulumi:"arrpProfile"`
	// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerHigh pulumi.IntPtrInput `pulumi:"autoPowerHigh"`
	// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
	AutoPowerLevel pulumi.StringPtrInput `pulumi:"autoPowerLevel"`
	// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
	AutoPowerLow pulumi.IntPtrInput `pulumi:"autoPowerLow"`
	// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
	AutoPowerTarget pulumi.StringPtrInput `pulumi:"autoPowerTarget"`
	// WiFi band that Radio 1 operates on.
	Band pulumi.StringPtrInput `pulumi:"band"`
	// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
	Band5gType pulumi.StringPtrInput `pulumi:"band5gType"`
	// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
	BandwidthAdmissionControl pulumi.StringPtrInput `pulumi:"bandwidthAdmissionControl"`
	// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
	BandwidthCapacity pulumi.IntPtrInput `pulumi:"bandwidthCapacity"`
	// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
	BeaconInterval pulumi.IntPtrInput `pulumi:"beaconInterval"`
	// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
	BssColor pulumi.IntPtrInput `pulumi:"bssColor"`
	// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
	BssColorMode pulumi.StringPtrInput `pulumi:"bssColorMode"`
	// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
	CallAdmissionControl pulumi.StringPtrInput `pulumi:"callAdmissionControl"`
	// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
	CallCapacity pulumi.IntPtrInput `pulumi:"callCapacity"`
	// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
	ChannelBonding pulumi.StringPtrInput `pulumi:"channelBonding"`
	// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
	ChannelUtilization pulumi.StringPtrInput `pulumi:"channelUtilization"`
	// Selected list of wireless radio channels. The structure of `channel` block is documented below.
	Channels WirelesscontrollerWtpprofileRadio4ChannelArrayInput `pulumi:"channels"`
	// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
	Coexistence pulumi.StringPtrInput `pulumi:"coexistence"`
	// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
	Darrp pulumi.StringPtrInput `pulumi:"darrp"`
	// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
	Drma pulumi.StringPtrInput `pulumi:"drma"`
	// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
	DrmaSensitivity pulumi.StringPtrInput `pulumi:"drmaSensitivity"`
	// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
	Dtim pulumi.IntPtrInput `pulumi:"dtim"`
	// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
	FragThreshold pulumi.IntPtrInput `pulumi:"fragThreshold"`
	// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
	FrequencyHandoff pulumi.StringPtrInput `pulumi:"frequencyHandoff"`
	// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
	IperfProtocol pulumi.StringPtrInput `pulumi:"iperfProtocol"`
	// Iperf service port number.
	IperfServerPort pulumi.IntPtrInput `pulumi:"iperfServerPort"`
	// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
	MaxClients pulumi.IntPtrInput `pulumi:"maxClients"`
	// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
	MaxDistance pulumi.IntPtrInput `pulumi:"maxDistance"`
	// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
	N80211d pulumi.StringPtrInput `pulumi:"n80211d"`
	// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
	PowerLevel pulumi.IntPtrInput `pulumi:"powerLevel"`
	// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
	// Radio EIRP power in dBm (1 - 33, default = 27).
	PowerValue pulumi.IntPtrInput `pulumi:"powerValue"`
	// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
	PowersaveOptimize pulumi.StringPtrInput `pulumi:"powersaveOptimize"`
	// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
	// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
	RtsThreshold pulumi.IntPtrInput `pulumi:"rtsThreshold"`
	// BSSID for WiFi network.
	SamBssid pulumi.StringPtrInput `pulumi:"samBssid"`
	// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
	SamCaptivePortal pulumi.StringPtrInput `pulumi:"samCaptivePortal"`
	// Failure identification on the page after an incorrect login.
	SamCwpFailureString pulumi.StringPtrInput `pulumi:"samCwpFailureString"`
	// Identification string from the captive portal login form.
	SamCwpMatchString pulumi.StringPtrInput `pulumi:"samCwpMatchString"`
	// Password for captive portal authentication.
	SamCwpPassword pulumi.StringPtrInput `pulumi:"samCwpPassword"`
	// Success identification on the page after a successful login.
	SamCwpSuccessString pulumi.StringPtrInput `pulumi:"samCwpSuccessString"`
	// Website the client is trying to access.
	SamCwpTestUrl pulumi.StringPtrInput `pulumi:"samCwpTestUrl"`
	// Username for captive portal authentication.
	SamCwpUsername pulumi.StringPtrInput `pulumi:"samCwpUsername"`
	// Passphrase for WiFi network connection.
	SamPassword pulumi.StringPtrInput `pulumi:"samPassword"`
	// SAM report interval (sec), 0 for a one-time report.
	SamReportIntv pulumi.IntPtrInput `pulumi:"samReportIntv"`
	// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
	SamSecurityType pulumi.StringPtrInput `pulumi:"samSecurityType"`
	// SAM test server domain name.
	SamServerFqdn pulumi.StringPtrInput `pulumi:"samServerFqdn"`
	// SAM test server IP address.
	SamServerIp pulumi.StringPtrInput `pulumi:"samServerIp"`
	// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
	SamServerType pulumi.StringPtrInput `pulumi:"samServerType"`
	// SSID for WiFi network.
	SamSsid pulumi.StringPtrInput `pulumi:"samSsid"`
	// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
	SamTest pulumi.StringPtrInput `pulumi:"samTest"`
	// Username for WiFi network connection.
	SamUsername pulumi.StringPtrInput `pulumi:"samUsername"`
	// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
	ShortGuardInterval pulumi.StringPtrInput `pulumi:"shortGuardInterval"`
	// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
	SpectrumAnalysis pulumi.StringPtrInput `pulumi:"spectrumAnalysis"`
	// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
	TransmitOptimize pulumi.StringPtrInput `pulumi:"transmitOptimize"`
	// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
	VapAll pulumi.StringPtrInput `pulumi:"vapAll"`
	// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
	Vaps WirelesscontrollerWtpprofileRadio4VapArrayInput `pulumi:"vaps"`
	// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
	WidsProfile pulumi.StringPtrInput `pulumi:"widsProfile"`
	// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
	ZeroWaitDfs pulumi.StringPtrInput `pulumi:"zeroWaitDfs"`
}

func (WirelesscontrollerWtpprofileRadio4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio4Args) ToWirelesscontrollerWtpprofileRadio4Output() WirelesscontrollerWtpprofileRadio4Output {
	return i.ToWirelesscontrollerWtpprofileRadio4OutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4Args) ToWirelesscontrollerWtpprofileRadio4OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4Output {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4Output)
}

func (i WirelesscontrollerWtpprofileRadio4Args) ToWirelesscontrollerWtpprofileRadio4PtrOutput() WirelesscontrollerWtpprofileRadio4PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4Args) ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4Output).ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(ctx)
}

// WirelesscontrollerWtpprofileRadio4PtrInput is an input type that accepts WirelesscontrollerWtpprofileRadio4Args, WirelesscontrollerWtpprofileRadio4Ptr and WirelesscontrollerWtpprofileRadio4PtrOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4PtrInput` via:
//
//	        WirelesscontrollerWtpprofileRadio4Args{...}
//
//	or:
//
//	        nil
type WirelesscontrollerWtpprofileRadio4PtrInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4PtrOutput() WirelesscontrollerWtpprofileRadio4PtrOutput
	ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4PtrOutput
}

type wirelesscontrollerWtpprofileRadio4PtrType WirelesscontrollerWtpprofileRadio4Args

func WirelesscontrollerWtpprofileRadio4Ptr(v *WirelesscontrollerWtpprofileRadio4Args) WirelesscontrollerWtpprofileRadio4PtrInput {
	return (*wirelesscontrollerWtpprofileRadio4PtrType)(v)
}

func (*wirelesscontrollerWtpprofileRadio4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio4)(nil)).Elem()
}

func (i *wirelesscontrollerWtpprofileRadio4PtrType) ToWirelesscontrollerWtpprofileRadio4PtrOutput() WirelesscontrollerWtpprofileRadio4PtrOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(context.Background())
}

func (i *wirelesscontrollerWtpprofileRadio4PtrType) ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4PtrOutput)
}

type WirelesscontrollerWtpprofileRadio4Output struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4Output) ToWirelesscontrollerWtpprofileRadio4Output() WirelesscontrollerWtpprofileRadio4Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4Output) ToWirelesscontrollerWtpprofileRadio4OutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4Output {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4Output) ToWirelesscontrollerWtpprofileRadio4PtrOutput() WirelesscontrollerWtpprofileRadio4PtrOutput {
	return o.ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(context.Background())
}

func (o WirelesscontrollerWtpprofileRadio4Output) ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelesscontrollerWtpprofileRadio4) *WirelesscontrollerWtpprofileRadio4 {
		return &v
	}).(WirelesscontrollerWtpprofileRadio4PtrOutput)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.AirtimeFairness }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Amsdu }).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApHandoff }).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferAddr }).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.ApSnifferBufsize }).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.ApSnifferChan }).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferCtl }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferData }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferMgmtBeacon }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferMgmtOther }).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ApSnifferMgmtProbe }).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio4Output) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ArrpProfile }).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio4Output) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.AutoPowerHigh }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.AutoPowerLevel }).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio4Output) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.AutoPowerLow }).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio4Output) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.AutoPowerTarget }).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio4Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Band }).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio4Output) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Band5gType }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.BandwidthAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio4Output) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.BandwidthCapacity }).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio4Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio4Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio4Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.CallAdmissionControl }).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio4Output) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.CallCapacity }).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio4Output) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ChannelBonding }).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ChannelUtilization }).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio4Output) Channels() WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) []WirelesscontrollerWtpprofileRadio4Channel {
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio4ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Coexistence }).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Darrp }).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio4Output) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Drma }).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio4Output) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.DrmaSensitivity }).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio4Output) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.Dtim }).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio4Output) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.FragThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.FrequencyHandoff }).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio4Output) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.IperfProtocol }).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio4Output) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.IperfServerPort }).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio4Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio4Output) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.MaxDistance }).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio4Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio4Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio4Output) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio4Output) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.PowerValue }).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio4Output) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.PowersaveOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio4Output) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.RtsThreshold }).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio4Output) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamBssid }).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCaptivePortal }).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpFailureString }).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpMatchString }).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpPassword }).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpSuccessString }).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpTestUrl }).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio4Output) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamCwpUsername }).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio4Output) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamPassword }).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio4Output) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *int { return v.SamReportIntv }).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio4Output) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamSecurityType }).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio4Output) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamServerFqdn }).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio4Output) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamServerIp }).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio4Output) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamServerType }).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio4Output) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamSsid }).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio4Output) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamTest }).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio4Output) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SamUsername }).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ShortGuardInterval }).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio4Output) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.SpectrumAnalysis }).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio4Output) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.TransmitOptimize }).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio4Output) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.VapAll }).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio4Output) Vaps() WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) []WirelesscontrollerWtpprofileRadio4Vap { return v.Vaps }).(WirelesscontrollerWtpprofileRadio4VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio4Output) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.WidsProfile }).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4Output) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4) *string { return v.ZeroWaitDfs }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio4PtrOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelesscontrollerWtpprofileRadio4)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ToWirelesscontrollerWtpprofileRadio4PtrOutput() WirelesscontrollerWtpprofileRadio4PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ToWirelesscontrollerWtpprofileRadio4PtrOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4PtrOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Elem() WirelesscontrollerWtpprofileRadio4Output {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) WirelesscontrollerWtpprofileRadio4 {
		if v != nil {
			return *v
		}
		var ret WirelesscontrollerWtpprofileRadio4
		return ret
	}).(WirelesscontrollerWtpprofileRadio4Output)
}

// Enable/disable airtime fairness (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) AirtimeFairness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.AirtimeFairness
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11n AMSDU support. AMSDU can improve performance if supported by your WiFi clients (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Amsdu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Amsdu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AP handoff of clients to other APs (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApHandoff
	}).(pulumi.StringPtrOutput)
}

// MAC address to monitor.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferAddr
	}).(pulumi.StringPtrOutput)
}

// Sniffer buffer size (1 - 32 MB, default = 16).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferBufsize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferBufsize
	}).(pulumi.IntPtrOutput)
}

// Channel on which to operate the sniffer (default = 6).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferChan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.ApSnifferChan
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sniffer on WiFi control frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferCtl
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi data frame (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferData
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management Beacon frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferMgmtBeacon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtBeacon
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management other frames  (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferMgmtOther() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtOther
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sniffer on WiFi management probe frames (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ApSnifferMgmtProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ApSnifferMgmtProbe
	}).(pulumi.StringPtrOutput)
}

// Distributed Automatic Radio Resource Provisioning (DARRP) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ArrpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ArrpProfile
	}).(pulumi.StringPtrOutput)
}

// Automatic transmit power high limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) AutoPowerHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerHigh
	}).(pulumi.IntPtrOutput)
}

// Enable/disable automatic power-level adjustment to prevent co-channel interference (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) AutoPowerLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerLevel
	}).(pulumi.StringPtrOutput)
}

// Automatic transmission power low limit in dBm (the actual range of transmit power depends on the AP platform type).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) AutoPowerLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.AutoPowerLow
	}).(pulumi.IntPtrOutput)
}

// The target of automatic transmit power adjustment in dBm. (-95 to -20, default = -70).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) AutoPowerTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.AutoPowerTarget
	}).(pulumi.StringPtrOutput)
}

// WiFi band that Radio 1 operates on.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

// WiFi 5G band type. Valid values: `5g-full`, `5g-high`, `5g-low`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Band5gType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Band5gType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) bandwidth admission control to optimize WiFi bandwidth use. A request to join the wireless network is only allowed if the access point has enough bandwidth to support it. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) BandwidthAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum bandwidth capacity allowed (1 - 600000 Kbps, default = 2000).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) BandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Beacon interval. The time between beacon frames in msec (the actual range of beacon interval depends on the AP platform type, default = 100).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

// BSS color value for this 11ax radio (0 - 63, 0 means disable. default = 0).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

// BSS color mode for this 11ax radio (default = auto). Valid values: `auto`, `static`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable WiFi multimedia (WMM) call admission control to optimize WiFi bandwidth use for VoIP calls. New VoIP calls are only accepted if there is enough bandwidth available to support them. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) CallAdmissionControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.CallAdmissionControl
	}).(pulumi.StringPtrOutput)
}

// Maximum number of Voice over WLAN (VoWLAN) phones supported by the radio (0 - 60, default = 10).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) CallCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.CallCapacity
	}).(pulumi.IntPtrOutput)
}

// Channel bandwidth: 80, 40, or 20MHz. Channels may use both 20 and 40 by enabling coexistence.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ChannelBonding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ChannelBonding
	}).(pulumi.StringPtrOutput)
}

// Enable/disable measuring channel utilization. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ChannelUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ChannelUtilization
	}).(pulumi.StringPtrOutput)
}

// Selected list of wireless radio channels. The structure of `channel` block is documented below.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Channels() WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) []WirelesscontrollerWtpprofileRadio4Channel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WirelesscontrollerWtpprofileRadio4ChannelArrayOutput)
}

// Enable/disable allowing both HT20 and HT40 on the same radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Coexistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Coexistence
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Distributed Automatic Radio Resource Provisioning (DARRP) to make sure the radio is always using the most optimal channel (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Darrp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Darrp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable dynamic radio mode assignment (DRMA) (default = disable). Valid values: `disable`, `enable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Drma() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Drma
	}).(pulumi.StringPtrOutput)
}

// Network Coverage Factor (NCF) percentage required to consider a radio as redundant (default = low). Valid values: `low`, `medium`, `high`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) DrmaSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.DrmaSensitivity
	}).(pulumi.StringPtrOutput)
}

// DTIM interval. The frequency to transmit Delivery Traffic Indication Message (or Map) (DTIM) messages (1 - 255, default = 1). Set higher to save client battery life.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Dtim() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.Dtim
	}).(pulumi.IntPtrOutput)
}

// Maximum packet size that can be sent without fragmentation (800 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) FragThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.FragThreshold
	}).(pulumi.IntPtrOutput)
}

// Enable/disable frequency handoff of clients to other channels (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) FrequencyHandoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyHandoff
	}).(pulumi.StringPtrOutput)
}

// Iperf test protocol (default = "UDP"). Valid values: `udp`, `tcp`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) IperfProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.IperfProtocol
	}).(pulumi.StringPtrOutput)
}

// Iperf service port number.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) IperfServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.IperfServerPort
	}).(pulumi.IntPtrOutput)
}

// Maximum number of stations (STAs) supported by the WTP (default = 0, meaning no client limitation).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

// Maximum expected distance between the AP and clients (0 - 54000 m, default = 0).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) MaxDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.MaxDistance
	}).(pulumi.IntPtrOutput)
}

// Configure operation mode of 5G radios (default = single-5G). Valid values: `single-5G`, `dual-5G`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11d countryie(default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

// Radio power level as a percentage of the maximum transmit power (0 - 100, default = 100).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

// Set radio effective isotropic radiated power (EIRP) in dBm or by a percentage of the maximum EIRP (default = percentage). This power takes into account both radio transmit power and antenna gain. Higher power level settings may be constrained by local regulatory requirements and AP capabilities. Valid values: `dBm`, `percentage`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

// Radio EIRP power in dBm (1 - 33, default = 27).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) PowerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.PowerValue
	}).(pulumi.IntPtrOutput)
}

// Enable client power-saving features such as TIM, AC VO, and OBSS etc. Valid values: `tim`, `ac-vo`, `no-obss-scan`, `no-11b-rate`, `client-rate-follow`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) PowersaveOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.PowersaveOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable 802.11g protection modes to support backwards compatibility with older clients (rtscts, ctsonly, disable). Valid values: `rtscts`, `ctsonly`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// Maximum packet size for RTS transmissions, specifying the maximum size of a data packet before RTS/CTS (256 - 2346 bytes, default = 2346).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) RtsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.RtsThreshold
	}).(pulumi.IntPtrOutput)
}

// BSSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamBssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamBssid
	}).(pulumi.StringPtrOutput)
}

// Enable/disable Captive Portal Authentication (default = disable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCaptivePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCaptivePortal
	}).(pulumi.StringPtrOutput)
}

// Failure identification on the page after an incorrect login.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpFailureString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpFailureString
	}).(pulumi.StringPtrOutput)
}

// Identification string from the captive portal login form.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpMatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpMatchString
	}).(pulumi.StringPtrOutput)
}

// Password for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpPassword
	}).(pulumi.StringPtrOutput)
}

// Success identification on the page after a successful login.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpSuccessString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpSuccessString
	}).(pulumi.StringPtrOutput)
}

// Website the client is trying to access.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpTestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpTestUrl
	}).(pulumi.StringPtrOutput)
}

// Username for captive portal authentication.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamCwpUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamCwpUsername
	}).(pulumi.StringPtrOutput)
}

// Passphrase for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamPassword
	}).(pulumi.StringPtrOutput)
}

// SAM report interval (sec), 0 for a one-time report.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamReportIntv() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *int {
		if v == nil {
			return nil
		}
		return v.SamReportIntv
	}).(pulumi.IntPtrOutput)
}

// Select WiFi network security type (default = "wpa-personal"). Valid values: `open`, `wpa-personal`, `wpa-enterprise`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamSecurityType
	}).(pulumi.StringPtrOutput)
}

// SAM test server domain name.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamServerFqdn
	}).(pulumi.StringPtrOutput)
}

// SAM test server IP address.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamServerIp
	}).(pulumi.StringPtrOutput)
}

// Select SAM server type (default = "IP"). Valid values: `ip`, `fqdn`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamServerType
	}).(pulumi.StringPtrOutput)
}

// SSID for WiFi network.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamSsid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamSsid
	}).(pulumi.StringPtrOutput)
}

// Select SAM test type (default = "PING"). Valid values: `ping`, `iperf`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamTest
	}).(pulumi.StringPtrOutput)
}

// Username for WiFi network connection.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SamUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SamUsername
	}).(pulumi.StringPtrOutput)
}

// Use either the short guard interval (Short GI) of 400 ns or the long guard interval (Long GI) of 800 ns. Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ShortGuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ShortGuardInterval
	}).(pulumi.StringPtrOutput)
}

// Enable/disable spectrum analysis to find interference that would negatively impact wireless performance.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) SpectrumAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumAnalysis
	}).(pulumi.StringPtrOutput)
}

// Packet transmission optimization options including power saving, aggregation limiting, retry limiting, etc. All are enabled by default. Valid values: `disable`, `power-save`, `aggr-limit`, `retry-limit`, `send-bar`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) TransmitOptimize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.TransmitOptimize
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the automatic inheritance of all Virtual Access Points (VAPs) (default = enable).
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) VapAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.VapAll
	}).(pulumi.StringPtrOutput)
}

// Manually selected list of Virtual Access Points (VAPs). The structure of `vaps` block is documented below.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) Vaps() WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) []WirelesscontrollerWtpprofileRadio4Vap {
		if v == nil {
			return nil
		}
		return v.Vaps
	}).(WirelesscontrollerWtpprofileRadio4VapArrayOutput)
}

// Wireless Intrusion Detection System (WIDS) profile name to assign to the radio.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) WidsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.WidsProfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable zero wait DFS on radio (default = enable). Valid values: `enable`, `disable`.
func (o WirelesscontrollerWtpprofileRadio4PtrOutput) ZeroWaitDfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelesscontrollerWtpprofileRadio4) *string {
		if v == nil {
			return nil
		}
		return v.ZeroWaitDfs
	}).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio4Channel struct {
	// Channel number.
	Chan *string `pulumi:"chan"`
}

// WirelesscontrollerWtpprofileRadio4ChannelInput is an input type that accepts WirelesscontrollerWtpprofileRadio4ChannelArgs and WirelesscontrollerWtpprofileRadio4ChannelOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4ChannelInput` via:
//
//	WirelesscontrollerWtpprofileRadio4ChannelArgs{...}
type WirelesscontrollerWtpprofileRadio4ChannelInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4ChannelOutput() WirelesscontrollerWtpprofileRadio4ChannelOutput
	ToWirelesscontrollerWtpprofileRadio4ChannelOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4ChannelOutput
}

type WirelesscontrollerWtpprofileRadio4ChannelArgs struct {
	// Channel number.
	Chan pulumi.StringPtrInput `pulumi:"chan"`
}

func (WirelesscontrollerWtpprofileRadio4ChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio4ChannelArgs) ToWirelesscontrollerWtpprofileRadio4ChannelOutput() WirelesscontrollerWtpprofileRadio4ChannelOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4ChannelOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4ChannelArgs) ToWirelesscontrollerWtpprofileRadio4ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4ChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4ChannelOutput)
}

// WirelesscontrollerWtpprofileRadio4ChannelArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio4ChannelArray and WirelesscontrollerWtpprofileRadio4ChannelArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4ChannelArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio4ChannelArray{ WirelesscontrollerWtpprofileRadio4ChannelArgs{...} }
type WirelesscontrollerWtpprofileRadio4ChannelArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutput() WirelesscontrollerWtpprofileRadio4ChannelArrayOutput
	ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4ChannelArrayOutput
}

type WirelesscontrollerWtpprofileRadio4ChannelArray []WirelesscontrollerWtpprofileRadio4ChannelInput

func (WirelesscontrollerWtpprofileRadio4ChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio4Channel)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio4ChannelArray) ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutput() WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4ChannelArray) ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4ChannelArrayOutput)
}

type WirelesscontrollerWtpprofileRadio4ChannelOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4ChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4ChannelOutput) ToWirelesscontrollerWtpprofileRadio4ChannelOutput() WirelesscontrollerWtpprofileRadio4ChannelOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4ChannelOutput) ToWirelesscontrollerWtpprofileRadio4ChannelOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4ChannelOutput {
	return o
}

// Channel number.
func (o WirelesscontrollerWtpprofileRadio4ChannelOutput) Chan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4Channel) *string { return v.Chan }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio4ChannelArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4ChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio4Channel)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutput() WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4ChannelArrayOutput) ToWirelesscontrollerWtpprofileRadio4ChannelArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4ChannelArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4ChannelArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio4ChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio4Channel {
		return vs[0].([]WirelesscontrollerWtpprofileRadio4Channel)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio4ChannelOutput)
}

type WirelesscontrollerWtpprofileRadio4Vap struct {
	// Virtual Access Point (VAP) name.
	Name *string `pulumi:"name"`
}

// WirelesscontrollerWtpprofileRadio4VapInput is an input type that accepts WirelesscontrollerWtpprofileRadio4VapArgs and WirelesscontrollerWtpprofileRadio4VapOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4VapInput` via:
//
//	WirelesscontrollerWtpprofileRadio4VapArgs{...}
type WirelesscontrollerWtpprofileRadio4VapInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4VapOutput() WirelesscontrollerWtpprofileRadio4VapOutput
	ToWirelesscontrollerWtpprofileRadio4VapOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4VapOutput
}

type WirelesscontrollerWtpprofileRadio4VapArgs struct {
	// Virtual Access Point (VAP) name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WirelesscontrollerWtpprofileRadio4VapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio4VapArgs) ToWirelesscontrollerWtpprofileRadio4VapOutput() WirelesscontrollerWtpprofileRadio4VapOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4VapOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4VapArgs) ToWirelesscontrollerWtpprofileRadio4VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4VapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4VapOutput)
}

// WirelesscontrollerWtpprofileRadio4VapArrayInput is an input type that accepts WirelesscontrollerWtpprofileRadio4VapArray and WirelesscontrollerWtpprofileRadio4VapArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileRadio4VapArrayInput` via:
//
//	WirelesscontrollerWtpprofileRadio4VapArray{ WirelesscontrollerWtpprofileRadio4VapArgs{...} }
type WirelesscontrollerWtpprofileRadio4VapArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileRadio4VapArrayOutput() WirelesscontrollerWtpprofileRadio4VapArrayOutput
	ToWirelesscontrollerWtpprofileRadio4VapArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileRadio4VapArrayOutput
}

type WirelesscontrollerWtpprofileRadio4VapArray []WirelesscontrollerWtpprofileRadio4VapInput

func (WirelesscontrollerWtpprofileRadio4VapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio4Vap)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileRadio4VapArray) ToWirelesscontrollerWtpprofileRadio4VapArrayOutput() WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return i.ToWirelesscontrollerWtpprofileRadio4VapArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileRadio4VapArray) ToWirelesscontrollerWtpprofileRadio4VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileRadio4VapArrayOutput)
}

type WirelesscontrollerWtpprofileRadio4VapOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4VapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4VapOutput) ToWirelesscontrollerWtpprofileRadio4VapOutput() WirelesscontrollerWtpprofileRadio4VapOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4VapOutput) ToWirelesscontrollerWtpprofileRadio4VapOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4VapOutput {
	return o
}

// Virtual Access Point (VAP) name.
func (o WirelesscontrollerWtpprofileRadio4VapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileRadio4Vap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WirelesscontrollerWtpprofileRadio4VapArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileRadio4VapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileRadio4Vap)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileRadio4VapArrayOutput) ToWirelesscontrollerWtpprofileRadio4VapArrayOutput() WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4VapArrayOutput) ToWirelesscontrollerWtpprofileRadio4VapArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileRadio4VapArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileRadio4VapArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileRadio4VapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileRadio4Vap {
		return vs[0].([]WirelesscontrollerWtpprofileRadio4Vap)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileRadio4VapOutput)
}

type WirelesscontrollerWtpprofileSplitTunnelingAcl struct {
	// Destination IP and mask for the split-tunneling subnet.
	//
	// The `radio1` block supports:
	DestIp *string `pulumi:"destIp"`
	// ID.
	Id *int `pulumi:"id"`
}

// WirelesscontrollerWtpprofileSplitTunnelingAclInput is an input type that accepts WirelesscontrollerWtpprofileSplitTunnelingAclArgs and WirelesscontrollerWtpprofileSplitTunnelingAclOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileSplitTunnelingAclInput` via:
//
//	WirelesscontrollerWtpprofileSplitTunnelingAclArgs{...}
type WirelesscontrollerWtpprofileSplitTunnelingAclInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileSplitTunnelingAclOutput() WirelesscontrollerWtpprofileSplitTunnelingAclOutput
	ToWirelesscontrollerWtpprofileSplitTunnelingAclOutputWithContext(context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclOutput
}

type WirelesscontrollerWtpprofileSplitTunnelingAclArgs struct {
	// Destination IP and mask for the split-tunneling subnet.
	//
	// The `radio1` block supports:
	DestIp pulumi.StringPtrInput `pulumi:"destIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (WirelesscontrollerWtpprofileSplitTunnelingAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileSplitTunnelingAcl)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileSplitTunnelingAclArgs) ToWirelesscontrollerWtpprofileSplitTunnelingAclOutput() WirelesscontrollerWtpprofileSplitTunnelingAclOutput {
	return i.ToWirelesscontrollerWtpprofileSplitTunnelingAclOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileSplitTunnelingAclArgs) ToWirelesscontrollerWtpprofileSplitTunnelingAclOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileSplitTunnelingAclOutput)
}

// WirelesscontrollerWtpprofileSplitTunnelingAclArrayInput is an input type that accepts WirelesscontrollerWtpprofileSplitTunnelingAclArray and WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput values.
// You can construct a concrete instance of `WirelesscontrollerWtpprofileSplitTunnelingAclArrayInput` via:
//
//	WirelesscontrollerWtpprofileSplitTunnelingAclArray{ WirelesscontrollerWtpprofileSplitTunnelingAclArgs{...} }
type WirelesscontrollerWtpprofileSplitTunnelingAclArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput() WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput
	ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutputWithContext(context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput
}

type WirelesscontrollerWtpprofileSplitTunnelingAclArray []WirelesscontrollerWtpprofileSplitTunnelingAclInput

func (WirelesscontrollerWtpprofileSplitTunnelingAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileSplitTunnelingAcl)(nil)).Elem()
}

func (i WirelesscontrollerWtpprofileSplitTunnelingAclArray) ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput() WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput {
	return i.ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutputWithContext(context.Background())
}

func (i WirelesscontrollerWtpprofileSplitTunnelingAclArray) ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput)
}

type WirelesscontrollerWtpprofileSplitTunnelingAclOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileSplitTunnelingAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelesscontrollerWtpprofileSplitTunnelingAcl)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileSplitTunnelingAclOutput) ToWirelesscontrollerWtpprofileSplitTunnelingAclOutput() WirelesscontrollerWtpprofileSplitTunnelingAclOutput {
	return o
}

func (o WirelesscontrollerWtpprofileSplitTunnelingAclOutput) ToWirelesscontrollerWtpprofileSplitTunnelingAclOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclOutput {
	return o
}

// Destination IP and mask for the split-tunneling subnet.
//
// The `radio1` block supports:
func (o WirelesscontrollerWtpprofileSplitTunnelingAclOutput) DestIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileSplitTunnelingAcl) *string { return v.DestIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o WirelesscontrollerWtpprofileSplitTunnelingAclOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WirelesscontrollerWtpprofileSplitTunnelingAcl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput struct{ *pulumi.OutputState }

func (WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelesscontrollerWtpprofileSplitTunnelingAcl)(nil)).Elem()
}

func (o WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput) ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput() WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput) ToWirelesscontrollerWtpprofileSplitTunnelingAclArrayOutputWithContext(ctx context.Context) WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput {
	return o
}

func (o WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput) Index(i pulumi.IntInput) WirelesscontrollerWtpprofileSplitTunnelingAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelesscontrollerWtpprofileSplitTunnelingAcl {
		return vs[0].([]WirelesscontrollerWtpprofileSplitTunnelingAcl)[vs[1].(int)]
	}).(WirelesscontrollerWtpprofileSplitTunnelingAclOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList struct {
	// ID.
	Id *int `pulumi:"id"`
	// Mobile country code.
	Mcc *string `pulumi:"mcc"`
	// Mobile network code.
	Mnc *string `pulumi:"mnc"`
}

// Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListInput is an input type that accepts Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs and Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListInput` via:
//
//	Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs{...}
type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput
	ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutputWithContext(context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mobile country code.
	Mcc pulumi.StringPtrInput `pulumi:"mcc"`
	// Mobile network code.
	Mnc pulumi.StringPtrInput `pulumi:"mnc"`
}

func (Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput {
	return i.ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput)
}

// Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput is an input type that accepts Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray and Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput` via:
//
//	Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray{ Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs{...} }
type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput
	ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray []Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListInput

func (Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
	return i.ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput {
	return o
}

// ID.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mobile country code.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) Mcc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList) *string { return v.Mcc }).(pulumi.StringPtrOutput)
}

// Mobile network code.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput) Mnc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList) *string { return v.Mnc }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList {
		return vs[0].([]Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiList struct {
	// EAP Methods. The structure of `eapMethod` block is documented below.
	EapMethods []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod `pulumi:"eapMethods"`
	// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
	Encoding *string `pulumi:"encoding"`
	// Configure NAI realms (delimited by a semi-colon character).
	NaiRealm *string `pulumi:"naiRealm"`
	// NAI realm name.
	Name *string `pulumi:"name"`
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs and Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs{...}
type Wirelesscontrollerhotspot20AnqpnairealmNaiListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs struct {
	// EAP Methods. The structure of `eapMethod` block is documented below.
	EapMethods Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayInput `pulumi:"eapMethods"`
	// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Configure NAI realms (delimited by a semi-colon character).
	NaiRealm pulumi.StringPtrInput `pulumi:"naiRealm"`
	// NAI realm name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput)
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListArray and Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListArray{ Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs{...} }
type Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListArray []Wirelesscontrollerhotspot20AnqpnairealmNaiListInput

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput {
	return o
}

// EAP Methods. The structure of `eapMethod` block is documented below.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) EapMethods() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiList) []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod {
		return v.EapMethods
	}).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput)
}

// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiList) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Configure NAI realms (delimited by a semi-colon character).
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) NaiRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiList) *string { return v.NaiRealm }).(pulumi.StringPtrOutput)
}

// NAI realm name.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqpnairealmNaiList {
		return vs[0].([]Wirelesscontrollerhotspot20AnqpnairealmNaiList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod struct {
	// EAP auth param. The structure of `authParam` block is documented below.
	AuthParams []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam `pulumi:"authParams"`
	// EAP method index.
	Index *int `pulumi:"index"`
	// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
	Method *string `pulumi:"method"`
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs and Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs{...}
type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs struct {
	// EAP auth param. The structure of `authParam` block is documented below.
	AuthParams Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayInput `pulumi:"authParams"`
	// EAP method index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
	Method pulumi.StringPtrInput `pulumi:"method"`
}

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput)
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray and Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray{ Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs{...} }
type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodInput

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput {
	return o
}

// EAP auth param. The structure of `authParam` block is documented below.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) AuthParams() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod) []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam {
		return v.AuthParams
	}).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput)
}

// EAP method index.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod) *string { return v.Method }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod {
		return vs[0].([]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethod)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam struct {
	// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
	Id *string `pulumi:"id"`
	// Param index.
	Index *int `pulumi:"index"`
	// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
	Val *string `pulumi:"val"`
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs and Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs{...}
type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs struct {
	// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Param index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
	Val pulumi.StringPtrInput `pulumi:"val"`
}

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput)
}

// Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray and Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray{ Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs{...} }
type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput
	ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray []Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamInput

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput {
	return o
}

// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Param index.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput) Val() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam) *string { return v.Val }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput() Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ToWirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam {
		return vs[0].([]Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParam)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput)
}

type Wirelesscontrollerhotspot20AnqproamingconsortiumOiList struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// OI index.
	Index *int `pulumi:"index"`
	// Organization identifier.
	Oi *string `pulumi:"oi"`
}

// Wirelesscontrollerhotspot20AnqproamingconsortiumOiListInput is an input type that accepts Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs and Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqproamingconsortiumOiListInput` via:
//
//	Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs{...}
type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput
	ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput
}

type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// OI index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Organization identifier.
	Oi pulumi.StringPtrInput `pulumi:"oi"`
}

func (Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqproamingconsortiumOiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput {
	return i.ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput)
}

// Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray and Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray{ Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs{...} }
type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput
	ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput
}

type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray []Wirelesscontrollerhotspot20AnqproamingconsortiumOiListInput

func (Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqproamingconsortiumOiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput)
}

type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqproamingconsortiumOiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput {
	return o
}

// Comment.
func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqproamingconsortiumOiList) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// OI index.
func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqproamingconsortiumOiList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Organization identifier.
func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput) Oi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqproamingconsortiumOiList) *string { return v.Oi }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqproamingconsortiumOiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput() Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput) ToWirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqproamingconsortiumOiList {
		return vs[0].([]Wirelesscontrollerhotspot20AnqproamingconsortiumOiList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameValueList struct {
	// Value index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Venue name value.
	Value *string `pulumi:"value"`
}

// Wirelesscontrollerhotspot20AnqpvenuenameValueListInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs and Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenuenameValueListInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs{...}
type Wirelesscontrollerhotspot20AnqpvenuenameValueListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput
	ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput
}

type Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs struct {
	// Value index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Venue name value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs) ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs) ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput)
}

// Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenuenameValueListArray and Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenuenameValueListArray{ Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs{...} }
type Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput
	ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput
}

type Wirelesscontrollerhotspot20AnqpvenuenameValueListArray []Wirelesscontrollerhotspot20AnqpvenuenameValueListInput

func (Wirelesscontrollerhotspot20AnqpvenuenameValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpvenuenameValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameValueListArray) ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameValueListArray) ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) ToWirelesscontrollerhotspot20AnqpvenuenameValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput {
	return o
}

// Value index.
func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenuenameValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenuenameValueList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Venue name value.
func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenuenameValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpvenuenameValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput) ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput) ToWirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqpvenuenameValueList {
		return vs[0].([]Wirelesscontrollerhotspot20AnqpvenuenameValueList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput)
}

type Wirelesscontrollerhotspot20AnqpvenueurlValueList struct {
	// URL index.
	Index *int `pulumi:"index"`
	// Venue number.
	Number *int `pulumi:"number"`
	// Venue URL value.
	Value *string `pulumi:"value"`
}

// Wirelesscontrollerhotspot20AnqpvenueurlValueListInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs and Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenueurlValueListInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs{...}
type Wirelesscontrollerhotspot20AnqpvenueurlValueListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput
	ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput
}

type Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs struct {
	// URL index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Venue number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// Venue URL value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenueurlValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs) ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs) ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput)
}

// Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenueurlValueListArray and Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenueurlValueListArray{ Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs{...} }
type Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput
	ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput
}

type Wirelesscontrollerhotspot20AnqpvenueurlValueListArray []Wirelesscontrollerhotspot20AnqpvenueurlValueListInput

func (Wirelesscontrollerhotspot20AnqpvenueurlValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpvenueurlValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenueurlValueListArray) ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenueurlValueListArray) ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput)
}

type Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenueurlValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) ToWirelesscontrollerhotspot20AnqpvenueurlValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput {
	return o
}

// URL index.
func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenueurlValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Venue number.
func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenueurlValueList) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// Venue URL value.
func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20AnqpvenueurlValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20AnqpvenueurlValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput) ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput() Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput) ToWirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20AnqpvenueurlValueList {
		return vs[0].([]Wirelesscontrollerhotspot20AnqpvenueurlValueList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocList struct {
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// NAI realm encoding.
	NaiRealmEncoding *string `pulumi:"naiRealmEncoding"`
	// Advice of charge ID.
	Name *string `pulumi:"name"`
	// Plan info. The structure of `planInfo` block is documented below.
	PlanInfos []Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo `pulumi:"planInfos"`
	// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
	Type *string `pulumi:"type"`
}

// Wirelesscontrollerhotspot20H2qpadviceofchargeAocListInput is an input type that accepts Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs and Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpadviceofchargeAocListInput` via:
//
//	Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs{...}
type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput
	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs struct {
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput `pulumi:"naiRealm"`
	// NAI realm encoding.
	NaiRealmEncoding pulumi.StringPtrInput `pulumi:"naiRealmEncoding"`
	// Advice of charge ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Plan info. The structure of `planInfo` block is documented below.
	PlanInfos Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayInput `pulumi:"planInfos"`
	// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput {
	return i.ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput)
}

// Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray and Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray{ Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs{...} }
type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput
	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray []Wirelesscontrollerhotspot20H2qpadviceofchargeAocListInput

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpadviceofchargeAocList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput {
	return o
}

// NAI realm list name.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) NaiRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocList) *string { return v.NaiRealm }).(pulumi.StringPtrOutput)
}

// NAI realm encoding.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) NaiRealmEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocList) *string { return v.NaiRealmEncoding }).(pulumi.StringPtrOutput)
}

// Advice of charge ID.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Plan info. The structure of `planInfo` block is documented below.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) PlanInfos() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocList) []Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo {
		return v.PlanInfos
	}).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput)
}

// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpadviceofchargeAocList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qpadviceofchargeAocList {
		return vs[0].([]Wirelesscontrollerhotspot20H2qpadviceofchargeAocList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo struct {
	// Currency code.
	Currency *string `pulumi:"currency"`
	// Info file.
	InfoFile *string `pulumi:"infoFile"`
	// Languague code.
	Lang *string `pulumi:"lang"`
	// Plan name.
	Name *string `pulumi:"name"`
}

// Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoInput is an input type that accepts Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs and Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoInput` via:
//
//	Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs{...}
type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput
	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs struct {
	// Currency code.
	Currency pulumi.StringPtrInput `pulumi:"currency"`
	// Info file.
	InfoFile pulumi.StringPtrInput `pulumi:"infoFile"`
	// Languague code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Plan name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput {
	return i.ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput)
}

// Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray and Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray{ Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs{...} }
type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput
	ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray []Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoInput

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput {
	return o
}

// Currency code.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo) *string { return v.Currency }).(pulumi.StringPtrOutput)
}

// Info file.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) InfoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo) *string { return v.InfoFile }).(pulumi.StringPtrOutput)
}

// Languague code.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Plan name.
func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput() Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput) ToWirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo {
		return vs[0].([]Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfo)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameValueList struct {
	// Value index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Friendly name value.
	Value *string `pulumi:"value"`
}

// Wirelesscontrollerhotspot20H2qpoperatornameValueListInput is an input type that accepts Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs and Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpoperatornameValueListInput` via:
//
//	Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs{...}
type Wirelesscontrollerhotspot20H2qpoperatornameValueListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput
	ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput
}

type Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs struct {
	// Value index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Friendly name value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs) ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput {
	return i.ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs) ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput)
}

// Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qpoperatornameValueListArray and Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qpoperatornameValueListArray{ Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs{...} }
type Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput
	ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput
}

type Wirelesscontrollerhotspot20H2qpoperatornameValueListArray []Wirelesscontrollerhotspot20H2qpoperatornameValueListInput

func (Wirelesscontrollerhotspot20H2qpoperatornameValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpoperatornameValueList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameValueListArray) ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameValueListArray) ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) ToWirelesscontrollerhotspot20H2qpoperatornameValueListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput {
	return o
}

// Value index.
func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpoperatornameValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpoperatornameValueList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Friendly name value.
func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qpoperatornameValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qpoperatornameValueList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput) ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput) ToWirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qpoperatornameValueList {
		return vs[0].([]Wirelesscontrollerhotspot20H2qpoperatornameValueList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderFriendlyName struct {
	// OSU provider friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// OSU provider friendly name index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
}

// Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs and Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs{...}
type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput
	ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput
}

type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs struct {
	// OSU provider friendly name.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// OSU provider friendly name index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
}

func (Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderFriendlyName)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput)
}

// Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray and Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray{ Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs{...} }
type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput
	ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput
}

type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray []Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameInput

func (Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuproviderFriendlyName)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderFriendlyName)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput {
	return o
}

// OSU provider friendly name.
func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderFriendlyName) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// OSU provider friendly name index.
func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderFriendlyName) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderFriendlyName) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuproviderFriendlyName)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput) ToWirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qposuproviderFriendlyName {
		return vs[0].([]Wirelesscontrollerhotspot20H2qposuproviderFriendlyName)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderServiceDescription struct {
	// Language code.
	Lang *string `pulumi:"lang"`
	// Service description.
	ServiceDescription *string `pulumi:"serviceDescription"`
	// OSU service ID.
	ServiceId *int `pulumi:"serviceId"`
}

// Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs and Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs{...}
type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput
	ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput
}

type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs struct {
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Service description.
	ServiceDescription pulumi.StringPtrInput `pulumi:"serviceDescription"`
	// OSU service ID.
	ServiceId pulumi.IntPtrInput `pulumi:"serviceId"`
}

func (Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderServiceDescription)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput)
}

// Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray and Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray{ Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs{...} }
type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput
	ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput
}

type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray []Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionInput

func (Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuproviderServiceDescription)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderServiceDescription)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput {
	return o
}

// Language code.
func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderServiceDescription) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Service description.
func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) ServiceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderServiceDescription) *string {
		return v.ServiceDescription
	}).(pulumi.StringPtrOutput)
}

// OSU service ID.
func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput) ServiceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuproviderServiceDescription) *int { return v.ServiceId }).(pulumi.IntPtrOutput)
}

type Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuproviderServiceDescription)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput() Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput) ToWirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qposuproviderServiceDescription {
		return vs[0].([]Wirelesscontrollerhotspot20H2qposuproviderServiceDescription)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput)
}

type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList struct {
	// OSU NAI ID.
	Name *string `pulumi:"name"`
	// OSU NAI.
	OsuNai *string `pulumi:"osuNai"`
}

// Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs and Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs{...}
type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput
	ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput
}

type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs struct {
	// OSU NAI ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OSU NAI.
	OsuNai pulumi.StringPtrInput `pulumi:"osuNai"`
}

func (Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput)
}

// Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray and Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray{ Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs{...} }
type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput
	ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput
}

type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray []Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListInput

func (Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput)
}

type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput {
	return o
}

// OSU NAI ID.
func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OSU NAI.
func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput) OsuNai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList) *string { return v.OsuNai }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput() Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput) ToWirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList {
		return vs[0].([]Wirelesscontrollerhotspot20H2qposuprovidernaiNaiList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput)
}

type Wirelesscontrollerhotspot20HsprofileOsuProvider struct {
	// OSU provider name.
	Name *string `pulumi:"name"`
}

// Wirelesscontrollerhotspot20HsprofileOsuProviderInput is an input type that accepts Wirelesscontrollerhotspot20HsprofileOsuProviderArgs and Wirelesscontrollerhotspot20HsprofileOsuProviderOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20HsprofileOsuProviderInput` via:
//
//	Wirelesscontrollerhotspot20HsprofileOsuProviderArgs{...}
type Wirelesscontrollerhotspot20HsprofileOsuProviderInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20HsprofileOsuProviderOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderOutput
	ToWirelesscontrollerhotspot20HsprofileOsuProviderOutputWithContext(context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderOutput
}

type Wirelesscontrollerhotspot20HsprofileOsuProviderArgs struct {
	// OSU provider name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Wirelesscontrollerhotspot20HsprofileOsuProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20HsprofileOsuProvider)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20HsprofileOsuProviderArgs) ToWirelesscontrollerhotspot20HsprofileOsuProviderOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderOutput {
	return i.ToWirelesscontrollerhotspot20HsprofileOsuProviderOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20HsprofileOsuProviderArgs) ToWirelesscontrollerhotspot20HsprofileOsuProviderOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20HsprofileOsuProviderOutput)
}

// Wirelesscontrollerhotspot20HsprofileOsuProviderArrayInput is an input type that accepts Wirelesscontrollerhotspot20HsprofileOsuProviderArray and Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20HsprofileOsuProviderArrayInput` via:
//
//	Wirelesscontrollerhotspot20HsprofileOsuProviderArray{ Wirelesscontrollerhotspot20HsprofileOsuProviderArgs{...} }
type Wirelesscontrollerhotspot20HsprofileOsuProviderArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput
	ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput
}

type Wirelesscontrollerhotspot20HsprofileOsuProviderArray []Wirelesscontrollerhotspot20HsprofileOsuProviderInput

func (Wirelesscontrollerhotspot20HsprofileOsuProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20HsprofileOsuProvider)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20HsprofileOsuProviderArray) ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput {
	return i.ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20HsprofileOsuProviderArray) ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput)
}

type Wirelesscontrollerhotspot20HsprofileOsuProviderOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20HsprofileOsuProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20HsprofileOsuProvider)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20HsprofileOsuProviderOutput) ToWirelesscontrollerhotspot20HsprofileOsuProviderOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderOutput {
	return o
}

func (o Wirelesscontrollerhotspot20HsprofileOsuProviderOutput) ToWirelesscontrollerhotspot20HsprofileOsuProviderOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderOutput {
	return o
}

// OSU provider name.
func (o Wirelesscontrollerhotspot20HsprofileOsuProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20HsprofileOsuProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20HsprofileOsuProvider)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput) ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput() Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput) ToWirelesscontrollerhotspot20HsprofileOsuProviderArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20HsprofileOsuProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20HsprofileOsuProvider {
		return vs[0].([]Wirelesscontrollerhotspot20HsprofileOsuProvider)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20HsprofileOsuProviderOutput)
}

type Wirelesscontrollerhotspot20IconIconList struct {
	// Icon file.
	File *string `pulumi:"file"`
	// Icon height.
	Height *int `pulumi:"height"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Icon name.
	Name *string `pulumi:"name"`
	// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
	Type *string `pulumi:"type"`
	// Icon width.
	Width *int `pulumi:"width"`
}

// Wirelesscontrollerhotspot20IconIconListInput is an input type that accepts Wirelesscontrollerhotspot20IconIconListArgs and Wirelesscontrollerhotspot20IconIconListOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20IconIconListInput` via:
//
//	Wirelesscontrollerhotspot20IconIconListArgs{...}
type Wirelesscontrollerhotspot20IconIconListInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20IconIconListOutput() Wirelesscontrollerhotspot20IconIconListOutput
	ToWirelesscontrollerhotspot20IconIconListOutputWithContext(context.Context) Wirelesscontrollerhotspot20IconIconListOutput
}

type Wirelesscontrollerhotspot20IconIconListArgs struct {
	// Icon file.
	File pulumi.StringPtrInput `pulumi:"file"`
	// Icon height.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Icon name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Icon width.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (Wirelesscontrollerhotspot20IconIconListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20IconIconList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20IconIconListArgs) ToWirelesscontrollerhotspot20IconIconListOutput() Wirelesscontrollerhotspot20IconIconListOutput {
	return i.ToWirelesscontrollerhotspot20IconIconListOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20IconIconListArgs) ToWirelesscontrollerhotspot20IconIconListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20IconIconListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20IconIconListOutput)
}

// Wirelesscontrollerhotspot20IconIconListArrayInput is an input type that accepts Wirelesscontrollerhotspot20IconIconListArray and Wirelesscontrollerhotspot20IconIconListArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20IconIconListArrayInput` via:
//
//	Wirelesscontrollerhotspot20IconIconListArray{ Wirelesscontrollerhotspot20IconIconListArgs{...} }
type Wirelesscontrollerhotspot20IconIconListArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20IconIconListArrayOutput() Wirelesscontrollerhotspot20IconIconListArrayOutput
	ToWirelesscontrollerhotspot20IconIconListArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20IconIconListArrayOutput
}

type Wirelesscontrollerhotspot20IconIconListArray []Wirelesscontrollerhotspot20IconIconListInput

func (Wirelesscontrollerhotspot20IconIconListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20IconIconList)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20IconIconListArray) ToWirelesscontrollerhotspot20IconIconListArrayOutput() Wirelesscontrollerhotspot20IconIconListArrayOutput {
	return i.ToWirelesscontrollerhotspot20IconIconListArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20IconIconListArray) ToWirelesscontrollerhotspot20IconIconListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20IconIconListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20IconIconListArrayOutput)
}

type Wirelesscontrollerhotspot20IconIconListOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20IconIconListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20IconIconList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20IconIconListOutput) ToWirelesscontrollerhotspot20IconIconListOutput() Wirelesscontrollerhotspot20IconIconListOutput {
	return o
}

func (o Wirelesscontrollerhotspot20IconIconListOutput) ToWirelesscontrollerhotspot20IconIconListOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20IconIconListOutput {
	return o
}

// Icon file.
func (o Wirelesscontrollerhotspot20IconIconListOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *string { return v.File }).(pulumi.StringPtrOutput)
}

// Icon height.
func (o Wirelesscontrollerhotspot20IconIconListOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Language code.
func (o Wirelesscontrollerhotspot20IconIconListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Icon name.
func (o Wirelesscontrollerhotspot20IconIconListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
func (o Wirelesscontrollerhotspot20IconIconListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Icon width.
func (o Wirelesscontrollerhotspot20IconIconListOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20IconIconList) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type Wirelesscontrollerhotspot20IconIconListArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20IconIconListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20IconIconList)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20IconIconListArrayOutput) ToWirelesscontrollerhotspot20IconIconListArrayOutput() Wirelesscontrollerhotspot20IconIconListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20IconIconListArrayOutput) ToWirelesscontrollerhotspot20IconIconListArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20IconIconListArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20IconIconListArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20IconIconListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20IconIconList {
		return vs[0].([]Wirelesscontrollerhotspot20IconIconList)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20IconIconListOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpExcept struct {
	// DSCP value.
	Dscp *int `pulumi:"dscp"`
	// DSCP exception index.
	Index *int `pulumi:"index"`
	// User priority.
	Up *int `pulumi:"up"`
}

// Wirelesscontrollerhotspot20QosmapDscpExceptInput is an input type that accepts Wirelesscontrollerhotspot20QosmapDscpExceptArgs and Wirelesscontrollerhotspot20QosmapDscpExceptOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20QosmapDscpExceptInput` via:
//
//	Wirelesscontrollerhotspot20QosmapDscpExceptArgs{...}
type Wirelesscontrollerhotspot20QosmapDscpExceptInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20QosmapDscpExceptOutput() Wirelesscontrollerhotspot20QosmapDscpExceptOutput
	ToWirelesscontrollerhotspot20QosmapDscpExceptOutputWithContext(context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptOutput
}

type Wirelesscontrollerhotspot20QosmapDscpExceptArgs struct {
	// DSCP value.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// DSCP exception index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// User priority.
	Up pulumi.IntPtrInput `pulumi:"up"`
}

func (Wirelesscontrollerhotspot20QosmapDscpExceptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpExcept)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20QosmapDscpExceptArgs) ToWirelesscontrollerhotspot20QosmapDscpExceptOutput() Wirelesscontrollerhotspot20QosmapDscpExceptOutput {
	return i.ToWirelesscontrollerhotspot20QosmapDscpExceptOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20QosmapDscpExceptArgs) ToWirelesscontrollerhotspot20QosmapDscpExceptOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20QosmapDscpExceptOutput)
}

// Wirelesscontrollerhotspot20QosmapDscpExceptArrayInput is an input type that accepts Wirelesscontrollerhotspot20QosmapDscpExceptArray and Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20QosmapDscpExceptArrayInput` via:
//
//	Wirelesscontrollerhotspot20QosmapDscpExceptArray{ Wirelesscontrollerhotspot20QosmapDscpExceptArgs{...} }
type Wirelesscontrollerhotspot20QosmapDscpExceptArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutput() Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput
	ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput
}

type Wirelesscontrollerhotspot20QosmapDscpExceptArray []Wirelesscontrollerhotspot20QosmapDscpExceptInput

func (Wirelesscontrollerhotspot20QosmapDscpExceptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20QosmapDscpExcept)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20QosmapDscpExceptArray) ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutput() Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput {
	return i.ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20QosmapDscpExceptArray) ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpExceptOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20QosmapDscpExceptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpExcept)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20QosmapDscpExceptOutput) ToWirelesscontrollerhotspot20QosmapDscpExceptOutput() Wirelesscontrollerhotspot20QosmapDscpExceptOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpExceptOutput) ToWirelesscontrollerhotspot20QosmapDscpExceptOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptOutput {
	return o
}

// DSCP value.
func (o Wirelesscontrollerhotspot20QosmapDscpExceptOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpExcept) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// DSCP exception index.
func (o Wirelesscontrollerhotspot20QosmapDscpExceptOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpExcept) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// User priority.
func (o Wirelesscontrollerhotspot20QosmapDscpExceptOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpExcept) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20QosmapDscpExcept)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput) ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutput() Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput) ToWirelesscontrollerhotspot20QosmapDscpExceptArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20QosmapDscpExceptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20QosmapDscpExcept {
		return vs[0].([]Wirelesscontrollerhotspot20QosmapDscpExcept)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20QosmapDscpExceptOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpRange struct {
	// DSCP high value.
	High *int `pulumi:"high"`
	// DSCP range index.
	Index *int `pulumi:"index"`
	// DSCP low value.
	Low *int `pulumi:"low"`
	// User priority.
	Up *int `pulumi:"up"`
}

// Wirelesscontrollerhotspot20QosmapDscpRangeInput is an input type that accepts Wirelesscontrollerhotspot20QosmapDscpRangeArgs and Wirelesscontrollerhotspot20QosmapDscpRangeOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20QosmapDscpRangeInput` via:
//
//	Wirelesscontrollerhotspot20QosmapDscpRangeArgs{...}
type Wirelesscontrollerhotspot20QosmapDscpRangeInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20QosmapDscpRangeOutput() Wirelesscontrollerhotspot20QosmapDscpRangeOutput
	ToWirelesscontrollerhotspot20QosmapDscpRangeOutputWithContext(context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeOutput
}

type Wirelesscontrollerhotspot20QosmapDscpRangeArgs struct {
	// DSCP high value.
	High pulumi.IntPtrInput `pulumi:"high"`
	// DSCP range index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// DSCP low value.
	Low pulumi.IntPtrInput `pulumi:"low"`
	// User priority.
	Up pulumi.IntPtrInput `pulumi:"up"`
}

func (Wirelesscontrollerhotspot20QosmapDscpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpRange)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20QosmapDscpRangeArgs) ToWirelesscontrollerhotspot20QosmapDscpRangeOutput() Wirelesscontrollerhotspot20QosmapDscpRangeOutput {
	return i.ToWirelesscontrollerhotspot20QosmapDscpRangeOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20QosmapDscpRangeArgs) ToWirelesscontrollerhotspot20QosmapDscpRangeOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20QosmapDscpRangeOutput)
}

// Wirelesscontrollerhotspot20QosmapDscpRangeArrayInput is an input type that accepts Wirelesscontrollerhotspot20QosmapDscpRangeArray and Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20QosmapDscpRangeArrayInput` via:
//
//	Wirelesscontrollerhotspot20QosmapDscpRangeArray{ Wirelesscontrollerhotspot20QosmapDscpRangeArgs{...} }
type Wirelesscontrollerhotspot20QosmapDscpRangeArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutput() Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput
	ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput
}

type Wirelesscontrollerhotspot20QosmapDscpRangeArray []Wirelesscontrollerhotspot20QosmapDscpRangeInput

func (Wirelesscontrollerhotspot20QosmapDscpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20QosmapDscpRange)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20QosmapDscpRangeArray) ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutput() Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput {
	return i.ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20QosmapDscpRangeArray) ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpRangeOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20QosmapDscpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpRange)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) ToWirelesscontrollerhotspot20QosmapDscpRangeOutput() Wirelesscontrollerhotspot20QosmapDscpRangeOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) ToWirelesscontrollerhotspot20QosmapDscpRangeOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeOutput {
	return o
}

// DSCP high value.
func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpRange) *int { return v.High }).(pulumi.IntPtrOutput)
}

// DSCP range index.
func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpRange) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// DSCP low value.
func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpRange) *int { return v.Low }).(pulumi.IntPtrOutput)
}

// User priority.
func (o Wirelesscontrollerhotspot20QosmapDscpRangeOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Wirelesscontrollerhotspot20QosmapDscpRange) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Wirelesscontrollerhotspot20QosmapDscpRange)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput) ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutput() Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput) ToWirelesscontrollerhotspot20QosmapDscpRangeArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20QosmapDscpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Wirelesscontrollerhotspot20QosmapDscpRange {
		return vs[0].([]Wirelesscontrollerhotspot20QosmapDscpRange)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20QosmapDscpRangeOutput)
}

type GetFirewallAddress6List struct {
	// IP.
	Ip string `pulumi:"ip"`
}

// GetFirewallAddress6ListInput is an input type that accepts GetFirewallAddress6ListArgs and GetFirewallAddress6ListOutput values.
// You can construct a concrete instance of `GetFirewallAddress6ListInput` via:
//
//	GetFirewallAddress6ListArgs{...}
type GetFirewallAddress6ListInput interface {
	pulumi.Input

	ToGetFirewallAddress6ListOutput() GetFirewallAddress6ListOutput
	ToGetFirewallAddress6ListOutputWithContext(context.Context) GetFirewallAddress6ListOutput
}

type GetFirewallAddress6ListArgs struct {
	// IP.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetFirewallAddress6ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6List)(nil)).Elem()
}

func (i GetFirewallAddress6ListArgs) ToGetFirewallAddress6ListOutput() GetFirewallAddress6ListOutput {
	return i.ToGetFirewallAddress6ListOutputWithContext(context.Background())
}

func (i GetFirewallAddress6ListArgs) ToGetFirewallAddress6ListOutputWithContext(ctx context.Context) GetFirewallAddress6ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6ListOutput)
}

// GetFirewallAddress6ListArrayInput is an input type that accepts GetFirewallAddress6ListArray and GetFirewallAddress6ListArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6ListArrayInput` via:
//
//	GetFirewallAddress6ListArray{ GetFirewallAddress6ListArgs{...} }
type GetFirewallAddress6ListArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6ListArrayOutput() GetFirewallAddress6ListArrayOutput
	ToGetFirewallAddress6ListArrayOutputWithContext(context.Context) GetFirewallAddress6ListArrayOutput
}

type GetFirewallAddress6ListArray []GetFirewallAddress6ListInput

func (GetFirewallAddress6ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6List)(nil)).Elem()
}

func (i GetFirewallAddress6ListArray) ToGetFirewallAddress6ListArrayOutput() GetFirewallAddress6ListArrayOutput {
	return i.ToGetFirewallAddress6ListArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6ListArray) ToGetFirewallAddress6ListArrayOutputWithContext(ctx context.Context) GetFirewallAddress6ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6ListArrayOutput)
}

type GetFirewallAddress6ListOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6List)(nil)).Elem()
}

func (o GetFirewallAddress6ListOutput) ToGetFirewallAddress6ListOutput() GetFirewallAddress6ListOutput {
	return o
}

func (o GetFirewallAddress6ListOutput) ToGetFirewallAddress6ListOutputWithContext(ctx context.Context) GetFirewallAddress6ListOutput {
	return o
}

// IP.
func (o GetFirewallAddress6ListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6List) string { return v.Ip }).(pulumi.StringOutput)
}

type GetFirewallAddress6ListArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6List)(nil)).Elem()
}

func (o GetFirewallAddress6ListArrayOutput) ToGetFirewallAddress6ListArrayOutput() GetFirewallAddress6ListArrayOutput {
	return o
}

func (o GetFirewallAddress6ListArrayOutput) ToGetFirewallAddress6ListArrayOutputWithContext(ctx context.Context) GetFirewallAddress6ListArrayOutput {
	return o
}

func (o GetFirewallAddress6ListArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6List {
		return vs[0].([]GetFirewallAddress6List)[vs[1].(int)]
	}).(GetFirewallAddress6ListOutput)
}

type GetFirewallAddress6Macaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr string `pulumi:"macaddr"`
}

// GetFirewallAddress6MacaddrInput is an input type that accepts GetFirewallAddress6MacaddrArgs and GetFirewallAddress6MacaddrOutput values.
// You can construct a concrete instance of `GetFirewallAddress6MacaddrInput` via:
//
//	GetFirewallAddress6MacaddrArgs{...}
type GetFirewallAddress6MacaddrInput interface {
	pulumi.Input

	ToGetFirewallAddress6MacaddrOutput() GetFirewallAddress6MacaddrOutput
	ToGetFirewallAddress6MacaddrOutputWithContext(context.Context) GetFirewallAddress6MacaddrOutput
}

type GetFirewallAddress6MacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringInput `pulumi:"macaddr"`
}

func (GetFirewallAddress6MacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6Macaddr)(nil)).Elem()
}

func (i GetFirewallAddress6MacaddrArgs) ToGetFirewallAddress6MacaddrOutput() GetFirewallAddress6MacaddrOutput {
	return i.ToGetFirewallAddress6MacaddrOutputWithContext(context.Background())
}

func (i GetFirewallAddress6MacaddrArgs) ToGetFirewallAddress6MacaddrOutputWithContext(ctx context.Context) GetFirewallAddress6MacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6MacaddrOutput)
}

// GetFirewallAddress6MacaddrArrayInput is an input type that accepts GetFirewallAddress6MacaddrArray and GetFirewallAddress6MacaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6MacaddrArrayInput` via:
//
//	GetFirewallAddress6MacaddrArray{ GetFirewallAddress6MacaddrArgs{...} }
type GetFirewallAddress6MacaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6MacaddrArrayOutput() GetFirewallAddress6MacaddrArrayOutput
	ToGetFirewallAddress6MacaddrArrayOutputWithContext(context.Context) GetFirewallAddress6MacaddrArrayOutput
}

type GetFirewallAddress6MacaddrArray []GetFirewallAddress6MacaddrInput

func (GetFirewallAddress6MacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6Macaddr)(nil)).Elem()
}

func (i GetFirewallAddress6MacaddrArray) ToGetFirewallAddress6MacaddrArrayOutput() GetFirewallAddress6MacaddrArrayOutput {
	return i.ToGetFirewallAddress6MacaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6MacaddrArray) ToGetFirewallAddress6MacaddrArrayOutputWithContext(ctx context.Context) GetFirewallAddress6MacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6MacaddrArrayOutput)
}

type GetFirewallAddress6MacaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6MacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6Macaddr)(nil)).Elem()
}

func (o GetFirewallAddress6MacaddrOutput) ToGetFirewallAddress6MacaddrOutput() GetFirewallAddress6MacaddrOutput {
	return o
}

func (o GetFirewallAddress6MacaddrOutput) ToGetFirewallAddress6MacaddrOutputWithContext(ctx context.Context) GetFirewallAddress6MacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o GetFirewallAddress6MacaddrOutput) Macaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6Macaddr) string { return v.Macaddr }).(pulumi.StringOutput)
}

type GetFirewallAddress6MacaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6MacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6Macaddr)(nil)).Elem()
}

func (o GetFirewallAddress6MacaddrArrayOutput) ToGetFirewallAddress6MacaddrArrayOutput() GetFirewallAddress6MacaddrArrayOutput {
	return o
}

func (o GetFirewallAddress6MacaddrArrayOutput) ToGetFirewallAddress6MacaddrArrayOutputWithContext(ctx context.Context) GetFirewallAddress6MacaddrArrayOutput {
	return o
}

func (o GetFirewallAddress6MacaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6MacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6Macaddr {
		return vs[0].([]GetFirewallAddress6Macaddr)[vs[1].(int)]
	}).(GetFirewallAddress6MacaddrOutput)
}

type GetFirewallAddress6SubnetSegment struct {
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
	// Subnet segment type.
	Type string `pulumi:"type"`
	// Subnet segment value.
	Value string `pulumi:"value"`
}

// GetFirewallAddress6SubnetSegmentInput is an input type that accepts GetFirewallAddress6SubnetSegmentArgs and GetFirewallAddress6SubnetSegmentOutput values.
// You can construct a concrete instance of `GetFirewallAddress6SubnetSegmentInput` via:
//
//	GetFirewallAddress6SubnetSegmentArgs{...}
type GetFirewallAddress6SubnetSegmentInput interface {
	pulumi.Input

	ToGetFirewallAddress6SubnetSegmentOutput() GetFirewallAddress6SubnetSegmentOutput
	ToGetFirewallAddress6SubnetSegmentOutputWithContext(context.Context) GetFirewallAddress6SubnetSegmentOutput
}

type GetFirewallAddress6SubnetSegmentArgs struct {
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment type.
	Type pulumi.StringInput `pulumi:"type"`
	// Subnet segment value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFirewallAddress6SubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6SubnetSegment)(nil)).Elem()
}

func (i GetFirewallAddress6SubnetSegmentArgs) ToGetFirewallAddress6SubnetSegmentOutput() GetFirewallAddress6SubnetSegmentOutput {
	return i.ToGetFirewallAddress6SubnetSegmentOutputWithContext(context.Background())
}

func (i GetFirewallAddress6SubnetSegmentArgs) ToGetFirewallAddress6SubnetSegmentOutputWithContext(ctx context.Context) GetFirewallAddress6SubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6SubnetSegmentOutput)
}

// GetFirewallAddress6SubnetSegmentArrayInput is an input type that accepts GetFirewallAddress6SubnetSegmentArray and GetFirewallAddress6SubnetSegmentArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6SubnetSegmentArrayInput` via:
//
//	GetFirewallAddress6SubnetSegmentArray{ GetFirewallAddress6SubnetSegmentArgs{...} }
type GetFirewallAddress6SubnetSegmentArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6SubnetSegmentArrayOutput() GetFirewallAddress6SubnetSegmentArrayOutput
	ToGetFirewallAddress6SubnetSegmentArrayOutputWithContext(context.Context) GetFirewallAddress6SubnetSegmentArrayOutput
}

type GetFirewallAddress6SubnetSegmentArray []GetFirewallAddress6SubnetSegmentInput

func (GetFirewallAddress6SubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6SubnetSegment)(nil)).Elem()
}

func (i GetFirewallAddress6SubnetSegmentArray) ToGetFirewallAddress6SubnetSegmentArrayOutput() GetFirewallAddress6SubnetSegmentArrayOutput {
	return i.ToGetFirewallAddress6SubnetSegmentArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6SubnetSegmentArray) ToGetFirewallAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) GetFirewallAddress6SubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6SubnetSegmentArrayOutput)
}

type GetFirewallAddress6SubnetSegmentOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6SubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6SubnetSegment)(nil)).Elem()
}

func (o GetFirewallAddress6SubnetSegmentOutput) ToGetFirewallAddress6SubnetSegmentOutput() GetFirewallAddress6SubnetSegmentOutput {
	return o
}

func (o GetFirewallAddress6SubnetSegmentOutput) ToGetFirewallAddress6SubnetSegmentOutputWithContext(ctx context.Context) GetFirewallAddress6SubnetSegmentOutput {
	return o
}

// Specify the name of the desired firewall address6.
func (o GetFirewallAddress6SubnetSegmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6SubnetSegment) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment type.
func (o GetFirewallAddress6SubnetSegmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6SubnetSegment) string { return v.Type }).(pulumi.StringOutput)
}

// Subnet segment value.
func (o GetFirewallAddress6SubnetSegmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6SubnetSegment) string { return v.Value }).(pulumi.StringOutput)
}

type GetFirewallAddress6SubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6SubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6SubnetSegment)(nil)).Elem()
}

func (o GetFirewallAddress6SubnetSegmentArrayOutput) ToGetFirewallAddress6SubnetSegmentArrayOutput() GetFirewallAddress6SubnetSegmentArrayOutput {
	return o
}

func (o GetFirewallAddress6SubnetSegmentArrayOutput) ToGetFirewallAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) GetFirewallAddress6SubnetSegmentArrayOutput {
	return o
}

func (o GetFirewallAddress6SubnetSegmentArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6SubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6SubnetSegment {
		return vs[0].([]GetFirewallAddress6SubnetSegment)[vs[1].(int)]
	}).(GetFirewallAddress6SubnetSegmentOutput)
}

type GetFirewallAddress6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallAddress6TaggingTag `pulumi:"tags"`
}

// GetFirewallAddress6TaggingInput is an input type that accepts GetFirewallAddress6TaggingArgs and GetFirewallAddress6TaggingOutput values.
// You can construct a concrete instance of `GetFirewallAddress6TaggingInput` via:
//
//	GetFirewallAddress6TaggingArgs{...}
type GetFirewallAddress6TaggingInput interface {
	pulumi.Input

	ToGetFirewallAddress6TaggingOutput() GetFirewallAddress6TaggingOutput
	ToGetFirewallAddress6TaggingOutputWithContext(context.Context) GetFirewallAddress6TaggingOutput
}

type GetFirewallAddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallAddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallAddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6Tagging)(nil)).Elem()
}

func (i GetFirewallAddress6TaggingArgs) ToGetFirewallAddress6TaggingOutput() GetFirewallAddress6TaggingOutput {
	return i.ToGetFirewallAddress6TaggingOutputWithContext(context.Background())
}

func (i GetFirewallAddress6TaggingArgs) ToGetFirewallAddress6TaggingOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6TaggingOutput)
}

// GetFirewallAddress6TaggingArrayInput is an input type that accepts GetFirewallAddress6TaggingArray and GetFirewallAddress6TaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6TaggingArrayInput` via:
//
//	GetFirewallAddress6TaggingArray{ GetFirewallAddress6TaggingArgs{...} }
type GetFirewallAddress6TaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6TaggingArrayOutput() GetFirewallAddress6TaggingArrayOutput
	ToGetFirewallAddress6TaggingArrayOutputWithContext(context.Context) GetFirewallAddress6TaggingArrayOutput
}

type GetFirewallAddress6TaggingArray []GetFirewallAddress6TaggingInput

func (GetFirewallAddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6Tagging)(nil)).Elem()
}

func (i GetFirewallAddress6TaggingArray) ToGetFirewallAddress6TaggingArrayOutput() GetFirewallAddress6TaggingArrayOutput {
	return i.ToGetFirewallAddress6TaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6TaggingArray) ToGetFirewallAddress6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6TaggingArrayOutput)
}

type GetFirewallAddress6TaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6Tagging)(nil)).Elem()
}

func (o GetFirewallAddress6TaggingOutput) ToGetFirewallAddress6TaggingOutput() GetFirewallAddress6TaggingOutput {
	return o
}

func (o GetFirewallAddress6TaggingOutput) ToGetFirewallAddress6TaggingOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallAddress6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall address6.
func (o GetFirewallAddress6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallAddress6TaggingOutput) Tags() GetFirewallAddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallAddress6Tagging) []GetFirewallAddress6TaggingTag { return v.Tags }).(GetFirewallAddress6TaggingTagArrayOutput)
}

type GetFirewallAddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6Tagging)(nil)).Elem()
}

func (o GetFirewallAddress6TaggingArrayOutput) ToGetFirewallAddress6TaggingArrayOutput() GetFirewallAddress6TaggingArrayOutput {
	return o
}

func (o GetFirewallAddress6TaggingArrayOutput) ToGetFirewallAddress6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingArrayOutput {
	return o
}

func (o GetFirewallAddress6TaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6Tagging {
		return vs[0].([]GetFirewallAddress6Tagging)[vs[1].(int)]
	}).(GetFirewallAddress6TaggingOutput)
}

type GetFirewallAddress6TaggingTag struct {
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
}

// GetFirewallAddress6TaggingTagInput is an input type that accepts GetFirewallAddress6TaggingTagArgs and GetFirewallAddress6TaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallAddress6TaggingTagInput` via:
//
//	GetFirewallAddress6TaggingTagArgs{...}
type GetFirewallAddress6TaggingTagInput interface {
	pulumi.Input

	ToGetFirewallAddress6TaggingTagOutput() GetFirewallAddress6TaggingTagOutput
	ToGetFirewallAddress6TaggingTagOutputWithContext(context.Context) GetFirewallAddress6TaggingTagOutput
}

type GetFirewallAddress6TaggingTagArgs struct {
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6TaggingTag)(nil)).Elem()
}

func (i GetFirewallAddress6TaggingTagArgs) ToGetFirewallAddress6TaggingTagOutput() GetFirewallAddress6TaggingTagOutput {
	return i.ToGetFirewallAddress6TaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallAddress6TaggingTagArgs) ToGetFirewallAddress6TaggingTagOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6TaggingTagOutput)
}

// GetFirewallAddress6TaggingTagArrayInput is an input type that accepts GetFirewallAddress6TaggingTagArray and GetFirewallAddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6TaggingTagArrayInput` via:
//
//	GetFirewallAddress6TaggingTagArray{ GetFirewallAddress6TaggingTagArgs{...} }
type GetFirewallAddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6TaggingTagArrayOutput() GetFirewallAddress6TaggingTagArrayOutput
	ToGetFirewallAddress6TaggingTagArrayOutputWithContext(context.Context) GetFirewallAddress6TaggingTagArrayOutput
}

type GetFirewallAddress6TaggingTagArray []GetFirewallAddress6TaggingTagInput

func (GetFirewallAddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6TaggingTag)(nil)).Elem()
}

func (i GetFirewallAddress6TaggingTagArray) ToGetFirewallAddress6TaggingTagArrayOutput() GetFirewallAddress6TaggingTagArrayOutput {
	return i.ToGetFirewallAddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6TaggingTagArray) ToGetFirewallAddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6TaggingTagArrayOutput)
}

type GetFirewallAddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6TaggingTag)(nil)).Elem()
}

func (o GetFirewallAddress6TaggingTagOutput) ToGetFirewallAddress6TaggingTagOutput() GetFirewallAddress6TaggingTagOutput {
	return o
}

func (o GetFirewallAddress6TaggingTagOutput) ToGetFirewallAddress6TaggingTagOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall address6.
func (o GetFirewallAddress6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6TaggingTag)(nil)).Elem()
}

func (o GetFirewallAddress6TaggingTagArrayOutput) ToGetFirewallAddress6TaggingTagArrayOutput() GetFirewallAddress6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddress6TaggingTagArrayOutput) ToGetFirewallAddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddress6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6TaggingTag {
		return vs[0].([]GetFirewallAddress6TaggingTag)[vs[1].(int)]
	}).(GetFirewallAddress6TaggingTagOutput)
}

type GetFirewallAddress6templateSubnetSegment struct {
	// Number of bits.
	Bits int `pulumi:"bits"`
	// Enable/disable exclusive value.
	Exclusive string `pulumi:"exclusive"`
	// Subnet segment ID.
	Id int `pulumi:"id"`
	// Specify the name of the desired firewall address6template.
	Name string `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values []GetFirewallAddress6templateSubnetSegmentValue `pulumi:"values"`
}

// GetFirewallAddress6templateSubnetSegmentInput is an input type that accepts GetFirewallAddress6templateSubnetSegmentArgs and GetFirewallAddress6templateSubnetSegmentOutput values.
// You can construct a concrete instance of `GetFirewallAddress6templateSubnetSegmentInput` via:
//
//	GetFirewallAddress6templateSubnetSegmentArgs{...}
type GetFirewallAddress6templateSubnetSegmentInput interface {
	pulumi.Input

	ToGetFirewallAddress6templateSubnetSegmentOutput() GetFirewallAddress6templateSubnetSegmentOutput
	ToGetFirewallAddress6templateSubnetSegmentOutputWithContext(context.Context) GetFirewallAddress6templateSubnetSegmentOutput
}

type GetFirewallAddress6templateSubnetSegmentArgs struct {
	// Number of bits.
	Bits pulumi.IntInput `pulumi:"bits"`
	// Enable/disable exclusive value.
	Exclusive pulumi.StringInput `pulumi:"exclusive"`
	// Subnet segment ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify the name of the desired firewall address6template.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values GetFirewallAddress6templateSubnetSegmentValueArrayInput `pulumi:"values"`
}

func (GetFirewallAddress6templateSubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (i GetFirewallAddress6templateSubnetSegmentArgs) ToGetFirewallAddress6templateSubnetSegmentOutput() GetFirewallAddress6templateSubnetSegmentOutput {
	return i.ToGetFirewallAddress6templateSubnetSegmentOutputWithContext(context.Background())
}

func (i GetFirewallAddress6templateSubnetSegmentArgs) ToGetFirewallAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6templateSubnetSegmentOutput)
}

// GetFirewallAddress6templateSubnetSegmentArrayInput is an input type that accepts GetFirewallAddress6templateSubnetSegmentArray and GetFirewallAddress6templateSubnetSegmentArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6templateSubnetSegmentArrayInput` via:
//
//	GetFirewallAddress6templateSubnetSegmentArray{ GetFirewallAddress6templateSubnetSegmentArgs{...} }
type GetFirewallAddress6templateSubnetSegmentArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6templateSubnetSegmentArrayOutput() GetFirewallAddress6templateSubnetSegmentArrayOutput
	ToGetFirewallAddress6templateSubnetSegmentArrayOutputWithContext(context.Context) GetFirewallAddress6templateSubnetSegmentArrayOutput
}

type GetFirewallAddress6templateSubnetSegmentArray []GetFirewallAddress6templateSubnetSegmentInput

func (GetFirewallAddress6templateSubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (i GetFirewallAddress6templateSubnetSegmentArray) ToGetFirewallAddress6templateSubnetSegmentArrayOutput() GetFirewallAddress6templateSubnetSegmentArrayOutput {
	return i.ToGetFirewallAddress6templateSubnetSegmentArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6templateSubnetSegmentArray) ToGetFirewallAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6templateSubnetSegmentArrayOutput)
}

type GetFirewallAddress6templateSubnetSegmentOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6templateSubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (o GetFirewallAddress6templateSubnetSegmentOutput) ToGetFirewallAddress6templateSubnetSegmentOutput() GetFirewallAddress6templateSubnetSegmentOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentOutput) ToGetFirewallAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentOutput {
	return o
}

// Number of bits.
func (o GetFirewallAddress6templateSubnetSegmentOutput) Bits() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegment) int { return v.Bits }).(pulumi.IntOutput)
}

// Enable/disable exclusive value.
func (o GetFirewallAddress6templateSubnetSegmentOutput) Exclusive() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegment) string { return v.Exclusive }).(pulumi.StringOutput)
}

// Subnet segment ID.
func (o GetFirewallAddress6templateSubnetSegmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegment) int { return v.Id }).(pulumi.IntOutput)
}

// Specify the name of the desired firewall address6template.
func (o GetFirewallAddress6templateSubnetSegmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegment) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment values. The structure of `values` block is documented below.
func (o GetFirewallAddress6templateSubnetSegmentOutput) Values() GetFirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegment) []GetFirewallAddress6templateSubnetSegmentValue {
		return v.Values
	}).(GetFirewallAddress6templateSubnetSegmentValueArrayOutput)
}

type GetFirewallAddress6templateSubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6templateSubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (o GetFirewallAddress6templateSubnetSegmentArrayOutput) ToGetFirewallAddress6templateSubnetSegmentArrayOutput() GetFirewallAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentArrayOutput) ToGetFirewallAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6templateSubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6templateSubnetSegment {
		return vs[0].([]GetFirewallAddress6templateSubnetSegment)[vs[1].(int)]
	}).(GetFirewallAddress6templateSubnetSegmentOutput)
}

type GetFirewallAddress6templateSubnetSegmentValue struct {
	// Specify the name of the desired firewall address6template.
	Name string `pulumi:"name"`
	// Subnet segment value.
	Value string `pulumi:"value"`
}

// GetFirewallAddress6templateSubnetSegmentValueInput is an input type that accepts GetFirewallAddress6templateSubnetSegmentValueArgs and GetFirewallAddress6templateSubnetSegmentValueOutput values.
// You can construct a concrete instance of `GetFirewallAddress6templateSubnetSegmentValueInput` via:
//
//	GetFirewallAddress6templateSubnetSegmentValueArgs{...}
type GetFirewallAddress6templateSubnetSegmentValueInput interface {
	pulumi.Input

	ToGetFirewallAddress6templateSubnetSegmentValueOutput() GetFirewallAddress6templateSubnetSegmentValueOutput
	ToGetFirewallAddress6templateSubnetSegmentValueOutputWithContext(context.Context) GetFirewallAddress6templateSubnetSegmentValueOutput
}

type GetFirewallAddress6templateSubnetSegmentValueArgs struct {
	// Specify the name of the desired firewall address6template.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFirewallAddress6templateSubnetSegmentValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i GetFirewallAddress6templateSubnetSegmentValueArgs) ToGetFirewallAddress6templateSubnetSegmentValueOutput() GetFirewallAddress6templateSubnetSegmentValueOutput {
	return i.ToGetFirewallAddress6templateSubnetSegmentValueOutputWithContext(context.Background())
}

func (i GetFirewallAddress6templateSubnetSegmentValueArgs) ToGetFirewallAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6templateSubnetSegmentValueOutput)
}

// GetFirewallAddress6templateSubnetSegmentValueArrayInput is an input type that accepts GetFirewallAddress6templateSubnetSegmentValueArray and GetFirewallAddress6templateSubnetSegmentValueArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddress6templateSubnetSegmentValueArrayInput` via:
//
//	GetFirewallAddress6templateSubnetSegmentValueArray{ GetFirewallAddress6templateSubnetSegmentValueArgs{...} }
type GetFirewallAddress6templateSubnetSegmentValueArrayInput interface {
	pulumi.Input

	ToGetFirewallAddress6templateSubnetSegmentValueArrayOutput() GetFirewallAddress6templateSubnetSegmentValueArrayOutput
	ToGetFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Context) GetFirewallAddress6templateSubnetSegmentValueArrayOutput
}

type GetFirewallAddress6templateSubnetSegmentValueArray []GetFirewallAddress6templateSubnetSegmentValueInput

func (GetFirewallAddress6templateSubnetSegmentValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i GetFirewallAddress6templateSubnetSegmentValueArray) ToGetFirewallAddress6templateSubnetSegmentValueArrayOutput() GetFirewallAddress6templateSubnetSegmentValueArrayOutput {
	return i.ToGetFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddress6templateSubnetSegmentValueArray) ToGetFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddress6templateSubnetSegmentValueArrayOutput)
}

type GetFirewallAddress6templateSubnetSegmentValueOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6templateSubnetSegmentValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o GetFirewallAddress6templateSubnetSegmentValueOutput) ToGetFirewallAddress6templateSubnetSegmentValueOutput() GetFirewallAddress6templateSubnetSegmentValueOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentValueOutput) ToGetFirewallAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentValueOutput {
	return o
}

// Specify the name of the desired firewall address6template.
func (o GetFirewallAddress6templateSubnetSegmentValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegmentValue) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment value.
func (o GetFirewallAddress6templateSubnetSegmentValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddress6templateSubnetSegmentValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetFirewallAddress6templateSubnetSegmentValueArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddress6templateSubnetSegmentValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o GetFirewallAddress6templateSubnetSegmentValueArrayOutput) ToGetFirewallAddress6templateSubnetSegmentValueArrayOutput() GetFirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentValueArrayOutput) ToGetFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) GetFirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o GetFirewallAddress6templateSubnetSegmentValueArrayOutput) Index(i pulumi.IntInput) GetFirewallAddress6templateSubnetSegmentValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddress6templateSubnetSegmentValue {
		return vs[0].([]GetFirewallAddress6templateSubnetSegmentValue)[vs[1].(int)]
	}).(GetFirewallAddress6templateSubnetSegmentValueOutput)
}

type GetFirewallAddressFssoGroup struct {
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
}

// GetFirewallAddressFssoGroupInput is an input type that accepts GetFirewallAddressFssoGroupArgs and GetFirewallAddressFssoGroupOutput values.
// You can construct a concrete instance of `GetFirewallAddressFssoGroupInput` via:
//
//	GetFirewallAddressFssoGroupArgs{...}
type GetFirewallAddressFssoGroupInput interface {
	pulumi.Input

	ToGetFirewallAddressFssoGroupOutput() GetFirewallAddressFssoGroupOutput
	ToGetFirewallAddressFssoGroupOutputWithContext(context.Context) GetFirewallAddressFssoGroupOutput
}

type GetFirewallAddressFssoGroupArgs struct {
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddressFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressFssoGroup)(nil)).Elem()
}

func (i GetFirewallAddressFssoGroupArgs) ToGetFirewallAddressFssoGroupOutput() GetFirewallAddressFssoGroupOutput {
	return i.ToGetFirewallAddressFssoGroupOutputWithContext(context.Background())
}

func (i GetFirewallAddressFssoGroupArgs) ToGetFirewallAddressFssoGroupOutputWithContext(ctx context.Context) GetFirewallAddressFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressFssoGroupOutput)
}

// GetFirewallAddressFssoGroupArrayInput is an input type that accepts GetFirewallAddressFssoGroupArray and GetFirewallAddressFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressFssoGroupArrayInput` via:
//
//	GetFirewallAddressFssoGroupArray{ GetFirewallAddressFssoGroupArgs{...} }
type GetFirewallAddressFssoGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressFssoGroupArrayOutput() GetFirewallAddressFssoGroupArrayOutput
	ToGetFirewallAddressFssoGroupArrayOutputWithContext(context.Context) GetFirewallAddressFssoGroupArrayOutput
}

type GetFirewallAddressFssoGroupArray []GetFirewallAddressFssoGroupInput

func (GetFirewallAddressFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressFssoGroup)(nil)).Elem()
}

func (i GetFirewallAddressFssoGroupArray) ToGetFirewallAddressFssoGroupArrayOutput() GetFirewallAddressFssoGroupArrayOutput {
	return i.ToGetFirewallAddressFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressFssoGroupArray) ToGetFirewallAddressFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallAddressFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressFssoGroupArrayOutput)
}

type GetFirewallAddressFssoGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressFssoGroup)(nil)).Elem()
}

func (o GetFirewallAddressFssoGroupOutput) ToGetFirewallAddressFssoGroupOutput() GetFirewallAddressFssoGroupOutput {
	return o
}

func (o GetFirewallAddressFssoGroupOutput) ToGetFirewallAddressFssoGroupOutputWithContext(ctx context.Context) GetFirewallAddressFssoGroupOutput {
	return o
}

// Specify the name of the desired firewall address.
func (o GetFirewallAddressFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddressFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressFssoGroup)(nil)).Elem()
}

func (o GetFirewallAddressFssoGroupArrayOutput) ToGetFirewallAddressFssoGroupArrayOutput() GetFirewallAddressFssoGroupArrayOutput {
	return o
}

func (o GetFirewallAddressFssoGroupArrayOutput) ToGetFirewallAddressFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallAddressFssoGroupArrayOutput {
	return o
}

func (o GetFirewallAddressFssoGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressFssoGroup {
		return vs[0].([]GetFirewallAddressFssoGroup)[vs[1].(int)]
	}).(GetFirewallAddressFssoGroupOutput)
}

type GetFirewallAddressList struct {
	// IP.
	Ip string `pulumi:"ip"`
}

// GetFirewallAddressListInput is an input type that accepts GetFirewallAddressListArgs and GetFirewallAddressListOutput values.
// You can construct a concrete instance of `GetFirewallAddressListInput` via:
//
//	GetFirewallAddressListArgs{...}
type GetFirewallAddressListInput interface {
	pulumi.Input

	ToGetFirewallAddressListOutput() GetFirewallAddressListOutput
	ToGetFirewallAddressListOutputWithContext(context.Context) GetFirewallAddressListOutput
}

type GetFirewallAddressListArgs struct {
	// IP.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetFirewallAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressList)(nil)).Elem()
}

func (i GetFirewallAddressListArgs) ToGetFirewallAddressListOutput() GetFirewallAddressListOutput {
	return i.ToGetFirewallAddressListOutputWithContext(context.Background())
}

func (i GetFirewallAddressListArgs) ToGetFirewallAddressListOutputWithContext(ctx context.Context) GetFirewallAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressListOutput)
}

// GetFirewallAddressListArrayInput is an input type that accepts GetFirewallAddressListArray and GetFirewallAddressListArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressListArrayInput` via:
//
//	GetFirewallAddressListArray{ GetFirewallAddressListArgs{...} }
type GetFirewallAddressListArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput
	ToGetFirewallAddressListArrayOutputWithContext(context.Context) GetFirewallAddressListArrayOutput
}

type GetFirewallAddressListArray []GetFirewallAddressListInput

func (GetFirewallAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressList)(nil)).Elem()
}

func (i GetFirewallAddressListArray) ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput {
	return i.ToGetFirewallAddressListArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressListArray) ToGetFirewallAddressListArrayOutputWithContext(ctx context.Context) GetFirewallAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressListArrayOutput)
}

type GetFirewallAddressListOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressList)(nil)).Elem()
}

func (o GetFirewallAddressListOutput) ToGetFirewallAddressListOutput() GetFirewallAddressListOutput {
	return o
}

func (o GetFirewallAddressListOutput) ToGetFirewallAddressListOutputWithContext(ctx context.Context) GetFirewallAddressListOutput {
	return o
}

// IP.
func (o GetFirewallAddressListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.Ip }).(pulumi.StringOutput)
}

type GetFirewallAddressListArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressList)(nil)).Elem()
}

func (o GetFirewallAddressListArrayOutput) ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput {
	return o
}

func (o GetFirewallAddressListArrayOutput) ToGetFirewallAddressListArrayOutputWithContext(ctx context.Context) GetFirewallAddressListArrayOutput {
	return o
}

func (o GetFirewallAddressListArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressList {
		return vs[0].([]GetFirewallAddressList)[vs[1].(int)]
	}).(GetFirewallAddressListOutput)
}

type GetFirewallAddressMacaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr string `pulumi:"macaddr"`
}

// GetFirewallAddressMacaddrInput is an input type that accepts GetFirewallAddressMacaddrArgs and GetFirewallAddressMacaddrOutput values.
// You can construct a concrete instance of `GetFirewallAddressMacaddrInput` via:
//
//	GetFirewallAddressMacaddrArgs{...}
type GetFirewallAddressMacaddrInput interface {
	pulumi.Input

	ToGetFirewallAddressMacaddrOutput() GetFirewallAddressMacaddrOutput
	ToGetFirewallAddressMacaddrOutputWithContext(context.Context) GetFirewallAddressMacaddrOutput
}

type GetFirewallAddressMacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringInput `pulumi:"macaddr"`
}

func (GetFirewallAddressMacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressMacaddr)(nil)).Elem()
}

func (i GetFirewallAddressMacaddrArgs) ToGetFirewallAddressMacaddrOutput() GetFirewallAddressMacaddrOutput {
	return i.ToGetFirewallAddressMacaddrOutputWithContext(context.Background())
}

func (i GetFirewallAddressMacaddrArgs) ToGetFirewallAddressMacaddrOutputWithContext(ctx context.Context) GetFirewallAddressMacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressMacaddrOutput)
}

// GetFirewallAddressMacaddrArrayInput is an input type that accepts GetFirewallAddressMacaddrArray and GetFirewallAddressMacaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressMacaddrArrayInput` via:
//
//	GetFirewallAddressMacaddrArray{ GetFirewallAddressMacaddrArgs{...} }
type GetFirewallAddressMacaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressMacaddrArrayOutput() GetFirewallAddressMacaddrArrayOutput
	ToGetFirewallAddressMacaddrArrayOutputWithContext(context.Context) GetFirewallAddressMacaddrArrayOutput
}

type GetFirewallAddressMacaddrArray []GetFirewallAddressMacaddrInput

func (GetFirewallAddressMacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressMacaddr)(nil)).Elem()
}

func (i GetFirewallAddressMacaddrArray) ToGetFirewallAddressMacaddrArrayOutput() GetFirewallAddressMacaddrArrayOutput {
	return i.ToGetFirewallAddressMacaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressMacaddrArray) ToGetFirewallAddressMacaddrArrayOutputWithContext(ctx context.Context) GetFirewallAddressMacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressMacaddrArrayOutput)
}

type GetFirewallAddressMacaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressMacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressMacaddr)(nil)).Elem()
}

func (o GetFirewallAddressMacaddrOutput) ToGetFirewallAddressMacaddrOutput() GetFirewallAddressMacaddrOutput {
	return o
}

func (o GetFirewallAddressMacaddrOutput) ToGetFirewallAddressMacaddrOutputWithContext(ctx context.Context) GetFirewallAddressMacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o GetFirewallAddressMacaddrOutput) Macaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressMacaddr) string { return v.Macaddr }).(pulumi.StringOutput)
}

type GetFirewallAddressMacaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressMacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressMacaddr)(nil)).Elem()
}

func (o GetFirewallAddressMacaddrArrayOutput) ToGetFirewallAddressMacaddrArrayOutput() GetFirewallAddressMacaddrArrayOutput {
	return o
}

func (o GetFirewallAddressMacaddrArrayOutput) ToGetFirewallAddressMacaddrArrayOutputWithContext(ctx context.Context) GetFirewallAddressMacaddrArrayOutput {
	return o
}

func (o GetFirewallAddressMacaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressMacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressMacaddr {
		return vs[0].([]GetFirewallAddressMacaddr)[vs[1].(int)]
	}).(GetFirewallAddressMacaddrOutput)
}

type GetFirewallAddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallAddressTaggingTag `pulumi:"tags"`
}

// GetFirewallAddressTaggingInput is an input type that accepts GetFirewallAddressTaggingArgs and GetFirewallAddressTaggingOutput values.
// You can construct a concrete instance of `GetFirewallAddressTaggingInput` via:
//
//	GetFirewallAddressTaggingArgs{...}
type GetFirewallAddressTaggingInput interface {
	pulumi.Input

	ToGetFirewallAddressTaggingOutput() GetFirewallAddressTaggingOutput
	ToGetFirewallAddressTaggingOutputWithContext(context.Context) GetFirewallAddressTaggingOutput
}

type GetFirewallAddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallAddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallAddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressTagging)(nil)).Elem()
}

func (i GetFirewallAddressTaggingArgs) ToGetFirewallAddressTaggingOutput() GetFirewallAddressTaggingOutput {
	return i.ToGetFirewallAddressTaggingOutputWithContext(context.Background())
}

func (i GetFirewallAddressTaggingArgs) ToGetFirewallAddressTaggingOutputWithContext(ctx context.Context) GetFirewallAddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressTaggingOutput)
}

// GetFirewallAddressTaggingArrayInput is an input type that accepts GetFirewallAddressTaggingArray and GetFirewallAddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressTaggingArrayInput` via:
//
//	GetFirewallAddressTaggingArray{ GetFirewallAddressTaggingArgs{...} }
type GetFirewallAddressTaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressTaggingArrayOutput() GetFirewallAddressTaggingArrayOutput
	ToGetFirewallAddressTaggingArrayOutputWithContext(context.Context) GetFirewallAddressTaggingArrayOutput
}

type GetFirewallAddressTaggingArray []GetFirewallAddressTaggingInput

func (GetFirewallAddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressTagging)(nil)).Elem()
}

func (i GetFirewallAddressTaggingArray) ToGetFirewallAddressTaggingArrayOutput() GetFirewallAddressTaggingArrayOutput {
	return i.ToGetFirewallAddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressTaggingArray) ToGetFirewallAddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressTaggingArrayOutput)
}

type GetFirewallAddressTaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressTagging)(nil)).Elem()
}

func (o GetFirewallAddressTaggingOutput) ToGetFirewallAddressTaggingOutput() GetFirewallAddressTaggingOutput {
	return o
}

func (o GetFirewallAddressTaggingOutput) ToGetFirewallAddressTaggingOutputWithContext(ctx context.Context) GetFirewallAddressTaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallAddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall address.
func (o GetFirewallAddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallAddressTaggingOutput) Tags() GetFirewallAddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallAddressTagging) []GetFirewallAddressTaggingTag { return v.Tags }).(GetFirewallAddressTaggingTagArrayOutput)
}

type GetFirewallAddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressTagging)(nil)).Elem()
}

func (o GetFirewallAddressTaggingArrayOutput) ToGetFirewallAddressTaggingArrayOutput() GetFirewallAddressTaggingArrayOutput {
	return o
}

func (o GetFirewallAddressTaggingArrayOutput) ToGetFirewallAddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddressTaggingArrayOutput {
	return o
}

func (o GetFirewallAddressTaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressTagging {
		return vs[0].([]GetFirewallAddressTagging)[vs[1].(int)]
	}).(GetFirewallAddressTaggingOutput)
}

type GetFirewallAddressTaggingTag struct {
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
}

// GetFirewallAddressTaggingTagInput is an input type that accepts GetFirewallAddressTaggingTagArgs and GetFirewallAddressTaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallAddressTaggingTagInput` via:
//
//	GetFirewallAddressTaggingTagArgs{...}
type GetFirewallAddressTaggingTagInput interface {
	pulumi.Input

	ToGetFirewallAddressTaggingTagOutput() GetFirewallAddressTaggingTagOutput
	ToGetFirewallAddressTaggingTagOutputWithContext(context.Context) GetFirewallAddressTaggingTagOutput
}

type GetFirewallAddressTaggingTagArgs struct {
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallAddressTaggingTagArgs) ToGetFirewallAddressTaggingTagOutput() GetFirewallAddressTaggingTagOutput {
	return i.ToGetFirewallAddressTaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallAddressTaggingTagArgs) ToGetFirewallAddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallAddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressTaggingTagOutput)
}

// GetFirewallAddressTaggingTagArrayInput is an input type that accepts GetFirewallAddressTaggingTagArray and GetFirewallAddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressTaggingTagArrayInput` via:
//
//	GetFirewallAddressTaggingTagArray{ GetFirewallAddressTaggingTagArgs{...} }
type GetFirewallAddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressTaggingTagArrayOutput() GetFirewallAddressTaggingTagArrayOutput
	ToGetFirewallAddressTaggingTagArrayOutputWithContext(context.Context) GetFirewallAddressTaggingTagArrayOutput
}

type GetFirewallAddressTaggingTagArray []GetFirewallAddressTaggingTagInput

func (GetFirewallAddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallAddressTaggingTagArray) ToGetFirewallAddressTaggingTagArrayOutput() GetFirewallAddressTaggingTagArrayOutput {
	return i.ToGetFirewallAddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressTaggingTagArray) ToGetFirewallAddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressTaggingTagArrayOutput)
}

type GetFirewallAddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallAddressTaggingTagOutput) ToGetFirewallAddressTaggingTagOutput() GetFirewallAddressTaggingTagOutput {
	return o
}

func (o GetFirewallAddressTaggingTagOutput) ToGetFirewallAddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallAddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall address.
func (o GetFirewallAddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallAddressTaggingTagArrayOutput) ToGetFirewallAddressTaggingTagArrayOutput() GetFirewallAddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddressTaggingTagArrayOutput) ToGetFirewallAddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressTaggingTag {
		return vs[0].([]GetFirewallAddressTaggingTag)[vs[1].(int)]
	}).(GetFirewallAddressTaggingTagOutput)
}

type GetFirewallAddrgrp6Member struct {
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
}

// GetFirewallAddrgrp6MemberInput is an input type that accepts GetFirewallAddrgrp6MemberArgs and GetFirewallAddrgrp6MemberOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6MemberInput` via:
//
//	GetFirewallAddrgrp6MemberArgs{...}
type GetFirewallAddrgrp6MemberInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6MemberOutput() GetFirewallAddrgrp6MemberOutput
	ToGetFirewallAddrgrp6MemberOutputWithContext(context.Context) GetFirewallAddrgrp6MemberOutput
}

type GetFirewallAddrgrp6MemberArgs struct {
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddrgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6Member)(nil)).Elem()
}

func (i GetFirewallAddrgrp6MemberArgs) ToGetFirewallAddrgrp6MemberOutput() GetFirewallAddrgrp6MemberOutput {
	return i.ToGetFirewallAddrgrp6MemberOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6MemberArgs) ToGetFirewallAddrgrp6MemberOutputWithContext(ctx context.Context) GetFirewallAddrgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6MemberOutput)
}

// GetFirewallAddrgrp6MemberArrayInput is an input type that accepts GetFirewallAddrgrp6MemberArray and GetFirewallAddrgrp6MemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6MemberArrayInput` via:
//
//	GetFirewallAddrgrp6MemberArray{ GetFirewallAddrgrp6MemberArgs{...} }
type GetFirewallAddrgrp6MemberArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6MemberArrayOutput() GetFirewallAddrgrp6MemberArrayOutput
	ToGetFirewallAddrgrp6MemberArrayOutputWithContext(context.Context) GetFirewallAddrgrp6MemberArrayOutput
}

type GetFirewallAddrgrp6MemberArray []GetFirewallAddrgrp6MemberInput

func (GetFirewallAddrgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6Member)(nil)).Elem()
}

func (i GetFirewallAddrgrp6MemberArray) ToGetFirewallAddrgrp6MemberArrayOutput() GetFirewallAddrgrp6MemberArrayOutput {
	return i.ToGetFirewallAddrgrp6MemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6MemberArray) ToGetFirewallAddrgrp6MemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6MemberArrayOutput)
}

type GetFirewallAddrgrp6MemberOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6Member)(nil)).Elem()
}

func (o GetFirewallAddrgrp6MemberOutput) ToGetFirewallAddrgrp6MemberOutput() GetFirewallAddrgrp6MemberOutput {
	return o
}

func (o GetFirewallAddrgrp6MemberOutput) ToGetFirewallAddrgrp6MemberOutputWithContext(ctx context.Context) GetFirewallAddrgrp6MemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp6.
func (o GetFirewallAddrgrp6MemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrp6Member) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddrgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6Member)(nil)).Elem()
}

func (o GetFirewallAddrgrp6MemberArrayOutput) ToGetFirewallAddrgrp6MemberArrayOutput() GetFirewallAddrgrp6MemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6MemberArrayOutput) ToGetFirewallAddrgrp6MemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6MemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6MemberArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrp6Member {
		return vs[0].([]GetFirewallAddrgrp6Member)[vs[1].(int)]
	}).(GetFirewallAddrgrp6MemberOutput)
}

type GetFirewallAddrgrp6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallAddrgrp6TaggingTag `pulumi:"tags"`
}

// GetFirewallAddrgrp6TaggingInput is an input type that accepts GetFirewallAddrgrp6TaggingArgs and GetFirewallAddrgrp6TaggingOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6TaggingInput` via:
//
//	GetFirewallAddrgrp6TaggingArgs{...}
type GetFirewallAddrgrp6TaggingInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6TaggingOutput() GetFirewallAddrgrp6TaggingOutput
	ToGetFirewallAddrgrp6TaggingOutputWithContext(context.Context) GetFirewallAddrgrp6TaggingOutput
}

type GetFirewallAddrgrp6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallAddrgrp6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallAddrgrp6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6Tagging)(nil)).Elem()
}

func (i GetFirewallAddrgrp6TaggingArgs) ToGetFirewallAddrgrp6TaggingOutput() GetFirewallAddrgrp6TaggingOutput {
	return i.ToGetFirewallAddrgrp6TaggingOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6TaggingArgs) ToGetFirewallAddrgrp6TaggingOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6TaggingOutput)
}

// GetFirewallAddrgrp6TaggingArrayInput is an input type that accepts GetFirewallAddrgrp6TaggingArray and GetFirewallAddrgrp6TaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6TaggingArrayInput` via:
//
//	GetFirewallAddrgrp6TaggingArray{ GetFirewallAddrgrp6TaggingArgs{...} }
type GetFirewallAddrgrp6TaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6TaggingArrayOutput() GetFirewallAddrgrp6TaggingArrayOutput
	ToGetFirewallAddrgrp6TaggingArrayOutputWithContext(context.Context) GetFirewallAddrgrp6TaggingArrayOutput
}

type GetFirewallAddrgrp6TaggingArray []GetFirewallAddrgrp6TaggingInput

func (GetFirewallAddrgrp6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6Tagging)(nil)).Elem()
}

func (i GetFirewallAddrgrp6TaggingArray) ToGetFirewallAddrgrp6TaggingArrayOutput() GetFirewallAddrgrp6TaggingArrayOutput {
	return i.ToGetFirewallAddrgrp6TaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6TaggingArray) ToGetFirewallAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6TaggingArrayOutput)
}

type GetFirewallAddrgrp6TaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6Tagging)(nil)).Elem()
}

func (o GetFirewallAddrgrp6TaggingOutput) ToGetFirewallAddrgrp6TaggingOutput() GetFirewallAddrgrp6TaggingOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingOutput) ToGetFirewallAddrgrp6TaggingOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallAddrgrp6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrp6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall addrgrp6.
func (o GetFirewallAddrgrp6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrp6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallAddrgrp6TaggingOutput) Tags() GetFirewallAddrgrp6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallAddrgrp6Tagging) []GetFirewallAddrgrp6TaggingTag { return v.Tags }).(GetFirewallAddrgrp6TaggingTagArrayOutput)
}

type GetFirewallAddrgrp6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6Tagging)(nil)).Elem()
}

func (o GetFirewallAddrgrp6TaggingArrayOutput) ToGetFirewallAddrgrp6TaggingArrayOutput() GetFirewallAddrgrp6TaggingArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingArrayOutput) ToGetFirewallAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrp6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrp6Tagging {
		return vs[0].([]GetFirewallAddrgrp6Tagging)[vs[1].(int)]
	}).(GetFirewallAddrgrp6TaggingOutput)
}

type GetFirewallAddrgrp6TaggingTag struct {
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
}

// GetFirewallAddrgrp6TaggingTagInput is an input type that accepts GetFirewallAddrgrp6TaggingTagArgs and GetFirewallAddrgrp6TaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6TaggingTagInput` via:
//
//	GetFirewallAddrgrp6TaggingTagArgs{...}
type GetFirewallAddrgrp6TaggingTagInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6TaggingTagOutput() GetFirewallAddrgrp6TaggingTagOutput
	ToGetFirewallAddrgrp6TaggingTagOutputWithContext(context.Context) GetFirewallAddrgrp6TaggingTagOutput
}

type GetFirewallAddrgrp6TaggingTagArgs struct {
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddrgrp6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (i GetFirewallAddrgrp6TaggingTagArgs) ToGetFirewallAddrgrp6TaggingTagOutput() GetFirewallAddrgrp6TaggingTagOutput {
	return i.ToGetFirewallAddrgrp6TaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6TaggingTagArgs) ToGetFirewallAddrgrp6TaggingTagOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6TaggingTagOutput)
}

// GetFirewallAddrgrp6TaggingTagArrayInput is an input type that accepts GetFirewallAddrgrp6TaggingTagArray and GetFirewallAddrgrp6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrp6TaggingTagArrayInput` via:
//
//	GetFirewallAddrgrp6TaggingTagArray{ GetFirewallAddrgrp6TaggingTagArgs{...} }
type GetFirewallAddrgrp6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrp6TaggingTagArrayOutput() GetFirewallAddrgrp6TaggingTagArrayOutput
	ToGetFirewallAddrgrp6TaggingTagArrayOutputWithContext(context.Context) GetFirewallAddrgrp6TaggingTagArrayOutput
}

type GetFirewallAddrgrp6TaggingTagArray []GetFirewallAddrgrp6TaggingTagInput

func (GetFirewallAddrgrp6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (i GetFirewallAddrgrp6TaggingTagArray) ToGetFirewallAddrgrp6TaggingTagArrayOutput() GetFirewallAddrgrp6TaggingTagArrayOutput {
	return i.ToGetFirewallAddrgrp6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrp6TaggingTagArray) ToGetFirewallAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrp6TaggingTagArrayOutput)
}

type GetFirewallAddrgrp6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (o GetFirewallAddrgrp6TaggingTagOutput) ToGetFirewallAddrgrp6TaggingTagOutput() GetFirewallAddrgrp6TaggingTagOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingTagOutput) ToGetFirewallAddrgrp6TaggingTagOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall addrgrp6.
func (o GetFirewallAddrgrp6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrp6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddrgrp6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrp6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (o GetFirewallAddrgrp6TaggingTagArrayOutput) ToGetFirewallAddrgrp6TaggingTagArrayOutput() GetFirewallAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingTagArrayOutput) ToGetFirewallAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddrgrp6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrp6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrp6TaggingTag {
		return vs[0].([]GetFirewallAddrgrp6TaggingTag)[vs[1].(int)]
	}).(GetFirewallAddrgrp6TaggingTagOutput)
}

type GetFirewallAddrgrpExcludeMember struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetFirewallAddrgrpExcludeMemberInput is an input type that accepts GetFirewallAddrgrpExcludeMemberArgs and GetFirewallAddrgrpExcludeMemberOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpExcludeMemberInput` via:
//
//	GetFirewallAddrgrpExcludeMemberArgs{...}
type GetFirewallAddrgrpExcludeMemberInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpExcludeMemberOutput() GetFirewallAddrgrpExcludeMemberOutput
	ToGetFirewallAddrgrpExcludeMemberOutputWithContext(context.Context) GetFirewallAddrgrpExcludeMemberOutput
}

type GetFirewallAddrgrpExcludeMemberArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddrgrpExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (i GetFirewallAddrgrpExcludeMemberArgs) ToGetFirewallAddrgrpExcludeMemberOutput() GetFirewallAddrgrpExcludeMemberOutput {
	return i.ToGetFirewallAddrgrpExcludeMemberOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpExcludeMemberArgs) ToGetFirewallAddrgrpExcludeMemberOutputWithContext(ctx context.Context) GetFirewallAddrgrpExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpExcludeMemberOutput)
}

// GetFirewallAddrgrpExcludeMemberArrayInput is an input type that accepts GetFirewallAddrgrpExcludeMemberArray and GetFirewallAddrgrpExcludeMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpExcludeMemberArrayInput` via:
//
//	GetFirewallAddrgrpExcludeMemberArray{ GetFirewallAddrgrpExcludeMemberArgs{...} }
type GetFirewallAddrgrpExcludeMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpExcludeMemberArrayOutput() GetFirewallAddrgrpExcludeMemberArrayOutput
	ToGetFirewallAddrgrpExcludeMemberArrayOutputWithContext(context.Context) GetFirewallAddrgrpExcludeMemberArrayOutput
}

type GetFirewallAddrgrpExcludeMemberArray []GetFirewallAddrgrpExcludeMemberInput

func (GetFirewallAddrgrpExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (i GetFirewallAddrgrpExcludeMemberArray) ToGetFirewallAddrgrpExcludeMemberArrayOutput() GetFirewallAddrgrpExcludeMemberArrayOutput {
	return i.ToGetFirewallAddrgrpExcludeMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpExcludeMemberArray) ToGetFirewallAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpExcludeMemberArrayOutput)
}

type GetFirewallAddrgrpExcludeMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (o GetFirewallAddrgrpExcludeMemberOutput) ToGetFirewallAddrgrpExcludeMemberOutput() GetFirewallAddrgrpExcludeMemberOutput {
	return o
}

func (o GetFirewallAddrgrpExcludeMemberOutput) ToGetFirewallAddrgrpExcludeMemberOutputWithContext(ctx context.Context) GetFirewallAddrgrpExcludeMemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetFirewallAddrgrpExcludeMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpExcludeMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddrgrpExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (o GetFirewallAddrgrpExcludeMemberArrayOutput) ToGetFirewallAddrgrpExcludeMemberArrayOutput() GetFirewallAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrpExcludeMemberArrayOutput) ToGetFirewallAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrpExcludeMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrpExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrpExcludeMember {
		return vs[0].([]GetFirewallAddrgrpExcludeMember)[vs[1].(int)]
	}).(GetFirewallAddrgrpExcludeMemberOutput)
}

type GetFirewallAddrgrpMember struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetFirewallAddrgrpMemberInput is an input type that accepts GetFirewallAddrgrpMemberArgs and GetFirewallAddrgrpMemberOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpMemberInput` via:
//
//	GetFirewallAddrgrpMemberArgs{...}
type GetFirewallAddrgrpMemberInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpMemberOutput() GetFirewallAddrgrpMemberOutput
	ToGetFirewallAddrgrpMemberOutputWithContext(context.Context) GetFirewallAddrgrpMemberOutput
}

type GetFirewallAddrgrpMemberArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpMember)(nil)).Elem()
}

func (i GetFirewallAddrgrpMemberArgs) ToGetFirewallAddrgrpMemberOutput() GetFirewallAddrgrpMemberOutput {
	return i.ToGetFirewallAddrgrpMemberOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpMemberArgs) ToGetFirewallAddrgrpMemberOutputWithContext(ctx context.Context) GetFirewallAddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpMemberOutput)
}

// GetFirewallAddrgrpMemberArrayInput is an input type that accepts GetFirewallAddrgrpMemberArray and GetFirewallAddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpMemberArrayInput` via:
//
//	GetFirewallAddrgrpMemberArray{ GetFirewallAddrgrpMemberArgs{...} }
type GetFirewallAddrgrpMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpMemberArrayOutput() GetFirewallAddrgrpMemberArrayOutput
	ToGetFirewallAddrgrpMemberArrayOutputWithContext(context.Context) GetFirewallAddrgrpMemberArrayOutput
}

type GetFirewallAddrgrpMemberArray []GetFirewallAddrgrpMemberInput

func (GetFirewallAddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpMember)(nil)).Elem()
}

func (i GetFirewallAddrgrpMemberArray) ToGetFirewallAddrgrpMemberArrayOutput() GetFirewallAddrgrpMemberArrayOutput {
	return i.ToGetFirewallAddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpMemberArray) ToGetFirewallAddrgrpMemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpMemberArrayOutput)
}

type GetFirewallAddrgrpMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpMember)(nil)).Elem()
}

func (o GetFirewallAddrgrpMemberOutput) ToGetFirewallAddrgrpMemberOutput() GetFirewallAddrgrpMemberOutput {
	return o
}

func (o GetFirewallAddrgrpMemberOutput) ToGetFirewallAddrgrpMemberOutputWithContext(ctx context.Context) GetFirewallAddrgrpMemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetFirewallAddrgrpMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpMember)(nil)).Elem()
}

func (o GetFirewallAddrgrpMemberArrayOutput) ToGetFirewallAddrgrpMemberArrayOutput() GetFirewallAddrgrpMemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrpMemberArrayOutput) ToGetFirewallAddrgrpMemberArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpMemberArrayOutput {
	return o
}

func (o GetFirewallAddrgrpMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrpMember {
		return vs[0].([]GetFirewallAddrgrpMember)[vs[1].(int)]
	}).(GetFirewallAddrgrpMemberOutput)
}

type GetFirewallAddrgrpTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallAddrgrpTaggingTag `pulumi:"tags"`
}

// GetFirewallAddrgrpTaggingInput is an input type that accepts GetFirewallAddrgrpTaggingArgs and GetFirewallAddrgrpTaggingOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpTaggingInput` via:
//
//	GetFirewallAddrgrpTaggingArgs{...}
type GetFirewallAddrgrpTaggingInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpTaggingOutput() GetFirewallAddrgrpTaggingOutput
	ToGetFirewallAddrgrpTaggingOutputWithContext(context.Context) GetFirewallAddrgrpTaggingOutput
}

type GetFirewallAddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallAddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallAddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpTagging)(nil)).Elem()
}

func (i GetFirewallAddrgrpTaggingArgs) ToGetFirewallAddrgrpTaggingOutput() GetFirewallAddrgrpTaggingOutput {
	return i.ToGetFirewallAddrgrpTaggingOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpTaggingArgs) ToGetFirewallAddrgrpTaggingOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpTaggingOutput)
}

// GetFirewallAddrgrpTaggingArrayInput is an input type that accepts GetFirewallAddrgrpTaggingArray and GetFirewallAddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpTaggingArrayInput` via:
//
//	GetFirewallAddrgrpTaggingArray{ GetFirewallAddrgrpTaggingArgs{...} }
type GetFirewallAddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpTaggingArrayOutput() GetFirewallAddrgrpTaggingArrayOutput
	ToGetFirewallAddrgrpTaggingArrayOutputWithContext(context.Context) GetFirewallAddrgrpTaggingArrayOutput
}

type GetFirewallAddrgrpTaggingArray []GetFirewallAddrgrpTaggingInput

func (GetFirewallAddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpTagging)(nil)).Elem()
}

func (i GetFirewallAddrgrpTaggingArray) ToGetFirewallAddrgrpTaggingArrayOutput() GetFirewallAddrgrpTaggingArrayOutput {
	return i.ToGetFirewallAddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpTaggingArray) ToGetFirewallAddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpTaggingArrayOutput)
}

type GetFirewallAddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpTagging)(nil)).Elem()
}

func (o GetFirewallAddrgrpTaggingOutput) ToGetFirewallAddrgrpTaggingOutput() GetFirewallAddrgrpTaggingOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingOutput) ToGetFirewallAddrgrpTaggingOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallAddrgrpTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall addrgrp.
func (o GetFirewallAddrgrpTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallAddrgrpTaggingOutput) Tags() GetFirewallAddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpTagging) []GetFirewallAddrgrpTaggingTag { return v.Tags }).(GetFirewallAddrgrpTaggingTagArrayOutput)
}

type GetFirewallAddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpTagging)(nil)).Elem()
}

func (o GetFirewallAddrgrpTaggingArrayOutput) ToGetFirewallAddrgrpTaggingArrayOutput() GetFirewallAddrgrpTaggingArrayOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingArrayOutput) ToGetFirewallAddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingArrayOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrpTagging {
		return vs[0].([]GetFirewallAddrgrpTagging)[vs[1].(int)]
	}).(GetFirewallAddrgrpTaggingOutput)
}

type GetFirewallAddrgrpTaggingTag struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetFirewallAddrgrpTaggingTagInput is an input type that accepts GetFirewallAddrgrpTaggingTagArgs and GetFirewallAddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpTaggingTagInput` via:
//
//	GetFirewallAddrgrpTaggingTagArgs{...}
type GetFirewallAddrgrpTaggingTagInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpTaggingTagOutput() GetFirewallAddrgrpTaggingTagOutput
	ToGetFirewallAddrgrpTaggingTagOutputWithContext(context.Context) GetFirewallAddrgrpTaggingTagOutput
}

type GetFirewallAddrgrpTaggingTagArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallAddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (i GetFirewallAddrgrpTaggingTagArgs) ToGetFirewallAddrgrpTaggingTagOutput() GetFirewallAddrgrpTaggingTagOutput {
	return i.ToGetFirewallAddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpTaggingTagArgs) ToGetFirewallAddrgrpTaggingTagOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpTaggingTagOutput)
}

// GetFirewallAddrgrpTaggingTagArrayInput is an input type that accepts GetFirewallAddrgrpTaggingTagArray and GetFirewallAddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddrgrpTaggingTagArrayInput` via:
//
//	GetFirewallAddrgrpTaggingTagArray{ GetFirewallAddrgrpTaggingTagArgs{...} }
type GetFirewallAddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallAddrgrpTaggingTagArrayOutput() GetFirewallAddrgrpTaggingTagArrayOutput
	ToGetFirewallAddrgrpTaggingTagArrayOutputWithContext(context.Context) GetFirewallAddrgrpTaggingTagArrayOutput
}

type GetFirewallAddrgrpTaggingTagArray []GetFirewallAddrgrpTaggingTagInput

func (GetFirewallAddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (i GetFirewallAddrgrpTaggingTagArray) ToGetFirewallAddrgrpTaggingTagArrayOutput() GetFirewallAddrgrpTaggingTagArrayOutput {
	return i.ToGetFirewallAddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddrgrpTaggingTagArray) ToGetFirewallAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddrgrpTaggingTagArrayOutput)
}

type GetFirewallAddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (o GetFirewallAddrgrpTaggingTagOutput) ToGetFirewallAddrgrpTaggingTagOutput() GetFirewallAddrgrpTaggingTagOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingTagOutput) ToGetFirewallAddrgrpTaggingTagOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetFirewallAddrgrpTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddrgrpTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallAddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (o GetFirewallAddrgrpTaggingTagArrayOutput) ToGetFirewallAddrgrpTaggingTagArrayOutput() GetFirewallAddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingTagArrayOutput) ToGetFirewallAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallAddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetFirewallAddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallAddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddrgrpTaggingTag {
		return vs[0].([]GetFirewallAddrgrpTaggingTag)[vs[1].(int)]
	}).(GetFirewallAddrgrpTaggingTagOutput)
}

type GetFirewallCentralsnatmapDstAddr6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapDstAddr6Input is an input type that accepts GetFirewallCentralsnatmapDstAddr6Args and GetFirewallCentralsnatmapDstAddr6Output values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstAddr6Input` via:
//
//	GetFirewallCentralsnatmapDstAddr6Args{...}
type GetFirewallCentralsnatmapDstAddr6Input interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstAddr6Output() GetFirewallCentralsnatmapDstAddr6Output
	ToGetFirewallCentralsnatmapDstAddr6OutputWithContext(context.Context) GetFirewallCentralsnatmapDstAddr6Output
}

type GetFirewallCentralsnatmapDstAddr6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapDstAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstAddr6Args) ToGetFirewallCentralsnatmapDstAddr6Output() GetFirewallCentralsnatmapDstAddr6Output {
	return i.ToGetFirewallCentralsnatmapDstAddr6OutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstAddr6Args) ToGetFirewallCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstAddr6Output)
}

// GetFirewallCentralsnatmapDstAddr6ArrayInput is an input type that accepts GetFirewallCentralsnatmapDstAddr6Array and GetFirewallCentralsnatmapDstAddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstAddr6ArrayInput` via:
//
//	GetFirewallCentralsnatmapDstAddr6Array{ GetFirewallCentralsnatmapDstAddr6Args{...} }
type GetFirewallCentralsnatmapDstAddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstAddr6ArrayOutput() GetFirewallCentralsnatmapDstAddr6ArrayOutput
	ToGetFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapDstAddr6ArrayOutput
}

type GetFirewallCentralsnatmapDstAddr6Array []GetFirewallCentralsnatmapDstAddr6Input

func (GetFirewallCentralsnatmapDstAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstAddr6Array) ToGetFirewallCentralsnatmapDstAddr6ArrayOutput() GetFirewallCentralsnatmapDstAddr6ArrayOutput {
	return i.ToGetFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstAddr6Array) ToGetFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstAddr6ArrayOutput)
}

type GetFirewallCentralsnatmapDstAddr6Output struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstAddr6Output) ToGetFirewallCentralsnatmapDstAddr6Output() GetFirewallCentralsnatmapDstAddr6Output {
	return o
}

func (o GetFirewallCentralsnatmapDstAddr6Output) ToGetFirewallCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddr6Output {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapDstAddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapDstAddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapDstAddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstAddr6ArrayOutput) ToGetFirewallCentralsnatmapDstAddr6ArrayOutput() GetFirewallCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstAddr6ArrayOutput) ToGetFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstAddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapDstAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapDstAddr6 {
		return vs[0].([]GetFirewallCentralsnatmapDstAddr6)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapDstAddr6Output)
}

type GetFirewallCentralsnatmapDstAddr struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapDstAddrInput is an input type that accepts GetFirewallCentralsnatmapDstAddrArgs and GetFirewallCentralsnatmapDstAddrOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstAddrInput` via:
//
//	GetFirewallCentralsnatmapDstAddrArgs{...}
type GetFirewallCentralsnatmapDstAddrInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstAddrOutput() GetFirewallCentralsnatmapDstAddrOutput
	ToGetFirewallCentralsnatmapDstAddrOutputWithContext(context.Context) GetFirewallCentralsnatmapDstAddrOutput
}

type GetFirewallCentralsnatmapDstAddrArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapDstAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstAddrArgs) ToGetFirewallCentralsnatmapDstAddrOutput() GetFirewallCentralsnatmapDstAddrOutput {
	return i.ToGetFirewallCentralsnatmapDstAddrOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstAddrArgs) ToGetFirewallCentralsnatmapDstAddrOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstAddrOutput)
}

// GetFirewallCentralsnatmapDstAddrArrayInput is an input type that accepts GetFirewallCentralsnatmapDstAddrArray and GetFirewallCentralsnatmapDstAddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstAddrArrayInput` via:
//
//	GetFirewallCentralsnatmapDstAddrArray{ GetFirewallCentralsnatmapDstAddrArgs{...} }
type GetFirewallCentralsnatmapDstAddrArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstAddrArrayOutput() GetFirewallCentralsnatmapDstAddrArrayOutput
	ToGetFirewallCentralsnatmapDstAddrArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapDstAddrArrayOutput
}

type GetFirewallCentralsnatmapDstAddrArray []GetFirewallCentralsnatmapDstAddrInput

func (GetFirewallCentralsnatmapDstAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstAddrArray) ToGetFirewallCentralsnatmapDstAddrArrayOutput() GetFirewallCentralsnatmapDstAddrArrayOutput {
	return i.ToGetFirewallCentralsnatmapDstAddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstAddrArray) ToGetFirewallCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstAddrArrayOutput)
}

type GetFirewallCentralsnatmapDstAddrOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstAddrOutput) ToGetFirewallCentralsnatmapDstAddrOutput() GetFirewallCentralsnatmapDstAddrOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstAddrOutput) ToGetFirewallCentralsnatmapDstAddrOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddrOutput {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapDstAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapDstAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapDstAddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstAddrArrayOutput) ToGetFirewallCentralsnatmapDstAddrArrayOutput() GetFirewallCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstAddrArrayOutput) ToGetFirewallCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstAddrArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapDstAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapDstAddr {
		return vs[0].([]GetFirewallCentralsnatmapDstAddr)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapDstAddrOutput)
}

type GetFirewallCentralsnatmapDstintf struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapDstintfInput is an input type that accepts GetFirewallCentralsnatmapDstintfArgs and GetFirewallCentralsnatmapDstintfOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstintfInput` via:
//
//	GetFirewallCentralsnatmapDstintfArgs{...}
type GetFirewallCentralsnatmapDstintfInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstintfOutput() GetFirewallCentralsnatmapDstintfOutput
	ToGetFirewallCentralsnatmapDstintfOutputWithContext(context.Context) GetFirewallCentralsnatmapDstintfOutput
}

type GetFirewallCentralsnatmapDstintfArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstintfArgs) ToGetFirewallCentralsnatmapDstintfOutput() GetFirewallCentralsnatmapDstintfOutput {
	return i.ToGetFirewallCentralsnatmapDstintfOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstintfArgs) ToGetFirewallCentralsnatmapDstintfOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstintfOutput)
}

// GetFirewallCentralsnatmapDstintfArrayInput is an input type that accepts GetFirewallCentralsnatmapDstintfArray and GetFirewallCentralsnatmapDstintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapDstintfArrayInput` via:
//
//	GetFirewallCentralsnatmapDstintfArray{ GetFirewallCentralsnatmapDstintfArgs{...} }
type GetFirewallCentralsnatmapDstintfArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapDstintfArrayOutput() GetFirewallCentralsnatmapDstintfArrayOutput
	ToGetFirewallCentralsnatmapDstintfArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapDstintfArrayOutput
}

type GetFirewallCentralsnatmapDstintfArray []GetFirewallCentralsnatmapDstintfInput

func (GetFirewallCentralsnatmapDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapDstintfArray) ToGetFirewallCentralsnatmapDstintfArrayOutput() GetFirewallCentralsnatmapDstintfArrayOutput {
	return i.ToGetFirewallCentralsnatmapDstintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapDstintfArray) ToGetFirewallCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapDstintfArrayOutput)
}

type GetFirewallCentralsnatmapDstintfOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstintfOutput) ToGetFirewallCentralsnatmapDstintfOutput() GetFirewallCentralsnatmapDstintfOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstintfOutput) ToGetFirewallCentralsnatmapDstintfOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstintfOutput {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapDstintfArrayOutput) ToGetFirewallCentralsnatmapDstintfArrayOutput() GetFirewallCentralsnatmapDstintfArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstintfArrayOutput) ToGetFirewallCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapDstintfArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapDstintfArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapDstintf {
		return vs[0].([]GetFirewallCentralsnatmapDstintf)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapDstintfOutput)
}

type GetFirewallCentralsnatmapNatIppool6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapNatIppool6Input is an input type that accepts GetFirewallCentralsnatmapNatIppool6Args and GetFirewallCentralsnatmapNatIppool6Output values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapNatIppool6Input` via:
//
//	GetFirewallCentralsnatmapNatIppool6Args{...}
type GetFirewallCentralsnatmapNatIppool6Input interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapNatIppool6Output() GetFirewallCentralsnatmapNatIppool6Output
	ToGetFirewallCentralsnatmapNatIppool6OutputWithContext(context.Context) GetFirewallCentralsnatmapNatIppool6Output
}

type GetFirewallCentralsnatmapNatIppool6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapNatIppool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapNatIppool6Args) ToGetFirewallCentralsnatmapNatIppool6Output() GetFirewallCentralsnatmapNatIppool6Output {
	return i.ToGetFirewallCentralsnatmapNatIppool6OutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapNatIppool6Args) ToGetFirewallCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapNatIppool6Output)
}

// GetFirewallCentralsnatmapNatIppool6ArrayInput is an input type that accepts GetFirewallCentralsnatmapNatIppool6Array and GetFirewallCentralsnatmapNatIppool6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapNatIppool6ArrayInput` via:
//
//	GetFirewallCentralsnatmapNatIppool6Array{ GetFirewallCentralsnatmapNatIppool6Args{...} }
type GetFirewallCentralsnatmapNatIppool6ArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapNatIppool6ArrayOutput() GetFirewallCentralsnatmapNatIppool6ArrayOutput
	ToGetFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapNatIppool6ArrayOutput
}

type GetFirewallCentralsnatmapNatIppool6Array []GetFirewallCentralsnatmapNatIppool6Input

func (GetFirewallCentralsnatmapNatIppool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapNatIppool6Array) ToGetFirewallCentralsnatmapNatIppool6ArrayOutput() GetFirewallCentralsnatmapNatIppool6ArrayOutput {
	return i.ToGetFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapNatIppool6Array) ToGetFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapNatIppool6ArrayOutput)
}

type GetFirewallCentralsnatmapNatIppool6Output struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapNatIppool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapNatIppool6Output) ToGetFirewallCentralsnatmapNatIppool6Output() GetFirewallCentralsnatmapNatIppool6Output {
	return o
}

func (o GetFirewallCentralsnatmapNatIppool6Output) ToGetFirewallCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppool6Output {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapNatIppool6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapNatIppool6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapNatIppool6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapNatIppool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapNatIppool6ArrayOutput) ToGetFirewallCentralsnatmapNatIppool6ArrayOutput() GetFirewallCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapNatIppool6ArrayOutput) ToGetFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapNatIppool6ArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapNatIppool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapNatIppool6 {
		return vs[0].([]GetFirewallCentralsnatmapNatIppool6)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapNatIppool6Output)
}

type GetFirewallCentralsnatmapNatIppool struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapNatIppoolInput is an input type that accepts GetFirewallCentralsnatmapNatIppoolArgs and GetFirewallCentralsnatmapNatIppoolOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapNatIppoolInput` via:
//
//	GetFirewallCentralsnatmapNatIppoolArgs{...}
type GetFirewallCentralsnatmapNatIppoolInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapNatIppoolOutput() GetFirewallCentralsnatmapNatIppoolOutput
	ToGetFirewallCentralsnatmapNatIppoolOutputWithContext(context.Context) GetFirewallCentralsnatmapNatIppoolOutput
}

type GetFirewallCentralsnatmapNatIppoolArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapNatIppoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapNatIppoolArgs) ToGetFirewallCentralsnatmapNatIppoolOutput() GetFirewallCentralsnatmapNatIppoolOutput {
	return i.ToGetFirewallCentralsnatmapNatIppoolOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapNatIppoolArgs) ToGetFirewallCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapNatIppoolOutput)
}

// GetFirewallCentralsnatmapNatIppoolArrayInput is an input type that accepts GetFirewallCentralsnatmapNatIppoolArray and GetFirewallCentralsnatmapNatIppoolArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapNatIppoolArrayInput` via:
//
//	GetFirewallCentralsnatmapNatIppoolArray{ GetFirewallCentralsnatmapNatIppoolArgs{...} }
type GetFirewallCentralsnatmapNatIppoolArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapNatIppoolArrayOutput() GetFirewallCentralsnatmapNatIppoolArrayOutput
	ToGetFirewallCentralsnatmapNatIppoolArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapNatIppoolArrayOutput
}

type GetFirewallCentralsnatmapNatIppoolArray []GetFirewallCentralsnatmapNatIppoolInput

func (GetFirewallCentralsnatmapNatIppoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapNatIppoolArray) ToGetFirewallCentralsnatmapNatIppoolArrayOutput() GetFirewallCentralsnatmapNatIppoolArrayOutput {
	return i.ToGetFirewallCentralsnatmapNatIppoolArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapNatIppoolArray) ToGetFirewallCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapNatIppoolArrayOutput)
}

type GetFirewallCentralsnatmapNatIppoolOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapNatIppoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapNatIppoolOutput) ToGetFirewallCentralsnatmapNatIppoolOutput() GetFirewallCentralsnatmapNatIppoolOutput {
	return o
}

func (o GetFirewallCentralsnatmapNatIppoolOutput) ToGetFirewallCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppoolOutput {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapNatIppoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapNatIppool) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapNatIppoolArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapNatIppoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapNatIppoolArrayOutput) ToGetFirewallCentralsnatmapNatIppoolArrayOutput() GetFirewallCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapNatIppoolArrayOutput) ToGetFirewallCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapNatIppoolArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapNatIppoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapNatIppool {
		return vs[0].([]GetFirewallCentralsnatmapNatIppool)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapNatIppoolOutput)
}

type GetFirewallCentralsnatmapOrigAddr6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapOrigAddr6Input is an input type that accepts GetFirewallCentralsnatmapOrigAddr6Args and GetFirewallCentralsnatmapOrigAddr6Output values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapOrigAddr6Input` via:
//
//	GetFirewallCentralsnatmapOrigAddr6Args{...}
type GetFirewallCentralsnatmapOrigAddr6Input interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapOrigAddr6Output() GetFirewallCentralsnatmapOrigAddr6Output
	ToGetFirewallCentralsnatmapOrigAddr6OutputWithContext(context.Context) GetFirewallCentralsnatmapOrigAddr6Output
}

type GetFirewallCentralsnatmapOrigAddr6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapOrigAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapOrigAddr6Args) ToGetFirewallCentralsnatmapOrigAddr6Output() GetFirewallCentralsnatmapOrigAddr6Output {
	return i.ToGetFirewallCentralsnatmapOrigAddr6OutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapOrigAddr6Args) ToGetFirewallCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapOrigAddr6Output)
}

// GetFirewallCentralsnatmapOrigAddr6ArrayInput is an input type that accepts GetFirewallCentralsnatmapOrigAddr6Array and GetFirewallCentralsnatmapOrigAddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapOrigAddr6ArrayInput` via:
//
//	GetFirewallCentralsnatmapOrigAddr6Array{ GetFirewallCentralsnatmapOrigAddr6Args{...} }
type GetFirewallCentralsnatmapOrigAddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapOrigAddr6ArrayOutput() GetFirewallCentralsnatmapOrigAddr6ArrayOutput
	ToGetFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapOrigAddr6ArrayOutput
}

type GetFirewallCentralsnatmapOrigAddr6Array []GetFirewallCentralsnatmapOrigAddr6Input

func (GetFirewallCentralsnatmapOrigAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapOrigAddr6Array) ToGetFirewallCentralsnatmapOrigAddr6ArrayOutput() GetFirewallCentralsnatmapOrigAddr6ArrayOutput {
	return i.ToGetFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapOrigAddr6Array) ToGetFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapOrigAddr6ArrayOutput)
}

type GetFirewallCentralsnatmapOrigAddr6Output struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapOrigAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapOrigAddr6Output) ToGetFirewallCentralsnatmapOrigAddr6Output() GetFirewallCentralsnatmapOrigAddr6Output {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddr6Output) ToGetFirewallCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddr6Output {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapOrigAddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapOrigAddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapOrigAddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapOrigAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapOrigAddr6ArrayOutput) ToGetFirewallCentralsnatmapOrigAddr6ArrayOutput() GetFirewallCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddr6ArrayOutput) ToGetFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapOrigAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapOrigAddr6 {
		return vs[0].([]GetFirewallCentralsnatmapOrigAddr6)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapOrigAddr6Output)
}

type GetFirewallCentralsnatmapOrigAddr struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapOrigAddrInput is an input type that accepts GetFirewallCentralsnatmapOrigAddrArgs and GetFirewallCentralsnatmapOrigAddrOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapOrigAddrInput` via:
//
//	GetFirewallCentralsnatmapOrigAddrArgs{...}
type GetFirewallCentralsnatmapOrigAddrInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapOrigAddrOutput() GetFirewallCentralsnatmapOrigAddrOutput
	ToGetFirewallCentralsnatmapOrigAddrOutputWithContext(context.Context) GetFirewallCentralsnatmapOrigAddrOutput
}

type GetFirewallCentralsnatmapOrigAddrArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapOrigAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapOrigAddrArgs) ToGetFirewallCentralsnatmapOrigAddrOutput() GetFirewallCentralsnatmapOrigAddrOutput {
	return i.ToGetFirewallCentralsnatmapOrigAddrOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapOrigAddrArgs) ToGetFirewallCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapOrigAddrOutput)
}

// GetFirewallCentralsnatmapOrigAddrArrayInput is an input type that accepts GetFirewallCentralsnatmapOrigAddrArray and GetFirewallCentralsnatmapOrigAddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapOrigAddrArrayInput` via:
//
//	GetFirewallCentralsnatmapOrigAddrArray{ GetFirewallCentralsnatmapOrigAddrArgs{...} }
type GetFirewallCentralsnatmapOrigAddrArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapOrigAddrArrayOutput() GetFirewallCentralsnatmapOrigAddrArrayOutput
	ToGetFirewallCentralsnatmapOrigAddrArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapOrigAddrArrayOutput
}

type GetFirewallCentralsnatmapOrigAddrArray []GetFirewallCentralsnatmapOrigAddrInput

func (GetFirewallCentralsnatmapOrigAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapOrigAddrArray) ToGetFirewallCentralsnatmapOrigAddrArrayOutput() GetFirewallCentralsnatmapOrigAddrArrayOutput {
	return i.ToGetFirewallCentralsnatmapOrigAddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapOrigAddrArray) ToGetFirewallCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapOrigAddrArrayOutput)
}

type GetFirewallCentralsnatmapOrigAddrOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapOrigAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapOrigAddrOutput) ToGetFirewallCentralsnatmapOrigAddrOutput() GetFirewallCentralsnatmapOrigAddrOutput {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddrOutput) ToGetFirewallCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddrOutput {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapOrigAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapOrigAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapOrigAddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapOrigAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapOrigAddrArrayOutput) ToGetFirewallCentralsnatmapOrigAddrArrayOutput() GetFirewallCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddrArrayOutput) ToGetFirewallCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapOrigAddrArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapOrigAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapOrigAddr {
		return vs[0].([]GetFirewallCentralsnatmapOrigAddr)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapOrigAddrOutput)
}

type GetFirewallCentralsnatmapSrcintf struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetFirewallCentralsnatmapSrcintfInput is an input type that accepts GetFirewallCentralsnatmapSrcintfArgs and GetFirewallCentralsnatmapSrcintfOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapSrcintfInput` via:
//
//	GetFirewallCentralsnatmapSrcintfArgs{...}
type GetFirewallCentralsnatmapSrcintfInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapSrcintfOutput() GetFirewallCentralsnatmapSrcintfOutput
	ToGetFirewallCentralsnatmapSrcintfOutputWithContext(context.Context) GetFirewallCentralsnatmapSrcintfOutput
}

type GetFirewallCentralsnatmapSrcintfArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallCentralsnatmapSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapSrcintfArgs) ToGetFirewallCentralsnatmapSrcintfOutput() GetFirewallCentralsnatmapSrcintfOutput {
	return i.ToGetFirewallCentralsnatmapSrcintfOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapSrcintfArgs) ToGetFirewallCentralsnatmapSrcintfOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapSrcintfOutput)
}

// GetFirewallCentralsnatmapSrcintfArrayInput is an input type that accepts GetFirewallCentralsnatmapSrcintfArray and GetFirewallCentralsnatmapSrcintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallCentralsnatmapSrcintfArrayInput` via:
//
//	GetFirewallCentralsnatmapSrcintfArray{ GetFirewallCentralsnatmapSrcintfArgs{...} }
type GetFirewallCentralsnatmapSrcintfArrayInput interface {
	pulumi.Input

	ToGetFirewallCentralsnatmapSrcintfArrayOutput() GetFirewallCentralsnatmapSrcintfArrayOutput
	ToGetFirewallCentralsnatmapSrcintfArrayOutputWithContext(context.Context) GetFirewallCentralsnatmapSrcintfArrayOutput
}

type GetFirewallCentralsnatmapSrcintfArray []GetFirewallCentralsnatmapSrcintfInput

func (GetFirewallCentralsnatmapSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (i GetFirewallCentralsnatmapSrcintfArray) ToGetFirewallCentralsnatmapSrcintfArrayOutput() GetFirewallCentralsnatmapSrcintfArrayOutput {
	return i.ToGetFirewallCentralsnatmapSrcintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallCentralsnatmapSrcintfArray) ToGetFirewallCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallCentralsnatmapSrcintfArrayOutput)
}

type GetFirewallCentralsnatmapSrcintfOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapSrcintfOutput) ToGetFirewallCentralsnatmapSrcintfOutput() GetFirewallCentralsnatmapSrcintfOutput {
	return o
}

func (o GetFirewallCentralsnatmapSrcintfOutput) ToGetFirewallCentralsnatmapSrcintfOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapSrcintfOutput {
	return o
}

// IPv6 pool name.
func (o GetFirewallCentralsnatmapSrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallCentralsnatmapSrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallCentralsnatmapSrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallCentralsnatmapSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (o GetFirewallCentralsnatmapSrcintfArrayOutput) ToGetFirewallCentralsnatmapSrcintfArrayOutput() GetFirewallCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapSrcintfArrayOutput) ToGetFirewallCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) GetFirewallCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o GetFirewallCentralsnatmapSrcintfArrayOutput) Index(i pulumi.IntInput) GetFirewallCentralsnatmapSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallCentralsnatmapSrcintf {
		return vs[0].([]GetFirewallCentralsnatmapSrcintf)[vs[1].(int)]
	}).(GetFirewallCentralsnatmapSrcintfOutput)
}

type GetFirewallDoSpolicy6Anomaly struct {
	// Action taken when the threshold is reached.
	Action string `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log string `pulumi:"log"`
	// Anomaly name.
	Name string `pulumi:"name"`
	// Quarantine method.
	Quarantine string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault int `pulumi:"thresholddefault"`
}

// GetFirewallDoSpolicy6AnomalyInput is an input type that accepts GetFirewallDoSpolicy6AnomalyArgs and GetFirewallDoSpolicy6AnomalyOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6AnomalyInput` via:
//
//	GetFirewallDoSpolicy6AnomalyArgs{...}
type GetFirewallDoSpolicy6AnomalyInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6AnomalyOutput() GetFirewallDoSpolicy6AnomalyOutput
	ToGetFirewallDoSpolicy6AnomalyOutputWithContext(context.Context) GetFirewallDoSpolicy6AnomalyOutput
}

type GetFirewallDoSpolicy6AnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log pulumi.StringInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
	// Quarantine method.
	Quarantine pulumi.StringInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog pulumi.StringInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status pulumi.StringInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntInput `pulumi:"thresholddefault"`
}

func (GetFirewallDoSpolicy6AnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6AnomalyArgs) ToGetFirewallDoSpolicy6AnomalyOutput() GetFirewallDoSpolicy6AnomalyOutput {
	return i.ToGetFirewallDoSpolicy6AnomalyOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6AnomalyArgs) ToGetFirewallDoSpolicy6AnomalyOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6AnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6AnomalyOutput)
}

// GetFirewallDoSpolicy6AnomalyArrayInput is an input type that accepts GetFirewallDoSpolicy6AnomalyArray and GetFirewallDoSpolicy6AnomalyArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6AnomalyArrayInput` via:
//
//	GetFirewallDoSpolicy6AnomalyArray{ GetFirewallDoSpolicy6AnomalyArgs{...} }
type GetFirewallDoSpolicy6AnomalyArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6AnomalyArrayOutput() GetFirewallDoSpolicy6AnomalyArrayOutput
	ToGetFirewallDoSpolicy6AnomalyArrayOutputWithContext(context.Context) GetFirewallDoSpolicy6AnomalyArrayOutput
}

type GetFirewallDoSpolicy6AnomalyArray []GetFirewallDoSpolicy6AnomalyInput

func (GetFirewallDoSpolicy6AnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6AnomalyArray) ToGetFirewallDoSpolicy6AnomalyArrayOutput() GetFirewallDoSpolicy6AnomalyArrayOutput {
	return i.ToGetFirewallDoSpolicy6AnomalyArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6AnomalyArray) ToGetFirewallDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6AnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6AnomalyArrayOutput)
}

type GetFirewallDoSpolicy6AnomalyOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6AnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6AnomalyOutput) ToGetFirewallDoSpolicy6AnomalyOutput() GetFirewallDoSpolicy6AnomalyOutput {
	return o
}

func (o GetFirewallDoSpolicy6AnomalyOutput) ToGetFirewallDoSpolicy6AnomalyOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6AnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o GetFirewallDoSpolicy6AnomalyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable anomaly logging.
func (o GetFirewallDoSpolicy6AnomalyOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.Log }).(pulumi.StringOutput)
}

// Anomaly name.
func (o GetFirewallDoSpolicy6AnomalyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.Name }).(pulumi.StringOutput)
}

// Quarantine method.
func (o GetFirewallDoSpolicy6AnomalyOutput) Quarantine() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.Quarantine }).(pulumi.StringOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o GetFirewallDoSpolicy6AnomalyOutput) QuarantineExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.QuarantineExpiry }).(pulumi.StringOutput)
}

// Enable/disable quarantine logging.
func (o GetFirewallDoSpolicy6AnomalyOutput) QuarantineLog() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.QuarantineLog }).(pulumi.StringOutput)
}

// Enable/disable this anomaly.
func (o GetFirewallDoSpolicy6AnomalyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) string { return v.Status }).(pulumi.StringOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o GetFirewallDoSpolicy6AnomalyOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) int { return v.Threshold }).(pulumi.IntOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o GetFirewallDoSpolicy6AnomalyOutput) Thresholddefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Anomaly) int { return v.Thresholddefault }).(pulumi.IntOutput)
}

type GetFirewallDoSpolicy6AnomalyArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6AnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6AnomalyArrayOutput) ToGetFirewallDoSpolicy6AnomalyArrayOutput() GetFirewallDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6AnomalyArrayOutput) ToGetFirewallDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6AnomalyArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicy6AnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicy6Anomaly {
		return vs[0].([]GetFirewallDoSpolicy6Anomaly)[vs[1].(int)]
	}).(GetFirewallDoSpolicy6AnomalyOutput)
}

type GetFirewallDoSpolicy6Dstaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicy6DstaddrInput is an input type that accepts GetFirewallDoSpolicy6DstaddrArgs and GetFirewallDoSpolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6DstaddrInput` via:
//
//	GetFirewallDoSpolicy6DstaddrArgs{...}
type GetFirewallDoSpolicy6DstaddrInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6DstaddrOutput() GetFirewallDoSpolicy6DstaddrOutput
	ToGetFirewallDoSpolicy6DstaddrOutputWithContext(context.Context) GetFirewallDoSpolicy6DstaddrOutput
}

type GetFirewallDoSpolicy6DstaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6DstaddrArgs) ToGetFirewallDoSpolicy6DstaddrOutput() GetFirewallDoSpolicy6DstaddrOutput {
	return i.ToGetFirewallDoSpolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6DstaddrArgs) ToGetFirewallDoSpolicy6DstaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6DstaddrOutput)
}

// GetFirewallDoSpolicy6DstaddrArrayInput is an input type that accepts GetFirewallDoSpolicy6DstaddrArray and GetFirewallDoSpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6DstaddrArrayInput` via:
//
//	GetFirewallDoSpolicy6DstaddrArray{ GetFirewallDoSpolicy6DstaddrArgs{...} }
type GetFirewallDoSpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6DstaddrArrayOutput() GetFirewallDoSpolicy6DstaddrArrayOutput
	ToGetFirewallDoSpolicy6DstaddrArrayOutputWithContext(context.Context) GetFirewallDoSpolicy6DstaddrArrayOutput
}

type GetFirewallDoSpolicy6DstaddrArray []GetFirewallDoSpolicy6DstaddrInput

func (GetFirewallDoSpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6DstaddrArray) ToGetFirewallDoSpolicy6DstaddrArrayOutput() GetFirewallDoSpolicy6DstaddrArrayOutput {
	return i.ToGetFirewallDoSpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6DstaddrArray) ToGetFirewallDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6DstaddrArrayOutput)
}

type GetFirewallDoSpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6DstaddrOutput) ToGetFirewallDoSpolicy6DstaddrOutput() GetFirewallDoSpolicy6DstaddrOutput {
	return o
}

func (o GetFirewallDoSpolicy6DstaddrOutput) ToGetFirewallDoSpolicy6DstaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6DstaddrOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6DstaddrArrayOutput) ToGetFirewallDoSpolicy6DstaddrArrayOutput() GetFirewallDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6DstaddrArrayOutput) ToGetFirewallDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicy6Dstaddr {
		return vs[0].([]GetFirewallDoSpolicy6Dstaddr)[vs[1].(int)]
	}).(GetFirewallDoSpolicy6DstaddrOutput)
}

type GetFirewallDoSpolicy6Service struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicy6ServiceInput is an input type that accepts GetFirewallDoSpolicy6ServiceArgs and GetFirewallDoSpolicy6ServiceOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6ServiceInput` via:
//
//	GetFirewallDoSpolicy6ServiceArgs{...}
type GetFirewallDoSpolicy6ServiceInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6ServiceOutput() GetFirewallDoSpolicy6ServiceOutput
	ToGetFirewallDoSpolicy6ServiceOutputWithContext(context.Context) GetFirewallDoSpolicy6ServiceOutput
}

type GetFirewallDoSpolicy6ServiceArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Service)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6ServiceArgs) ToGetFirewallDoSpolicy6ServiceOutput() GetFirewallDoSpolicy6ServiceOutput {
	return i.ToGetFirewallDoSpolicy6ServiceOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6ServiceArgs) ToGetFirewallDoSpolicy6ServiceOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6ServiceOutput)
}

// GetFirewallDoSpolicy6ServiceArrayInput is an input type that accepts GetFirewallDoSpolicy6ServiceArray and GetFirewallDoSpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6ServiceArrayInput` via:
//
//	GetFirewallDoSpolicy6ServiceArray{ GetFirewallDoSpolicy6ServiceArgs{...} }
type GetFirewallDoSpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6ServiceArrayOutput() GetFirewallDoSpolicy6ServiceArrayOutput
	ToGetFirewallDoSpolicy6ServiceArrayOutputWithContext(context.Context) GetFirewallDoSpolicy6ServiceArrayOutput
}

type GetFirewallDoSpolicy6ServiceArray []GetFirewallDoSpolicy6ServiceInput

func (GetFirewallDoSpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Service)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6ServiceArray) ToGetFirewallDoSpolicy6ServiceArrayOutput() GetFirewallDoSpolicy6ServiceArrayOutput {
	return i.ToGetFirewallDoSpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6ServiceArray) ToGetFirewallDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6ServiceArrayOutput)
}

type GetFirewallDoSpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Service)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6ServiceOutput) ToGetFirewallDoSpolicy6ServiceOutput() GetFirewallDoSpolicy6ServiceOutput {
	return o
}

func (o GetFirewallDoSpolicy6ServiceOutput) ToGetFirewallDoSpolicy6ServiceOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6ServiceOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicy6ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Service)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6ServiceArrayOutput) ToGetFirewallDoSpolicy6ServiceArrayOutput() GetFirewallDoSpolicy6ServiceArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6ServiceArrayOutput) ToGetFirewallDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6ServiceArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicy6Service {
		return vs[0].([]GetFirewallDoSpolicy6Service)[vs[1].(int)]
	}).(GetFirewallDoSpolicy6ServiceOutput)
}

type GetFirewallDoSpolicy6Srcaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicy6SrcaddrInput is an input type that accepts GetFirewallDoSpolicy6SrcaddrArgs and GetFirewallDoSpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6SrcaddrInput` via:
//
//	GetFirewallDoSpolicy6SrcaddrArgs{...}
type GetFirewallDoSpolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6SrcaddrOutput() GetFirewallDoSpolicy6SrcaddrOutput
	ToGetFirewallDoSpolicy6SrcaddrOutputWithContext(context.Context) GetFirewallDoSpolicy6SrcaddrOutput
}

type GetFirewallDoSpolicy6SrcaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6SrcaddrArgs) ToGetFirewallDoSpolicy6SrcaddrOutput() GetFirewallDoSpolicy6SrcaddrOutput {
	return i.ToGetFirewallDoSpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6SrcaddrArgs) ToGetFirewallDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6SrcaddrOutput)
}

// GetFirewallDoSpolicy6SrcaddrArrayInput is an input type that accepts GetFirewallDoSpolicy6SrcaddrArray and GetFirewallDoSpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicy6SrcaddrArrayInput` via:
//
//	GetFirewallDoSpolicy6SrcaddrArray{ GetFirewallDoSpolicy6SrcaddrArgs{...} }
type GetFirewallDoSpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicy6SrcaddrArrayOutput() GetFirewallDoSpolicy6SrcaddrArrayOutput
	ToGetFirewallDoSpolicy6SrcaddrArrayOutputWithContext(context.Context) GetFirewallDoSpolicy6SrcaddrArrayOutput
}

type GetFirewallDoSpolicy6SrcaddrArray []GetFirewallDoSpolicy6SrcaddrInput

func (GetFirewallDoSpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicy6SrcaddrArray) ToGetFirewallDoSpolicy6SrcaddrArrayOutput() GetFirewallDoSpolicy6SrcaddrArrayOutput {
	return i.ToGetFirewallDoSpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicy6SrcaddrArray) ToGetFirewallDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicy6SrcaddrArrayOutput)
}

type GetFirewallDoSpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6SrcaddrOutput) ToGetFirewallDoSpolicy6SrcaddrOutput() GetFirewallDoSpolicy6SrcaddrOutput {
	return o
}

func (o GetFirewallDoSpolicy6SrcaddrOutput) ToGetFirewallDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6SrcaddrOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicy6SrcaddrArrayOutput) ToGetFirewallDoSpolicy6SrcaddrArrayOutput() GetFirewallDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6SrcaddrArrayOutput) ToGetFirewallDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicy6Srcaddr {
		return vs[0].([]GetFirewallDoSpolicy6Srcaddr)[vs[1].(int)]
	}).(GetFirewallDoSpolicy6SrcaddrOutput)
}

type GetFirewallDoSpolicyAnomaly struct {
	// Action taken when the threshold is reached.
	Action string `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log string `pulumi:"log"`
	// Anomaly name.
	Name string `pulumi:"name"`
	// Quarantine method.
	Quarantine string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault int `pulumi:"thresholddefault"`
}

// GetFirewallDoSpolicyAnomalyInput is an input type that accepts GetFirewallDoSpolicyAnomalyArgs and GetFirewallDoSpolicyAnomalyOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyAnomalyInput` via:
//
//	GetFirewallDoSpolicyAnomalyArgs{...}
type GetFirewallDoSpolicyAnomalyInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyAnomalyOutput() GetFirewallDoSpolicyAnomalyOutput
	ToGetFirewallDoSpolicyAnomalyOutputWithContext(context.Context) GetFirewallDoSpolicyAnomalyOutput
}

type GetFirewallDoSpolicyAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log pulumi.StringInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
	// Quarantine method.
	Quarantine pulumi.StringInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog pulumi.StringInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status pulumi.StringInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntInput `pulumi:"thresholddefault"`
}

func (GetFirewallDoSpolicyAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (i GetFirewallDoSpolicyAnomalyArgs) ToGetFirewallDoSpolicyAnomalyOutput() GetFirewallDoSpolicyAnomalyOutput {
	return i.ToGetFirewallDoSpolicyAnomalyOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyAnomalyArgs) ToGetFirewallDoSpolicyAnomalyOutputWithContext(ctx context.Context) GetFirewallDoSpolicyAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyAnomalyOutput)
}

// GetFirewallDoSpolicyAnomalyArrayInput is an input type that accepts GetFirewallDoSpolicyAnomalyArray and GetFirewallDoSpolicyAnomalyArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyAnomalyArrayInput` via:
//
//	GetFirewallDoSpolicyAnomalyArray{ GetFirewallDoSpolicyAnomalyArgs{...} }
type GetFirewallDoSpolicyAnomalyArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyAnomalyArrayOutput() GetFirewallDoSpolicyAnomalyArrayOutput
	ToGetFirewallDoSpolicyAnomalyArrayOutputWithContext(context.Context) GetFirewallDoSpolicyAnomalyArrayOutput
}

type GetFirewallDoSpolicyAnomalyArray []GetFirewallDoSpolicyAnomalyInput

func (GetFirewallDoSpolicyAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (i GetFirewallDoSpolicyAnomalyArray) ToGetFirewallDoSpolicyAnomalyArrayOutput() GetFirewallDoSpolicyAnomalyArrayOutput {
	return i.ToGetFirewallDoSpolicyAnomalyArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyAnomalyArray) ToGetFirewallDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyAnomalyArrayOutput)
}

type GetFirewallDoSpolicyAnomalyOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (o GetFirewallDoSpolicyAnomalyOutput) ToGetFirewallDoSpolicyAnomalyOutput() GetFirewallDoSpolicyAnomalyOutput {
	return o
}

func (o GetFirewallDoSpolicyAnomalyOutput) ToGetFirewallDoSpolicyAnomalyOutputWithContext(ctx context.Context) GetFirewallDoSpolicyAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o GetFirewallDoSpolicyAnomalyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable anomaly logging.
func (o GetFirewallDoSpolicyAnomalyOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.Log }).(pulumi.StringOutput)
}

// Anomaly name.
func (o GetFirewallDoSpolicyAnomalyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.Name }).(pulumi.StringOutput)
}

// Quarantine method.
func (o GetFirewallDoSpolicyAnomalyOutput) Quarantine() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.Quarantine }).(pulumi.StringOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o GetFirewallDoSpolicyAnomalyOutput) QuarantineExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.QuarantineExpiry }).(pulumi.StringOutput)
}

// Enable/disable quarantine logging.
func (o GetFirewallDoSpolicyAnomalyOutput) QuarantineLog() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.QuarantineLog }).(pulumi.StringOutput)
}

// Enable/disable this anomaly.
func (o GetFirewallDoSpolicyAnomalyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) string { return v.Status }).(pulumi.StringOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o GetFirewallDoSpolicyAnomalyOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) int { return v.Threshold }).(pulumi.IntOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o GetFirewallDoSpolicyAnomalyOutput) Thresholddefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyAnomaly) int { return v.Thresholddefault }).(pulumi.IntOutput)
}

type GetFirewallDoSpolicyAnomalyArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (o GetFirewallDoSpolicyAnomalyArrayOutput) ToGetFirewallDoSpolicyAnomalyArrayOutput() GetFirewallDoSpolicyAnomalyArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyAnomalyArrayOutput) ToGetFirewallDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyAnomalyArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyAnomalyArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicyAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicyAnomaly {
		return vs[0].([]GetFirewallDoSpolicyAnomaly)[vs[1].(int)]
	}).(GetFirewallDoSpolicyAnomalyOutput)
}

type GetFirewallDoSpolicyDstaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicyDstaddrInput is an input type that accepts GetFirewallDoSpolicyDstaddrArgs and GetFirewallDoSpolicyDstaddrOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyDstaddrInput` via:
//
//	GetFirewallDoSpolicyDstaddrArgs{...}
type GetFirewallDoSpolicyDstaddrInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyDstaddrOutput() GetFirewallDoSpolicyDstaddrOutput
	ToGetFirewallDoSpolicyDstaddrOutputWithContext(context.Context) GetFirewallDoSpolicyDstaddrOutput
}

type GetFirewallDoSpolicyDstaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicyDstaddrArgs) ToGetFirewallDoSpolicyDstaddrOutput() GetFirewallDoSpolicyDstaddrOutput {
	return i.ToGetFirewallDoSpolicyDstaddrOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyDstaddrArgs) ToGetFirewallDoSpolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyDstaddrOutput)
}

// GetFirewallDoSpolicyDstaddrArrayInput is an input type that accepts GetFirewallDoSpolicyDstaddrArray and GetFirewallDoSpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyDstaddrArrayInput` via:
//
//	GetFirewallDoSpolicyDstaddrArray{ GetFirewallDoSpolicyDstaddrArgs{...} }
type GetFirewallDoSpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyDstaddrArrayOutput() GetFirewallDoSpolicyDstaddrArrayOutput
	ToGetFirewallDoSpolicyDstaddrArrayOutputWithContext(context.Context) GetFirewallDoSpolicyDstaddrArrayOutput
}

type GetFirewallDoSpolicyDstaddrArray []GetFirewallDoSpolicyDstaddrInput

func (GetFirewallDoSpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicyDstaddrArray) ToGetFirewallDoSpolicyDstaddrArrayOutput() GetFirewallDoSpolicyDstaddrArrayOutput {
	return i.ToGetFirewallDoSpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyDstaddrArray) ToGetFirewallDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyDstaddrArrayOutput)
}

type GetFirewallDoSpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicyDstaddrOutput) ToGetFirewallDoSpolicyDstaddrOutput() GetFirewallDoSpolicyDstaddrOutput {
	return o
}

func (o GetFirewallDoSpolicyDstaddrOutput) ToGetFirewallDoSpolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicyDstaddrOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicyDstaddrArrayOutput) ToGetFirewallDoSpolicyDstaddrArrayOutput() GetFirewallDoSpolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyDstaddrArrayOutput) ToGetFirewallDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicyDstaddr {
		return vs[0].([]GetFirewallDoSpolicyDstaddr)[vs[1].(int)]
	}).(GetFirewallDoSpolicyDstaddrOutput)
}

type GetFirewallDoSpolicyService struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicyServiceInput is an input type that accepts GetFirewallDoSpolicyServiceArgs and GetFirewallDoSpolicyServiceOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyServiceInput` via:
//
//	GetFirewallDoSpolicyServiceArgs{...}
type GetFirewallDoSpolicyServiceInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyServiceOutput() GetFirewallDoSpolicyServiceOutput
	ToGetFirewallDoSpolicyServiceOutputWithContext(context.Context) GetFirewallDoSpolicyServiceOutput
}

type GetFirewallDoSpolicyServiceArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyService)(nil)).Elem()
}

func (i GetFirewallDoSpolicyServiceArgs) ToGetFirewallDoSpolicyServiceOutput() GetFirewallDoSpolicyServiceOutput {
	return i.ToGetFirewallDoSpolicyServiceOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyServiceArgs) ToGetFirewallDoSpolicyServiceOutputWithContext(ctx context.Context) GetFirewallDoSpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyServiceOutput)
}

// GetFirewallDoSpolicyServiceArrayInput is an input type that accepts GetFirewallDoSpolicyServiceArray and GetFirewallDoSpolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicyServiceArrayInput` via:
//
//	GetFirewallDoSpolicyServiceArray{ GetFirewallDoSpolicyServiceArgs{...} }
type GetFirewallDoSpolicyServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicyServiceArrayOutput() GetFirewallDoSpolicyServiceArrayOutput
	ToGetFirewallDoSpolicyServiceArrayOutputWithContext(context.Context) GetFirewallDoSpolicyServiceArrayOutput
}

type GetFirewallDoSpolicyServiceArray []GetFirewallDoSpolicyServiceInput

func (GetFirewallDoSpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyService)(nil)).Elem()
}

func (i GetFirewallDoSpolicyServiceArray) ToGetFirewallDoSpolicyServiceArrayOutput() GetFirewallDoSpolicyServiceArrayOutput {
	return i.ToGetFirewallDoSpolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicyServiceArray) ToGetFirewallDoSpolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicyServiceArrayOutput)
}

type GetFirewallDoSpolicyServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicyService)(nil)).Elem()
}

func (o GetFirewallDoSpolicyServiceOutput) ToGetFirewallDoSpolicyServiceOutput() GetFirewallDoSpolicyServiceOutput {
	return o
}

func (o GetFirewallDoSpolicyServiceOutput) ToGetFirewallDoSpolicyServiceOutputWithContext(ctx context.Context) GetFirewallDoSpolicyServiceOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicyService)(nil)).Elem()
}

func (o GetFirewallDoSpolicyServiceArrayOutput) ToGetFirewallDoSpolicyServiceArrayOutput() GetFirewallDoSpolicyServiceArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyServiceArrayOutput) ToGetFirewallDoSpolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicyServiceArrayOutput {
	return o
}

func (o GetFirewallDoSpolicyServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicyService {
		return vs[0].([]GetFirewallDoSpolicyService)[vs[1].(int)]
	}).(GetFirewallDoSpolicyServiceOutput)
}

type GetFirewallDoSpolicySrcaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetFirewallDoSpolicySrcaddrInput is an input type that accepts GetFirewallDoSpolicySrcaddrArgs and GetFirewallDoSpolicySrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicySrcaddrInput` via:
//
//	GetFirewallDoSpolicySrcaddrArgs{...}
type GetFirewallDoSpolicySrcaddrInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicySrcaddrOutput() GetFirewallDoSpolicySrcaddrOutput
	ToGetFirewallDoSpolicySrcaddrOutputWithContext(context.Context) GetFirewallDoSpolicySrcaddrOutput
}

type GetFirewallDoSpolicySrcaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallDoSpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicySrcaddrArgs) ToGetFirewallDoSpolicySrcaddrOutput() GetFirewallDoSpolicySrcaddrOutput {
	return i.ToGetFirewallDoSpolicySrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicySrcaddrArgs) ToGetFirewallDoSpolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicySrcaddrOutput)
}

// GetFirewallDoSpolicySrcaddrArrayInput is an input type that accepts GetFirewallDoSpolicySrcaddrArray and GetFirewallDoSpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallDoSpolicySrcaddrArrayInput` via:
//
//	GetFirewallDoSpolicySrcaddrArray{ GetFirewallDoSpolicySrcaddrArgs{...} }
type GetFirewallDoSpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallDoSpolicySrcaddrArrayOutput() GetFirewallDoSpolicySrcaddrArrayOutput
	ToGetFirewallDoSpolicySrcaddrArrayOutputWithContext(context.Context) GetFirewallDoSpolicySrcaddrArrayOutput
}

type GetFirewallDoSpolicySrcaddrArray []GetFirewallDoSpolicySrcaddrInput

func (GetFirewallDoSpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallDoSpolicySrcaddrArray) ToGetFirewallDoSpolicySrcaddrArrayOutput() GetFirewallDoSpolicySrcaddrArrayOutput {
	return i.ToGetFirewallDoSpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallDoSpolicySrcaddrArray) ToGetFirewallDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDoSpolicySrcaddrArrayOutput)
}

type GetFirewallDoSpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicySrcaddrOutput) ToGetFirewallDoSpolicySrcaddrOutput() GetFirewallDoSpolicySrcaddrOutput {
	return o
}

func (o GetFirewallDoSpolicySrcaddrOutput) ToGetFirewallDoSpolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallDoSpolicySrcaddrOutput {
	return o
}

// Anomaly name.
func (o GetFirewallDoSpolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDoSpolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallDoSpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDoSpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallDoSpolicySrcaddrArrayOutput) ToGetFirewallDoSpolicySrcaddrArrayOutput() GetFirewallDoSpolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicySrcaddrArrayOutput) ToGetFirewallDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallDoSpolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallDoSpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallDoSpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDoSpolicySrcaddr {
		return vs[0].([]GetFirewallDoSpolicySrcaddr)[vs[1].(int)]
	}).(GetFirewallDoSpolicySrcaddrOutput)
}

type GetFirewallInternetservicecustomEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []GetFirewallInternetservicecustomEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []GetFirewallInternetservicecustomEntryDst `pulumi:"dsts"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []GetFirewallInternetservicecustomEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetFirewallInternetservicecustomEntryInput is an input type that accepts GetFirewallInternetservicecustomEntryArgs and GetFirewallInternetservicecustomEntryOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryInput` via:
//
//	GetFirewallInternetservicecustomEntryArgs{...}
type GetFirewallInternetservicecustomEntryInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryOutput() GetFirewallInternetservicecustomEntryOutput
	ToGetFirewallInternetservicecustomEntryOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryOutput
}

type GetFirewallInternetservicecustomEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s GetFirewallInternetservicecustomEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts GetFirewallInternetservicecustomEntryDstArrayInput `pulumi:"dsts"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges GetFirewallInternetservicecustomEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetFirewallInternetservicecustomEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntry)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryArgs) ToGetFirewallInternetservicecustomEntryOutput() GetFirewallInternetservicecustomEntryOutput {
	return i.ToGetFirewallInternetservicecustomEntryOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryArgs) ToGetFirewallInternetservicecustomEntryOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryOutput)
}

// GetFirewallInternetservicecustomEntryArrayInput is an input type that accepts GetFirewallInternetservicecustomEntryArray and GetFirewallInternetservicecustomEntryArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryArrayInput` via:
//
//	GetFirewallInternetservicecustomEntryArray{ GetFirewallInternetservicecustomEntryArgs{...} }
type GetFirewallInternetservicecustomEntryArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryArrayOutput() GetFirewallInternetservicecustomEntryArrayOutput
	ToGetFirewallInternetservicecustomEntryArrayOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryArrayOutput
}

type GetFirewallInternetservicecustomEntryArray []GetFirewallInternetservicecustomEntryInput

func (GetFirewallInternetservicecustomEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntry)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryArray) ToGetFirewallInternetservicecustomEntryArrayOutput() GetFirewallInternetservicecustomEntryArrayOutput {
	return i.ToGetFirewallInternetservicecustomEntryArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryArray) ToGetFirewallInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryArrayOutput)
}

type GetFirewallInternetservicecustomEntryOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntry)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryOutput) ToGetFirewallInternetservicecustomEntryOutput() GetFirewallInternetservicecustomEntryOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryOutput) ToGetFirewallInternetservicecustomEntryOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetFirewallInternetservicecustomEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o GetFirewallInternetservicecustomEntryOutput) Dst6s() GetFirewallInternetservicecustomEntryDst6ArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) []GetFirewallInternetservicecustomEntryDst6 {
		return v.Dst6s
	}).(GetFirewallInternetservicecustomEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o GetFirewallInternetservicecustomEntryOutput) Dsts() GetFirewallInternetservicecustomEntryDstArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) []GetFirewallInternetservicecustomEntryDst {
		return v.Dsts
	}).(GetFirewallInternetservicecustomEntryDstArrayOutput)
}

// Custom entry port range ID.
func (o GetFirewallInternetservicecustomEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) int { return v.Id }).(pulumi.IntOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o GetFirewallInternetservicecustomEntryOutput) PortRanges() GetFirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) []GetFirewallInternetservicecustomEntryPortRange {
		return v.PortRanges
	}).(GetFirewallInternetservicecustomEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetFirewallInternetservicecustomEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetFirewallInternetservicecustomEntryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntry)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryArrayOutput) ToGetFirewallInternetservicecustomEntryArrayOutput() GetFirewallInternetservicecustomEntryArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryArrayOutput) ToGetFirewallInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicecustomEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicecustomEntry {
		return vs[0].([]GetFirewallInternetservicecustomEntry)[vs[1].(int)]
	}).(GetFirewallInternetservicecustomEntryOutput)
}

type GetFirewallInternetservicecustomEntryDst6 struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name string `pulumi:"name"`
}

// GetFirewallInternetservicecustomEntryDst6Input is an input type that accepts GetFirewallInternetservicecustomEntryDst6Args and GetFirewallInternetservicecustomEntryDst6Output values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryDst6Input` via:
//
//	GetFirewallInternetservicecustomEntryDst6Args{...}
type GetFirewallInternetservicecustomEntryDst6Input interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryDst6Output() GetFirewallInternetservicecustomEntryDst6Output
	ToGetFirewallInternetservicecustomEntryDst6OutputWithContext(context.Context) GetFirewallInternetservicecustomEntryDst6Output
}

type GetFirewallInternetservicecustomEntryDst6Args struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetservicecustomEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryDst6Args) ToGetFirewallInternetservicecustomEntryDst6Output() GetFirewallInternetservicecustomEntryDst6Output {
	return i.ToGetFirewallInternetservicecustomEntryDst6OutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryDst6Args) ToGetFirewallInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryDst6Output)
}

// GetFirewallInternetservicecustomEntryDst6ArrayInput is an input type that accepts GetFirewallInternetservicecustomEntryDst6Array and GetFirewallInternetservicecustomEntryDst6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryDst6ArrayInput` via:
//
//	GetFirewallInternetservicecustomEntryDst6Array{ GetFirewallInternetservicecustomEntryDst6Args{...} }
type GetFirewallInternetservicecustomEntryDst6ArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryDst6ArrayOutput() GetFirewallInternetservicecustomEntryDst6ArrayOutput
	ToGetFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryDst6ArrayOutput
}

type GetFirewallInternetservicecustomEntryDst6Array []GetFirewallInternetservicecustomEntryDst6Input

func (GetFirewallInternetservicecustomEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryDst6Array) ToGetFirewallInternetservicecustomEntryDst6ArrayOutput() GetFirewallInternetservicecustomEntryDst6ArrayOutput {
	return i.ToGetFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryDst6Array) ToGetFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryDst6ArrayOutput)
}

type GetFirewallInternetservicecustomEntryDst6Output struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryDst6Output) ToGetFirewallInternetservicecustomEntryDst6Output() GetFirewallInternetservicecustomEntryDst6Output {
	return o
}

func (o GetFirewallInternetservicecustomEntryDst6Output) ToGetFirewallInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDst6Output {
	return o
}

// Specify the name of the desired firewall internetservicecustom.
func (o GetFirewallInternetservicecustomEntryDst6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntryDst6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetservicecustomEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryDst6ArrayOutput) ToGetFirewallInternetservicecustomEntryDst6ArrayOutput() GetFirewallInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryDst6ArrayOutput) ToGetFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryDst6ArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicecustomEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicecustomEntryDst6 {
		return vs[0].([]GetFirewallInternetservicecustomEntryDst6)[vs[1].(int)]
	}).(GetFirewallInternetservicecustomEntryDst6Output)
}

type GetFirewallInternetservicecustomEntryDst struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name string `pulumi:"name"`
}

// GetFirewallInternetservicecustomEntryDstInput is an input type that accepts GetFirewallInternetservicecustomEntryDstArgs and GetFirewallInternetservicecustomEntryDstOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryDstInput` via:
//
//	GetFirewallInternetservicecustomEntryDstArgs{...}
type GetFirewallInternetservicecustomEntryDstInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryDstOutput() GetFirewallInternetservicecustomEntryDstOutput
	ToGetFirewallInternetservicecustomEntryDstOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryDstOutput
}

type GetFirewallInternetservicecustomEntryDstArgs struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetservicecustomEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryDstArgs) ToGetFirewallInternetservicecustomEntryDstOutput() GetFirewallInternetservicecustomEntryDstOutput {
	return i.ToGetFirewallInternetservicecustomEntryDstOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryDstArgs) ToGetFirewallInternetservicecustomEntryDstOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryDstOutput)
}

// GetFirewallInternetservicecustomEntryDstArrayInput is an input type that accepts GetFirewallInternetservicecustomEntryDstArray and GetFirewallInternetservicecustomEntryDstArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryDstArrayInput` via:
//
//	GetFirewallInternetservicecustomEntryDstArray{ GetFirewallInternetservicecustomEntryDstArgs{...} }
type GetFirewallInternetservicecustomEntryDstArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryDstArrayOutput() GetFirewallInternetservicecustomEntryDstArrayOutput
	ToGetFirewallInternetservicecustomEntryDstArrayOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryDstArrayOutput
}

type GetFirewallInternetservicecustomEntryDstArray []GetFirewallInternetservicecustomEntryDstInput

func (GetFirewallInternetservicecustomEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryDstArray) ToGetFirewallInternetservicecustomEntryDstArrayOutput() GetFirewallInternetservicecustomEntryDstArrayOutput {
	return i.ToGetFirewallInternetservicecustomEntryDstArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryDstArray) ToGetFirewallInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryDstArrayOutput)
}

type GetFirewallInternetservicecustomEntryDstOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryDstOutput) ToGetFirewallInternetservicecustomEntryDstOutput() GetFirewallInternetservicecustomEntryDstOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryDstOutput) ToGetFirewallInternetservicecustomEntryDstOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDstOutput {
	return o
}

// Specify the name of the desired firewall internetservicecustom.
func (o GetFirewallInternetservicecustomEntryDstOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntryDst) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetservicecustomEntryDstArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryDstArrayOutput) ToGetFirewallInternetservicecustomEntryDstArrayOutput() GetFirewallInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryDstArrayOutput) ToGetFirewallInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryDstArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicecustomEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicecustomEntryDst {
		return vs[0].([]GetFirewallInternetservicecustomEntryDst)[vs[1].(int)]
	}).(GetFirewallInternetservicecustomEntryDstOutput)
}

type GetFirewallInternetservicecustomEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetFirewallInternetservicecustomEntryPortRangeInput is an input type that accepts GetFirewallInternetservicecustomEntryPortRangeArgs and GetFirewallInternetservicecustomEntryPortRangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryPortRangeInput` via:
//
//	GetFirewallInternetservicecustomEntryPortRangeArgs{...}
type GetFirewallInternetservicecustomEntryPortRangeInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryPortRangeOutput() GetFirewallInternetservicecustomEntryPortRangeOutput
	ToGetFirewallInternetservicecustomEntryPortRangeOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryPortRangeOutput
}

type GetFirewallInternetservicecustomEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetFirewallInternetservicecustomEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryPortRangeArgs) ToGetFirewallInternetservicecustomEntryPortRangeOutput() GetFirewallInternetservicecustomEntryPortRangeOutput {
	return i.ToGetFirewallInternetservicecustomEntryPortRangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryPortRangeArgs) ToGetFirewallInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryPortRangeOutput)
}

// GetFirewallInternetservicecustomEntryPortRangeArrayInput is an input type that accepts GetFirewallInternetservicecustomEntryPortRangeArray and GetFirewallInternetservicecustomEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomEntryPortRangeArrayInput` via:
//
//	GetFirewallInternetservicecustomEntryPortRangeArray{ GetFirewallInternetservicecustomEntryPortRangeArgs{...} }
type GetFirewallInternetservicecustomEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomEntryPortRangeArrayOutput() GetFirewallInternetservicecustomEntryPortRangeArrayOutput
	ToGetFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Context) GetFirewallInternetservicecustomEntryPortRangeArrayOutput
}

type GetFirewallInternetservicecustomEntryPortRangeArray []GetFirewallInternetservicecustomEntryPortRangeInput

func (GetFirewallInternetservicecustomEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomEntryPortRangeArray) ToGetFirewallInternetservicecustomEntryPortRangeArrayOutput() GetFirewallInternetservicecustomEntryPortRangeArrayOutput {
	return i.ToGetFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomEntryPortRangeArray) ToGetFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomEntryPortRangeArrayOutput)
}

type GetFirewallInternetservicecustomEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryPortRangeOutput) ToGetFirewallInternetservicecustomEntryPortRangeOutput() GetFirewallInternetservicecustomEntryPortRangeOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryPortRangeOutput) ToGetFirewallInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o GetFirewallInternetservicecustomEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Custom entry port range ID.
func (o GetFirewallInternetservicecustomEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o GetFirewallInternetservicecustomEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetFirewallInternetservicecustomEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomEntryPortRangeArrayOutput) ToGetFirewallInternetservicecustomEntryPortRangeArrayOutput() GetFirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryPortRangeArrayOutput) ToGetFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicecustomEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicecustomEntryPortRange {
		return vs[0].([]GetFirewallInternetservicecustomEntryPortRange)[vs[1].(int)]
	}).(GetFirewallInternetservicecustomEntryPortRangeOutput)
}

type GetFirewallInternetservicecustomgroupMember struct {
	// Specify the name of the desired firewall internetservicecustomgroup.
	Name string `pulumi:"name"`
}

// GetFirewallInternetservicecustomgroupMemberInput is an input type that accepts GetFirewallInternetservicecustomgroupMemberArgs and GetFirewallInternetservicecustomgroupMemberOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomgroupMemberInput` via:
//
//	GetFirewallInternetservicecustomgroupMemberArgs{...}
type GetFirewallInternetservicecustomgroupMemberInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomgroupMemberOutput() GetFirewallInternetservicecustomgroupMemberOutput
	ToGetFirewallInternetservicecustomgroupMemberOutputWithContext(context.Context) GetFirewallInternetservicecustomgroupMemberOutput
}

type GetFirewallInternetservicecustomgroupMemberArgs struct {
	// Specify the name of the desired firewall internetservicecustomgroup.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetservicecustomgroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomgroupMemberArgs) ToGetFirewallInternetservicecustomgroupMemberOutput() GetFirewallInternetservicecustomgroupMemberOutput {
	return i.ToGetFirewallInternetservicecustomgroupMemberOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomgroupMemberArgs) ToGetFirewallInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomgroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomgroupMemberOutput)
}

// GetFirewallInternetservicecustomgroupMemberArrayInput is an input type that accepts GetFirewallInternetservicecustomgroupMemberArray and GetFirewallInternetservicecustomgroupMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicecustomgroupMemberArrayInput` via:
//
//	GetFirewallInternetservicecustomgroupMemberArray{ GetFirewallInternetservicecustomgroupMemberArgs{...} }
type GetFirewallInternetservicecustomgroupMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicecustomgroupMemberArrayOutput() GetFirewallInternetservicecustomgroupMemberArrayOutput
	ToGetFirewallInternetservicecustomgroupMemberArrayOutputWithContext(context.Context) GetFirewallInternetservicecustomgroupMemberArrayOutput
}

type GetFirewallInternetservicecustomgroupMemberArray []GetFirewallInternetservicecustomgroupMemberInput

func (GetFirewallInternetservicecustomgroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (i GetFirewallInternetservicecustomgroupMemberArray) ToGetFirewallInternetservicecustomgroupMemberArrayOutput() GetFirewallInternetservicecustomgroupMemberArrayOutput {
	return i.ToGetFirewallInternetservicecustomgroupMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicecustomgroupMemberArray) ToGetFirewallInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomgroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicecustomgroupMemberArrayOutput)
}

type GetFirewallInternetservicecustomgroupMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomgroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomgroupMemberOutput) ToGetFirewallInternetservicecustomgroupMemberOutput() GetFirewallInternetservicecustomgroupMemberOutput {
	return o
}

func (o GetFirewallInternetservicecustomgroupMemberOutput) ToGetFirewallInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomgroupMemberOutput {
	return o
}

// Specify the name of the desired firewall internetservicecustomgroup.
func (o GetFirewallInternetservicecustomgroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicecustomgroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetservicecustomgroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicecustomgroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (o GetFirewallInternetservicecustomgroupMemberArrayOutput) ToGetFirewallInternetservicecustomgroupMemberArrayOutput() GetFirewallInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomgroupMemberArrayOutput) ToGetFirewallInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o GetFirewallInternetservicecustomgroupMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicecustomgroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicecustomgroupMember {
		return vs[0].([]GetFirewallInternetservicecustomgroupMember)[vs[1].(int)]
	}).(GetFirewallInternetservicecustomgroupMemberOutput)
}

type GetFirewallInternetservicedefinitionEntry struct {
	// Internet Service category ID.
	CategoryId int `pulumi:"categoryId"`
	// Internet Service name.
	Name string `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port int `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges []GetFirewallInternetservicedefinitionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum int `pulumi:"seqNum"`
}

// GetFirewallInternetservicedefinitionEntryInput is an input type that accepts GetFirewallInternetservicedefinitionEntryArgs and GetFirewallInternetservicedefinitionEntryOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicedefinitionEntryInput` via:
//
//	GetFirewallInternetservicedefinitionEntryArgs{...}
type GetFirewallInternetservicedefinitionEntryInput interface {
	pulumi.Input

	ToGetFirewallInternetservicedefinitionEntryOutput() GetFirewallInternetservicedefinitionEntryOutput
	ToGetFirewallInternetservicedefinitionEntryOutputWithContext(context.Context) GetFirewallInternetservicedefinitionEntryOutput
}

type GetFirewallInternetservicedefinitionEntryArgs struct {
	// Internet Service category ID.
	CategoryId pulumi.IntInput `pulumi:"categoryId"`
	// Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port pulumi.IntInput `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges GetFirewallInternetservicedefinitionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
}

func (GetFirewallInternetservicedefinitionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (i GetFirewallInternetservicedefinitionEntryArgs) ToGetFirewallInternetservicedefinitionEntryOutput() GetFirewallInternetservicedefinitionEntryOutput {
	return i.ToGetFirewallInternetservicedefinitionEntryOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicedefinitionEntryArgs) ToGetFirewallInternetservicedefinitionEntryOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicedefinitionEntryOutput)
}

// GetFirewallInternetservicedefinitionEntryArrayInput is an input type that accepts GetFirewallInternetservicedefinitionEntryArray and GetFirewallInternetservicedefinitionEntryArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicedefinitionEntryArrayInput` via:
//
//	GetFirewallInternetservicedefinitionEntryArray{ GetFirewallInternetservicedefinitionEntryArgs{...} }
type GetFirewallInternetservicedefinitionEntryArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicedefinitionEntryArrayOutput() GetFirewallInternetservicedefinitionEntryArrayOutput
	ToGetFirewallInternetservicedefinitionEntryArrayOutputWithContext(context.Context) GetFirewallInternetservicedefinitionEntryArrayOutput
}

type GetFirewallInternetservicedefinitionEntryArray []GetFirewallInternetservicedefinitionEntryInput

func (GetFirewallInternetservicedefinitionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (i GetFirewallInternetservicedefinitionEntryArray) ToGetFirewallInternetservicedefinitionEntryArrayOutput() GetFirewallInternetservicedefinitionEntryArrayOutput {
	return i.ToGetFirewallInternetservicedefinitionEntryArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicedefinitionEntryArray) ToGetFirewallInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicedefinitionEntryArrayOutput)
}

type GetFirewallInternetservicedefinitionEntryOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicedefinitionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (o GetFirewallInternetservicedefinitionEntryOutput) ToGetFirewallInternetservicedefinitionEntryOutput() GetFirewallInternetservicedefinitionEntryOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryOutput) ToGetFirewallInternetservicedefinitionEntryOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryOutput {
	return o
}

// Internet Service category ID.
func (o GetFirewallInternetservicedefinitionEntryOutput) CategoryId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) int { return v.CategoryId }).(pulumi.IntOutput)
}

// Internet Service name.
func (o GetFirewallInternetservicedefinitionEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) string { return v.Name }).(pulumi.StringOutput)
}

// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
func (o GetFirewallInternetservicedefinitionEntryOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) int { return v.Port }).(pulumi.IntOutput)
}

// Port ranges in the definition entry. The structure of `portRange` block is documented below.
func (o GetFirewallInternetservicedefinitionEntryOutput) PortRanges() GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) []GetFirewallInternetservicedefinitionEntryPortRange {
		return v.PortRanges
	}).(GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetFirewallInternetservicedefinitionEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

// Entry sequence number.
func (o GetFirewallInternetservicedefinitionEntryOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntry) int { return v.SeqNum }).(pulumi.IntOutput)
}

type GetFirewallInternetservicedefinitionEntryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicedefinitionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (o GetFirewallInternetservicedefinitionEntryArrayOutput) ToGetFirewallInternetservicedefinitionEntryArrayOutput() GetFirewallInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryArrayOutput) ToGetFirewallInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicedefinitionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicedefinitionEntry {
		return vs[0].([]GetFirewallInternetservicedefinitionEntry)[vs[1].(int)]
	}).(GetFirewallInternetservicedefinitionEntryOutput)
}

type GetFirewallInternetservicedefinitionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetFirewallInternetservicedefinitionEntryPortRangeInput is an input type that accepts GetFirewallInternetservicedefinitionEntryPortRangeArgs and GetFirewallInternetservicedefinitionEntryPortRangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicedefinitionEntryPortRangeInput` via:
//
//	GetFirewallInternetservicedefinitionEntryPortRangeArgs{...}
type GetFirewallInternetservicedefinitionEntryPortRangeInput interface {
	pulumi.Input

	ToGetFirewallInternetservicedefinitionEntryPortRangeOutput() GetFirewallInternetservicedefinitionEntryPortRangeOutput
	ToGetFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(context.Context) GetFirewallInternetservicedefinitionEntryPortRangeOutput
}

type GetFirewallInternetservicedefinitionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetFirewallInternetservicedefinitionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetservicedefinitionEntryPortRangeArgs) ToGetFirewallInternetservicedefinitionEntryPortRangeOutput() GetFirewallInternetservicedefinitionEntryPortRangeOutput {
	return i.ToGetFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicedefinitionEntryPortRangeArgs) ToGetFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicedefinitionEntryPortRangeOutput)
}

// GetFirewallInternetservicedefinitionEntryPortRangeArrayInput is an input type that accepts GetFirewallInternetservicedefinitionEntryPortRangeArray and GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicedefinitionEntryPortRangeArrayInput` via:
//
//	GetFirewallInternetservicedefinitionEntryPortRangeArray{ GetFirewallInternetservicedefinitionEntryPortRangeArgs{...} }
type GetFirewallInternetservicedefinitionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutput() GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput
	ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Context) GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput
}

type GetFirewallInternetservicedefinitionEntryPortRangeArray []GetFirewallInternetservicedefinitionEntryPortRangeInput

func (GetFirewallInternetservicedefinitionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetservicedefinitionEntryPortRangeArray) ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutput() GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return i.ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicedefinitionEntryPortRangeArray) ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput)
}

type GetFirewallInternetservicedefinitionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicedefinitionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetservicedefinitionEntryPortRangeOutput) ToGetFirewallInternetservicedefinitionEntryPortRangeOutput() GetFirewallInternetservicedefinitionEntryPortRangeOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryPortRangeOutput) ToGetFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetservicedefinitionEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Custom entry port range ID.
func (o GetFirewallInternetservicedefinitionEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetservicedefinitionEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicedefinitionEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput) ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutput() GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput) ToGetFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicedefinitionEntryPortRange {
		return vs[0].([]GetFirewallInternetservicedefinitionEntryPortRange)[vs[1].(int)]
	}).(GetFirewallInternetservicedefinitionEntryPortRangeOutput)
}

type GetFirewallInternetserviceextensionDisableEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges []GetFirewallInternetserviceextensionDisableEntryIp6Range `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges []GetFirewallInternetserviceextensionDisableEntryIpRange `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port int `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []GetFirewallInternetserviceextensionDisableEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetFirewallInternetserviceextensionDisableEntryInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryArgs and GetFirewallInternetserviceextensionDisableEntryOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryArgs{...}
type GetFirewallInternetserviceextensionDisableEntryInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryOutput() GetFirewallInternetserviceextensionDisableEntryOutput
	ToGetFirewallInternetserviceextensionDisableEntryOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryOutput
}

type GetFirewallInternetserviceextensionDisableEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayInput `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges GetFirewallInternetserviceextensionDisableEntryIpRangeArrayInput `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port pulumi.IntInput `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges GetFirewallInternetserviceextensionDisableEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetFirewallInternetserviceextensionDisableEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryArgs) ToGetFirewallInternetserviceextensionDisableEntryOutput() GetFirewallInternetserviceextensionDisableEntryOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryArgs) ToGetFirewallInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryOutput)
}

// GetFirewallInternetserviceextensionDisableEntryArrayInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryArray and GetFirewallInternetserviceextensionDisableEntryArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryArrayInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryArray{ GetFirewallInternetserviceextensionDisableEntryArgs{...} }
type GetFirewallInternetserviceextensionDisableEntryArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryArrayOutput() GetFirewallInternetserviceextensionDisableEntryArrayOutput
	ToGetFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryArrayOutput
}

type GetFirewallInternetserviceextensionDisableEntryArray []GetFirewallInternetserviceextensionDisableEntryInput

func (GetFirewallInternetserviceextensionDisableEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryArray) ToGetFirewallInternetserviceextensionDisableEntryArrayOutput() GetFirewallInternetserviceextensionDisableEntryArrayOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryArray) ToGetFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryArrayOutput)
}

type GetFirewallInternetserviceextensionDisableEntryOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryOutput) ToGetFirewallInternetserviceextensionDisableEntryOutput() GetFirewallInternetserviceextensionDisableEntryOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryOutput) ToGetFirewallInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetFirewallInternetserviceextensionDisableEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionDisableEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
func (o GetFirewallInternetserviceextensionDisableEntryOutput) Ip6Ranges() GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) []GetFirewallInternetserviceextensionDisableEntryIp6Range {
		return v.Ip6Ranges
	}).(GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
func (o GetFirewallInternetserviceextensionDisableEntryOutput) IpRanges() GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) []GetFirewallInternetserviceextensionDisableEntryIpRange {
		return v.IpRanges
	}).(GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

// Integer value for the TCP/IP port (0 - 65535).
func (o GetFirewallInternetserviceextensionDisableEntryOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) int { return v.Port }).(pulumi.IntOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o GetFirewallInternetserviceextensionDisableEntryOutput) PortRanges() GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) []GetFirewallInternetserviceextensionDisableEntryPortRange {
		return v.PortRanges
	}).(GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetFirewallInternetserviceextensionDisableEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetFirewallInternetserviceextensionDisableEntryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryArrayOutput() GetFirewallInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionDisableEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionDisableEntry {
		return vs[0].([]GetFirewallInternetserviceextensionDisableEntry)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionDisableEntryOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIp6Range struct {
	// End IPv6 address.
	EndIp6 string `pulumi:"endIp6"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 string `pulumi:"startIp6"`
}

// GetFirewallInternetserviceextensionDisableEntryIp6RangeInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs and GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryIp6RangeInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs{...}
type GetFirewallInternetserviceextensionDisableEntryIp6RangeInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput
	ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput
}

type GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs struct {
	// End IPv6 address.
	EndIp6 pulumi.StringInput `pulumi:"endIp6"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 pulumi.StringInput `pulumi:"startIp6"`
}

func (GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput)
}

// GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryIp6RangeArray and GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryIp6RangeArray{ GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs{...} }
type GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput
	ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput
}

type GetFirewallInternetserviceextensionDisableEntryIp6RangeArray []GetFirewallInternetserviceextensionDisableEntryIp6RangeInput

func (GetFirewallInternetserviceextensionDisableEntryIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryIp6RangeArray) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryIp6RangeArray) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

// End IPv6 address.
func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) EndIp6() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIp6Range) string { return v.EndIp6 }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIp6Range) int { return v.Id }).(pulumi.IntOutput)
}

// Start IPv6 address.
func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput) StartIp6() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIp6Range) string { return v.StartIp6 }).(pulumi.StringOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionDisableEntryIp6Range {
		return vs[0].([]GetFirewallInternetserviceextensionDisableEntryIp6Range)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIpRange struct {
	// End IP address.
	EndIp string `pulumi:"endIp"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Start IP address.
	StartIp string `pulumi:"startIp"`
}

// GetFirewallInternetserviceextensionDisableEntryIpRangeInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryIpRangeArgs and GetFirewallInternetserviceextensionDisableEntryIpRangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryIpRangeInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryIpRangeArgs{...}
type GetFirewallInternetserviceextensionDisableEntryIpRangeInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeOutput
	ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeOutput
}

type GetFirewallInternetserviceextensionDisableEntryIpRangeArgs struct {
	// End IP address.
	EndIp pulumi.StringInput `pulumi:"endIp"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Start IP address.
	StartIp pulumi.StringInput `pulumi:"startIp"`
}

func (GetFirewallInternetserviceextensionDisableEntryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryIpRangeArgs) ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryIpRangeArgs) ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryIpRangeOutput)
}

// GetFirewallInternetserviceextensionDisableEntryIpRangeArrayInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryIpRangeArray and GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryIpRangeArrayInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryIpRangeArray{ GetFirewallInternetserviceextensionDisableEntryIpRangeArgs{...} }
type GetFirewallInternetserviceextensionDisableEntryIpRangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput
	ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput
}

type GetFirewallInternetserviceextensionDisableEntryIpRangeArray []GetFirewallInternetserviceextensionDisableEntryIpRangeInput

func (GetFirewallInternetserviceextensionDisableEntryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryIpRangeArray) ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryIpRangeArray) ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIpRangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) ToGetFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

// End IP address.
func (o GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIpRange) string { return v.EndIp }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIpRange) int { return v.Id }).(pulumi.IntOutput)
}

// Start IP address.
func (o GetFirewallInternetserviceextensionDisableEntryIpRangeOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryIpRange) string { return v.StartIp }).(pulumi.StringOutput)
}

type GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionDisableEntryIpRange {
		return vs[0].([]GetFirewallInternetserviceextensionDisableEntryIpRange)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionDisableEntryIpRangeOutput)
}

type GetFirewallInternetserviceextensionDisableEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetFirewallInternetserviceextensionDisableEntryPortRangeInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryPortRangeArgs and GetFirewallInternetserviceextensionDisableEntryPortRangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryPortRangeInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryPortRangeArgs{...}
type GetFirewallInternetserviceextensionDisableEntryPortRangeInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeOutput
	ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeOutput
}

type GetFirewallInternetserviceextensionDisableEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetFirewallInternetserviceextensionDisableEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryPortRangeArgs) ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryPortRangeArgs) ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryPortRangeOutput)
}

// GetFirewallInternetserviceextensionDisableEntryPortRangeArrayInput is an input type that accepts GetFirewallInternetserviceextensionDisableEntryPortRangeArray and GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionDisableEntryPortRangeArrayInput` via:
//
//	GetFirewallInternetserviceextensionDisableEntryPortRangeArray{ GetFirewallInternetserviceextensionDisableEntryPortRangeArgs{...} }
type GetFirewallInternetserviceextensionDisableEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput
	ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput
}

type GetFirewallInternetserviceextensionDisableEntryPortRangeArray []GetFirewallInternetserviceextensionDisableEntryPortRangeInput

func (GetFirewallInternetserviceextensionDisableEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionDisableEntryPortRangeArray) ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return i.ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionDisableEntryPortRangeArray) ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

type GetFirewallInternetserviceextensionDisableEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) ToGetFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetserviceextensionDisableEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionDisableEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ToGetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionDisableEntryPortRange {
		return vs[0].([]GetFirewallInternetserviceextensionDisableEntryPortRange)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionDisableEntryPortRangeOutput)
}

type GetFirewallInternetserviceextensionEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []GetFirewallInternetserviceextensionEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []GetFirewallInternetserviceextensionEntryDst `pulumi:"dsts"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []GetFirewallInternetserviceextensionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetFirewallInternetserviceextensionEntryInput is an input type that accepts GetFirewallInternetserviceextensionEntryArgs and GetFirewallInternetserviceextensionEntryOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryInput` via:
//
//	GetFirewallInternetserviceextensionEntryArgs{...}
type GetFirewallInternetserviceextensionEntryInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryOutput() GetFirewallInternetserviceextensionEntryOutput
	ToGetFirewallInternetserviceextensionEntryOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryOutput
}

type GetFirewallInternetserviceextensionEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s GetFirewallInternetserviceextensionEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts GetFirewallInternetserviceextensionEntryDstArrayInput `pulumi:"dsts"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges GetFirewallInternetserviceextensionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetFirewallInternetserviceextensionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryArgs) ToGetFirewallInternetserviceextensionEntryOutput() GetFirewallInternetserviceextensionEntryOutput {
	return i.ToGetFirewallInternetserviceextensionEntryOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryArgs) ToGetFirewallInternetserviceextensionEntryOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryOutput)
}

// GetFirewallInternetserviceextensionEntryArrayInput is an input type that accepts GetFirewallInternetserviceextensionEntryArray and GetFirewallInternetserviceextensionEntryArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryArrayInput` via:
//
//	GetFirewallInternetserviceextensionEntryArray{ GetFirewallInternetserviceextensionEntryArgs{...} }
type GetFirewallInternetserviceextensionEntryArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryArrayOutput() GetFirewallInternetserviceextensionEntryArrayOutput
	ToGetFirewallInternetserviceextensionEntryArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryArrayOutput
}

type GetFirewallInternetserviceextensionEntryArray []GetFirewallInternetserviceextensionEntryInput

func (GetFirewallInternetserviceextensionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryArray) ToGetFirewallInternetserviceextensionEntryArrayOutput() GetFirewallInternetserviceextensionEntryArrayOutput {
	return i.ToGetFirewallInternetserviceextensionEntryArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryArray) ToGetFirewallInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryArrayOutput)
}

type GetFirewallInternetserviceextensionEntryOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryOutput) ToGetFirewallInternetserviceextensionEntryOutput() GetFirewallInternetserviceextensionEntryOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryOutput) ToGetFirewallInternetserviceextensionEntryOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetFirewallInternetserviceextensionEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o GetFirewallInternetserviceextensionEntryOutput) Dst6s() GetFirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) []GetFirewallInternetserviceextensionEntryDst6 {
		return v.Dst6s
	}).(GetFirewallInternetserviceextensionEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o GetFirewallInternetserviceextensionEntryOutput) Dsts() GetFirewallInternetserviceextensionEntryDstArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) []GetFirewallInternetserviceextensionEntryDst {
		return v.Dsts
	}).(GetFirewallInternetserviceextensionEntryDstArrayOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) int { return v.Id }).(pulumi.IntOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o GetFirewallInternetserviceextensionEntryOutput) PortRanges() GetFirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) []GetFirewallInternetserviceextensionEntryPortRange {
		return v.PortRanges
	}).(GetFirewallInternetserviceextensionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetFirewallInternetserviceextensionEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetFirewallInternetserviceextensionEntryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryArrayOutput) ToGetFirewallInternetserviceextensionEntryArrayOutput() GetFirewallInternetserviceextensionEntryArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryArrayOutput) ToGetFirewallInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionEntry {
		return vs[0].([]GetFirewallInternetserviceextensionEntry)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionEntryOutput)
}

type GetFirewallInternetserviceextensionEntryDst6 struct {
	// Select the destination address6 or address group object from available options.
	Name string `pulumi:"name"`
}

// GetFirewallInternetserviceextensionEntryDst6Input is an input type that accepts GetFirewallInternetserviceextensionEntryDst6Args and GetFirewallInternetserviceextensionEntryDst6Output values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryDst6Input` via:
//
//	GetFirewallInternetserviceextensionEntryDst6Args{...}
type GetFirewallInternetserviceextensionEntryDst6Input interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryDst6Output() GetFirewallInternetserviceextensionEntryDst6Output
	ToGetFirewallInternetserviceextensionEntryDst6OutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryDst6Output
}

type GetFirewallInternetserviceextensionEntryDst6Args struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetserviceextensionEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryDst6Args) ToGetFirewallInternetserviceextensionEntryDst6Output() GetFirewallInternetserviceextensionEntryDst6Output {
	return i.ToGetFirewallInternetserviceextensionEntryDst6OutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryDst6Args) ToGetFirewallInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryDst6Output)
}

// GetFirewallInternetserviceextensionEntryDst6ArrayInput is an input type that accepts GetFirewallInternetserviceextensionEntryDst6Array and GetFirewallInternetserviceextensionEntryDst6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryDst6ArrayInput` via:
//
//	GetFirewallInternetserviceextensionEntryDst6Array{ GetFirewallInternetserviceextensionEntryDst6Args{...} }
type GetFirewallInternetserviceextensionEntryDst6ArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryDst6ArrayOutput() GetFirewallInternetserviceextensionEntryDst6ArrayOutput
	ToGetFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryDst6ArrayOutput
}

type GetFirewallInternetserviceextensionEntryDst6Array []GetFirewallInternetserviceextensionEntryDst6Input

func (GetFirewallInternetserviceextensionEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryDst6Array) ToGetFirewallInternetserviceextensionEntryDst6ArrayOutput() GetFirewallInternetserviceextensionEntryDst6ArrayOutput {
	return i.ToGetFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryDst6Array) ToGetFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryDst6ArrayOutput)
}

type GetFirewallInternetserviceextensionEntryDst6Output struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryDst6Output) ToGetFirewallInternetserviceextensionEntryDst6Output() GetFirewallInternetserviceextensionEntryDst6Output {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDst6Output) ToGetFirewallInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDst6Output {
	return o
}

// Select the destination address6 or address group object from available options.
func (o GetFirewallInternetserviceextensionEntryDst6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntryDst6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetserviceextensionEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryDst6ArrayOutput) ToGetFirewallInternetserviceextensionEntryDst6ArrayOutput() GetFirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDst6ArrayOutput) ToGetFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDst6ArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionEntryDst6 {
		return vs[0].([]GetFirewallInternetserviceextensionEntryDst6)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionEntryDst6Output)
}

type GetFirewallInternetserviceextensionEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name string `pulumi:"name"`
}

// GetFirewallInternetserviceextensionEntryDstInput is an input type that accepts GetFirewallInternetserviceextensionEntryDstArgs and GetFirewallInternetserviceextensionEntryDstOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryDstInput` via:
//
//	GetFirewallInternetserviceextensionEntryDstArgs{...}
type GetFirewallInternetserviceextensionEntryDstInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryDstOutput() GetFirewallInternetserviceextensionEntryDstOutput
	ToGetFirewallInternetserviceextensionEntryDstOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryDstOutput
}

type GetFirewallInternetserviceextensionEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetserviceextensionEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryDstArgs) ToGetFirewallInternetserviceextensionEntryDstOutput() GetFirewallInternetserviceextensionEntryDstOutput {
	return i.ToGetFirewallInternetserviceextensionEntryDstOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryDstArgs) ToGetFirewallInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryDstOutput)
}

// GetFirewallInternetserviceextensionEntryDstArrayInput is an input type that accepts GetFirewallInternetserviceextensionEntryDstArray and GetFirewallInternetserviceextensionEntryDstArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryDstArrayInput` via:
//
//	GetFirewallInternetserviceextensionEntryDstArray{ GetFirewallInternetserviceextensionEntryDstArgs{...} }
type GetFirewallInternetserviceextensionEntryDstArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryDstArrayOutput() GetFirewallInternetserviceextensionEntryDstArrayOutput
	ToGetFirewallInternetserviceextensionEntryDstArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryDstArrayOutput
}

type GetFirewallInternetserviceextensionEntryDstArray []GetFirewallInternetserviceextensionEntryDstInput

func (GetFirewallInternetserviceextensionEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryDstArray) ToGetFirewallInternetserviceextensionEntryDstArrayOutput() GetFirewallInternetserviceextensionEntryDstArrayOutput {
	return i.ToGetFirewallInternetserviceextensionEntryDstArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryDstArray) ToGetFirewallInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryDstArrayOutput)
}

type GetFirewallInternetserviceextensionEntryDstOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryDstOutput) ToGetFirewallInternetserviceextensionEntryDstOutput() GetFirewallInternetserviceextensionEntryDstOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDstOutput) ToGetFirewallInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o GetFirewallInternetserviceextensionEntryDstOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntryDst) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetserviceextensionEntryDstArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryDstArrayOutput) ToGetFirewallInternetserviceextensionEntryDstArrayOutput() GetFirewallInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDstArrayOutput) ToGetFirewallInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryDstArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionEntryDst {
		return vs[0].([]GetFirewallInternetserviceextensionEntryDst)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionEntryDstOutput)
}

type GetFirewallInternetserviceextensionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetFirewallInternetserviceextensionEntryPortRangeInput is an input type that accepts GetFirewallInternetserviceextensionEntryPortRangeArgs and GetFirewallInternetserviceextensionEntryPortRangeOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryPortRangeInput` via:
//
//	GetFirewallInternetserviceextensionEntryPortRangeArgs{...}
type GetFirewallInternetserviceextensionEntryPortRangeInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryPortRangeOutput() GetFirewallInternetserviceextensionEntryPortRangeOutput
	ToGetFirewallInternetserviceextensionEntryPortRangeOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryPortRangeOutput
}

type GetFirewallInternetserviceextensionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetFirewallInternetserviceextensionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryPortRangeArgs) ToGetFirewallInternetserviceextensionEntryPortRangeOutput() GetFirewallInternetserviceextensionEntryPortRangeOutput {
	return i.ToGetFirewallInternetserviceextensionEntryPortRangeOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryPortRangeArgs) ToGetFirewallInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryPortRangeOutput)
}

// GetFirewallInternetserviceextensionEntryPortRangeArrayInput is an input type that accepts GetFirewallInternetserviceextensionEntryPortRangeArray and GetFirewallInternetserviceextensionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetserviceextensionEntryPortRangeArrayInput` via:
//
//	GetFirewallInternetserviceextensionEntryPortRangeArray{ GetFirewallInternetserviceextensionEntryPortRangeArgs{...} }
type GetFirewallInternetserviceextensionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionEntryPortRangeArrayOutput
	ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Context) GetFirewallInternetserviceextensionEntryPortRangeArrayOutput
}

type GetFirewallInternetserviceextensionEntryPortRangeArray []GetFirewallInternetserviceextensionEntryPortRangeInput

func (GetFirewallInternetserviceextensionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i GetFirewallInternetserviceextensionEntryPortRangeArray) ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return i.ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetserviceextensionEntryPortRangeArray) ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetserviceextensionEntryPortRangeArrayOutput)
}

type GetFirewallInternetserviceextensionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryPortRangeOutput) ToGetFirewallInternetserviceextensionEntryPortRangeOutput() GetFirewallInternetserviceextensionEntryPortRangeOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryPortRangeOutput) ToGetFirewallInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetserviceextensionEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Disable entry range ID.
func (o GetFirewallInternetserviceextensionEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetFirewallInternetserviceextensionEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetserviceextensionEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetFirewallInternetserviceextensionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetserviceextensionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o GetFirewallInternetserviceextensionEntryPortRangeArrayOutput) ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutput() GetFirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryPortRangeArrayOutput) ToGetFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetFirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o GetFirewallInternetserviceextensionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetserviceextensionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetserviceextensionEntryPortRange {
		return vs[0].([]GetFirewallInternetserviceextensionEntryPortRange)[vs[1].(int)]
	}).(GetFirewallInternetserviceextensionEntryPortRangeOutput)
}

type GetFirewallInternetservicegroupMember struct {
	// Internet Service ID.
	Id int `pulumi:"id"`
	// Specify the name of the desired firewall internetservicegroup.
	Name string `pulumi:"name"`
}

// GetFirewallInternetservicegroupMemberInput is an input type that accepts GetFirewallInternetservicegroupMemberArgs and GetFirewallInternetservicegroupMemberOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicegroupMemberInput` via:
//
//	GetFirewallInternetservicegroupMemberArgs{...}
type GetFirewallInternetservicegroupMemberInput interface {
	pulumi.Input

	ToGetFirewallInternetservicegroupMemberOutput() GetFirewallInternetservicegroupMemberOutput
	ToGetFirewallInternetservicegroupMemberOutputWithContext(context.Context) GetFirewallInternetservicegroupMemberOutput
}

type GetFirewallInternetservicegroupMemberArgs struct {
	// Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify the name of the desired firewall internetservicegroup.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallInternetservicegroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicegroupMember)(nil)).Elem()
}

func (i GetFirewallInternetservicegroupMemberArgs) ToGetFirewallInternetservicegroupMemberOutput() GetFirewallInternetservicegroupMemberOutput {
	return i.ToGetFirewallInternetservicegroupMemberOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicegroupMemberArgs) ToGetFirewallInternetservicegroupMemberOutputWithContext(ctx context.Context) GetFirewallInternetservicegroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicegroupMemberOutput)
}

// GetFirewallInternetservicegroupMemberArrayInput is an input type that accepts GetFirewallInternetservicegroupMemberArray and GetFirewallInternetservicegroupMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallInternetservicegroupMemberArrayInput` via:
//
//	GetFirewallInternetservicegroupMemberArray{ GetFirewallInternetservicegroupMemberArgs{...} }
type GetFirewallInternetservicegroupMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallInternetservicegroupMemberArrayOutput() GetFirewallInternetservicegroupMemberArrayOutput
	ToGetFirewallInternetservicegroupMemberArrayOutputWithContext(context.Context) GetFirewallInternetservicegroupMemberArrayOutput
}

type GetFirewallInternetservicegroupMemberArray []GetFirewallInternetservicegroupMemberInput

func (GetFirewallInternetservicegroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicegroupMember)(nil)).Elem()
}

func (i GetFirewallInternetservicegroupMemberArray) ToGetFirewallInternetservicegroupMemberArrayOutput() GetFirewallInternetservicegroupMemberArrayOutput {
	return i.ToGetFirewallInternetservicegroupMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallInternetservicegroupMemberArray) ToGetFirewallInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicegroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInternetservicegroupMemberArrayOutput)
}

type GetFirewallInternetservicegroupMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicegroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInternetservicegroupMember)(nil)).Elem()
}

func (o GetFirewallInternetservicegroupMemberOutput) ToGetFirewallInternetservicegroupMemberOutput() GetFirewallInternetservicegroupMemberOutput {
	return o
}

func (o GetFirewallInternetservicegroupMemberOutput) ToGetFirewallInternetservicegroupMemberOutputWithContext(ctx context.Context) GetFirewallInternetservicegroupMemberOutput {
	return o
}

// Internet Service ID.
func (o GetFirewallInternetservicegroupMemberOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallInternetservicegroupMember) int { return v.Id }).(pulumi.IntOutput)
}

// Specify the name of the desired firewall internetservicegroup.
func (o GetFirewallInternetservicegroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInternetservicegroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallInternetservicegroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInternetservicegroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInternetservicegroupMember)(nil)).Elem()
}

func (o GetFirewallInternetservicegroupMemberArrayOutput) ToGetFirewallInternetservicegroupMemberArrayOutput() GetFirewallInternetservicegroupMemberArrayOutput {
	return o
}

func (o GetFirewallInternetservicegroupMemberArrayOutput) ToGetFirewallInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallInternetservicegroupMemberArrayOutput {
	return o
}

func (o GetFirewallInternetservicegroupMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallInternetservicegroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInternetservicegroupMember {
		return vs[0].([]GetFirewallInternetservicegroupMember)[vs[1].(int)]
	}).(GetFirewallInternetservicegroupMemberOutput)
}

type GetFirewallMulticastaddress6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallMulticastaddress6TaggingTag `pulumi:"tags"`
}

// GetFirewallMulticastaddress6TaggingInput is an input type that accepts GetFirewallMulticastaddress6TaggingArgs and GetFirewallMulticastaddress6TaggingOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddress6TaggingInput` via:
//
//	GetFirewallMulticastaddress6TaggingArgs{...}
type GetFirewallMulticastaddress6TaggingInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddress6TaggingOutput() GetFirewallMulticastaddress6TaggingOutput
	ToGetFirewallMulticastaddress6TaggingOutputWithContext(context.Context) GetFirewallMulticastaddress6TaggingOutput
}

type GetFirewallMulticastaddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallMulticastaddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallMulticastaddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (i GetFirewallMulticastaddress6TaggingArgs) ToGetFirewallMulticastaddress6TaggingOutput() GetFirewallMulticastaddress6TaggingOutput {
	return i.ToGetFirewallMulticastaddress6TaggingOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddress6TaggingArgs) ToGetFirewallMulticastaddress6TaggingOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddress6TaggingOutput)
}

// GetFirewallMulticastaddress6TaggingArrayInput is an input type that accepts GetFirewallMulticastaddress6TaggingArray and GetFirewallMulticastaddress6TaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddress6TaggingArrayInput` via:
//
//	GetFirewallMulticastaddress6TaggingArray{ GetFirewallMulticastaddress6TaggingArgs{...} }
type GetFirewallMulticastaddress6TaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddress6TaggingArrayOutput() GetFirewallMulticastaddress6TaggingArrayOutput
	ToGetFirewallMulticastaddress6TaggingArrayOutputWithContext(context.Context) GetFirewallMulticastaddress6TaggingArrayOutput
}

type GetFirewallMulticastaddress6TaggingArray []GetFirewallMulticastaddress6TaggingInput

func (GetFirewallMulticastaddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (i GetFirewallMulticastaddress6TaggingArray) ToGetFirewallMulticastaddress6TaggingArrayOutput() GetFirewallMulticastaddress6TaggingArrayOutput {
	return i.ToGetFirewallMulticastaddress6TaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddress6TaggingArray) ToGetFirewallMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddress6TaggingArrayOutput)
}

type GetFirewallMulticastaddress6TaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (o GetFirewallMulticastaddress6TaggingOutput) ToGetFirewallMulticastaddress6TaggingOutput() GetFirewallMulticastaddress6TaggingOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingOutput) ToGetFirewallMulticastaddress6TaggingOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallMulticastaddress6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddress6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall multicastaddress6.
func (o GetFirewallMulticastaddress6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddress6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallMulticastaddress6TaggingOutput) Tags() GetFirewallMulticastaddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddress6Tagging) []GetFirewallMulticastaddress6TaggingTag { return v.Tags }).(GetFirewallMulticastaddress6TaggingTagArrayOutput)
}

type GetFirewallMulticastaddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (o GetFirewallMulticastaddress6TaggingArrayOutput) ToGetFirewallMulticastaddress6TaggingArrayOutput() GetFirewallMulticastaddress6TaggingArrayOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingArrayOutput) ToGetFirewallMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingArrayOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallMulticastaddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallMulticastaddress6Tagging {
		return vs[0].([]GetFirewallMulticastaddress6Tagging)[vs[1].(int)]
	}).(GetFirewallMulticastaddress6TaggingOutput)
}

type GetFirewallMulticastaddress6TaggingTag struct {
	// Specify the name of the desired firewall multicastaddress6.
	Name string `pulumi:"name"`
}

// GetFirewallMulticastaddress6TaggingTagInput is an input type that accepts GetFirewallMulticastaddress6TaggingTagArgs and GetFirewallMulticastaddress6TaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddress6TaggingTagInput` via:
//
//	GetFirewallMulticastaddress6TaggingTagArgs{...}
type GetFirewallMulticastaddress6TaggingTagInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddress6TaggingTagOutput() GetFirewallMulticastaddress6TaggingTagOutput
	ToGetFirewallMulticastaddress6TaggingTagOutputWithContext(context.Context) GetFirewallMulticastaddress6TaggingTagOutput
}

type GetFirewallMulticastaddress6TaggingTagArgs struct {
	// Specify the name of the desired firewall multicastaddress6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallMulticastaddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i GetFirewallMulticastaddress6TaggingTagArgs) ToGetFirewallMulticastaddress6TaggingTagOutput() GetFirewallMulticastaddress6TaggingTagOutput {
	return i.ToGetFirewallMulticastaddress6TaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddress6TaggingTagArgs) ToGetFirewallMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddress6TaggingTagOutput)
}

// GetFirewallMulticastaddress6TaggingTagArrayInput is an input type that accepts GetFirewallMulticastaddress6TaggingTagArray and GetFirewallMulticastaddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddress6TaggingTagArrayInput` via:
//
//	GetFirewallMulticastaddress6TaggingTagArray{ GetFirewallMulticastaddress6TaggingTagArgs{...} }
type GetFirewallMulticastaddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddress6TaggingTagArrayOutput() GetFirewallMulticastaddress6TaggingTagArrayOutput
	ToGetFirewallMulticastaddress6TaggingTagArrayOutputWithContext(context.Context) GetFirewallMulticastaddress6TaggingTagArrayOutput
}

type GetFirewallMulticastaddress6TaggingTagArray []GetFirewallMulticastaddress6TaggingTagInput

func (GetFirewallMulticastaddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i GetFirewallMulticastaddress6TaggingTagArray) ToGetFirewallMulticastaddress6TaggingTagArrayOutput() GetFirewallMulticastaddress6TaggingTagArrayOutput {
	return i.ToGetFirewallMulticastaddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddress6TaggingTagArray) ToGetFirewallMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddress6TaggingTagArrayOutput)
}

type GetFirewallMulticastaddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o GetFirewallMulticastaddress6TaggingTagOutput) ToGetFirewallMulticastaddress6TaggingTagOutput() GetFirewallMulticastaddress6TaggingTagOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingTagOutput) ToGetFirewallMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall multicastaddress6.
func (o GetFirewallMulticastaddress6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddress6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallMulticastaddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o GetFirewallMulticastaddress6TaggingTagArrayOutput) ToGetFirewallMulticastaddress6TaggingTagArrayOutput() GetFirewallMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingTagArrayOutput) ToGetFirewallMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o GetFirewallMulticastaddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallMulticastaddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallMulticastaddress6TaggingTag {
		return vs[0].([]GetFirewallMulticastaddress6TaggingTag)[vs[1].(int)]
	}).(GetFirewallMulticastaddress6TaggingTagOutput)
}

type GetFirewallMulticastaddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallMulticastaddressTaggingTag `pulumi:"tags"`
}

// GetFirewallMulticastaddressTaggingInput is an input type that accepts GetFirewallMulticastaddressTaggingArgs and GetFirewallMulticastaddressTaggingOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddressTaggingInput` via:
//
//	GetFirewallMulticastaddressTaggingArgs{...}
type GetFirewallMulticastaddressTaggingInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddressTaggingOutput() GetFirewallMulticastaddressTaggingOutput
	ToGetFirewallMulticastaddressTaggingOutputWithContext(context.Context) GetFirewallMulticastaddressTaggingOutput
}

type GetFirewallMulticastaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallMulticastaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallMulticastaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddressTagging)(nil)).Elem()
}

func (i GetFirewallMulticastaddressTaggingArgs) ToGetFirewallMulticastaddressTaggingOutput() GetFirewallMulticastaddressTaggingOutput {
	return i.ToGetFirewallMulticastaddressTaggingOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddressTaggingArgs) ToGetFirewallMulticastaddressTaggingOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddressTaggingOutput)
}

// GetFirewallMulticastaddressTaggingArrayInput is an input type that accepts GetFirewallMulticastaddressTaggingArray and GetFirewallMulticastaddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddressTaggingArrayInput` via:
//
//	GetFirewallMulticastaddressTaggingArray{ GetFirewallMulticastaddressTaggingArgs{...} }
type GetFirewallMulticastaddressTaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddressTaggingArrayOutput() GetFirewallMulticastaddressTaggingArrayOutput
	ToGetFirewallMulticastaddressTaggingArrayOutputWithContext(context.Context) GetFirewallMulticastaddressTaggingArrayOutput
}

type GetFirewallMulticastaddressTaggingArray []GetFirewallMulticastaddressTaggingInput

func (GetFirewallMulticastaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddressTagging)(nil)).Elem()
}

func (i GetFirewallMulticastaddressTaggingArray) ToGetFirewallMulticastaddressTaggingArrayOutput() GetFirewallMulticastaddressTaggingArrayOutput {
	return i.ToGetFirewallMulticastaddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddressTaggingArray) ToGetFirewallMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddressTaggingArrayOutput)
}

type GetFirewallMulticastaddressTaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddressTagging)(nil)).Elem()
}

func (o GetFirewallMulticastaddressTaggingOutput) ToGetFirewallMulticastaddressTaggingOutput() GetFirewallMulticastaddressTaggingOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingOutput) ToGetFirewallMulticastaddressTaggingOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallMulticastaddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall multicastaddress.
func (o GetFirewallMulticastaddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallMulticastaddressTaggingOutput) Tags() GetFirewallMulticastaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddressTagging) []GetFirewallMulticastaddressTaggingTag { return v.Tags }).(GetFirewallMulticastaddressTaggingTagArrayOutput)
}

type GetFirewallMulticastaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddressTagging)(nil)).Elem()
}

func (o GetFirewallMulticastaddressTaggingArrayOutput) ToGetFirewallMulticastaddressTaggingArrayOutput() GetFirewallMulticastaddressTaggingArrayOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingArrayOutput) ToGetFirewallMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingArrayOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallMulticastaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallMulticastaddressTagging {
		return vs[0].([]GetFirewallMulticastaddressTagging)[vs[1].(int)]
	}).(GetFirewallMulticastaddressTaggingOutput)
}

type GetFirewallMulticastaddressTaggingTag struct {
	// Specify the name of the desired firewall multicastaddress.
	Name string `pulumi:"name"`
}

// GetFirewallMulticastaddressTaggingTagInput is an input type that accepts GetFirewallMulticastaddressTaggingTagArgs and GetFirewallMulticastaddressTaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddressTaggingTagInput` via:
//
//	GetFirewallMulticastaddressTaggingTagArgs{...}
type GetFirewallMulticastaddressTaggingTagInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddressTaggingTagOutput() GetFirewallMulticastaddressTaggingTagOutput
	ToGetFirewallMulticastaddressTaggingTagOutputWithContext(context.Context) GetFirewallMulticastaddressTaggingTagOutput
}

type GetFirewallMulticastaddressTaggingTagArgs struct {
	// Specify the name of the desired firewall multicastaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallMulticastaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallMulticastaddressTaggingTagArgs) ToGetFirewallMulticastaddressTaggingTagOutput() GetFirewallMulticastaddressTaggingTagOutput {
	return i.ToGetFirewallMulticastaddressTaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddressTaggingTagArgs) ToGetFirewallMulticastaddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddressTaggingTagOutput)
}

// GetFirewallMulticastaddressTaggingTagArrayInput is an input type that accepts GetFirewallMulticastaddressTaggingTagArray and GetFirewallMulticastaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallMulticastaddressTaggingTagArrayInput` via:
//
//	GetFirewallMulticastaddressTaggingTagArray{ GetFirewallMulticastaddressTaggingTagArgs{...} }
type GetFirewallMulticastaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallMulticastaddressTaggingTagArrayOutput() GetFirewallMulticastaddressTaggingTagArrayOutput
	ToGetFirewallMulticastaddressTaggingTagArrayOutputWithContext(context.Context) GetFirewallMulticastaddressTaggingTagArrayOutput
}

type GetFirewallMulticastaddressTaggingTagArray []GetFirewallMulticastaddressTaggingTagInput

func (GetFirewallMulticastaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallMulticastaddressTaggingTagArray) ToGetFirewallMulticastaddressTaggingTagArrayOutput() GetFirewallMulticastaddressTaggingTagArrayOutput {
	return i.ToGetFirewallMulticastaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallMulticastaddressTaggingTagArray) ToGetFirewallMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMulticastaddressTaggingTagArrayOutput)
}

type GetFirewallMulticastaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallMulticastaddressTaggingTagOutput) ToGetFirewallMulticastaddressTaggingTagOutput() GetFirewallMulticastaddressTaggingTagOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingTagOutput) ToGetFirewallMulticastaddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall multicastaddress.
func (o GetFirewallMulticastaddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMulticastaddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallMulticastaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallMulticastaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallMulticastaddressTaggingTagArrayOutput) ToGetFirewallMulticastaddressTaggingTagArrayOutput() GetFirewallMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingTagArrayOutput) ToGetFirewallMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallMulticastaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallMulticastaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallMulticastaddressTaggingTag {
		return vs[0].([]GetFirewallMulticastaddressTaggingTag)[vs[1].(int)]
	}).(GetFirewallMulticastaddressTaggingTagOutput)
}

type GetFirewallPolicy46Dstaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy46DstaddrInput is an input type that accepts GetFirewallPolicy46DstaddrArgs and GetFirewallPolicy46DstaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46DstaddrInput` via:
//
//	GetFirewallPolicy46DstaddrArgs{...}
type GetFirewallPolicy46DstaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy46DstaddrOutput() GetFirewallPolicy46DstaddrOutput
	ToGetFirewallPolicy46DstaddrOutputWithContext(context.Context) GetFirewallPolicy46DstaddrOutput
}

type GetFirewallPolicy46DstaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy46DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy46DstaddrArgs) ToGetFirewallPolicy46DstaddrOutput() GetFirewallPolicy46DstaddrOutput {
	return i.ToGetFirewallPolicy46DstaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46DstaddrArgs) ToGetFirewallPolicy46DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy46DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46DstaddrOutput)
}

// GetFirewallPolicy46DstaddrArrayInput is an input type that accepts GetFirewallPolicy46DstaddrArray and GetFirewallPolicy46DstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46DstaddrArrayInput` via:
//
//	GetFirewallPolicy46DstaddrArray{ GetFirewallPolicy46DstaddrArgs{...} }
type GetFirewallPolicy46DstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy46DstaddrArrayOutput() GetFirewallPolicy46DstaddrArrayOutput
	ToGetFirewallPolicy46DstaddrArrayOutputWithContext(context.Context) GetFirewallPolicy46DstaddrArrayOutput
}

type GetFirewallPolicy46DstaddrArray []GetFirewallPolicy46DstaddrInput

func (GetFirewallPolicy46DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy46DstaddrArray) ToGetFirewallPolicy46DstaddrArrayOutput() GetFirewallPolicy46DstaddrArrayOutput {
	return i.ToGetFirewallPolicy46DstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46DstaddrArray) ToGetFirewallPolicy46DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46DstaddrArrayOutput)
}

type GetFirewallPolicy46DstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy46DstaddrOutput) ToGetFirewallPolicy46DstaddrOutput() GetFirewallPolicy46DstaddrOutput {
	return o
}

func (o GetFirewallPolicy46DstaddrOutput) ToGetFirewallPolicy46DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy46DstaddrOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy46DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy46Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy46DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy46DstaddrArrayOutput) ToGetFirewallPolicy46DstaddrArrayOutput() GetFirewallPolicy46DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy46DstaddrArrayOutput) ToGetFirewallPolicy46DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy46DstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy46DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy46Dstaddr {
		return vs[0].([]GetFirewallPolicy46Dstaddr)[vs[1].(int)]
	}).(GetFirewallPolicy46DstaddrOutput)
}

type GetFirewallPolicy46Poolname struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy46PoolnameInput is an input type that accepts GetFirewallPolicy46PoolnameArgs and GetFirewallPolicy46PoolnameOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46PoolnameInput` via:
//
//	GetFirewallPolicy46PoolnameArgs{...}
type GetFirewallPolicy46PoolnameInput interface {
	pulumi.Input

	ToGetFirewallPolicy46PoolnameOutput() GetFirewallPolicy46PoolnameOutput
	ToGetFirewallPolicy46PoolnameOutputWithContext(context.Context) GetFirewallPolicy46PoolnameOutput
}

type GetFirewallPolicy46PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy46PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy46PoolnameArgs) ToGetFirewallPolicy46PoolnameOutput() GetFirewallPolicy46PoolnameOutput {
	return i.ToGetFirewallPolicy46PoolnameOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46PoolnameArgs) ToGetFirewallPolicy46PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy46PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46PoolnameOutput)
}

// GetFirewallPolicy46PoolnameArrayInput is an input type that accepts GetFirewallPolicy46PoolnameArray and GetFirewallPolicy46PoolnameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46PoolnameArrayInput` via:
//
//	GetFirewallPolicy46PoolnameArray{ GetFirewallPolicy46PoolnameArgs{...} }
type GetFirewallPolicy46PoolnameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy46PoolnameArrayOutput() GetFirewallPolicy46PoolnameArrayOutput
	ToGetFirewallPolicy46PoolnameArrayOutputWithContext(context.Context) GetFirewallPolicy46PoolnameArrayOutput
}

type GetFirewallPolicy46PoolnameArray []GetFirewallPolicy46PoolnameInput

func (GetFirewallPolicy46PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy46PoolnameArray) ToGetFirewallPolicy46PoolnameArrayOutput() GetFirewallPolicy46PoolnameArrayOutput {
	return i.ToGetFirewallPolicy46PoolnameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46PoolnameArray) ToGetFirewallPolicy46PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46PoolnameArrayOutput)
}

type GetFirewallPolicy46PoolnameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy46PoolnameOutput) ToGetFirewallPolicy46PoolnameOutput() GetFirewallPolicy46PoolnameOutput {
	return o
}

func (o GetFirewallPolicy46PoolnameOutput) ToGetFirewallPolicy46PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy46PoolnameOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy46PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy46Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy46PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy46PoolnameArrayOutput) ToGetFirewallPolicy46PoolnameArrayOutput() GetFirewallPolicy46PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy46PoolnameArrayOutput) ToGetFirewallPolicy46PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy46PoolnameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy46PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy46Poolname {
		return vs[0].([]GetFirewallPolicy46Poolname)[vs[1].(int)]
	}).(GetFirewallPolicy46PoolnameOutput)
}

type GetFirewallPolicy46Service struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy46ServiceInput is an input type that accepts GetFirewallPolicy46ServiceArgs and GetFirewallPolicy46ServiceOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46ServiceInput` via:
//
//	GetFirewallPolicy46ServiceArgs{...}
type GetFirewallPolicy46ServiceInput interface {
	pulumi.Input

	ToGetFirewallPolicy46ServiceOutput() GetFirewallPolicy46ServiceOutput
	ToGetFirewallPolicy46ServiceOutputWithContext(context.Context) GetFirewallPolicy46ServiceOutput
}

type GetFirewallPolicy46ServiceArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy46ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Service)(nil)).Elem()
}

func (i GetFirewallPolicy46ServiceArgs) ToGetFirewallPolicy46ServiceOutput() GetFirewallPolicy46ServiceOutput {
	return i.ToGetFirewallPolicy46ServiceOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46ServiceArgs) ToGetFirewallPolicy46ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy46ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46ServiceOutput)
}

// GetFirewallPolicy46ServiceArrayInput is an input type that accepts GetFirewallPolicy46ServiceArray and GetFirewallPolicy46ServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46ServiceArrayInput` via:
//
//	GetFirewallPolicy46ServiceArray{ GetFirewallPolicy46ServiceArgs{...} }
type GetFirewallPolicy46ServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy46ServiceArrayOutput() GetFirewallPolicy46ServiceArrayOutput
	ToGetFirewallPolicy46ServiceArrayOutputWithContext(context.Context) GetFirewallPolicy46ServiceArrayOutput
}

type GetFirewallPolicy46ServiceArray []GetFirewallPolicy46ServiceInput

func (GetFirewallPolicy46ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Service)(nil)).Elem()
}

func (i GetFirewallPolicy46ServiceArray) ToGetFirewallPolicy46ServiceArrayOutput() GetFirewallPolicy46ServiceArrayOutput {
	return i.ToGetFirewallPolicy46ServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46ServiceArray) ToGetFirewallPolicy46ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46ServiceArrayOutput)
}

type GetFirewallPolicy46ServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Service)(nil)).Elem()
}

func (o GetFirewallPolicy46ServiceOutput) ToGetFirewallPolicy46ServiceOutput() GetFirewallPolicy46ServiceOutput {
	return o
}

func (o GetFirewallPolicy46ServiceOutput) ToGetFirewallPolicy46ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy46ServiceOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy46ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy46Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy46ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Service)(nil)).Elem()
}

func (o GetFirewallPolicy46ServiceArrayOutput) ToGetFirewallPolicy46ServiceArrayOutput() GetFirewallPolicy46ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy46ServiceArrayOutput) ToGetFirewallPolicy46ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy46ServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy46ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy46Service {
		return vs[0].([]GetFirewallPolicy46Service)[vs[1].(int)]
	}).(GetFirewallPolicy46ServiceOutput)
}

type GetFirewallPolicy46Srcaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy46SrcaddrInput is an input type that accepts GetFirewallPolicy46SrcaddrArgs and GetFirewallPolicy46SrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46SrcaddrInput` via:
//
//	GetFirewallPolicy46SrcaddrArgs{...}
type GetFirewallPolicy46SrcaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy46SrcaddrOutput() GetFirewallPolicy46SrcaddrOutput
	ToGetFirewallPolicy46SrcaddrOutputWithContext(context.Context) GetFirewallPolicy46SrcaddrOutput
}

type GetFirewallPolicy46SrcaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy46SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy46SrcaddrArgs) ToGetFirewallPolicy46SrcaddrOutput() GetFirewallPolicy46SrcaddrOutput {
	return i.ToGetFirewallPolicy46SrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46SrcaddrArgs) ToGetFirewallPolicy46SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy46SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46SrcaddrOutput)
}

// GetFirewallPolicy46SrcaddrArrayInput is an input type that accepts GetFirewallPolicy46SrcaddrArray and GetFirewallPolicy46SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy46SrcaddrArrayInput` via:
//
//	GetFirewallPolicy46SrcaddrArray{ GetFirewallPolicy46SrcaddrArgs{...} }
type GetFirewallPolicy46SrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy46SrcaddrArrayOutput() GetFirewallPolicy46SrcaddrArrayOutput
	ToGetFirewallPolicy46SrcaddrArrayOutputWithContext(context.Context) GetFirewallPolicy46SrcaddrArrayOutput
}

type GetFirewallPolicy46SrcaddrArray []GetFirewallPolicy46SrcaddrInput

func (GetFirewallPolicy46SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy46SrcaddrArray) ToGetFirewallPolicy46SrcaddrArrayOutput() GetFirewallPolicy46SrcaddrArrayOutput {
	return i.ToGetFirewallPolicy46SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy46SrcaddrArray) ToGetFirewallPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy46SrcaddrArrayOutput)
}

type GetFirewallPolicy46SrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy46Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy46SrcaddrOutput) ToGetFirewallPolicy46SrcaddrOutput() GetFirewallPolicy46SrcaddrOutput {
	return o
}

func (o GetFirewallPolicy46SrcaddrOutput) ToGetFirewallPolicy46SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy46SrcaddrOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy46SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy46Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy46SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy46SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy46Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy46SrcaddrArrayOutput) ToGetFirewallPolicy46SrcaddrArrayOutput() GetFirewallPolicy46SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy46SrcaddrArrayOutput) ToGetFirewallPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy46SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy46SrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy46SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy46Srcaddr {
		return vs[0].([]GetFirewallPolicy46Srcaddr)[vs[1].(int)]
	}).(GetFirewallPolicy46SrcaddrOutput)
}

type GetFirewallPolicy64Dstaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy64DstaddrInput is an input type that accepts GetFirewallPolicy64DstaddrArgs and GetFirewallPolicy64DstaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64DstaddrInput` via:
//
//	GetFirewallPolicy64DstaddrArgs{...}
type GetFirewallPolicy64DstaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy64DstaddrOutput() GetFirewallPolicy64DstaddrOutput
	ToGetFirewallPolicy64DstaddrOutputWithContext(context.Context) GetFirewallPolicy64DstaddrOutput
}

type GetFirewallPolicy64DstaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy64DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy64DstaddrArgs) ToGetFirewallPolicy64DstaddrOutput() GetFirewallPolicy64DstaddrOutput {
	return i.ToGetFirewallPolicy64DstaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64DstaddrArgs) ToGetFirewallPolicy64DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy64DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64DstaddrOutput)
}

// GetFirewallPolicy64DstaddrArrayInput is an input type that accepts GetFirewallPolicy64DstaddrArray and GetFirewallPolicy64DstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64DstaddrArrayInput` via:
//
//	GetFirewallPolicy64DstaddrArray{ GetFirewallPolicy64DstaddrArgs{...} }
type GetFirewallPolicy64DstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy64DstaddrArrayOutput() GetFirewallPolicy64DstaddrArrayOutput
	ToGetFirewallPolicy64DstaddrArrayOutputWithContext(context.Context) GetFirewallPolicy64DstaddrArrayOutput
}

type GetFirewallPolicy64DstaddrArray []GetFirewallPolicy64DstaddrInput

func (GetFirewallPolicy64DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy64DstaddrArray) ToGetFirewallPolicy64DstaddrArrayOutput() GetFirewallPolicy64DstaddrArrayOutput {
	return i.ToGetFirewallPolicy64DstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64DstaddrArray) ToGetFirewallPolicy64DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64DstaddrArrayOutput)
}

type GetFirewallPolicy64DstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy64DstaddrOutput) ToGetFirewallPolicy64DstaddrOutput() GetFirewallPolicy64DstaddrOutput {
	return o
}

func (o GetFirewallPolicy64DstaddrOutput) ToGetFirewallPolicy64DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy64DstaddrOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy64DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy64Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy64DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy64DstaddrArrayOutput) ToGetFirewallPolicy64DstaddrArrayOutput() GetFirewallPolicy64DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy64DstaddrArrayOutput) ToGetFirewallPolicy64DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy64DstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy64DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy64Dstaddr {
		return vs[0].([]GetFirewallPolicy64Dstaddr)[vs[1].(int)]
	}).(GetFirewallPolicy64DstaddrOutput)
}

type GetFirewallPolicy64Poolname struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy64PoolnameInput is an input type that accepts GetFirewallPolicy64PoolnameArgs and GetFirewallPolicy64PoolnameOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64PoolnameInput` via:
//
//	GetFirewallPolicy64PoolnameArgs{...}
type GetFirewallPolicy64PoolnameInput interface {
	pulumi.Input

	ToGetFirewallPolicy64PoolnameOutput() GetFirewallPolicy64PoolnameOutput
	ToGetFirewallPolicy64PoolnameOutputWithContext(context.Context) GetFirewallPolicy64PoolnameOutput
}

type GetFirewallPolicy64PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy64PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy64PoolnameArgs) ToGetFirewallPolicy64PoolnameOutput() GetFirewallPolicy64PoolnameOutput {
	return i.ToGetFirewallPolicy64PoolnameOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64PoolnameArgs) ToGetFirewallPolicy64PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy64PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64PoolnameOutput)
}

// GetFirewallPolicy64PoolnameArrayInput is an input type that accepts GetFirewallPolicy64PoolnameArray and GetFirewallPolicy64PoolnameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64PoolnameArrayInput` via:
//
//	GetFirewallPolicy64PoolnameArray{ GetFirewallPolicy64PoolnameArgs{...} }
type GetFirewallPolicy64PoolnameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy64PoolnameArrayOutput() GetFirewallPolicy64PoolnameArrayOutput
	ToGetFirewallPolicy64PoolnameArrayOutputWithContext(context.Context) GetFirewallPolicy64PoolnameArrayOutput
}

type GetFirewallPolicy64PoolnameArray []GetFirewallPolicy64PoolnameInput

func (GetFirewallPolicy64PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy64PoolnameArray) ToGetFirewallPolicy64PoolnameArrayOutput() GetFirewallPolicy64PoolnameArrayOutput {
	return i.ToGetFirewallPolicy64PoolnameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64PoolnameArray) ToGetFirewallPolicy64PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64PoolnameArrayOutput)
}

type GetFirewallPolicy64PoolnameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy64PoolnameOutput) ToGetFirewallPolicy64PoolnameOutput() GetFirewallPolicy64PoolnameOutput {
	return o
}

func (o GetFirewallPolicy64PoolnameOutput) ToGetFirewallPolicy64PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy64PoolnameOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy64PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy64Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy64PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy64PoolnameArrayOutput) ToGetFirewallPolicy64PoolnameArrayOutput() GetFirewallPolicy64PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy64PoolnameArrayOutput) ToGetFirewallPolicy64PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy64PoolnameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy64PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy64Poolname {
		return vs[0].([]GetFirewallPolicy64Poolname)[vs[1].(int)]
	}).(GetFirewallPolicy64PoolnameOutput)
}

type GetFirewallPolicy64Service struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy64ServiceInput is an input type that accepts GetFirewallPolicy64ServiceArgs and GetFirewallPolicy64ServiceOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64ServiceInput` via:
//
//	GetFirewallPolicy64ServiceArgs{...}
type GetFirewallPolicy64ServiceInput interface {
	pulumi.Input

	ToGetFirewallPolicy64ServiceOutput() GetFirewallPolicy64ServiceOutput
	ToGetFirewallPolicy64ServiceOutputWithContext(context.Context) GetFirewallPolicy64ServiceOutput
}

type GetFirewallPolicy64ServiceArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy64ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Service)(nil)).Elem()
}

func (i GetFirewallPolicy64ServiceArgs) ToGetFirewallPolicy64ServiceOutput() GetFirewallPolicy64ServiceOutput {
	return i.ToGetFirewallPolicy64ServiceOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64ServiceArgs) ToGetFirewallPolicy64ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy64ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64ServiceOutput)
}

// GetFirewallPolicy64ServiceArrayInput is an input type that accepts GetFirewallPolicy64ServiceArray and GetFirewallPolicy64ServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64ServiceArrayInput` via:
//
//	GetFirewallPolicy64ServiceArray{ GetFirewallPolicy64ServiceArgs{...} }
type GetFirewallPolicy64ServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy64ServiceArrayOutput() GetFirewallPolicy64ServiceArrayOutput
	ToGetFirewallPolicy64ServiceArrayOutputWithContext(context.Context) GetFirewallPolicy64ServiceArrayOutput
}

type GetFirewallPolicy64ServiceArray []GetFirewallPolicy64ServiceInput

func (GetFirewallPolicy64ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Service)(nil)).Elem()
}

func (i GetFirewallPolicy64ServiceArray) ToGetFirewallPolicy64ServiceArrayOutput() GetFirewallPolicy64ServiceArrayOutput {
	return i.ToGetFirewallPolicy64ServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64ServiceArray) ToGetFirewallPolicy64ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64ServiceArrayOutput)
}

type GetFirewallPolicy64ServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Service)(nil)).Elem()
}

func (o GetFirewallPolicy64ServiceOutput) ToGetFirewallPolicy64ServiceOutput() GetFirewallPolicy64ServiceOutput {
	return o
}

func (o GetFirewallPolicy64ServiceOutput) ToGetFirewallPolicy64ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy64ServiceOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy64ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy64Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy64ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Service)(nil)).Elem()
}

func (o GetFirewallPolicy64ServiceArrayOutput) ToGetFirewallPolicy64ServiceArrayOutput() GetFirewallPolicy64ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy64ServiceArrayOutput) ToGetFirewallPolicy64ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy64ServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy64ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy64Service {
		return vs[0].([]GetFirewallPolicy64Service)[vs[1].(int)]
	}).(GetFirewallPolicy64ServiceOutput)
}

type GetFirewallPolicy64Srcaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy64SrcaddrInput is an input type that accepts GetFirewallPolicy64SrcaddrArgs and GetFirewallPolicy64SrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64SrcaddrInput` via:
//
//	GetFirewallPolicy64SrcaddrArgs{...}
type GetFirewallPolicy64SrcaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy64SrcaddrOutput() GetFirewallPolicy64SrcaddrOutput
	ToGetFirewallPolicy64SrcaddrOutputWithContext(context.Context) GetFirewallPolicy64SrcaddrOutput
}

type GetFirewallPolicy64SrcaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy64SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy64SrcaddrArgs) ToGetFirewallPolicy64SrcaddrOutput() GetFirewallPolicy64SrcaddrOutput {
	return i.ToGetFirewallPolicy64SrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64SrcaddrArgs) ToGetFirewallPolicy64SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy64SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64SrcaddrOutput)
}

// GetFirewallPolicy64SrcaddrArrayInput is an input type that accepts GetFirewallPolicy64SrcaddrArray and GetFirewallPolicy64SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy64SrcaddrArrayInput` via:
//
//	GetFirewallPolicy64SrcaddrArray{ GetFirewallPolicy64SrcaddrArgs{...} }
type GetFirewallPolicy64SrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy64SrcaddrArrayOutput() GetFirewallPolicy64SrcaddrArrayOutput
	ToGetFirewallPolicy64SrcaddrArrayOutputWithContext(context.Context) GetFirewallPolicy64SrcaddrArrayOutput
}

type GetFirewallPolicy64SrcaddrArray []GetFirewallPolicy64SrcaddrInput

func (GetFirewallPolicy64SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy64SrcaddrArray) ToGetFirewallPolicy64SrcaddrArrayOutput() GetFirewallPolicy64SrcaddrArrayOutput {
	return i.ToGetFirewallPolicy64SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy64SrcaddrArray) ToGetFirewallPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy64SrcaddrArrayOutput)
}

type GetFirewallPolicy64SrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy64Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy64SrcaddrOutput) ToGetFirewallPolicy64SrcaddrOutput() GetFirewallPolicy64SrcaddrOutput {
	return o
}

func (o GetFirewallPolicy64SrcaddrOutput) ToGetFirewallPolicy64SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy64SrcaddrOutput {
	return o
}

// IP pool name.
func (o GetFirewallPolicy64SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy64Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy64SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy64SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy64Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy64SrcaddrArrayOutput) ToGetFirewallPolicy64SrcaddrArrayOutput() GetFirewallPolicy64SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy64SrcaddrArrayOutput) ToGetFirewallPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy64SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy64SrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy64SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy64Srcaddr {
		return vs[0].([]GetFirewallPolicy64Srcaddr)[vs[1].(int)]
	}).(GetFirewallPolicy64SrcaddrOutput)
}

type GetFirewallPolicy6AppCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallPolicy6AppCategoryInput is an input type that accepts GetFirewallPolicy6AppCategoryArgs and GetFirewallPolicy6AppCategoryOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6AppCategoryInput` via:
//
//	GetFirewallPolicy6AppCategoryArgs{...}
type GetFirewallPolicy6AppCategoryInput interface {
	pulumi.Input

	ToGetFirewallPolicy6AppCategoryOutput() GetFirewallPolicy6AppCategoryOutput
	ToGetFirewallPolicy6AppCategoryOutputWithContext(context.Context) GetFirewallPolicy6AppCategoryOutput
}

type GetFirewallPolicy6AppCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicy6AppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6AppCategory)(nil)).Elem()
}

func (i GetFirewallPolicy6AppCategoryArgs) ToGetFirewallPolicy6AppCategoryOutput() GetFirewallPolicy6AppCategoryOutput {
	return i.ToGetFirewallPolicy6AppCategoryOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6AppCategoryArgs) ToGetFirewallPolicy6AppCategoryOutputWithContext(ctx context.Context) GetFirewallPolicy6AppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6AppCategoryOutput)
}

// GetFirewallPolicy6AppCategoryArrayInput is an input type that accepts GetFirewallPolicy6AppCategoryArray and GetFirewallPolicy6AppCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6AppCategoryArrayInput` via:
//
//	GetFirewallPolicy6AppCategoryArray{ GetFirewallPolicy6AppCategoryArgs{...} }
type GetFirewallPolicy6AppCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6AppCategoryArrayOutput() GetFirewallPolicy6AppCategoryArrayOutput
	ToGetFirewallPolicy6AppCategoryArrayOutputWithContext(context.Context) GetFirewallPolicy6AppCategoryArrayOutput
}

type GetFirewallPolicy6AppCategoryArray []GetFirewallPolicy6AppCategoryInput

func (GetFirewallPolicy6AppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6AppCategory)(nil)).Elem()
}

func (i GetFirewallPolicy6AppCategoryArray) ToGetFirewallPolicy6AppCategoryArrayOutput() GetFirewallPolicy6AppCategoryArrayOutput {
	return i.ToGetFirewallPolicy6AppCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6AppCategoryArray) ToGetFirewallPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6AppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6AppCategoryArrayOutput)
}

type GetFirewallPolicy6AppCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6AppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6AppCategory)(nil)).Elem()
}

func (o GetFirewallPolicy6AppCategoryOutput) ToGetFirewallPolicy6AppCategoryOutput() GetFirewallPolicy6AppCategoryOutput {
	return o
}

func (o GetFirewallPolicy6AppCategoryOutput) ToGetFirewallPolicy6AppCategoryOutputWithContext(ctx context.Context) GetFirewallPolicy6AppCategoryOutput {
	return o
}

// URL category ID.
func (o GetFirewallPolicy6AppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicy6AppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicy6AppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6AppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6AppCategory)(nil)).Elem()
}

func (o GetFirewallPolicy6AppCategoryArrayOutput) ToGetFirewallPolicy6AppCategoryArrayOutput() GetFirewallPolicy6AppCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicy6AppCategoryArrayOutput) ToGetFirewallPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6AppCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicy6AppCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6AppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6AppCategory {
		return vs[0].([]GetFirewallPolicy6AppCategory)[vs[1].(int)]
	}).(GetFirewallPolicy6AppCategoryOutput)
}

type GetFirewallPolicy6AppGroup struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6AppGroupInput is an input type that accepts GetFirewallPolicy6AppGroupArgs and GetFirewallPolicy6AppGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6AppGroupInput` via:
//
//	GetFirewallPolicy6AppGroupArgs{...}
type GetFirewallPolicy6AppGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicy6AppGroupOutput() GetFirewallPolicy6AppGroupOutput
	ToGetFirewallPolicy6AppGroupOutputWithContext(context.Context) GetFirewallPolicy6AppGroupOutput
}

type GetFirewallPolicy6AppGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6AppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6AppGroup)(nil)).Elem()
}

func (i GetFirewallPolicy6AppGroupArgs) ToGetFirewallPolicy6AppGroupOutput() GetFirewallPolicy6AppGroupOutput {
	return i.ToGetFirewallPolicy6AppGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6AppGroupArgs) ToGetFirewallPolicy6AppGroupOutputWithContext(ctx context.Context) GetFirewallPolicy6AppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6AppGroupOutput)
}

// GetFirewallPolicy6AppGroupArrayInput is an input type that accepts GetFirewallPolicy6AppGroupArray and GetFirewallPolicy6AppGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6AppGroupArrayInput` via:
//
//	GetFirewallPolicy6AppGroupArray{ GetFirewallPolicy6AppGroupArgs{...} }
type GetFirewallPolicy6AppGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6AppGroupArrayOutput() GetFirewallPolicy6AppGroupArrayOutput
	ToGetFirewallPolicy6AppGroupArrayOutputWithContext(context.Context) GetFirewallPolicy6AppGroupArrayOutput
}

type GetFirewallPolicy6AppGroupArray []GetFirewallPolicy6AppGroupInput

func (GetFirewallPolicy6AppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6AppGroup)(nil)).Elem()
}

func (i GetFirewallPolicy6AppGroupArray) ToGetFirewallPolicy6AppGroupArrayOutput() GetFirewallPolicy6AppGroupArrayOutput {
	return i.ToGetFirewallPolicy6AppGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6AppGroupArray) ToGetFirewallPolicy6AppGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6AppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6AppGroupArrayOutput)
}

type GetFirewallPolicy6AppGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6AppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6AppGroup)(nil)).Elem()
}

func (o GetFirewallPolicy6AppGroupOutput) ToGetFirewallPolicy6AppGroupOutput() GetFirewallPolicy6AppGroupOutput {
	return o
}

func (o GetFirewallPolicy6AppGroupOutput) ToGetFirewallPolicy6AppGroupOutputWithContext(ctx context.Context) GetFirewallPolicy6AppGroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6AppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6AppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6AppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6AppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6AppGroup)(nil)).Elem()
}

func (o GetFirewallPolicy6AppGroupArrayOutput) ToGetFirewallPolicy6AppGroupArrayOutput() GetFirewallPolicy6AppGroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6AppGroupArrayOutput) ToGetFirewallPolicy6AppGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6AppGroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6AppGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6AppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6AppGroup {
		return vs[0].([]GetFirewallPolicy6AppGroup)[vs[1].(int)]
	}).(GetFirewallPolicy6AppGroupOutput)
}

type GetFirewallPolicy6Application struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallPolicy6ApplicationInput is an input type that accepts GetFirewallPolicy6ApplicationArgs and GetFirewallPolicy6ApplicationOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6ApplicationInput` via:
//
//	GetFirewallPolicy6ApplicationArgs{...}
type GetFirewallPolicy6ApplicationInput interface {
	pulumi.Input

	ToGetFirewallPolicy6ApplicationOutput() GetFirewallPolicy6ApplicationOutput
	ToGetFirewallPolicy6ApplicationOutputWithContext(context.Context) GetFirewallPolicy6ApplicationOutput
}

type GetFirewallPolicy6ApplicationArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicy6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Application)(nil)).Elem()
}

func (i GetFirewallPolicy6ApplicationArgs) ToGetFirewallPolicy6ApplicationOutput() GetFirewallPolicy6ApplicationOutput {
	return i.ToGetFirewallPolicy6ApplicationOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6ApplicationArgs) ToGetFirewallPolicy6ApplicationOutputWithContext(ctx context.Context) GetFirewallPolicy6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6ApplicationOutput)
}

// GetFirewallPolicy6ApplicationArrayInput is an input type that accepts GetFirewallPolicy6ApplicationArray and GetFirewallPolicy6ApplicationArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6ApplicationArrayInput` via:
//
//	GetFirewallPolicy6ApplicationArray{ GetFirewallPolicy6ApplicationArgs{...} }
type GetFirewallPolicy6ApplicationArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6ApplicationArrayOutput() GetFirewallPolicy6ApplicationArrayOutput
	ToGetFirewallPolicy6ApplicationArrayOutputWithContext(context.Context) GetFirewallPolicy6ApplicationArrayOutput
}

type GetFirewallPolicy6ApplicationArray []GetFirewallPolicy6ApplicationInput

func (GetFirewallPolicy6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Application)(nil)).Elem()
}

func (i GetFirewallPolicy6ApplicationArray) ToGetFirewallPolicy6ApplicationArrayOutput() GetFirewallPolicy6ApplicationArrayOutput {
	return i.ToGetFirewallPolicy6ApplicationArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6ApplicationArray) ToGetFirewallPolicy6ApplicationArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6ApplicationArrayOutput)
}

type GetFirewallPolicy6ApplicationOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Application)(nil)).Elem()
}

func (o GetFirewallPolicy6ApplicationOutput) ToGetFirewallPolicy6ApplicationOutput() GetFirewallPolicy6ApplicationOutput {
	return o
}

func (o GetFirewallPolicy6ApplicationOutput) ToGetFirewallPolicy6ApplicationOutputWithContext(ctx context.Context) GetFirewallPolicy6ApplicationOutput {
	return o
}

// URL category ID.
func (o GetFirewallPolicy6ApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Application) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicy6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Application)(nil)).Elem()
}

func (o GetFirewallPolicy6ApplicationArrayOutput) ToGetFirewallPolicy6ApplicationArrayOutput() GetFirewallPolicy6ApplicationArrayOutput {
	return o
}

func (o GetFirewallPolicy6ApplicationArrayOutput) ToGetFirewallPolicy6ApplicationArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6ApplicationArrayOutput {
	return o
}

func (o GetFirewallPolicy6ApplicationArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Application {
		return vs[0].([]GetFirewallPolicy6Application)[vs[1].(int)]
	}).(GetFirewallPolicy6ApplicationOutput)
}

type GetFirewallPolicy6CustomLogField struct {
	// Custom log field.
	FieldId string `pulumi:"fieldId"`
}

// GetFirewallPolicy6CustomLogFieldInput is an input type that accepts GetFirewallPolicy6CustomLogFieldArgs and GetFirewallPolicy6CustomLogFieldOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6CustomLogFieldInput` via:
//
//	GetFirewallPolicy6CustomLogFieldArgs{...}
type GetFirewallPolicy6CustomLogFieldInput interface {
	pulumi.Input

	ToGetFirewallPolicy6CustomLogFieldOutput() GetFirewallPolicy6CustomLogFieldOutput
	ToGetFirewallPolicy6CustomLogFieldOutputWithContext(context.Context) GetFirewallPolicy6CustomLogFieldOutput
}

type GetFirewallPolicy6CustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringInput `pulumi:"fieldId"`
}

func (GetFirewallPolicy6CustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6CustomLogField)(nil)).Elem()
}

func (i GetFirewallPolicy6CustomLogFieldArgs) ToGetFirewallPolicy6CustomLogFieldOutput() GetFirewallPolicy6CustomLogFieldOutput {
	return i.ToGetFirewallPolicy6CustomLogFieldOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6CustomLogFieldArgs) ToGetFirewallPolicy6CustomLogFieldOutputWithContext(ctx context.Context) GetFirewallPolicy6CustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6CustomLogFieldOutput)
}

// GetFirewallPolicy6CustomLogFieldArrayInput is an input type that accepts GetFirewallPolicy6CustomLogFieldArray and GetFirewallPolicy6CustomLogFieldArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6CustomLogFieldArrayInput` via:
//
//	GetFirewallPolicy6CustomLogFieldArray{ GetFirewallPolicy6CustomLogFieldArgs{...} }
type GetFirewallPolicy6CustomLogFieldArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6CustomLogFieldArrayOutput() GetFirewallPolicy6CustomLogFieldArrayOutput
	ToGetFirewallPolicy6CustomLogFieldArrayOutputWithContext(context.Context) GetFirewallPolicy6CustomLogFieldArrayOutput
}

type GetFirewallPolicy6CustomLogFieldArray []GetFirewallPolicy6CustomLogFieldInput

func (GetFirewallPolicy6CustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6CustomLogField)(nil)).Elem()
}

func (i GetFirewallPolicy6CustomLogFieldArray) ToGetFirewallPolicy6CustomLogFieldArrayOutput() GetFirewallPolicy6CustomLogFieldArrayOutput {
	return i.ToGetFirewallPolicy6CustomLogFieldArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6CustomLogFieldArray) ToGetFirewallPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6CustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6CustomLogFieldArrayOutput)
}

type GetFirewallPolicy6CustomLogFieldOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6CustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6CustomLogField)(nil)).Elem()
}

func (o GetFirewallPolicy6CustomLogFieldOutput) ToGetFirewallPolicy6CustomLogFieldOutput() GetFirewallPolicy6CustomLogFieldOutput {
	return o
}

func (o GetFirewallPolicy6CustomLogFieldOutput) ToGetFirewallPolicy6CustomLogFieldOutputWithContext(ctx context.Context) GetFirewallPolicy6CustomLogFieldOutput {
	return o
}

// Custom log field.
func (o GetFirewallPolicy6CustomLogFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6CustomLogField) string { return v.FieldId }).(pulumi.StringOutput)
}

type GetFirewallPolicy6CustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6CustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6CustomLogField)(nil)).Elem()
}

func (o GetFirewallPolicy6CustomLogFieldArrayOutput) ToGetFirewallPolicy6CustomLogFieldArrayOutput() GetFirewallPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o GetFirewallPolicy6CustomLogFieldArrayOutput) ToGetFirewallPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o GetFirewallPolicy6CustomLogFieldArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6CustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6CustomLogField {
		return vs[0].([]GetFirewallPolicy6CustomLogField)[vs[1].(int)]
	}).(GetFirewallPolicy6CustomLogFieldOutput)
}

type GetFirewallPolicy6Device struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6DeviceInput is an input type that accepts GetFirewallPolicy6DeviceArgs and GetFirewallPolicy6DeviceOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DeviceInput` via:
//
//	GetFirewallPolicy6DeviceArgs{...}
type GetFirewallPolicy6DeviceInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DeviceOutput() GetFirewallPolicy6DeviceOutput
	ToGetFirewallPolicy6DeviceOutputWithContext(context.Context) GetFirewallPolicy6DeviceOutput
}

type GetFirewallPolicy6DeviceArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Device)(nil)).Elem()
}

func (i GetFirewallPolicy6DeviceArgs) ToGetFirewallPolicy6DeviceOutput() GetFirewallPolicy6DeviceOutput {
	return i.ToGetFirewallPolicy6DeviceOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DeviceArgs) ToGetFirewallPolicy6DeviceOutputWithContext(ctx context.Context) GetFirewallPolicy6DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DeviceOutput)
}

// GetFirewallPolicy6DeviceArrayInput is an input type that accepts GetFirewallPolicy6DeviceArray and GetFirewallPolicy6DeviceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DeviceArrayInput` via:
//
//	GetFirewallPolicy6DeviceArray{ GetFirewallPolicy6DeviceArgs{...} }
type GetFirewallPolicy6DeviceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DeviceArrayOutput() GetFirewallPolicy6DeviceArrayOutput
	ToGetFirewallPolicy6DeviceArrayOutputWithContext(context.Context) GetFirewallPolicy6DeviceArrayOutput
}

type GetFirewallPolicy6DeviceArray []GetFirewallPolicy6DeviceInput

func (GetFirewallPolicy6DeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Device)(nil)).Elem()
}

func (i GetFirewallPolicy6DeviceArray) ToGetFirewallPolicy6DeviceArrayOutput() GetFirewallPolicy6DeviceArrayOutput {
	return i.ToGetFirewallPolicy6DeviceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DeviceArray) ToGetFirewallPolicy6DeviceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DeviceArrayOutput)
}

type GetFirewallPolicy6DeviceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Device)(nil)).Elem()
}

func (o GetFirewallPolicy6DeviceOutput) ToGetFirewallPolicy6DeviceOutput() GetFirewallPolicy6DeviceOutput {
	return o
}

func (o GetFirewallPolicy6DeviceOutput) ToGetFirewallPolicy6DeviceOutputWithContext(ctx context.Context) GetFirewallPolicy6DeviceOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6DeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Device) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6DeviceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Device)(nil)).Elem()
}

func (o GetFirewallPolicy6DeviceArrayOutput) ToGetFirewallPolicy6DeviceArrayOutput() GetFirewallPolicy6DeviceArrayOutput {
	return o
}

func (o GetFirewallPolicy6DeviceArrayOutput) ToGetFirewallPolicy6DeviceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DeviceArrayOutput {
	return o
}

func (o GetFirewallPolicy6DeviceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6DeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Device {
		return vs[0].([]GetFirewallPolicy6Device)[vs[1].(int)]
	}).(GetFirewallPolicy6DeviceOutput)
}

type GetFirewallPolicy6Dstaddr struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6DstaddrInput is an input type that accepts GetFirewallPolicy6DstaddrArgs and GetFirewallPolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DstaddrInput` via:
//
//	GetFirewallPolicy6DstaddrArgs{...}
type GetFirewallPolicy6DstaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DstaddrOutput() GetFirewallPolicy6DstaddrOutput
	ToGetFirewallPolicy6DstaddrOutputWithContext(context.Context) GetFirewallPolicy6DstaddrOutput
}

type GetFirewallPolicy6DstaddrArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy6DstaddrArgs) ToGetFirewallPolicy6DstaddrOutput() GetFirewallPolicy6DstaddrOutput {
	return i.ToGetFirewallPolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DstaddrArgs) ToGetFirewallPolicy6DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DstaddrOutput)
}

// GetFirewallPolicy6DstaddrArrayInput is an input type that accepts GetFirewallPolicy6DstaddrArray and GetFirewallPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DstaddrArrayInput` via:
//
//	GetFirewallPolicy6DstaddrArray{ GetFirewallPolicy6DstaddrArgs{...} }
type GetFirewallPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DstaddrArrayOutput() GetFirewallPolicy6DstaddrArrayOutput
	ToGetFirewallPolicy6DstaddrArrayOutputWithContext(context.Context) GetFirewallPolicy6DstaddrArrayOutput
}

type GetFirewallPolicy6DstaddrArray []GetFirewallPolicy6DstaddrInput

func (GetFirewallPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Dstaddr)(nil)).Elem()
}

func (i GetFirewallPolicy6DstaddrArray) ToGetFirewallPolicy6DstaddrArrayOutput() GetFirewallPolicy6DstaddrArrayOutput {
	return i.ToGetFirewallPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DstaddrArray) ToGetFirewallPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DstaddrArrayOutput)
}

type GetFirewallPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy6DstaddrOutput) ToGetFirewallPolicy6DstaddrOutput() GetFirewallPolicy6DstaddrOutput {
	return o
}

func (o GetFirewallPolicy6DstaddrOutput) ToGetFirewallPolicy6DstaddrOutputWithContext(ctx context.Context) GetFirewallPolicy6DstaddrOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Dstaddr)(nil)).Elem()
}

func (o GetFirewallPolicy6DstaddrArrayOutput) ToGetFirewallPolicy6DstaddrArrayOutput() GetFirewallPolicy6DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy6DstaddrArrayOutput) ToGetFirewallPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Dstaddr {
		return vs[0].([]GetFirewallPolicy6Dstaddr)[vs[1].(int)]
	}).(GetFirewallPolicy6DstaddrOutput)
}

type GetFirewallPolicy6Dstintf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6DstintfInput is an input type that accepts GetFirewallPolicy6DstintfArgs and GetFirewallPolicy6DstintfOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DstintfInput` via:
//
//	GetFirewallPolicy6DstintfArgs{...}
type GetFirewallPolicy6DstintfInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DstintfOutput() GetFirewallPolicy6DstintfOutput
	ToGetFirewallPolicy6DstintfOutputWithContext(context.Context) GetFirewallPolicy6DstintfOutput
}

type GetFirewallPolicy6DstintfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6DstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Dstintf)(nil)).Elem()
}

func (i GetFirewallPolicy6DstintfArgs) ToGetFirewallPolicy6DstintfOutput() GetFirewallPolicy6DstintfOutput {
	return i.ToGetFirewallPolicy6DstintfOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DstintfArgs) ToGetFirewallPolicy6DstintfOutputWithContext(ctx context.Context) GetFirewallPolicy6DstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DstintfOutput)
}

// GetFirewallPolicy6DstintfArrayInput is an input type that accepts GetFirewallPolicy6DstintfArray and GetFirewallPolicy6DstintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6DstintfArrayInput` via:
//
//	GetFirewallPolicy6DstintfArray{ GetFirewallPolicy6DstintfArgs{...} }
type GetFirewallPolicy6DstintfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6DstintfArrayOutput() GetFirewallPolicy6DstintfArrayOutput
	ToGetFirewallPolicy6DstintfArrayOutputWithContext(context.Context) GetFirewallPolicy6DstintfArrayOutput
}

type GetFirewallPolicy6DstintfArray []GetFirewallPolicy6DstintfInput

func (GetFirewallPolicy6DstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Dstintf)(nil)).Elem()
}

func (i GetFirewallPolicy6DstintfArray) ToGetFirewallPolicy6DstintfArrayOutput() GetFirewallPolicy6DstintfArrayOutput {
	return i.ToGetFirewallPolicy6DstintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6DstintfArray) ToGetFirewallPolicy6DstintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6DstintfArrayOutput)
}

type GetFirewallPolicy6DstintfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Dstintf)(nil)).Elem()
}

func (o GetFirewallPolicy6DstintfOutput) ToGetFirewallPolicy6DstintfOutput() GetFirewallPolicy6DstintfOutput {
	return o
}

func (o GetFirewallPolicy6DstintfOutput) ToGetFirewallPolicy6DstintfOutputWithContext(ctx context.Context) GetFirewallPolicy6DstintfOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6DstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Dstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6DstintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6DstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Dstintf)(nil)).Elem()
}

func (o GetFirewallPolicy6DstintfArrayOutput) ToGetFirewallPolicy6DstintfArrayOutput() GetFirewallPolicy6DstintfArrayOutput {
	return o
}

func (o GetFirewallPolicy6DstintfArrayOutput) ToGetFirewallPolicy6DstintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6DstintfArrayOutput {
	return o
}

func (o GetFirewallPolicy6DstintfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6DstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Dstintf {
		return vs[0].([]GetFirewallPolicy6Dstintf)[vs[1].(int)]
	}).(GetFirewallPolicy6DstintfOutput)
}

type GetFirewallPolicy6FssoGroup struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6FssoGroupInput is an input type that accepts GetFirewallPolicy6FssoGroupArgs and GetFirewallPolicy6FssoGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6FssoGroupInput` via:
//
//	GetFirewallPolicy6FssoGroupArgs{...}
type GetFirewallPolicy6FssoGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicy6FssoGroupOutput() GetFirewallPolicy6FssoGroupOutput
	ToGetFirewallPolicy6FssoGroupOutputWithContext(context.Context) GetFirewallPolicy6FssoGroupOutput
}

type GetFirewallPolicy6FssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6FssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6FssoGroup)(nil)).Elem()
}

func (i GetFirewallPolicy6FssoGroupArgs) ToGetFirewallPolicy6FssoGroupOutput() GetFirewallPolicy6FssoGroupOutput {
	return i.ToGetFirewallPolicy6FssoGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6FssoGroupArgs) ToGetFirewallPolicy6FssoGroupOutputWithContext(ctx context.Context) GetFirewallPolicy6FssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6FssoGroupOutput)
}

// GetFirewallPolicy6FssoGroupArrayInput is an input type that accepts GetFirewallPolicy6FssoGroupArray and GetFirewallPolicy6FssoGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6FssoGroupArrayInput` via:
//
//	GetFirewallPolicy6FssoGroupArray{ GetFirewallPolicy6FssoGroupArgs{...} }
type GetFirewallPolicy6FssoGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6FssoGroupArrayOutput() GetFirewallPolicy6FssoGroupArrayOutput
	ToGetFirewallPolicy6FssoGroupArrayOutputWithContext(context.Context) GetFirewallPolicy6FssoGroupArrayOutput
}

type GetFirewallPolicy6FssoGroupArray []GetFirewallPolicy6FssoGroupInput

func (GetFirewallPolicy6FssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6FssoGroup)(nil)).Elem()
}

func (i GetFirewallPolicy6FssoGroupArray) ToGetFirewallPolicy6FssoGroupArrayOutput() GetFirewallPolicy6FssoGroupArrayOutput {
	return i.ToGetFirewallPolicy6FssoGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6FssoGroupArray) ToGetFirewallPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6FssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6FssoGroupArrayOutput)
}

type GetFirewallPolicy6FssoGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6FssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6FssoGroup)(nil)).Elem()
}

func (o GetFirewallPolicy6FssoGroupOutput) ToGetFirewallPolicy6FssoGroupOutput() GetFirewallPolicy6FssoGroupOutput {
	return o
}

func (o GetFirewallPolicy6FssoGroupOutput) ToGetFirewallPolicy6FssoGroupOutputWithContext(ctx context.Context) GetFirewallPolicy6FssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6FssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6FssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6FssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6FssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6FssoGroup)(nil)).Elem()
}

func (o GetFirewallPolicy6FssoGroupArrayOutput) ToGetFirewallPolicy6FssoGroupArrayOutput() GetFirewallPolicy6FssoGroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6FssoGroupArrayOutput) ToGetFirewallPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6FssoGroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6FssoGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6FssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6FssoGroup {
		return vs[0].([]GetFirewallPolicy6FssoGroup)[vs[1].(int)]
	}).(GetFirewallPolicy6FssoGroupOutput)
}

type GetFirewallPolicy6Group struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6GroupInput is an input type that accepts GetFirewallPolicy6GroupArgs and GetFirewallPolicy6GroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6GroupInput` via:
//
//	GetFirewallPolicy6GroupArgs{...}
type GetFirewallPolicy6GroupInput interface {
	pulumi.Input

	ToGetFirewallPolicy6GroupOutput() GetFirewallPolicy6GroupOutput
	ToGetFirewallPolicy6GroupOutputWithContext(context.Context) GetFirewallPolicy6GroupOutput
}

type GetFirewallPolicy6GroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Group)(nil)).Elem()
}

func (i GetFirewallPolicy6GroupArgs) ToGetFirewallPolicy6GroupOutput() GetFirewallPolicy6GroupOutput {
	return i.ToGetFirewallPolicy6GroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6GroupArgs) ToGetFirewallPolicy6GroupOutputWithContext(ctx context.Context) GetFirewallPolicy6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6GroupOutput)
}

// GetFirewallPolicy6GroupArrayInput is an input type that accepts GetFirewallPolicy6GroupArray and GetFirewallPolicy6GroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6GroupArrayInput` via:
//
//	GetFirewallPolicy6GroupArray{ GetFirewallPolicy6GroupArgs{...} }
type GetFirewallPolicy6GroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6GroupArrayOutput() GetFirewallPolicy6GroupArrayOutput
	ToGetFirewallPolicy6GroupArrayOutputWithContext(context.Context) GetFirewallPolicy6GroupArrayOutput
}

type GetFirewallPolicy6GroupArray []GetFirewallPolicy6GroupInput

func (GetFirewallPolicy6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Group)(nil)).Elem()
}

func (i GetFirewallPolicy6GroupArray) ToGetFirewallPolicy6GroupArrayOutput() GetFirewallPolicy6GroupArrayOutput {
	return i.ToGetFirewallPolicy6GroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6GroupArray) ToGetFirewallPolicy6GroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6GroupArrayOutput)
}

type GetFirewallPolicy6GroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Group)(nil)).Elem()
}

func (o GetFirewallPolicy6GroupOutput) ToGetFirewallPolicy6GroupOutput() GetFirewallPolicy6GroupOutput {
	return o
}

func (o GetFirewallPolicy6GroupOutput) ToGetFirewallPolicy6GroupOutputWithContext(ctx context.Context) GetFirewallPolicy6GroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Group) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6GroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Group)(nil)).Elem()
}

func (o GetFirewallPolicy6GroupArrayOutput) ToGetFirewallPolicy6GroupArrayOutput() GetFirewallPolicy6GroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6GroupArrayOutput) ToGetFirewallPolicy6GroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6GroupArrayOutput {
	return o
}

func (o GetFirewallPolicy6GroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Group {
		return vs[0].([]GetFirewallPolicy6Group)[vs[1].(int)]
	}).(GetFirewallPolicy6GroupOutput)
}

type GetFirewallPolicy6Poolname struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6PoolnameInput is an input type that accepts GetFirewallPolicy6PoolnameArgs and GetFirewallPolicy6PoolnameOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6PoolnameInput` via:
//
//	GetFirewallPolicy6PoolnameArgs{...}
type GetFirewallPolicy6PoolnameInput interface {
	pulumi.Input

	ToGetFirewallPolicy6PoolnameOutput() GetFirewallPolicy6PoolnameOutput
	ToGetFirewallPolicy6PoolnameOutputWithContext(context.Context) GetFirewallPolicy6PoolnameOutput
}

type GetFirewallPolicy6PoolnameArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy6PoolnameArgs) ToGetFirewallPolicy6PoolnameOutput() GetFirewallPolicy6PoolnameOutput {
	return i.ToGetFirewallPolicy6PoolnameOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6PoolnameArgs) ToGetFirewallPolicy6PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy6PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6PoolnameOutput)
}

// GetFirewallPolicy6PoolnameArrayInput is an input type that accepts GetFirewallPolicy6PoolnameArray and GetFirewallPolicy6PoolnameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6PoolnameArrayInput` via:
//
//	GetFirewallPolicy6PoolnameArray{ GetFirewallPolicy6PoolnameArgs{...} }
type GetFirewallPolicy6PoolnameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6PoolnameArrayOutput() GetFirewallPolicy6PoolnameArrayOutput
	ToGetFirewallPolicy6PoolnameArrayOutputWithContext(context.Context) GetFirewallPolicy6PoolnameArrayOutput
}

type GetFirewallPolicy6PoolnameArray []GetFirewallPolicy6PoolnameInput

func (GetFirewallPolicy6PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Poolname)(nil)).Elem()
}

func (i GetFirewallPolicy6PoolnameArray) ToGetFirewallPolicy6PoolnameArrayOutput() GetFirewallPolicy6PoolnameArrayOutput {
	return i.ToGetFirewallPolicy6PoolnameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6PoolnameArray) ToGetFirewallPolicy6PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6PoolnameArrayOutput)
}

type GetFirewallPolicy6PoolnameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy6PoolnameOutput) ToGetFirewallPolicy6PoolnameOutput() GetFirewallPolicy6PoolnameOutput {
	return o
}

func (o GetFirewallPolicy6PoolnameOutput) ToGetFirewallPolicy6PoolnameOutputWithContext(ctx context.Context) GetFirewallPolicy6PoolnameOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Poolname)(nil)).Elem()
}

func (o GetFirewallPolicy6PoolnameArrayOutput) ToGetFirewallPolicy6PoolnameArrayOutput() GetFirewallPolicy6PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy6PoolnameArrayOutput) ToGetFirewallPolicy6PoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6PoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicy6PoolnameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Poolname {
		return vs[0].([]GetFirewallPolicy6Poolname)[vs[1].(int)]
	}).(GetFirewallPolicy6PoolnameOutput)
}

type GetFirewallPolicy6Service struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6ServiceInput is an input type that accepts GetFirewallPolicy6ServiceArgs and GetFirewallPolicy6ServiceOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6ServiceInput` via:
//
//	GetFirewallPolicy6ServiceArgs{...}
type GetFirewallPolicy6ServiceInput interface {
	pulumi.Input

	ToGetFirewallPolicy6ServiceOutput() GetFirewallPolicy6ServiceOutput
	ToGetFirewallPolicy6ServiceOutputWithContext(context.Context) GetFirewallPolicy6ServiceOutput
}

type GetFirewallPolicy6ServiceArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Service)(nil)).Elem()
}

func (i GetFirewallPolicy6ServiceArgs) ToGetFirewallPolicy6ServiceOutput() GetFirewallPolicy6ServiceOutput {
	return i.ToGetFirewallPolicy6ServiceOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6ServiceArgs) ToGetFirewallPolicy6ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6ServiceOutput)
}

// GetFirewallPolicy6ServiceArrayInput is an input type that accepts GetFirewallPolicy6ServiceArray and GetFirewallPolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6ServiceArrayInput` via:
//
//	GetFirewallPolicy6ServiceArray{ GetFirewallPolicy6ServiceArgs{...} }
type GetFirewallPolicy6ServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6ServiceArrayOutput() GetFirewallPolicy6ServiceArrayOutput
	ToGetFirewallPolicy6ServiceArrayOutputWithContext(context.Context) GetFirewallPolicy6ServiceArrayOutput
}

type GetFirewallPolicy6ServiceArray []GetFirewallPolicy6ServiceInput

func (GetFirewallPolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Service)(nil)).Elem()
}

func (i GetFirewallPolicy6ServiceArray) ToGetFirewallPolicy6ServiceArrayOutput() GetFirewallPolicy6ServiceArrayOutput {
	return i.ToGetFirewallPolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6ServiceArray) ToGetFirewallPolicy6ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6ServiceArrayOutput)
}

type GetFirewallPolicy6ServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Service)(nil)).Elem()
}

func (o GetFirewallPolicy6ServiceOutput) ToGetFirewallPolicy6ServiceOutput() GetFirewallPolicy6ServiceOutput {
	return o
}

func (o GetFirewallPolicy6ServiceOutput) ToGetFirewallPolicy6ServiceOutputWithContext(ctx context.Context) GetFirewallPolicy6ServiceOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Service)(nil)).Elem()
}

func (o GetFirewallPolicy6ServiceArrayOutput) ToGetFirewallPolicy6ServiceArrayOutput() GetFirewallPolicy6ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy6ServiceArrayOutput) ToGetFirewallPolicy6ServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6ServiceArrayOutput {
	return o
}

func (o GetFirewallPolicy6ServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Service {
		return vs[0].([]GetFirewallPolicy6Service)[vs[1].(int)]
	}).(GetFirewallPolicy6ServiceOutput)
}

type GetFirewallPolicy6Srcaddr struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6SrcaddrInput is an input type that accepts GetFirewallPolicy6SrcaddrArgs and GetFirewallPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SrcaddrInput` via:
//
//	GetFirewallPolicy6SrcaddrArgs{...}
type GetFirewallPolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SrcaddrOutput() GetFirewallPolicy6SrcaddrOutput
	ToGetFirewallPolicy6SrcaddrOutputWithContext(context.Context) GetFirewallPolicy6SrcaddrOutput
}

type GetFirewallPolicy6SrcaddrArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy6SrcaddrArgs) ToGetFirewallPolicy6SrcaddrOutput() GetFirewallPolicy6SrcaddrOutput {
	return i.ToGetFirewallPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SrcaddrArgs) ToGetFirewallPolicy6SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SrcaddrOutput)
}

// GetFirewallPolicy6SrcaddrArrayInput is an input type that accepts GetFirewallPolicy6SrcaddrArray and GetFirewallPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SrcaddrArrayInput` via:
//
//	GetFirewallPolicy6SrcaddrArray{ GetFirewallPolicy6SrcaddrArgs{...} }
type GetFirewallPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SrcaddrArrayOutput() GetFirewallPolicy6SrcaddrArrayOutput
	ToGetFirewallPolicy6SrcaddrArrayOutputWithContext(context.Context) GetFirewallPolicy6SrcaddrArrayOutput
}

type GetFirewallPolicy6SrcaddrArray []GetFirewallPolicy6SrcaddrInput

func (GetFirewallPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Srcaddr)(nil)).Elem()
}

func (i GetFirewallPolicy6SrcaddrArray) ToGetFirewallPolicy6SrcaddrArrayOutput() GetFirewallPolicy6SrcaddrArrayOutput {
	return i.ToGetFirewallPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SrcaddrArray) ToGetFirewallPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SrcaddrArrayOutput)
}

type GetFirewallPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy6SrcaddrOutput) ToGetFirewallPolicy6SrcaddrOutput() GetFirewallPolicy6SrcaddrOutput {
	return o
}

func (o GetFirewallPolicy6SrcaddrOutput) ToGetFirewallPolicy6SrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcaddrOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Srcaddr)(nil)).Elem()
}

func (o GetFirewallPolicy6SrcaddrArrayOutput) ToGetFirewallPolicy6SrcaddrArrayOutput() GetFirewallPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy6SrcaddrArrayOutput) ToGetFirewallPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Srcaddr {
		return vs[0].([]GetFirewallPolicy6Srcaddr)[vs[1].(int)]
	}).(GetFirewallPolicy6SrcaddrOutput)
}

type GetFirewallPolicy6Srcintf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6SrcintfInput is an input type that accepts GetFirewallPolicy6SrcintfArgs and GetFirewallPolicy6SrcintfOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SrcintfInput` via:
//
//	GetFirewallPolicy6SrcintfArgs{...}
type GetFirewallPolicy6SrcintfInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SrcintfOutput() GetFirewallPolicy6SrcintfOutput
	ToGetFirewallPolicy6SrcintfOutputWithContext(context.Context) GetFirewallPolicy6SrcintfOutput
}

type GetFirewallPolicy6SrcintfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6SrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Srcintf)(nil)).Elem()
}

func (i GetFirewallPolicy6SrcintfArgs) ToGetFirewallPolicy6SrcintfOutput() GetFirewallPolicy6SrcintfOutput {
	return i.ToGetFirewallPolicy6SrcintfOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SrcintfArgs) ToGetFirewallPolicy6SrcintfOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SrcintfOutput)
}

// GetFirewallPolicy6SrcintfArrayInput is an input type that accepts GetFirewallPolicy6SrcintfArray and GetFirewallPolicy6SrcintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SrcintfArrayInput` via:
//
//	GetFirewallPolicy6SrcintfArray{ GetFirewallPolicy6SrcintfArgs{...} }
type GetFirewallPolicy6SrcintfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SrcintfArrayOutput() GetFirewallPolicy6SrcintfArrayOutput
	ToGetFirewallPolicy6SrcintfArrayOutputWithContext(context.Context) GetFirewallPolicy6SrcintfArrayOutput
}

type GetFirewallPolicy6SrcintfArray []GetFirewallPolicy6SrcintfInput

func (GetFirewallPolicy6SrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Srcintf)(nil)).Elem()
}

func (i GetFirewallPolicy6SrcintfArray) ToGetFirewallPolicy6SrcintfArrayOutput() GetFirewallPolicy6SrcintfArrayOutput {
	return i.ToGetFirewallPolicy6SrcintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SrcintfArray) ToGetFirewallPolicy6SrcintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SrcintfArrayOutput)
}

type GetFirewallPolicy6SrcintfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6Srcintf)(nil)).Elem()
}

func (o GetFirewallPolicy6SrcintfOutput) ToGetFirewallPolicy6SrcintfOutput() GetFirewallPolicy6SrcintfOutput {
	return o
}

func (o GetFirewallPolicy6SrcintfOutput) ToGetFirewallPolicy6SrcintfOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcintfOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6SrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6Srcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6SrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6Srcintf)(nil)).Elem()
}

func (o GetFirewallPolicy6SrcintfArrayOutput) ToGetFirewallPolicy6SrcintfArrayOutput() GetFirewallPolicy6SrcintfArrayOutput {
	return o
}

func (o GetFirewallPolicy6SrcintfArrayOutput) ToGetFirewallPolicy6SrcintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SrcintfArrayOutput {
	return o
}

func (o GetFirewallPolicy6SrcintfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6SrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6Srcintf {
		return vs[0].([]GetFirewallPolicy6Srcintf)[vs[1].(int)]
	}).(GetFirewallPolicy6SrcintfOutput)
}

type GetFirewallPolicy6SslMirrorIntf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6SslMirrorIntfInput is an input type that accepts GetFirewallPolicy6SslMirrorIntfArgs and GetFirewallPolicy6SslMirrorIntfOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SslMirrorIntfInput` via:
//
//	GetFirewallPolicy6SslMirrorIntfArgs{...}
type GetFirewallPolicy6SslMirrorIntfInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SslMirrorIntfOutput() GetFirewallPolicy6SslMirrorIntfOutput
	ToGetFirewallPolicy6SslMirrorIntfOutputWithContext(context.Context) GetFirewallPolicy6SslMirrorIntfOutput
}

type GetFirewallPolicy6SslMirrorIntfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6SslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i GetFirewallPolicy6SslMirrorIntfArgs) ToGetFirewallPolicy6SslMirrorIntfOutput() GetFirewallPolicy6SslMirrorIntfOutput {
	return i.ToGetFirewallPolicy6SslMirrorIntfOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SslMirrorIntfArgs) ToGetFirewallPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) GetFirewallPolicy6SslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SslMirrorIntfOutput)
}

// GetFirewallPolicy6SslMirrorIntfArrayInput is an input type that accepts GetFirewallPolicy6SslMirrorIntfArray and GetFirewallPolicy6SslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6SslMirrorIntfArrayInput` via:
//
//	GetFirewallPolicy6SslMirrorIntfArray{ GetFirewallPolicy6SslMirrorIntfArgs{...} }
type GetFirewallPolicy6SslMirrorIntfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6SslMirrorIntfArrayOutput() GetFirewallPolicy6SslMirrorIntfArrayOutput
	ToGetFirewallPolicy6SslMirrorIntfArrayOutputWithContext(context.Context) GetFirewallPolicy6SslMirrorIntfArrayOutput
}

type GetFirewallPolicy6SslMirrorIntfArray []GetFirewallPolicy6SslMirrorIntfInput

func (GetFirewallPolicy6SslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i GetFirewallPolicy6SslMirrorIntfArray) ToGetFirewallPolicy6SslMirrorIntfArrayOutput() GetFirewallPolicy6SslMirrorIntfArrayOutput {
	return i.ToGetFirewallPolicy6SslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6SslMirrorIntfArray) ToGetFirewallPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6SslMirrorIntfArrayOutput)
}

type GetFirewallPolicy6SslMirrorIntfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o GetFirewallPolicy6SslMirrorIntfOutput) ToGetFirewallPolicy6SslMirrorIntfOutput() GetFirewallPolicy6SslMirrorIntfOutput {
	return o
}

func (o GetFirewallPolicy6SslMirrorIntfOutput) ToGetFirewallPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) GetFirewallPolicy6SslMirrorIntfOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6SslMirrorIntfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6SslMirrorIntf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6SslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6SslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o GetFirewallPolicy6SslMirrorIntfArrayOutput) ToGetFirewallPolicy6SslMirrorIntfArrayOutput() GetFirewallPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o GetFirewallPolicy6SslMirrorIntfArrayOutput) ToGetFirewallPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o GetFirewallPolicy6SslMirrorIntfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6SslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6SslMirrorIntf {
		return vs[0].([]GetFirewallPolicy6SslMirrorIntf)[vs[1].(int)]
	}).(GetFirewallPolicy6SslMirrorIntfOutput)
}

type GetFirewallPolicy6UrlCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallPolicy6UrlCategoryInput is an input type that accepts GetFirewallPolicy6UrlCategoryArgs and GetFirewallPolicy6UrlCategoryOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6UrlCategoryInput` via:
//
//	GetFirewallPolicy6UrlCategoryArgs{...}
type GetFirewallPolicy6UrlCategoryInput interface {
	pulumi.Input

	ToGetFirewallPolicy6UrlCategoryOutput() GetFirewallPolicy6UrlCategoryOutput
	ToGetFirewallPolicy6UrlCategoryOutputWithContext(context.Context) GetFirewallPolicy6UrlCategoryOutput
}

type GetFirewallPolicy6UrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicy6UrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6UrlCategory)(nil)).Elem()
}

func (i GetFirewallPolicy6UrlCategoryArgs) ToGetFirewallPolicy6UrlCategoryOutput() GetFirewallPolicy6UrlCategoryOutput {
	return i.ToGetFirewallPolicy6UrlCategoryOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6UrlCategoryArgs) ToGetFirewallPolicy6UrlCategoryOutputWithContext(ctx context.Context) GetFirewallPolicy6UrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6UrlCategoryOutput)
}

// GetFirewallPolicy6UrlCategoryArrayInput is an input type that accepts GetFirewallPolicy6UrlCategoryArray and GetFirewallPolicy6UrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6UrlCategoryArrayInput` via:
//
//	GetFirewallPolicy6UrlCategoryArray{ GetFirewallPolicy6UrlCategoryArgs{...} }
type GetFirewallPolicy6UrlCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6UrlCategoryArrayOutput() GetFirewallPolicy6UrlCategoryArrayOutput
	ToGetFirewallPolicy6UrlCategoryArrayOutputWithContext(context.Context) GetFirewallPolicy6UrlCategoryArrayOutput
}

type GetFirewallPolicy6UrlCategoryArray []GetFirewallPolicy6UrlCategoryInput

func (GetFirewallPolicy6UrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6UrlCategory)(nil)).Elem()
}

func (i GetFirewallPolicy6UrlCategoryArray) ToGetFirewallPolicy6UrlCategoryArrayOutput() GetFirewallPolicy6UrlCategoryArrayOutput {
	return i.ToGetFirewallPolicy6UrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6UrlCategoryArray) ToGetFirewallPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6UrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6UrlCategoryArrayOutput)
}

type GetFirewallPolicy6UrlCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6UrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6UrlCategory)(nil)).Elem()
}

func (o GetFirewallPolicy6UrlCategoryOutput) ToGetFirewallPolicy6UrlCategoryOutput() GetFirewallPolicy6UrlCategoryOutput {
	return o
}

func (o GetFirewallPolicy6UrlCategoryOutput) ToGetFirewallPolicy6UrlCategoryOutputWithContext(ctx context.Context) GetFirewallPolicy6UrlCategoryOutput {
	return o
}

// URL category ID.
func (o GetFirewallPolicy6UrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicy6UrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicy6UrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6UrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6UrlCategory)(nil)).Elem()
}

func (o GetFirewallPolicy6UrlCategoryArrayOutput) ToGetFirewallPolicy6UrlCategoryArrayOutput() GetFirewallPolicy6UrlCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicy6UrlCategoryArrayOutput) ToGetFirewallPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6UrlCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicy6UrlCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6UrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6UrlCategory {
		return vs[0].([]GetFirewallPolicy6UrlCategory)[vs[1].(int)]
	}).(GetFirewallPolicy6UrlCategoryOutput)
}

type GetFirewallPolicy6User struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetFirewallPolicy6UserInput is an input type that accepts GetFirewallPolicy6UserArgs and GetFirewallPolicy6UserOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6UserInput` via:
//
//	GetFirewallPolicy6UserArgs{...}
type GetFirewallPolicy6UserInput interface {
	pulumi.Input

	ToGetFirewallPolicy6UserOutput() GetFirewallPolicy6UserOutput
	ToGetFirewallPolicy6UserOutputWithContext(context.Context) GetFirewallPolicy6UserOutput
}

type GetFirewallPolicy6UserArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicy6UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6User)(nil)).Elem()
}

func (i GetFirewallPolicy6UserArgs) ToGetFirewallPolicy6UserOutput() GetFirewallPolicy6UserOutput {
	return i.ToGetFirewallPolicy6UserOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6UserArgs) ToGetFirewallPolicy6UserOutputWithContext(ctx context.Context) GetFirewallPolicy6UserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6UserOutput)
}

// GetFirewallPolicy6UserArrayInput is an input type that accepts GetFirewallPolicy6UserArray and GetFirewallPolicy6UserArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicy6UserArrayInput` via:
//
//	GetFirewallPolicy6UserArray{ GetFirewallPolicy6UserArgs{...} }
type GetFirewallPolicy6UserArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicy6UserArrayOutput() GetFirewallPolicy6UserArrayOutput
	ToGetFirewallPolicy6UserArrayOutputWithContext(context.Context) GetFirewallPolicy6UserArrayOutput
}

type GetFirewallPolicy6UserArray []GetFirewallPolicy6UserInput

func (GetFirewallPolicy6UserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6User)(nil)).Elem()
}

func (i GetFirewallPolicy6UserArray) ToGetFirewallPolicy6UserArrayOutput() GetFirewallPolicy6UserArrayOutput {
	return i.ToGetFirewallPolicy6UserArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicy6UserArray) ToGetFirewallPolicy6UserArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6UserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicy6UserArrayOutput)
}

type GetFirewallPolicy6UserOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicy6User)(nil)).Elem()
}

func (o GetFirewallPolicy6UserOutput) ToGetFirewallPolicy6UserOutput() GetFirewallPolicy6UserOutput {
	return o
}

func (o GetFirewallPolicy6UserOutput) ToGetFirewallPolicy6UserOutputWithContext(ctx context.Context) GetFirewallPolicy6UserOutput {
	return o
}

// Names of FSSO groups.
func (o GetFirewallPolicy6UserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicy6User) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicy6UserArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicy6UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicy6User)(nil)).Elem()
}

func (o GetFirewallPolicy6UserArrayOutput) ToGetFirewallPolicy6UserArrayOutput() GetFirewallPolicy6UserArrayOutput {
	return o
}

func (o GetFirewallPolicy6UserArrayOutput) ToGetFirewallPolicy6UserArrayOutputWithContext(ctx context.Context) GetFirewallPolicy6UserArrayOutput {
	return o
}

func (o GetFirewallPolicy6UserArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicy6UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicy6User {
		return vs[0].([]GetFirewallPolicy6User)[vs[1].(int)]
	}).(GetFirewallPolicy6UserOutput)
}

type GetFirewallPolicyAppCategory struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicyAppCategoryInput is an input type that accepts GetFirewallPolicyAppCategoryArgs and GetFirewallPolicyAppCategoryOutput values.
// You can construct a concrete instance of `GetFirewallPolicyAppCategoryInput` via:
//
//	GetFirewallPolicyAppCategoryArgs{...}
type GetFirewallPolicyAppCategoryInput interface {
	pulumi.Input

	ToGetFirewallPolicyAppCategoryOutput() GetFirewallPolicyAppCategoryOutput
	ToGetFirewallPolicyAppCategoryOutputWithContext(context.Context) GetFirewallPolicyAppCategoryOutput
}

type GetFirewallPolicyAppCategoryArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyAppCategory)(nil)).Elem()
}

func (i GetFirewallPolicyAppCategoryArgs) ToGetFirewallPolicyAppCategoryOutput() GetFirewallPolicyAppCategoryOutput {
	return i.ToGetFirewallPolicyAppCategoryOutputWithContext(context.Background())
}

func (i GetFirewallPolicyAppCategoryArgs) ToGetFirewallPolicyAppCategoryOutputWithContext(ctx context.Context) GetFirewallPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyAppCategoryOutput)
}

// GetFirewallPolicyAppCategoryArrayInput is an input type that accepts GetFirewallPolicyAppCategoryArray and GetFirewallPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyAppCategoryArrayInput` via:
//
//	GetFirewallPolicyAppCategoryArray{ GetFirewallPolicyAppCategoryArgs{...} }
type GetFirewallPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyAppCategoryArrayOutput() GetFirewallPolicyAppCategoryArrayOutput
	ToGetFirewallPolicyAppCategoryArrayOutputWithContext(context.Context) GetFirewallPolicyAppCategoryArrayOutput
}

type GetFirewallPolicyAppCategoryArray []GetFirewallPolicyAppCategoryInput

func (GetFirewallPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyAppCategory)(nil)).Elem()
}

func (i GetFirewallPolicyAppCategoryArray) ToGetFirewallPolicyAppCategoryArrayOutput() GetFirewallPolicyAppCategoryArrayOutput {
	return i.ToGetFirewallPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyAppCategoryArray) ToGetFirewallPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyAppCategoryArrayOutput)
}

type GetFirewallPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyAppCategory)(nil)).Elem()
}

func (o GetFirewallPolicyAppCategoryOutput) ToGetFirewallPolicyAppCategoryOutput() GetFirewallPolicyAppCategoryOutput {
	return o
}

func (o GetFirewallPolicyAppCategoryOutput) ToGetFirewallPolicyAppCategoryOutputWithContext(ctx context.Context) GetFirewallPolicyAppCategoryOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicyAppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicyAppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyAppCategory)(nil)).Elem()
}

func (o GetFirewallPolicyAppCategoryArrayOutput) ToGetFirewallPolicyAppCategoryArrayOutput() GetFirewallPolicyAppCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicyAppCategoryArrayOutput) ToGetFirewallPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicyAppCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyAppCategory {
		return vs[0].([]GetFirewallPolicyAppCategory)[vs[1].(int)]
	}).(GetFirewallPolicyAppCategoryOutput)
}

type GetFirewallPolicyAppGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyAppGroupInput is an input type that accepts GetFirewallPolicyAppGroupArgs and GetFirewallPolicyAppGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyAppGroupInput` via:
//
//	GetFirewallPolicyAppGroupArgs{...}
type GetFirewallPolicyAppGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyAppGroupOutput() GetFirewallPolicyAppGroupOutput
	ToGetFirewallPolicyAppGroupOutputWithContext(context.Context) GetFirewallPolicyAppGroupOutput
}

type GetFirewallPolicyAppGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyAppGroup)(nil)).Elem()
}

func (i GetFirewallPolicyAppGroupArgs) ToGetFirewallPolicyAppGroupOutput() GetFirewallPolicyAppGroupOutput {
	return i.ToGetFirewallPolicyAppGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyAppGroupArgs) ToGetFirewallPolicyAppGroupOutputWithContext(ctx context.Context) GetFirewallPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyAppGroupOutput)
}

// GetFirewallPolicyAppGroupArrayInput is an input type that accepts GetFirewallPolicyAppGroupArray and GetFirewallPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyAppGroupArrayInput` via:
//
//	GetFirewallPolicyAppGroupArray{ GetFirewallPolicyAppGroupArgs{...} }
type GetFirewallPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyAppGroupArrayOutput() GetFirewallPolicyAppGroupArrayOutput
	ToGetFirewallPolicyAppGroupArrayOutputWithContext(context.Context) GetFirewallPolicyAppGroupArrayOutput
}

type GetFirewallPolicyAppGroupArray []GetFirewallPolicyAppGroupInput

func (GetFirewallPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyAppGroup)(nil)).Elem()
}

func (i GetFirewallPolicyAppGroupArray) ToGetFirewallPolicyAppGroupArrayOutput() GetFirewallPolicyAppGroupArrayOutput {
	return i.ToGetFirewallPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyAppGroupArray) ToGetFirewallPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyAppGroupArrayOutput)
}

type GetFirewallPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyAppGroup)(nil)).Elem()
}

func (o GetFirewallPolicyAppGroupOutput) ToGetFirewallPolicyAppGroupOutput() GetFirewallPolicyAppGroupOutput {
	return o
}

func (o GetFirewallPolicyAppGroupOutput) ToGetFirewallPolicyAppGroupOutputWithContext(ctx context.Context) GetFirewallPolicyAppGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyAppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyAppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyAppGroup)(nil)).Elem()
}

func (o GetFirewallPolicyAppGroupArrayOutput) ToGetFirewallPolicyAppGroupArrayOutput() GetFirewallPolicyAppGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyAppGroupArrayOutput) ToGetFirewallPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyAppGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyAppGroup {
		return vs[0].([]GetFirewallPolicyAppGroup)[vs[1].(int)]
	}).(GetFirewallPolicyAppGroupOutput)
}

type GetFirewallPolicyApplication struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicyApplicationInput is an input type that accepts GetFirewallPolicyApplicationArgs and GetFirewallPolicyApplicationOutput values.
// You can construct a concrete instance of `GetFirewallPolicyApplicationInput` via:
//
//	GetFirewallPolicyApplicationArgs{...}
type GetFirewallPolicyApplicationInput interface {
	pulumi.Input

	ToGetFirewallPolicyApplicationOutput() GetFirewallPolicyApplicationOutput
	ToGetFirewallPolicyApplicationOutputWithContext(context.Context) GetFirewallPolicyApplicationOutput
}

type GetFirewallPolicyApplicationArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyApplication)(nil)).Elem()
}

func (i GetFirewallPolicyApplicationArgs) ToGetFirewallPolicyApplicationOutput() GetFirewallPolicyApplicationOutput {
	return i.ToGetFirewallPolicyApplicationOutputWithContext(context.Background())
}

func (i GetFirewallPolicyApplicationArgs) ToGetFirewallPolicyApplicationOutputWithContext(ctx context.Context) GetFirewallPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyApplicationOutput)
}

// GetFirewallPolicyApplicationArrayInput is an input type that accepts GetFirewallPolicyApplicationArray and GetFirewallPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyApplicationArrayInput` via:
//
//	GetFirewallPolicyApplicationArray{ GetFirewallPolicyApplicationArgs{...} }
type GetFirewallPolicyApplicationArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyApplicationArrayOutput() GetFirewallPolicyApplicationArrayOutput
	ToGetFirewallPolicyApplicationArrayOutputWithContext(context.Context) GetFirewallPolicyApplicationArrayOutput
}

type GetFirewallPolicyApplicationArray []GetFirewallPolicyApplicationInput

func (GetFirewallPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyApplication)(nil)).Elem()
}

func (i GetFirewallPolicyApplicationArray) ToGetFirewallPolicyApplicationArrayOutput() GetFirewallPolicyApplicationArrayOutput {
	return i.ToGetFirewallPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyApplicationArray) ToGetFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) GetFirewallPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyApplicationArrayOutput)
}

type GetFirewallPolicyApplicationOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyApplication)(nil)).Elem()
}

func (o GetFirewallPolicyApplicationOutput) ToGetFirewallPolicyApplicationOutput() GetFirewallPolicyApplicationOutput {
	return o
}

func (o GetFirewallPolicyApplicationOutput) ToGetFirewallPolicyApplicationOutputWithContext(ctx context.Context) GetFirewallPolicyApplicationOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicyApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicyApplication) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyApplication)(nil)).Elem()
}

func (o GetFirewallPolicyApplicationArrayOutput) ToGetFirewallPolicyApplicationArrayOutput() GetFirewallPolicyApplicationArrayOutput {
	return o
}

func (o GetFirewallPolicyApplicationArrayOutput) ToGetFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) GetFirewallPolicyApplicationArrayOutput {
	return o
}

func (o GetFirewallPolicyApplicationArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyApplication {
		return vs[0].([]GetFirewallPolicyApplication)[vs[1].(int)]
	}).(GetFirewallPolicyApplicationOutput)
}

type GetFirewallPolicyCustomLogField struct {
	// Custom log field.
	FieldId string `pulumi:"fieldId"`
}

// GetFirewallPolicyCustomLogFieldInput is an input type that accepts GetFirewallPolicyCustomLogFieldArgs and GetFirewallPolicyCustomLogFieldOutput values.
// You can construct a concrete instance of `GetFirewallPolicyCustomLogFieldInput` via:
//
//	GetFirewallPolicyCustomLogFieldArgs{...}
type GetFirewallPolicyCustomLogFieldInput interface {
	pulumi.Input

	ToGetFirewallPolicyCustomLogFieldOutput() GetFirewallPolicyCustomLogFieldOutput
	ToGetFirewallPolicyCustomLogFieldOutputWithContext(context.Context) GetFirewallPolicyCustomLogFieldOutput
}

type GetFirewallPolicyCustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringInput `pulumi:"fieldId"`
}

func (GetFirewallPolicyCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyCustomLogField)(nil)).Elem()
}

func (i GetFirewallPolicyCustomLogFieldArgs) ToGetFirewallPolicyCustomLogFieldOutput() GetFirewallPolicyCustomLogFieldOutput {
	return i.ToGetFirewallPolicyCustomLogFieldOutputWithContext(context.Background())
}

func (i GetFirewallPolicyCustomLogFieldArgs) ToGetFirewallPolicyCustomLogFieldOutputWithContext(ctx context.Context) GetFirewallPolicyCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyCustomLogFieldOutput)
}

// GetFirewallPolicyCustomLogFieldArrayInput is an input type that accepts GetFirewallPolicyCustomLogFieldArray and GetFirewallPolicyCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyCustomLogFieldArrayInput` via:
//
//	GetFirewallPolicyCustomLogFieldArray{ GetFirewallPolicyCustomLogFieldArgs{...} }
type GetFirewallPolicyCustomLogFieldArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyCustomLogFieldArrayOutput() GetFirewallPolicyCustomLogFieldArrayOutput
	ToGetFirewallPolicyCustomLogFieldArrayOutputWithContext(context.Context) GetFirewallPolicyCustomLogFieldArrayOutput
}

type GetFirewallPolicyCustomLogFieldArray []GetFirewallPolicyCustomLogFieldInput

func (GetFirewallPolicyCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyCustomLogField)(nil)).Elem()
}

func (i GetFirewallPolicyCustomLogFieldArray) ToGetFirewallPolicyCustomLogFieldArrayOutput() GetFirewallPolicyCustomLogFieldArrayOutput {
	return i.ToGetFirewallPolicyCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyCustomLogFieldArray) ToGetFirewallPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) GetFirewallPolicyCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyCustomLogFieldArrayOutput)
}

type GetFirewallPolicyCustomLogFieldOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyCustomLogField)(nil)).Elem()
}

func (o GetFirewallPolicyCustomLogFieldOutput) ToGetFirewallPolicyCustomLogFieldOutput() GetFirewallPolicyCustomLogFieldOutput {
	return o
}

func (o GetFirewallPolicyCustomLogFieldOutput) ToGetFirewallPolicyCustomLogFieldOutputWithContext(ctx context.Context) GetFirewallPolicyCustomLogFieldOutput {
	return o
}

// Custom log field.
func (o GetFirewallPolicyCustomLogFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyCustomLogField) string { return v.FieldId }).(pulumi.StringOutput)
}

type GetFirewallPolicyCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyCustomLogField)(nil)).Elem()
}

func (o GetFirewallPolicyCustomLogFieldArrayOutput) ToGetFirewallPolicyCustomLogFieldArrayOutput() GetFirewallPolicyCustomLogFieldArrayOutput {
	return o
}

func (o GetFirewallPolicyCustomLogFieldArrayOutput) ToGetFirewallPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) GetFirewallPolicyCustomLogFieldArrayOutput {
	return o
}

func (o GetFirewallPolicyCustomLogFieldArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyCustomLogField {
		return vs[0].([]GetFirewallPolicyCustomLogField)[vs[1].(int)]
	}).(GetFirewallPolicyCustomLogFieldOutput)
}

type GetFirewallPolicyDevice struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyDeviceInput is an input type that accepts GetFirewallPolicyDeviceArgs and GetFirewallPolicyDeviceOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDeviceInput` via:
//
//	GetFirewallPolicyDeviceArgs{...}
type GetFirewallPolicyDeviceInput interface {
	pulumi.Input

	ToGetFirewallPolicyDeviceOutput() GetFirewallPolicyDeviceOutput
	ToGetFirewallPolicyDeviceOutputWithContext(context.Context) GetFirewallPolicyDeviceOutput
}

type GetFirewallPolicyDeviceArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDevice)(nil)).Elem()
}

func (i GetFirewallPolicyDeviceArgs) ToGetFirewallPolicyDeviceOutput() GetFirewallPolicyDeviceOutput {
	return i.ToGetFirewallPolicyDeviceOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDeviceArgs) ToGetFirewallPolicyDeviceOutputWithContext(ctx context.Context) GetFirewallPolicyDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDeviceOutput)
}

// GetFirewallPolicyDeviceArrayInput is an input type that accepts GetFirewallPolicyDeviceArray and GetFirewallPolicyDeviceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDeviceArrayInput` via:
//
//	GetFirewallPolicyDeviceArray{ GetFirewallPolicyDeviceArgs{...} }
type GetFirewallPolicyDeviceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyDeviceArrayOutput() GetFirewallPolicyDeviceArrayOutput
	ToGetFirewallPolicyDeviceArrayOutputWithContext(context.Context) GetFirewallPolicyDeviceArrayOutput
}

type GetFirewallPolicyDeviceArray []GetFirewallPolicyDeviceInput

func (GetFirewallPolicyDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDevice)(nil)).Elem()
}

func (i GetFirewallPolicyDeviceArray) ToGetFirewallPolicyDeviceArrayOutput() GetFirewallPolicyDeviceArrayOutput {
	return i.ToGetFirewallPolicyDeviceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDeviceArray) ToGetFirewallPolicyDeviceArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDeviceArrayOutput)
}

type GetFirewallPolicyDeviceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDevice)(nil)).Elem()
}

func (o GetFirewallPolicyDeviceOutput) ToGetFirewallPolicyDeviceOutput() GetFirewallPolicyDeviceOutput {
	return o
}

func (o GetFirewallPolicyDeviceOutput) ToGetFirewallPolicyDeviceOutputWithContext(ctx context.Context) GetFirewallPolicyDeviceOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDevice)(nil)).Elem()
}

func (o GetFirewallPolicyDeviceArrayOutput) ToGetFirewallPolicyDeviceArrayOutput() GetFirewallPolicyDeviceArrayOutput {
	return o
}

func (o GetFirewallPolicyDeviceArrayOutput) ToGetFirewallPolicyDeviceArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDeviceArrayOutput {
	return o
}

func (o GetFirewallPolicyDeviceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyDevice {
		return vs[0].([]GetFirewallPolicyDevice)[vs[1].(int)]
	}).(GetFirewallPolicyDeviceOutput)
}

type GetFirewallPolicyDstaddr6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyDstaddr6Input is an input type that accepts GetFirewallPolicyDstaddr6Args and GetFirewallPolicyDstaddr6Output values.
// You can construct a concrete instance of `GetFirewallPolicyDstaddr6Input` via:
//
//	GetFirewallPolicyDstaddr6Args{...}
type GetFirewallPolicyDstaddr6Input interface {
	pulumi.Input

	ToGetFirewallPolicyDstaddr6Output() GetFirewallPolicyDstaddr6Output
	ToGetFirewallPolicyDstaddr6OutputWithContext(context.Context) GetFirewallPolicyDstaddr6Output
}

type GetFirewallPolicyDstaddr6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallPolicyDstaddr6Args) ToGetFirewallPolicyDstaddr6Output() GetFirewallPolicyDstaddr6Output {
	return i.ToGetFirewallPolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstaddr6Args) ToGetFirewallPolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstaddr6Output)
}

// GetFirewallPolicyDstaddr6ArrayInput is an input type that accepts GetFirewallPolicyDstaddr6Array and GetFirewallPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDstaddr6ArrayInput` via:
//
//	GetFirewallPolicyDstaddr6Array{ GetFirewallPolicyDstaddr6Args{...} }
type GetFirewallPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyDstaddr6ArrayOutput() GetFirewallPolicyDstaddr6ArrayOutput
	ToGetFirewallPolicyDstaddr6ArrayOutputWithContext(context.Context) GetFirewallPolicyDstaddr6ArrayOutput
}

type GetFirewallPolicyDstaddr6Array []GetFirewallPolicyDstaddr6Input

func (GetFirewallPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallPolicyDstaddr6Array) ToGetFirewallPolicyDstaddr6ArrayOutput() GetFirewallPolicyDstaddr6ArrayOutput {
	return i.ToGetFirewallPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstaddr6Array) ToGetFirewallPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstaddr6ArrayOutput)
}

type GetFirewallPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallPolicyDstaddr6Output) ToGetFirewallPolicyDstaddr6Output() GetFirewallPolicyDstaddr6Output {
	return o
}

func (o GetFirewallPolicyDstaddr6Output) ToGetFirewallPolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallPolicyDstaddr6Output {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallPolicyDstaddr6ArrayOutput) ToGetFirewallPolicyDstaddr6ArrayOutput() GetFirewallPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallPolicyDstaddr6ArrayOutput) ToGetFirewallPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyDstaddr6 {
		return vs[0].([]GetFirewallPolicyDstaddr6)[vs[1].(int)]
	}).(GetFirewallPolicyDstaddr6Output)
}

type GetFirewallPolicyDstaddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyDstaddrInput is an input type that accepts GetFirewallPolicyDstaddrArgs and GetFirewallPolicyDstaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDstaddrInput` via:
//
//	GetFirewallPolicyDstaddrArgs{...}
type GetFirewallPolicyDstaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicyDstaddrOutput() GetFirewallPolicyDstaddrOutput
	ToGetFirewallPolicyDstaddrOutputWithContext(context.Context) GetFirewallPolicyDstaddrOutput
}

type GetFirewallPolicyDstaddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallPolicyDstaddrArgs) ToGetFirewallPolicyDstaddrOutput() GetFirewallPolicyDstaddrOutput {
	return i.ToGetFirewallPolicyDstaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstaddrArgs) ToGetFirewallPolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstaddrOutput)
}

// GetFirewallPolicyDstaddrArrayInput is an input type that accepts GetFirewallPolicyDstaddrArray and GetFirewallPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDstaddrArrayInput` via:
//
//	GetFirewallPolicyDstaddrArray{ GetFirewallPolicyDstaddrArgs{...} }
type GetFirewallPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyDstaddrArrayOutput() GetFirewallPolicyDstaddrArrayOutput
	ToGetFirewallPolicyDstaddrArrayOutputWithContext(context.Context) GetFirewallPolicyDstaddrArrayOutput
}

type GetFirewallPolicyDstaddrArray []GetFirewallPolicyDstaddrInput

func (GetFirewallPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallPolicyDstaddrArray) ToGetFirewallPolicyDstaddrArrayOutput() GetFirewallPolicyDstaddrArrayOutput {
	return i.ToGetFirewallPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstaddrArray) ToGetFirewallPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstaddrArrayOutput)
}

type GetFirewallPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallPolicyDstaddrOutput) ToGetFirewallPolicyDstaddrOutput() GetFirewallPolicyDstaddrOutput {
	return o
}

func (o GetFirewallPolicyDstaddrOutput) ToGetFirewallPolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddrOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallPolicyDstaddrArrayOutput) ToGetFirewallPolicyDstaddrArrayOutput() GetFirewallPolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicyDstaddrArrayOutput) ToGetFirewallPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyDstaddr {
		return vs[0].([]GetFirewallPolicyDstaddr)[vs[1].(int)]
	}).(GetFirewallPolicyDstaddrOutput)
}

type GetFirewallPolicyDstintf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyDstintfInput is an input type that accepts GetFirewallPolicyDstintfArgs and GetFirewallPolicyDstintfOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDstintfInput` via:
//
//	GetFirewallPolicyDstintfArgs{...}
type GetFirewallPolicyDstintfInput interface {
	pulumi.Input

	ToGetFirewallPolicyDstintfOutput() GetFirewallPolicyDstintfOutput
	ToGetFirewallPolicyDstintfOutputWithContext(context.Context) GetFirewallPolicyDstintfOutput
}

type GetFirewallPolicyDstintfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstintf)(nil)).Elem()
}

func (i GetFirewallPolicyDstintfArgs) ToGetFirewallPolicyDstintfOutput() GetFirewallPolicyDstintfOutput {
	return i.ToGetFirewallPolicyDstintfOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstintfArgs) ToGetFirewallPolicyDstintfOutputWithContext(ctx context.Context) GetFirewallPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstintfOutput)
}

// GetFirewallPolicyDstintfArrayInput is an input type that accepts GetFirewallPolicyDstintfArray and GetFirewallPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDstintfArrayInput` via:
//
//	GetFirewallPolicyDstintfArray{ GetFirewallPolicyDstintfArgs{...} }
type GetFirewallPolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyDstintfArrayOutput() GetFirewallPolicyDstintfArrayOutput
	ToGetFirewallPolicyDstintfArrayOutputWithContext(context.Context) GetFirewallPolicyDstintfArrayOutput
}

type GetFirewallPolicyDstintfArray []GetFirewallPolicyDstintfInput

func (GetFirewallPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstintf)(nil)).Elem()
}

func (i GetFirewallPolicyDstintfArray) ToGetFirewallPolicyDstintfArrayOutput() GetFirewallPolicyDstintfArrayOutput {
	return i.ToGetFirewallPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDstintfArray) ToGetFirewallPolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDstintfArrayOutput)
}

type GetFirewallPolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDstintf)(nil)).Elem()
}

func (o GetFirewallPolicyDstintfOutput) ToGetFirewallPolicyDstintfOutput() GetFirewallPolicyDstintfOutput {
	return o
}

func (o GetFirewallPolicyDstintfOutput) ToGetFirewallPolicyDstintfOutputWithContext(ctx context.Context) GetFirewallPolicyDstintfOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDstintf)(nil)).Elem()
}

func (o GetFirewallPolicyDstintfArrayOutput) ToGetFirewallPolicyDstintfArrayOutput() GetFirewallPolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallPolicyDstintfArrayOutput) ToGetFirewallPolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallPolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyDstintf {
		return vs[0].([]GetFirewallPolicyDstintf)[vs[1].(int)]
	}).(GetFirewallPolicyDstintfOutput)
}

type GetFirewallPolicyFssoGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyFssoGroupInput is an input type that accepts GetFirewallPolicyFssoGroupArgs and GetFirewallPolicyFssoGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyFssoGroupInput` via:
//
//	GetFirewallPolicyFssoGroupArgs{...}
type GetFirewallPolicyFssoGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyFssoGroupOutput() GetFirewallPolicyFssoGroupOutput
	ToGetFirewallPolicyFssoGroupOutputWithContext(context.Context) GetFirewallPolicyFssoGroupOutput
}

type GetFirewallPolicyFssoGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFssoGroup)(nil)).Elem()
}

func (i GetFirewallPolicyFssoGroupArgs) ToGetFirewallPolicyFssoGroupOutput() GetFirewallPolicyFssoGroupOutput {
	return i.ToGetFirewallPolicyFssoGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFssoGroupArgs) ToGetFirewallPolicyFssoGroupOutputWithContext(ctx context.Context) GetFirewallPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFssoGroupOutput)
}

// GetFirewallPolicyFssoGroupArrayInput is an input type that accepts GetFirewallPolicyFssoGroupArray and GetFirewallPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyFssoGroupArrayInput` via:
//
//	GetFirewallPolicyFssoGroupArray{ GetFirewallPolicyFssoGroupArgs{...} }
type GetFirewallPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyFssoGroupArrayOutput() GetFirewallPolicyFssoGroupArrayOutput
	ToGetFirewallPolicyFssoGroupArrayOutputWithContext(context.Context) GetFirewallPolicyFssoGroupArrayOutput
}

type GetFirewallPolicyFssoGroupArray []GetFirewallPolicyFssoGroupInput

func (GetFirewallPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyFssoGroup)(nil)).Elem()
}

func (i GetFirewallPolicyFssoGroupArray) ToGetFirewallPolicyFssoGroupArrayOutput() GetFirewallPolicyFssoGroupArrayOutput {
	return i.ToGetFirewallPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFssoGroupArray) ToGetFirewallPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFssoGroupArrayOutput)
}

type GetFirewallPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFssoGroup)(nil)).Elem()
}

func (o GetFirewallPolicyFssoGroupOutput) ToGetFirewallPolicyFssoGroupOutput() GetFirewallPolicyFssoGroupOutput {
	return o
}

func (o GetFirewallPolicyFssoGroupOutput) ToGetFirewallPolicyFssoGroupOutputWithContext(ctx context.Context) GetFirewallPolicyFssoGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyFssoGroup)(nil)).Elem()
}

func (o GetFirewallPolicyFssoGroupArrayOutput) ToGetFirewallPolicyFssoGroupArrayOutput() GetFirewallPolicyFssoGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyFssoGroupArrayOutput) ToGetFirewallPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyFssoGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyFssoGroup {
		return vs[0].([]GetFirewallPolicyFssoGroup)[vs[1].(int)]
	}).(GetFirewallPolicyFssoGroupOutput)
}

type GetFirewallPolicyGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyGroupInput is an input type that accepts GetFirewallPolicyGroupArgs and GetFirewallPolicyGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyGroupInput` via:
//
//	GetFirewallPolicyGroupArgs{...}
type GetFirewallPolicyGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyGroupOutput() GetFirewallPolicyGroupOutput
	ToGetFirewallPolicyGroupOutputWithContext(context.Context) GetFirewallPolicyGroupOutput
}

type GetFirewallPolicyGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyGroup)(nil)).Elem()
}

func (i GetFirewallPolicyGroupArgs) ToGetFirewallPolicyGroupOutput() GetFirewallPolicyGroupOutput {
	return i.ToGetFirewallPolicyGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyGroupArgs) ToGetFirewallPolicyGroupOutputWithContext(ctx context.Context) GetFirewallPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyGroupOutput)
}

// GetFirewallPolicyGroupArrayInput is an input type that accepts GetFirewallPolicyGroupArray and GetFirewallPolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyGroupArrayInput` via:
//
//	GetFirewallPolicyGroupArray{ GetFirewallPolicyGroupArgs{...} }
type GetFirewallPolicyGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyGroupArrayOutput() GetFirewallPolicyGroupArrayOutput
	ToGetFirewallPolicyGroupArrayOutputWithContext(context.Context) GetFirewallPolicyGroupArrayOutput
}

type GetFirewallPolicyGroupArray []GetFirewallPolicyGroupInput

func (GetFirewallPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyGroup)(nil)).Elem()
}

func (i GetFirewallPolicyGroupArray) ToGetFirewallPolicyGroupArrayOutput() GetFirewallPolicyGroupArrayOutput {
	return i.ToGetFirewallPolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyGroupArray) ToGetFirewallPolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyGroupArrayOutput)
}

type GetFirewallPolicyGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyGroup)(nil)).Elem()
}

func (o GetFirewallPolicyGroupOutput) ToGetFirewallPolicyGroupOutput() GetFirewallPolicyGroupOutput {
	return o
}

func (o GetFirewallPolicyGroupOutput) ToGetFirewallPolicyGroupOutputWithContext(ctx context.Context) GetFirewallPolicyGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyGroup)(nil)).Elem()
}

func (o GetFirewallPolicyGroupArrayOutput) ToGetFirewallPolicyGroupArrayOutput() GetFirewallPolicyGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyGroupArrayOutput) ToGetFirewallPolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyGroup {
		return vs[0].([]GetFirewallPolicyGroup)[vs[1].(int)]
	}).(GetFirewallPolicyGroupOutput)
}

type GetFirewallPolicyInternetService6Custom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6CustomInput is an input type that accepts GetFirewallPolicyInternetService6CustomArgs and GetFirewallPolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6CustomInput` via:
//
//	GetFirewallPolicyInternetService6CustomArgs{...}
type GetFirewallPolicyInternetService6CustomInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6CustomOutput() GetFirewallPolicyInternetService6CustomOutput
	ToGetFirewallPolicyInternetService6CustomOutputWithContext(context.Context) GetFirewallPolicyInternetService6CustomOutput
}

type GetFirewallPolicyInternetService6CustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6CustomArgs) ToGetFirewallPolicyInternetService6CustomOutput() GetFirewallPolicyInternetService6CustomOutput {
	return i.ToGetFirewallPolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6CustomArgs) ToGetFirewallPolicyInternetService6CustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6CustomOutput)
}

// GetFirewallPolicyInternetService6CustomArrayInput is an input type that accepts GetFirewallPolicyInternetService6CustomArray and GetFirewallPolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6CustomArrayInput` via:
//
//	GetFirewallPolicyInternetService6CustomArray{ GetFirewallPolicyInternetService6CustomArgs{...} }
type GetFirewallPolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6CustomArrayOutput() GetFirewallPolicyInternetService6CustomArrayOutput
	ToGetFirewallPolicyInternetService6CustomArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6CustomArrayOutput
}

type GetFirewallPolicyInternetService6CustomArray []GetFirewallPolicyInternetService6CustomInput

func (GetFirewallPolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6CustomArray) ToGetFirewallPolicyInternetService6CustomArrayOutput() GetFirewallPolicyInternetService6CustomArrayOutput {
	return i.ToGetFirewallPolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6CustomArray) ToGetFirewallPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6CustomArrayOutput)
}

type GetFirewallPolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6CustomOutput) ToGetFirewallPolicyInternetService6CustomOutput() GetFirewallPolicyInternetService6CustomOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomOutput) ToGetFirewallPolicyInternetService6CustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6CustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6Custom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6CustomArrayOutput) ToGetFirewallPolicyInternetService6CustomArrayOutput() GetFirewallPolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomArrayOutput) ToGetFirewallPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6Custom {
		return vs[0].([]GetFirewallPolicyInternetService6Custom)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6CustomOutput)
}

type GetFirewallPolicyInternetService6CustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6CustomGroupInput is an input type that accepts GetFirewallPolicyInternetService6CustomGroupArgs and GetFirewallPolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6CustomGroupInput` via:
//
//	GetFirewallPolicyInternetService6CustomGroupArgs{...}
type GetFirewallPolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6CustomGroupOutput() GetFirewallPolicyInternetService6CustomGroupOutput
	ToGetFirewallPolicyInternetService6CustomGroupOutputWithContext(context.Context) GetFirewallPolicyInternetService6CustomGroupOutput
}

type GetFirewallPolicyInternetService6CustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6CustomGroupArgs) ToGetFirewallPolicyInternetService6CustomGroupOutput() GetFirewallPolicyInternetService6CustomGroupOutput {
	return i.ToGetFirewallPolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6CustomGroupArgs) ToGetFirewallPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6CustomGroupOutput)
}

// GetFirewallPolicyInternetService6CustomGroupArrayInput is an input type that accepts GetFirewallPolicyInternetService6CustomGroupArray and GetFirewallPolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6CustomGroupArrayInput` via:
//
//	GetFirewallPolicyInternetService6CustomGroupArray{ GetFirewallPolicyInternetService6CustomGroupArgs{...} }
type GetFirewallPolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6CustomGroupArrayOutput() GetFirewallPolicyInternetService6CustomGroupArrayOutput
	ToGetFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6CustomGroupArrayOutput
}

type GetFirewallPolicyInternetService6CustomGroupArray []GetFirewallPolicyInternetService6CustomGroupInput

func (GetFirewallPolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6CustomGroupArray) ToGetFirewallPolicyInternetService6CustomGroupArrayOutput() GetFirewallPolicyInternetService6CustomGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6CustomGroupArray) ToGetFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6CustomGroupArrayOutput)
}

type GetFirewallPolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6CustomGroupOutput) ToGetFirewallPolicyInternetService6CustomGroupOutput() GetFirewallPolicyInternetService6CustomGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomGroupOutput) ToGetFirewallPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6CustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6CustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6CustomGroupArrayOutput) ToGetFirewallPolicyInternetService6CustomGroupArrayOutput() GetFirewallPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomGroupArrayOutput) ToGetFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6CustomGroup {
		return vs[0].([]GetFirewallPolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6CustomGroupOutput)
}

type GetFirewallPolicyInternetService6Group struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6GroupInput is an input type that accepts GetFirewallPolicyInternetService6GroupArgs and GetFirewallPolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6GroupInput` via:
//
//	GetFirewallPolicyInternetService6GroupArgs{...}
type GetFirewallPolicyInternetService6GroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6GroupOutput() GetFirewallPolicyInternetService6GroupOutput
	ToGetFirewallPolicyInternetService6GroupOutputWithContext(context.Context) GetFirewallPolicyInternetService6GroupOutput
}

type GetFirewallPolicyInternetService6GroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Group)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6GroupArgs) ToGetFirewallPolicyInternetService6GroupOutput() GetFirewallPolicyInternetService6GroupOutput {
	return i.ToGetFirewallPolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6GroupArgs) ToGetFirewallPolicyInternetService6GroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6GroupOutput)
}

// GetFirewallPolicyInternetService6GroupArrayInput is an input type that accepts GetFirewallPolicyInternetService6GroupArray and GetFirewallPolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6GroupArrayInput` via:
//
//	GetFirewallPolicyInternetService6GroupArray{ GetFirewallPolicyInternetService6GroupArgs{...} }
type GetFirewallPolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6GroupArrayOutput() GetFirewallPolicyInternetService6GroupArrayOutput
	ToGetFirewallPolicyInternetService6GroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6GroupArrayOutput
}

type GetFirewallPolicyInternetService6GroupArray []GetFirewallPolicyInternetService6GroupInput

func (GetFirewallPolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Group)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6GroupArray) ToGetFirewallPolicyInternetService6GroupArrayOutput() GetFirewallPolicyInternetService6GroupArrayOutput {
	return i.ToGetFirewallPolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6GroupArray) ToGetFirewallPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6GroupArrayOutput)
}

type GetFirewallPolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Group)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6GroupOutput) ToGetFirewallPolicyInternetService6GroupOutput() GetFirewallPolicyInternetService6GroupOutput {
	return o
}

func (o GetFirewallPolicyInternetService6GroupOutput) ToGetFirewallPolicyInternetService6GroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6GroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6Group) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Group)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6GroupArrayOutput) ToGetFirewallPolicyInternetService6GroupArrayOutput() GetFirewallPolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6GroupArrayOutput) ToGetFirewallPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6Group {
		return vs[0].([]GetFirewallPolicyInternetService6Group)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6GroupOutput)
}

type GetFirewallPolicyInternetService6Name struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6NameInput is an input type that accepts GetFirewallPolicyInternetService6NameArgs and GetFirewallPolicyInternetService6NameOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6NameInput` via:
//
//	GetFirewallPolicyInternetService6NameArgs{...}
type GetFirewallPolicyInternetService6NameInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6NameOutput() GetFirewallPolicyInternetService6NameOutput
	ToGetFirewallPolicyInternetService6NameOutputWithContext(context.Context) GetFirewallPolicyInternetService6NameOutput
}

type GetFirewallPolicyInternetService6NameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Name)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6NameArgs) ToGetFirewallPolicyInternetService6NameOutput() GetFirewallPolicyInternetService6NameOutput {
	return i.ToGetFirewallPolicyInternetService6NameOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6NameArgs) ToGetFirewallPolicyInternetService6NameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6NameOutput)
}

// GetFirewallPolicyInternetService6NameArrayInput is an input type that accepts GetFirewallPolicyInternetService6NameArray and GetFirewallPolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6NameArrayInput` via:
//
//	GetFirewallPolicyInternetService6NameArray{ GetFirewallPolicyInternetService6NameArgs{...} }
type GetFirewallPolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6NameArrayOutput() GetFirewallPolicyInternetService6NameArrayOutput
	ToGetFirewallPolicyInternetService6NameArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6NameArrayOutput
}

type GetFirewallPolicyInternetService6NameArray []GetFirewallPolicyInternetService6NameInput

func (GetFirewallPolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Name)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6NameArray) ToGetFirewallPolicyInternetService6NameArrayOutput() GetFirewallPolicyInternetService6NameArrayOutput {
	return i.ToGetFirewallPolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6NameArray) ToGetFirewallPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6NameArrayOutput)
}

type GetFirewallPolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6Name)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6NameOutput) ToGetFirewallPolicyInternetService6NameOutput() GetFirewallPolicyInternetService6NameOutput {
	return o
}

func (o GetFirewallPolicyInternetService6NameOutput) ToGetFirewallPolicyInternetService6NameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6NameOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6NameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6Name) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6Name)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6NameArrayOutput) ToGetFirewallPolicyInternetService6NameArrayOutput() GetFirewallPolicyInternetService6NameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6NameArrayOutput) ToGetFirewallPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6NameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6Name {
		return vs[0].([]GetFirewallPolicyInternetService6Name)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6NameOutput)
}

type GetFirewallPolicyInternetService6SrcCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6SrcCustomInput is an input type that accepts GetFirewallPolicyInternetService6SrcCustomArgs and GetFirewallPolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcCustomInput` via:
//
//	GetFirewallPolicyInternetService6SrcCustomArgs{...}
type GetFirewallPolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcCustomOutput() GetFirewallPolicyInternetService6SrcCustomOutput
	ToGetFirewallPolicyInternetService6SrcCustomOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcCustomOutput
}

type GetFirewallPolicyInternetService6SrcCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcCustomArgs) ToGetFirewallPolicyInternetService6SrcCustomOutput() GetFirewallPolicyInternetService6SrcCustomOutput {
	return i.ToGetFirewallPolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcCustomArgs) ToGetFirewallPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcCustomOutput)
}

// GetFirewallPolicyInternetService6SrcCustomArrayInput is an input type that accepts GetFirewallPolicyInternetService6SrcCustomArray and GetFirewallPolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcCustomArrayInput` via:
//
//	GetFirewallPolicyInternetService6SrcCustomArray{ GetFirewallPolicyInternetService6SrcCustomArgs{...} }
type GetFirewallPolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcCustomArrayOutput() GetFirewallPolicyInternetService6SrcCustomArrayOutput
	ToGetFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcCustomArrayOutput
}

type GetFirewallPolicyInternetService6SrcCustomArray []GetFirewallPolicyInternetService6SrcCustomInput

func (GetFirewallPolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcCustomArray) ToGetFirewallPolicyInternetService6SrcCustomArrayOutput() GetFirewallPolicyInternetService6SrcCustomArrayOutput {
	return i.ToGetFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcCustomArray) ToGetFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcCustomArrayOutput)
}

type GetFirewallPolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcCustomOutput) ToGetFirewallPolicyInternetService6SrcCustomOutput() GetFirewallPolicyInternetService6SrcCustomOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomOutput) ToGetFirewallPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6SrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6SrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcCustomArrayOutput) ToGetFirewallPolicyInternetService6SrcCustomArrayOutput() GetFirewallPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomArrayOutput) ToGetFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6SrcCustom {
		return vs[0].([]GetFirewallPolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6SrcCustomOutput)
}

type GetFirewallPolicyInternetService6SrcCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6SrcCustomGroupInput is an input type that accepts GetFirewallPolicyInternetService6SrcCustomGroupArgs and GetFirewallPolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcCustomGroupInput` via:
//
//	GetFirewallPolicyInternetService6SrcCustomGroupArgs{...}
type GetFirewallPolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcCustomGroupOutput() GetFirewallPolicyInternetService6SrcCustomGroupOutput
	ToGetFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcCustomGroupOutput
}

type GetFirewallPolicyInternetService6SrcCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcCustomGroupArgs) ToGetFirewallPolicyInternetService6SrcCustomGroupOutput() GetFirewallPolicyInternetService6SrcCustomGroupOutput {
	return i.ToGetFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcCustomGroupArgs) ToGetFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcCustomGroupOutput)
}

// GetFirewallPolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts GetFirewallPolicyInternetService6SrcCustomGroupArray and GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	GetFirewallPolicyInternetService6SrcCustomGroupArray{ GetFirewallPolicyInternetService6SrcCustomGroupArgs{...} }
type GetFirewallPolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutput() GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput
	ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput
}

type GetFirewallPolicyInternetService6SrcCustomGroupArray []GetFirewallPolicyInternetService6SrcCustomGroupInput

func (GetFirewallPolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcCustomGroupArray) ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutput() GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcCustomGroupArray) ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput)
}

type GetFirewallPolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcCustomGroupOutput) ToGetFirewallPolicyInternetService6SrcCustomGroupOutput() GetFirewallPolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomGroupOutput) ToGetFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6SrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput) ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutput() GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput) ToGetFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6SrcCustomGroup {
		return vs[0].([]GetFirewallPolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6SrcCustomGroupOutput)
}

type GetFirewallPolicyInternetService6SrcGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6SrcGroupInput is an input type that accepts GetFirewallPolicyInternetService6SrcGroupArgs and GetFirewallPolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcGroupInput` via:
//
//	GetFirewallPolicyInternetService6SrcGroupArgs{...}
type GetFirewallPolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcGroupOutput() GetFirewallPolicyInternetService6SrcGroupOutput
	ToGetFirewallPolicyInternetService6SrcGroupOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcGroupOutput
}

type GetFirewallPolicyInternetService6SrcGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcGroupArgs) ToGetFirewallPolicyInternetService6SrcGroupOutput() GetFirewallPolicyInternetService6SrcGroupOutput {
	return i.ToGetFirewallPolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcGroupArgs) ToGetFirewallPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcGroupOutput)
}

// GetFirewallPolicyInternetService6SrcGroupArrayInput is an input type that accepts GetFirewallPolicyInternetService6SrcGroupArray and GetFirewallPolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcGroupArrayInput` via:
//
//	GetFirewallPolicyInternetService6SrcGroupArray{ GetFirewallPolicyInternetService6SrcGroupArgs{...} }
type GetFirewallPolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcGroupArrayOutput() GetFirewallPolicyInternetService6SrcGroupArrayOutput
	ToGetFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcGroupArrayOutput
}

type GetFirewallPolicyInternetService6SrcGroupArray []GetFirewallPolicyInternetService6SrcGroupInput

func (GetFirewallPolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcGroupArray) ToGetFirewallPolicyInternetService6SrcGroupArrayOutput() GetFirewallPolicyInternetService6SrcGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcGroupArray) ToGetFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcGroupArrayOutput)
}

type GetFirewallPolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcGroupOutput) ToGetFirewallPolicyInternetService6SrcGroupOutput() GetFirewallPolicyInternetService6SrcGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcGroupOutput) ToGetFirewallPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6SrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6SrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcGroupArrayOutput) ToGetFirewallPolicyInternetService6SrcGroupArrayOutput() GetFirewallPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcGroupArrayOutput) ToGetFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6SrcGroup {
		return vs[0].([]GetFirewallPolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6SrcGroupOutput)
}

type GetFirewallPolicyInternetService6SrcName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetService6SrcNameInput is an input type that accepts GetFirewallPolicyInternetService6SrcNameArgs and GetFirewallPolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcNameInput` via:
//
//	GetFirewallPolicyInternetService6SrcNameArgs{...}
type GetFirewallPolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcNameOutput() GetFirewallPolicyInternetService6SrcNameOutput
	ToGetFirewallPolicyInternetService6SrcNameOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcNameOutput
}

type GetFirewallPolicyInternetService6SrcNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcNameArgs) ToGetFirewallPolicyInternetService6SrcNameOutput() GetFirewallPolicyInternetService6SrcNameOutput {
	return i.ToGetFirewallPolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcNameArgs) ToGetFirewallPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcNameOutput)
}

// GetFirewallPolicyInternetService6SrcNameArrayInput is an input type that accepts GetFirewallPolicyInternetService6SrcNameArray and GetFirewallPolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetService6SrcNameArrayInput` via:
//
//	GetFirewallPolicyInternetService6SrcNameArray{ GetFirewallPolicyInternetService6SrcNameArgs{...} }
type GetFirewallPolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetService6SrcNameArrayOutput() GetFirewallPolicyInternetService6SrcNameArrayOutput
	ToGetFirewallPolicyInternetService6SrcNameArrayOutputWithContext(context.Context) GetFirewallPolicyInternetService6SrcNameArrayOutput
}

type GetFirewallPolicyInternetService6SrcNameArray []GetFirewallPolicyInternetService6SrcNameInput

func (GetFirewallPolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetService6SrcNameArray) ToGetFirewallPolicyInternetService6SrcNameArrayOutput() GetFirewallPolicyInternetService6SrcNameArrayOutput {
	return i.ToGetFirewallPolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetService6SrcNameArray) ToGetFirewallPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetService6SrcNameArrayOutput)
}

type GetFirewallPolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcNameOutput) ToGetFirewallPolicyInternetService6SrcNameOutput() GetFirewallPolicyInternetService6SrcNameOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcNameOutput) ToGetFirewallPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcNameOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetService6SrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetService6SrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetService6SrcNameArrayOutput) ToGetFirewallPolicyInternetService6SrcNameArrayOutput() GetFirewallPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcNameArrayOutput) ToGetFirewallPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetService6SrcName {
		return vs[0].([]GetFirewallPolicyInternetService6SrcName)[vs[1].(int)]
	}).(GetFirewallPolicyInternetService6SrcNameOutput)
}

type GetFirewallPolicyInternetServiceCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceCustomInput is an input type that accepts GetFirewallPolicyInternetServiceCustomArgs and GetFirewallPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceCustomInput` via:
//
//	GetFirewallPolicyInternetServiceCustomArgs{...}
type GetFirewallPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceCustomOutput() GetFirewallPolicyInternetServiceCustomOutput
	ToGetFirewallPolicyInternetServiceCustomOutputWithContext(context.Context) GetFirewallPolicyInternetServiceCustomOutput
}

type GetFirewallPolicyInternetServiceCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceCustomArgs) ToGetFirewallPolicyInternetServiceCustomOutput() GetFirewallPolicyInternetServiceCustomOutput {
	return i.ToGetFirewallPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceCustomArgs) ToGetFirewallPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceCustomOutput)
}

// GetFirewallPolicyInternetServiceCustomArrayInput is an input type that accepts GetFirewallPolicyInternetServiceCustomArray and GetFirewallPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceCustomArrayInput` via:
//
//	GetFirewallPolicyInternetServiceCustomArray{ GetFirewallPolicyInternetServiceCustomArgs{...} }
type GetFirewallPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceCustomArrayOutput() GetFirewallPolicyInternetServiceCustomArrayOutput
	ToGetFirewallPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceCustomArrayOutput
}

type GetFirewallPolicyInternetServiceCustomArray []GetFirewallPolicyInternetServiceCustomInput

func (GetFirewallPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceCustomArray) ToGetFirewallPolicyInternetServiceCustomArrayOutput() GetFirewallPolicyInternetServiceCustomArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceCustomArray) ToGetFirewallPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceCustomArrayOutput)
}

type GetFirewallPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceCustomOutput) ToGetFirewallPolicyInternetServiceCustomOutput() GetFirewallPolicyInternetServiceCustomOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomOutput) ToGetFirewallPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceCustomArrayOutput) ToGetFirewallPolicyInternetServiceCustomArrayOutput() GetFirewallPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomArrayOutput) ToGetFirewallPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceCustom {
		return vs[0].([]GetFirewallPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceCustomOutput)
}

type GetFirewallPolicyInternetServiceCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceCustomGroupInput is an input type that accepts GetFirewallPolicyInternetServiceCustomGroupArgs and GetFirewallPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceCustomGroupInput` via:
//
//	GetFirewallPolicyInternetServiceCustomGroupArgs{...}
type GetFirewallPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceCustomGroupOutput() GetFirewallPolicyInternetServiceCustomGroupOutput
	ToGetFirewallPolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetFirewallPolicyInternetServiceCustomGroupOutput
}

type GetFirewallPolicyInternetServiceCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceCustomGroupArgs) ToGetFirewallPolicyInternetServiceCustomGroupOutput() GetFirewallPolicyInternetServiceCustomGroupOutput {
	return i.ToGetFirewallPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceCustomGroupArgs) ToGetFirewallPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceCustomGroupOutput)
}

// GetFirewallPolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetFirewallPolicyInternetServiceCustomGroupArray and GetFirewallPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetFirewallPolicyInternetServiceCustomGroupArray{ GetFirewallPolicyInternetServiceCustomGroupArgs{...} }
type GetFirewallPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceCustomGroupArrayOutput() GetFirewallPolicyInternetServiceCustomGroupArrayOutput
	ToGetFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceCustomGroupArrayOutput
}

type GetFirewallPolicyInternetServiceCustomGroupArray []GetFirewallPolicyInternetServiceCustomGroupInput

func (GetFirewallPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceCustomGroupArray) ToGetFirewallPolicyInternetServiceCustomGroupArrayOutput() GetFirewallPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceCustomGroupArray) ToGetFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceCustomGroupArrayOutput)
}

type GetFirewallPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceCustomGroupOutput) ToGetFirewallPolicyInternetServiceCustomGroupOutput() GetFirewallPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomGroupOutput) ToGetFirewallPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallPolicyInternetServiceCustomGroupArrayOutput() GetFirewallPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceCustomGroup {
		return vs[0].([]GetFirewallPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceCustomGroupOutput)
}

type GetFirewallPolicyInternetServiceGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceGroupInput is an input type that accepts GetFirewallPolicyInternetServiceGroupArgs and GetFirewallPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceGroupInput` via:
//
//	GetFirewallPolicyInternetServiceGroupArgs{...}
type GetFirewallPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceGroupOutput() GetFirewallPolicyInternetServiceGroupOutput
	ToGetFirewallPolicyInternetServiceGroupOutputWithContext(context.Context) GetFirewallPolicyInternetServiceGroupOutput
}

type GetFirewallPolicyInternetServiceGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceGroupArgs) ToGetFirewallPolicyInternetServiceGroupOutput() GetFirewallPolicyInternetServiceGroupOutput {
	return i.ToGetFirewallPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceGroupArgs) ToGetFirewallPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceGroupOutput)
}

// GetFirewallPolicyInternetServiceGroupArrayInput is an input type that accepts GetFirewallPolicyInternetServiceGroupArray and GetFirewallPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceGroupArrayInput` via:
//
//	GetFirewallPolicyInternetServiceGroupArray{ GetFirewallPolicyInternetServiceGroupArgs{...} }
type GetFirewallPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceGroupArrayOutput() GetFirewallPolicyInternetServiceGroupArrayOutput
	ToGetFirewallPolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceGroupArrayOutput
}

type GetFirewallPolicyInternetServiceGroupArray []GetFirewallPolicyInternetServiceGroupInput

func (GetFirewallPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceGroupArray) ToGetFirewallPolicyInternetServiceGroupArrayOutput() GetFirewallPolicyInternetServiceGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceGroupArray) ToGetFirewallPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceGroupArrayOutput)
}

type GetFirewallPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceGroupOutput) ToGetFirewallPolicyInternetServiceGroupOutput() GetFirewallPolicyInternetServiceGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceGroupOutput) ToGetFirewallPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceGroupArrayOutput) ToGetFirewallPolicyInternetServiceGroupArrayOutput() GetFirewallPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceGroupArrayOutput) ToGetFirewallPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceGroup {
		return vs[0].([]GetFirewallPolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceGroupOutput)
}

type GetFirewallPolicyInternetServiceId struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicyInternetServiceIdInput is an input type that accepts GetFirewallPolicyInternetServiceIdArgs and GetFirewallPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceIdInput` via:
//
//	GetFirewallPolicyInternetServiceIdArgs{...}
type GetFirewallPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceIdOutput() GetFirewallPolicyInternetServiceIdOutput
	ToGetFirewallPolicyInternetServiceIdOutputWithContext(context.Context) GetFirewallPolicyInternetServiceIdOutput
}

type GetFirewallPolicyInternetServiceIdArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceIdArgs) ToGetFirewallPolicyInternetServiceIdOutput() GetFirewallPolicyInternetServiceIdOutput {
	return i.ToGetFirewallPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceIdArgs) ToGetFirewallPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceIdOutput)
}

// GetFirewallPolicyInternetServiceIdArrayInput is an input type that accepts GetFirewallPolicyInternetServiceIdArray and GetFirewallPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceIdArrayInput` via:
//
//	GetFirewallPolicyInternetServiceIdArray{ GetFirewallPolicyInternetServiceIdArgs{...} }
type GetFirewallPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceIdArrayOutput() GetFirewallPolicyInternetServiceIdArrayOutput
	ToGetFirewallPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceIdArrayOutput
}

type GetFirewallPolicyInternetServiceIdArray []GetFirewallPolicyInternetServiceIdInput

func (GetFirewallPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceIdArray) ToGetFirewallPolicyInternetServiceIdArrayOutput() GetFirewallPolicyInternetServiceIdArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceIdArray) ToGetFirewallPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceIdArrayOutput)
}

type GetFirewallPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceIdOutput) ToGetFirewallPolicyInternetServiceIdOutput() GetFirewallPolicyInternetServiceIdOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceIdOutput) ToGetFirewallPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceIdOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceIdArrayOutput) ToGetFirewallPolicyInternetServiceIdArrayOutput() GetFirewallPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceIdArrayOutput) ToGetFirewallPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceId {
		return vs[0].([]GetFirewallPolicyInternetServiceId)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceIdOutput)
}

type GetFirewallPolicyInternetServiceName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceNameInput is an input type that accepts GetFirewallPolicyInternetServiceNameArgs and GetFirewallPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceNameInput` via:
//
//	GetFirewallPolicyInternetServiceNameArgs{...}
type GetFirewallPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceNameOutput() GetFirewallPolicyInternetServiceNameOutput
	ToGetFirewallPolicyInternetServiceNameOutputWithContext(context.Context) GetFirewallPolicyInternetServiceNameOutput
}

type GetFirewallPolicyInternetServiceNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceNameArgs) ToGetFirewallPolicyInternetServiceNameOutput() GetFirewallPolicyInternetServiceNameOutput {
	return i.ToGetFirewallPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceNameArgs) ToGetFirewallPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceNameOutput)
}

// GetFirewallPolicyInternetServiceNameArrayInput is an input type that accepts GetFirewallPolicyInternetServiceNameArray and GetFirewallPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceNameArrayInput` via:
//
//	GetFirewallPolicyInternetServiceNameArray{ GetFirewallPolicyInternetServiceNameArgs{...} }
type GetFirewallPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceNameArrayOutput() GetFirewallPolicyInternetServiceNameArrayOutput
	ToGetFirewallPolicyInternetServiceNameArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceNameArrayOutput
}

type GetFirewallPolicyInternetServiceNameArray []GetFirewallPolicyInternetServiceNameInput

func (GetFirewallPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceNameArray) ToGetFirewallPolicyInternetServiceNameArrayOutput() GetFirewallPolicyInternetServiceNameArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceNameArray) ToGetFirewallPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceNameArrayOutput)
}

type GetFirewallPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceNameOutput) ToGetFirewallPolicyInternetServiceNameOutput() GetFirewallPolicyInternetServiceNameOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceNameOutput) ToGetFirewallPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceNameOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceNameArrayOutput) ToGetFirewallPolicyInternetServiceNameArrayOutput() GetFirewallPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceNameArrayOutput) ToGetFirewallPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceName {
		return vs[0].([]GetFirewallPolicyInternetServiceName)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceNameOutput)
}

type GetFirewallPolicyInternetServiceSrcCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceSrcCustomInput is an input type that accepts GetFirewallPolicyInternetServiceSrcCustomArgs and GetFirewallPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcCustomInput` via:
//
//	GetFirewallPolicyInternetServiceSrcCustomArgs{...}
type GetFirewallPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcCustomOutput() GetFirewallPolicyInternetServiceSrcCustomOutput
	ToGetFirewallPolicyInternetServiceSrcCustomOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcCustomOutput
}

type GetFirewallPolicyInternetServiceSrcCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcCustomArgs) ToGetFirewallPolicyInternetServiceSrcCustomOutput() GetFirewallPolicyInternetServiceSrcCustomOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcCustomArgs) ToGetFirewallPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcCustomOutput)
}

// GetFirewallPolicyInternetServiceSrcCustomArrayInput is an input type that accepts GetFirewallPolicyInternetServiceSrcCustomArray and GetFirewallPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcCustomArrayInput` via:
//
//	GetFirewallPolicyInternetServiceSrcCustomArray{ GetFirewallPolicyInternetServiceSrcCustomArgs{...} }
type GetFirewallPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcCustomArrayOutput() GetFirewallPolicyInternetServiceSrcCustomArrayOutput
	ToGetFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcCustomArrayOutput
}

type GetFirewallPolicyInternetServiceSrcCustomArray []GetFirewallPolicyInternetServiceSrcCustomInput

func (GetFirewallPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcCustomArray) ToGetFirewallPolicyInternetServiceSrcCustomArrayOutput() GetFirewallPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcCustomArray) ToGetFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcCustomArrayOutput)
}

type GetFirewallPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcCustomOutput) ToGetFirewallPolicyInternetServiceSrcCustomOutput() GetFirewallPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomOutput) ToGetFirewallPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceSrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcCustomArrayOutput) ToGetFirewallPolicyInternetServiceSrcCustomArrayOutput() GetFirewallPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomArrayOutput) ToGetFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceSrcCustom {
		return vs[0].([]GetFirewallPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceSrcCustomOutput)
}

type GetFirewallPolicyInternetServiceSrcCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceSrcCustomGroupInput is an input type that accepts GetFirewallPolicyInternetServiceSrcCustomGroupArgs and GetFirewallPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcCustomGroupInput` via:
//
//	GetFirewallPolicyInternetServiceSrcCustomGroupArgs{...}
type GetFirewallPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcCustomGroupOutput() GetFirewallPolicyInternetServiceSrcCustomGroupOutput
	ToGetFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupOutput
}

type GetFirewallPolicyInternetServiceSrcCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcCustomGroupArgs) ToGetFirewallPolicyInternetServiceSrcCustomGroupOutput() GetFirewallPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcCustomGroupArgs) ToGetFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcCustomGroupOutput)
}

// GetFirewallPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts GetFirewallPolicyInternetServiceSrcCustomGroupArray and GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	GetFirewallPolicyInternetServiceSrcCustomGroupArray{ GetFirewallPolicyInternetServiceSrcCustomGroupArgs{...} }
type GetFirewallPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput
	ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput
}

type GetFirewallPolicyInternetServiceSrcCustomGroupArray []GetFirewallPolicyInternetServiceSrcCustomGroupInput

func (GetFirewallPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcCustomGroupArray) ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcCustomGroupArray) ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type GetFirewallPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcCustomGroupOutput) ToGetFirewallPolicyInternetServiceSrcCustomGroupOutput() GetFirewallPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomGroupOutput) ToGetFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceSrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]GetFirewallPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceSrcCustomGroupOutput)
}

type GetFirewallPolicyInternetServiceSrcGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceSrcGroupInput is an input type that accepts GetFirewallPolicyInternetServiceSrcGroupArgs and GetFirewallPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcGroupInput` via:
//
//	GetFirewallPolicyInternetServiceSrcGroupArgs{...}
type GetFirewallPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcGroupOutput() GetFirewallPolicyInternetServiceSrcGroupOutput
	ToGetFirewallPolicyInternetServiceSrcGroupOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcGroupOutput
}

type GetFirewallPolicyInternetServiceSrcGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcGroupArgs) ToGetFirewallPolicyInternetServiceSrcGroupOutput() GetFirewallPolicyInternetServiceSrcGroupOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcGroupArgs) ToGetFirewallPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcGroupOutput)
}

// GetFirewallPolicyInternetServiceSrcGroupArrayInput is an input type that accepts GetFirewallPolicyInternetServiceSrcGroupArray and GetFirewallPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcGroupArrayInput` via:
//
//	GetFirewallPolicyInternetServiceSrcGroupArray{ GetFirewallPolicyInternetServiceSrcGroupArgs{...} }
type GetFirewallPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcGroupArrayOutput() GetFirewallPolicyInternetServiceSrcGroupArrayOutput
	ToGetFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcGroupArrayOutput
}

type GetFirewallPolicyInternetServiceSrcGroupArray []GetFirewallPolicyInternetServiceSrcGroupInput

func (GetFirewallPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcGroupArray) ToGetFirewallPolicyInternetServiceSrcGroupArrayOutput() GetFirewallPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcGroupArray) ToGetFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcGroupArrayOutput)
}

type GetFirewallPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcGroupOutput) ToGetFirewallPolicyInternetServiceSrcGroupOutput() GetFirewallPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcGroupOutput) ToGetFirewallPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceSrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcGroupArrayOutput) ToGetFirewallPolicyInternetServiceSrcGroupArrayOutput() GetFirewallPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcGroupArrayOutput) ToGetFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceSrcGroup {
		return vs[0].([]GetFirewallPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceSrcGroupOutput)
}

type GetFirewallPolicyInternetServiceSrcId struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicyInternetServiceSrcIdInput is an input type that accepts GetFirewallPolicyInternetServiceSrcIdArgs and GetFirewallPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcIdInput` via:
//
//	GetFirewallPolicyInternetServiceSrcIdArgs{...}
type GetFirewallPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcIdOutput() GetFirewallPolicyInternetServiceSrcIdOutput
	ToGetFirewallPolicyInternetServiceSrcIdOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcIdOutput
}

type GetFirewallPolicyInternetServiceSrcIdArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcIdArgs) ToGetFirewallPolicyInternetServiceSrcIdOutput() GetFirewallPolicyInternetServiceSrcIdOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcIdArgs) ToGetFirewallPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcIdOutput)
}

// GetFirewallPolicyInternetServiceSrcIdArrayInput is an input type that accepts GetFirewallPolicyInternetServiceSrcIdArray and GetFirewallPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcIdArrayInput` via:
//
//	GetFirewallPolicyInternetServiceSrcIdArray{ GetFirewallPolicyInternetServiceSrcIdArgs{...} }
type GetFirewallPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcIdArrayOutput() GetFirewallPolicyInternetServiceSrcIdArrayOutput
	ToGetFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcIdArrayOutput
}

type GetFirewallPolicyInternetServiceSrcIdArray []GetFirewallPolicyInternetServiceSrcIdInput

func (GetFirewallPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcIdArray) ToGetFirewallPolicyInternetServiceSrcIdArrayOutput() GetFirewallPolicyInternetServiceSrcIdArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcIdArray) ToGetFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcIdArrayOutput)
}

type GetFirewallPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcIdOutput) ToGetFirewallPolicyInternetServiceSrcIdOutput() GetFirewallPolicyInternetServiceSrcIdOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcIdOutput) ToGetFirewallPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcIdOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicyInternetServiceSrcIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceSrcId) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcIdArrayOutput) ToGetFirewallPolicyInternetServiceSrcIdArrayOutput() GetFirewallPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcIdArrayOutput) ToGetFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceSrcId {
		return vs[0].([]GetFirewallPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceSrcIdOutput)
}

type GetFirewallPolicyInternetServiceSrcName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyInternetServiceSrcNameInput is an input type that accepts GetFirewallPolicyInternetServiceSrcNameArgs and GetFirewallPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcNameInput` via:
//
//	GetFirewallPolicyInternetServiceSrcNameArgs{...}
type GetFirewallPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcNameOutput() GetFirewallPolicyInternetServiceSrcNameOutput
	ToGetFirewallPolicyInternetServiceSrcNameOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcNameOutput
}

type GetFirewallPolicyInternetServiceSrcNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcNameArgs) ToGetFirewallPolicyInternetServiceSrcNameOutput() GetFirewallPolicyInternetServiceSrcNameOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcNameArgs) ToGetFirewallPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcNameOutput)
}

// GetFirewallPolicyInternetServiceSrcNameArrayInput is an input type that accepts GetFirewallPolicyInternetServiceSrcNameArray and GetFirewallPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyInternetServiceSrcNameArrayInput` via:
//
//	GetFirewallPolicyInternetServiceSrcNameArray{ GetFirewallPolicyInternetServiceSrcNameArgs{...} }
type GetFirewallPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyInternetServiceSrcNameArrayOutput() GetFirewallPolicyInternetServiceSrcNameArrayOutput
	ToGetFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) GetFirewallPolicyInternetServiceSrcNameArrayOutput
}

type GetFirewallPolicyInternetServiceSrcNameArray []GetFirewallPolicyInternetServiceSrcNameInput

func (GetFirewallPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetFirewallPolicyInternetServiceSrcNameArray) ToGetFirewallPolicyInternetServiceSrcNameArrayOutput() GetFirewallPolicyInternetServiceSrcNameArrayOutput {
	return i.ToGetFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyInternetServiceSrcNameArray) ToGetFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyInternetServiceSrcNameArrayOutput)
}

type GetFirewallPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcNameOutput) ToGetFirewallPolicyInternetServiceSrcNameOutput() GetFirewallPolicyInternetServiceSrcNameOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcNameOutput) ToGetFirewallPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcNameOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyInternetServiceSrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyInternetServiceSrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetFirewallPolicyInternetServiceSrcNameArrayOutput) ToGetFirewallPolicyInternetServiceSrcNameArrayOutput() GetFirewallPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcNameArrayOutput) ToGetFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetFirewallPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyInternetServiceSrcName {
		return vs[0].([]GetFirewallPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(GetFirewallPolicyInternetServiceSrcNameOutput)
}

type GetFirewallPolicyNetworkServiceDynamic struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyNetworkServiceDynamicInput is an input type that accepts GetFirewallPolicyNetworkServiceDynamicArgs and GetFirewallPolicyNetworkServiceDynamicOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNetworkServiceDynamicInput` via:
//
//	GetFirewallPolicyNetworkServiceDynamicArgs{...}
type GetFirewallPolicyNetworkServiceDynamicInput interface {
	pulumi.Input

	ToGetFirewallPolicyNetworkServiceDynamicOutput() GetFirewallPolicyNetworkServiceDynamicOutput
	ToGetFirewallPolicyNetworkServiceDynamicOutputWithContext(context.Context) GetFirewallPolicyNetworkServiceDynamicOutput
}

type GetFirewallPolicyNetworkServiceDynamicArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyNetworkServiceDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i GetFirewallPolicyNetworkServiceDynamicArgs) ToGetFirewallPolicyNetworkServiceDynamicOutput() GetFirewallPolicyNetworkServiceDynamicOutput {
	return i.ToGetFirewallPolicyNetworkServiceDynamicOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNetworkServiceDynamicArgs) ToGetFirewallPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNetworkServiceDynamicOutput)
}

// GetFirewallPolicyNetworkServiceDynamicArrayInput is an input type that accepts GetFirewallPolicyNetworkServiceDynamicArray and GetFirewallPolicyNetworkServiceDynamicArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNetworkServiceDynamicArrayInput` via:
//
//	GetFirewallPolicyNetworkServiceDynamicArray{ GetFirewallPolicyNetworkServiceDynamicArgs{...} }
type GetFirewallPolicyNetworkServiceDynamicArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyNetworkServiceDynamicArrayOutput() GetFirewallPolicyNetworkServiceDynamicArrayOutput
	ToGetFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(context.Context) GetFirewallPolicyNetworkServiceDynamicArrayOutput
}

type GetFirewallPolicyNetworkServiceDynamicArray []GetFirewallPolicyNetworkServiceDynamicInput

func (GetFirewallPolicyNetworkServiceDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i GetFirewallPolicyNetworkServiceDynamicArray) ToGetFirewallPolicyNetworkServiceDynamicArrayOutput() GetFirewallPolicyNetworkServiceDynamicArrayOutput {
	return i.ToGetFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNetworkServiceDynamicArray) ToGetFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNetworkServiceDynamicArrayOutput)
}

type GetFirewallPolicyNetworkServiceDynamicOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNetworkServiceDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o GetFirewallPolicyNetworkServiceDynamicOutput) ToGetFirewallPolicyNetworkServiceDynamicOutput() GetFirewallPolicyNetworkServiceDynamicOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceDynamicOutput) ToGetFirewallPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceDynamicOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyNetworkServiceDynamicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyNetworkServiceDynamic) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyNetworkServiceDynamicArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNetworkServiceDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o GetFirewallPolicyNetworkServiceDynamicArrayOutput) ToGetFirewallPolicyNetworkServiceDynamicArrayOutput() GetFirewallPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceDynamicArrayOutput) ToGetFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceDynamicArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyNetworkServiceDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyNetworkServiceDynamic {
		return vs[0].([]GetFirewallPolicyNetworkServiceDynamic)[vs[1].(int)]
	}).(GetFirewallPolicyNetworkServiceDynamicOutput)
}

type GetFirewallPolicyNetworkServiceSrcDynamic struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyNetworkServiceSrcDynamicInput is an input type that accepts GetFirewallPolicyNetworkServiceSrcDynamicArgs and GetFirewallPolicyNetworkServiceSrcDynamicOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNetworkServiceSrcDynamicInput` via:
//
//	GetFirewallPolicyNetworkServiceSrcDynamicArgs{...}
type GetFirewallPolicyNetworkServiceSrcDynamicInput interface {
	pulumi.Input

	ToGetFirewallPolicyNetworkServiceSrcDynamicOutput() GetFirewallPolicyNetworkServiceSrcDynamicOutput
	ToGetFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(context.Context) GetFirewallPolicyNetworkServiceSrcDynamicOutput
}

type GetFirewallPolicyNetworkServiceSrcDynamicArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyNetworkServiceSrcDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i GetFirewallPolicyNetworkServiceSrcDynamicArgs) ToGetFirewallPolicyNetworkServiceSrcDynamicOutput() GetFirewallPolicyNetworkServiceSrcDynamicOutput {
	return i.ToGetFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNetworkServiceSrcDynamicArgs) ToGetFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNetworkServiceSrcDynamicOutput)
}

// GetFirewallPolicyNetworkServiceSrcDynamicArrayInput is an input type that accepts GetFirewallPolicyNetworkServiceSrcDynamicArray and GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNetworkServiceSrcDynamicArrayInput` via:
//
//	GetFirewallPolicyNetworkServiceSrcDynamicArray{ GetFirewallPolicyNetworkServiceSrcDynamicArgs{...} }
type GetFirewallPolicyNetworkServiceSrcDynamicArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutput() GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput
	ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Context) GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput
}

type GetFirewallPolicyNetworkServiceSrcDynamicArray []GetFirewallPolicyNetworkServiceSrcDynamicInput

func (GetFirewallPolicyNetworkServiceSrcDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i GetFirewallPolicyNetworkServiceSrcDynamicArray) ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutput() GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return i.ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNetworkServiceSrcDynamicArray) ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput)
}

type GetFirewallPolicyNetworkServiceSrcDynamicOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNetworkServiceSrcDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o GetFirewallPolicyNetworkServiceSrcDynamicOutput) ToGetFirewallPolicyNetworkServiceSrcDynamicOutput() GetFirewallPolicyNetworkServiceSrcDynamicOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceSrcDynamicOutput) ToGetFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceSrcDynamicOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyNetworkServiceSrcDynamicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyNetworkServiceSrcDynamic) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput) ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutput() GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput) ToGetFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyNetworkServiceSrcDynamic {
		return vs[0].([]GetFirewallPolicyNetworkServiceSrcDynamic)[vs[1].(int)]
	}).(GetFirewallPolicyNetworkServiceSrcDynamicOutput)
}

type GetFirewallPolicyNtlmEnabledBrowser struct {
	// User agent string.
	UserAgentString string `pulumi:"userAgentString"`
}

// GetFirewallPolicyNtlmEnabledBrowserInput is an input type that accepts GetFirewallPolicyNtlmEnabledBrowserArgs and GetFirewallPolicyNtlmEnabledBrowserOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNtlmEnabledBrowserInput` via:
//
//	GetFirewallPolicyNtlmEnabledBrowserArgs{...}
type GetFirewallPolicyNtlmEnabledBrowserInput interface {
	pulumi.Input

	ToGetFirewallPolicyNtlmEnabledBrowserOutput() GetFirewallPolicyNtlmEnabledBrowserOutput
	ToGetFirewallPolicyNtlmEnabledBrowserOutputWithContext(context.Context) GetFirewallPolicyNtlmEnabledBrowserOutput
}

type GetFirewallPolicyNtlmEnabledBrowserArgs struct {
	// User agent string.
	UserAgentString pulumi.StringInput `pulumi:"userAgentString"`
}

func (GetFirewallPolicyNtlmEnabledBrowserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i GetFirewallPolicyNtlmEnabledBrowserArgs) ToGetFirewallPolicyNtlmEnabledBrowserOutput() GetFirewallPolicyNtlmEnabledBrowserOutput {
	return i.ToGetFirewallPolicyNtlmEnabledBrowserOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNtlmEnabledBrowserArgs) ToGetFirewallPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) GetFirewallPolicyNtlmEnabledBrowserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNtlmEnabledBrowserOutput)
}

// GetFirewallPolicyNtlmEnabledBrowserArrayInput is an input type that accepts GetFirewallPolicyNtlmEnabledBrowserArray and GetFirewallPolicyNtlmEnabledBrowserArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyNtlmEnabledBrowserArrayInput` via:
//
//	GetFirewallPolicyNtlmEnabledBrowserArray{ GetFirewallPolicyNtlmEnabledBrowserArgs{...} }
type GetFirewallPolicyNtlmEnabledBrowserArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyNtlmEnabledBrowserArrayOutput() GetFirewallPolicyNtlmEnabledBrowserArrayOutput
	ToGetFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Context) GetFirewallPolicyNtlmEnabledBrowserArrayOutput
}

type GetFirewallPolicyNtlmEnabledBrowserArray []GetFirewallPolicyNtlmEnabledBrowserInput

func (GetFirewallPolicyNtlmEnabledBrowserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i GetFirewallPolicyNtlmEnabledBrowserArray) ToGetFirewallPolicyNtlmEnabledBrowserArrayOutput() GetFirewallPolicyNtlmEnabledBrowserArrayOutput {
	return i.ToGetFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyNtlmEnabledBrowserArray) ToGetFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNtlmEnabledBrowserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyNtlmEnabledBrowserArrayOutput)
}

type GetFirewallPolicyNtlmEnabledBrowserOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNtlmEnabledBrowserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o GetFirewallPolicyNtlmEnabledBrowserOutput) ToGetFirewallPolicyNtlmEnabledBrowserOutput() GetFirewallPolicyNtlmEnabledBrowserOutput {
	return o
}

func (o GetFirewallPolicyNtlmEnabledBrowserOutput) ToGetFirewallPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) GetFirewallPolicyNtlmEnabledBrowserOutput {
	return o
}

// User agent string.
func (o GetFirewallPolicyNtlmEnabledBrowserOutput) UserAgentString() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyNtlmEnabledBrowser) string { return v.UserAgentString }).(pulumi.StringOutput)
}

type GetFirewallPolicyNtlmEnabledBrowserArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyNtlmEnabledBrowserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o GetFirewallPolicyNtlmEnabledBrowserArrayOutput) ToGetFirewallPolicyNtlmEnabledBrowserArrayOutput() GetFirewallPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o GetFirewallPolicyNtlmEnabledBrowserArrayOutput) ToGetFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) GetFirewallPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o GetFirewallPolicyNtlmEnabledBrowserArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyNtlmEnabledBrowserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyNtlmEnabledBrowser {
		return vs[0].([]GetFirewallPolicyNtlmEnabledBrowser)[vs[1].(int)]
	}).(GetFirewallPolicyNtlmEnabledBrowserOutput)
}

type GetFirewallPolicyPoolname6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyPoolname6Input is an input type that accepts GetFirewallPolicyPoolname6Args and GetFirewallPolicyPoolname6Output values.
// You can construct a concrete instance of `GetFirewallPolicyPoolname6Input` via:
//
//	GetFirewallPolicyPoolname6Args{...}
type GetFirewallPolicyPoolname6Input interface {
	pulumi.Input

	ToGetFirewallPolicyPoolname6Output() GetFirewallPolicyPoolname6Output
	ToGetFirewallPolicyPoolname6OutputWithContext(context.Context) GetFirewallPolicyPoolname6Output
}

type GetFirewallPolicyPoolname6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyPoolname6)(nil)).Elem()
}

func (i GetFirewallPolicyPoolname6Args) ToGetFirewallPolicyPoolname6Output() GetFirewallPolicyPoolname6Output {
	return i.ToGetFirewallPolicyPoolname6OutputWithContext(context.Background())
}

func (i GetFirewallPolicyPoolname6Args) ToGetFirewallPolicyPoolname6OutputWithContext(ctx context.Context) GetFirewallPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyPoolname6Output)
}

// GetFirewallPolicyPoolname6ArrayInput is an input type that accepts GetFirewallPolicyPoolname6Array and GetFirewallPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyPoolname6ArrayInput` via:
//
//	GetFirewallPolicyPoolname6Array{ GetFirewallPolicyPoolname6Args{...} }
type GetFirewallPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyPoolname6ArrayOutput() GetFirewallPolicyPoolname6ArrayOutput
	ToGetFirewallPolicyPoolname6ArrayOutputWithContext(context.Context) GetFirewallPolicyPoolname6ArrayOutput
}

type GetFirewallPolicyPoolname6Array []GetFirewallPolicyPoolname6Input

func (GetFirewallPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyPoolname6)(nil)).Elem()
}

func (i GetFirewallPolicyPoolname6Array) ToGetFirewallPolicyPoolname6ArrayOutput() GetFirewallPolicyPoolname6ArrayOutput {
	return i.ToGetFirewallPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyPoolname6Array) ToGetFirewallPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyPoolname6ArrayOutput)
}

type GetFirewallPolicyPoolname6Output struct{ *pulumi.OutputState }

func (GetFirewallPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyPoolname6)(nil)).Elem()
}

func (o GetFirewallPolicyPoolname6Output) ToGetFirewallPolicyPoolname6Output() GetFirewallPolicyPoolname6Output {
	return o
}

func (o GetFirewallPolicyPoolname6Output) ToGetFirewallPolicyPoolname6OutputWithContext(ctx context.Context) GetFirewallPolicyPoolname6Output {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyPoolname6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyPoolname6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyPoolname6)(nil)).Elem()
}

func (o GetFirewallPolicyPoolname6ArrayOutput) ToGetFirewallPolicyPoolname6ArrayOutput() GetFirewallPolicyPoolname6ArrayOutput {
	return o
}

func (o GetFirewallPolicyPoolname6ArrayOutput) ToGetFirewallPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicyPoolname6ArrayOutput {
	return o
}

func (o GetFirewallPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyPoolname6 {
		return vs[0].([]GetFirewallPolicyPoolname6)[vs[1].(int)]
	}).(GetFirewallPolicyPoolname6Output)
}

type GetFirewallPolicyPoolname struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyPoolnameInput is an input type that accepts GetFirewallPolicyPoolnameArgs and GetFirewallPolicyPoolnameOutput values.
// You can construct a concrete instance of `GetFirewallPolicyPoolnameInput` via:
//
//	GetFirewallPolicyPoolnameArgs{...}
type GetFirewallPolicyPoolnameInput interface {
	pulumi.Input

	ToGetFirewallPolicyPoolnameOutput() GetFirewallPolicyPoolnameOutput
	ToGetFirewallPolicyPoolnameOutputWithContext(context.Context) GetFirewallPolicyPoolnameOutput
}

type GetFirewallPolicyPoolnameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyPoolname)(nil)).Elem()
}

func (i GetFirewallPolicyPoolnameArgs) ToGetFirewallPolicyPoolnameOutput() GetFirewallPolicyPoolnameOutput {
	return i.ToGetFirewallPolicyPoolnameOutputWithContext(context.Background())
}

func (i GetFirewallPolicyPoolnameArgs) ToGetFirewallPolicyPoolnameOutputWithContext(ctx context.Context) GetFirewallPolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyPoolnameOutput)
}

// GetFirewallPolicyPoolnameArrayInput is an input type that accepts GetFirewallPolicyPoolnameArray and GetFirewallPolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyPoolnameArrayInput` via:
//
//	GetFirewallPolicyPoolnameArray{ GetFirewallPolicyPoolnameArgs{...} }
type GetFirewallPolicyPoolnameArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyPoolnameArrayOutput() GetFirewallPolicyPoolnameArrayOutput
	ToGetFirewallPolicyPoolnameArrayOutputWithContext(context.Context) GetFirewallPolicyPoolnameArrayOutput
}

type GetFirewallPolicyPoolnameArray []GetFirewallPolicyPoolnameInput

func (GetFirewallPolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyPoolname)(nil)).Elem()
}

func (i GetFirewallPolicyPoolnameArray) ToGetFirewallPolicyPoolnameArrayOutput() GetFirewallPolicyPoolnameArrayOutput {
	return i.ToGetFirewallPolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyPoolnameArray) ToGetFirewallPolicyPoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyPoolnameArrayOutput)
}

type GetFirewallPolicyPoolnameOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyPoolname)(nil)).Elem()
}

func (o GetFirewallPolicyPoolnameOutput) ToGetFirewallPolicyPoolnameOutput() GetFirewallPolicyPoolnameOutput {
	return o
}

func (o GetFirewallPolicyPoolnameOutput) ToGetFirewallPolicyPoolnameOutputWithContext(ctx context.Context) GetFirewallPolicyPoolnameOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyPoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyPoolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyPoolname)(nil)).Elem()
}

func (o GetFirewallPolicyPoolnameArrayOutput) ToGetFirewallPolicyPoolnameArrayOutput() GetFirewallPolicyPoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicyPoolnameArrayOutput) ToGetFirewallPolicyPoolnameArrayOutputWithContext(ctx context.Context) GetFirewallPolicyPoolnameArrayOutput {
	return o
}

func (o GetFirewallPolicyPoolnameArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyPoolname {
		return vs[0].([]GetFirewallPolicyPoolname)[vs[1].(int)]
	}).(GetFirewallPolicyPoolnameOutput)
}

type GetFirewallPolicyRtpAddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyRtpAddrInput is an input type that accepts GetFirewallPolicyRtpAddrArgs and GetFirewallPolicyRtpAddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicyRtpAddrInput` via:
//
//	GetFirewallPolicyRtpAddrArgs{...}
type GetFirewallPolicyRtpAddrInput interface {
	pulumi.Input

	ToGetFirewallPolicyRtpAddrOutput() GetFirewallPolicyRtpAddrOutput
	ToGetFirewallPolicyRtpAddrOutputWithContext(context.Context) GetFirewallPolicyRtpAddrOutput
}

type GetFirewallPolicyRtpAddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyRtpAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyRtpAddr)(nil)).Elem()
}

func (i GetFirewallPolicyRtpAddrArgs) ToGetFirewallPolicyRtpAddrOutput() GetFirewallPolicyRtpAddrOutput {
	return i.ToGetFirewallPolicyRtpAddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicyRtpAddrArgs) ToGetFirewallPolicyRtpAddrOutputWithContext(ctx context.Context) GetFirewallPolicyRtpAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyRtpAddrOutput)
}

// GetFirewallPolicyRtpAddrArrayInput is an input type that accepts GetFirewallPolicyRtpAddrArray and GetFirewallPolicyRtpAddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyRtpAddrArrayInput` via:
//
//	GetFirewallPolicyRtpAddrArray{ GetFirewallPolicyRtpAddrArgs{...} }
type GetFirewallPolicyRtpAddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyRtpAddrArrayOutput() GetFirewallPolicyRtpAddrArrayOutput
	ToGetFirewallPolicyRtpAddrArrayOutputWithContext(context.Context) GetFirewallPolicyRtpAddrArrayOutput
}

type GetFirewallPolicyRtpAddrArray []GetFirewallPolicyRtpAddrInput

func (GetFirewallPolicyRtpAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyRtpAddr)(nil)).Elem()
}

func (i GetFirewallPolicyRtpAddrArray) ToGetFirewallPolicyRtpAddrArrayOutput() GetFirewallPolicyRtpAddrArrayOutput {
	return i.ToGetFirewallPolicyRtpAddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyRtpAddrArray) ToGetFirewallPolicyRtpAddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicyRtpAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyRtpAddrArrayOutput)
}

type GetFirewallPolicyRtpAddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyRtpAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyRtpAddr)(nil)).Elem()
}

func (o GetFirewallPolicyRtpAddrOutput) ToGetFirewallPolicyRtpAddrOutput() GetFirewallPolicyRtpAddrOutput {
	return o
}

func (o GetFirewallPolicyRtpAddrOutput) ToGetFirewallPolicyRtpAddrOutputWithContext(ctx context.Context) GetFirewallPolicyRtpAddrOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyRtpAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyRtpAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyRtpAddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyRtpAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyRtpAddr)(nil)).Elem()
}

func (o GetFirewallPolicyRtpAddrArrayOutput) ToGetFirewallPolicyRtpAddrArrayOutput() GetFirewallPolicyRtpAddrArrayOutput {
	return o
}

func (o GetFirewallPolicyRtpAddrArrayOutput) ToGetFirewallPolicyRtpAddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicyRtpAddrArrayOutput {
	return o
}

func (o GetFirewallPolicyRtpAddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyRtpAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyRtpAddr {
		return vs[0].([]GetFirewallPolicyRtpAddr)[vs[1].(int)]
	}).(GetFirewallPolicyRtpAddrOutput)
}

type GetFirewallPolicyService struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyServiceInput is an input type that accepts GetFirewallPolicyServiceArgs and GetFirewallPolicyServiceOutput values.
// You can construct a concrete instance of `GetFirewallPolicyServiceInput` via:
//
//	GetFirewallPolicyServiceArgs{...}
type GetFirewallPolicyServiceInput interface {
	pulumi.Input

	ToGetFirewallPolicyServiceOutput() GetFirewallPolicyServiceOutput
	ToGetFirewallPolicyServiceOutputWithContext(context.Context) GetFirewallPolicyServiceOutput
}

type GetFirewallPolicyServiceArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyService)(nil)).Elem()
}

func (i GetFirewallPolicyServiceArgs) ToGetFirewallPolicyServiceOutput() GetFirewallPolicyServiceOutput {
	return i.ToGetFirewallPolicyServiceOutputWithContext(context.Background())
}

func (i GetFirewallPolicyServiceArgs) ToGetFirewallPolicyServiceOutputWithContext(ctx context.Context) GetFirewallPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyServiceOutput)
}

// GetFirewallPolicyServiceArrayInput is an input type that accepts GetFirewallPolicyServiceArray and GetFirewallPolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyServiceArrayInput` via:
//
//	GetFirewallPolicyServiceArray{ GetFirewallPolicyServiceArgs{...} }
type GetFirewallPolicyServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyServiceArrayOutput() GetFirewallPolicyServiceArrayOutput
	ToGetFirewallPolicyServiceArrayOutputWithContext(context.Context) GetFirewallPolicyServiceArrayOutput
}

type GetFirewallPolicyServiceArray []GetFirewallPolicyServiceInput

func (GetFirewallPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyService)(nil)).Elem()
}

func (i GetFirewallPolicyServiceArray) ToGetFirewallPolicyServiceArrayOutput() GetFirewallPolicyServiceArrayOutput {
	return i.ToGetFirewallPolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyServiceArray) ToGetFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyServiceArrayOutput)
}

type GetFirewallPolicyServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyService)(nil)).Elem()
}

func (o GetFirewallPolicyServiceOutput) ToGetFirewallPolicyServiceOutput() GetFirewallPolicyServiceOutput {
	return o
}

func (o GetFirewallPolicyServiceOutput) ToGetFirewallPolicyServiceOutputWithContext(ctx context.Context) GetFirewallPolicyServiceOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyService)(nil)).Elem()
}

func (o GetFirewallPolicyServiceArrayOutput) ToGetFirewallPolicyServiceArrayOutput() GetFirewallPolicyServiceArrayOutput {
	return o
}

func (o GetFirewallPolicyServiceArrayOutput) ToGetFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallPolicyServiceArrayOutput {
	return o
}

func (o GetFirewallPolicyServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyService {
		return vs[0].([]GetFirewallPolicyService)[vs[1].(int)]
	}).(GetFirewallPolicyServiceOutput)
}

type GetFirewallPolicySgt struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicySgtInput is an input type that accepts GetFirewallPolicySgtArgs and GetFirewallPolicySgtOutput values.
// You can construct a concrete instance of `GetFirewallPolicySgtInput` via:
//
//	GetFirewallPolicySgtArgs{...}
type GetFirewallPolicySgtInput interface {
	pulumi.Input

	ToGetFirewallPolicySgtOutput() GetFirewallPolicySgtOutput
	ToGetFirewallPolicySgtOutputWithContext(context.Context) GetFirewallPolicySgtOutput
}

type GetFirewallPolicySgtArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicySgtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySgt)(nil)).Elem()
}

func (i GetFirewallPolicySgtArgs) ToGetFirewallPolicySgtOutput() GetFirewallPolicySgtOutput {
	return i.ToGetFirewallPolicySgtOutputWithContext(context.Background())
}

func (i GetFirewallPolicySgtArgs) ToGetFirewallPolicySgtOutputWithContext(ctx context.Context) GetFirewallPolicySgtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySgtOutput)
}

// GetFirewallPolicySgtArrayInput is an input type that accepts GetFirewallPolicySgtArray and GetFirewallPolicySgtArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySgtArrayInput` via:
//
//	GetFirewallPolicySgtArray{ GetFirewallPolicySgtArgs{...} }
type GetFirewallPolicySgtArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySgtArrayOutput() GetFirewallPolicySgtArrayOutput
	ToGetFirewallPolicySgtArrayOutputWithContext(context.Context) GetFirewallPolicySgtArrayOutput
}

type GetFirewallPolicySgtArray []GetFirewallPolicySgtInput

func (GetFirewallPolicySgtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySgt)(nil)).Elem()
}

func (i GetFirewallPolicySgtArray) ToGetFirewallPolicySgtArrayOutput() GetFirewallPolicySgtArrayOutput {
	return i.ToGetFirewallPolicySgtArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySgtArray) ToGetFirewallPolicySgtArrayOutputWithContext(ctx context.Context) GetFirewallPolicySgtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySgtArrayOutput)
}

type GetFirewallPolicySgtOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySgtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySgt)(nil)).Elem()
}

func (o GetFirewallPolicySgtOutput) ToGetFirewallPolicySgtOutput() GetFirewallPolicySgtOutput {
	return o
}

func (o GetFirewallPolicySgtOutput) ToGetFirewallPolicySgtOutputWithContext(ctx context.Context) GetFirewallPolicySgtOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicySgtOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicySgt) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicySgtArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySgtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySgt)(nil)).Elem()
}

func (o GetFirewallPolicySgtArrayOutput) ToGetFirewallPolicySgtArrayOutput() GetFirewallPolicySgtArrayOutput {
	return o
}

func (o GetFirewallPolicySgtArrayOutput) ToGetFirewallPolicySgtArrayOutputWithContext(ctx context.Context) GetFirewallPolicySgtArrayOutput {
	return o
}

func (o GetFirewallPolicySgtArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySgtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySgt {
		return vs[0].([]GetFirewallPolicySgt)[vs[1].(int)]
	}).(GetFirewallPolicySgtOutput)
}

type GetFirewallPolicySrcVendorMac struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicySrcVendorMacInput is an input type that accepts GetFirewallPolicySrcVendorMacArgs and GetFirewallPolicySrcVendorMacOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcVendorMacInput` via:
//
//	GetFirewallPolicySrcVendorMacArgs{...}
type GetFirewallPolicySrcVendorMacInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcVendorMacOutput() GetFirewallPolicySrcVendorMacOutput
	ToGetFirewallPolicySrcVendorMacOutputWithContext(context.Context) GetFirewallPolicySrcVendorMacOutput
}

type GetFirewallPolicySrcVendorMacArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicySrcVendorMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcVendorMac)(nil)).Elem()
}

func (i GetFirewallPolicySrcVendorMacArgs) ToGetFirewallPolicySrcVendorMacOutput() GetFirewallPolicySrcVendorMacOutput {
	return i.ToGetFirewallPolicySrcVendorMacOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcVendorMacArgs) ToGetFirewallPolicySrcVendorMacOutputWithContext(ctx context.Context) GetFirewallPolicySrcVendorMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcVendorMacOutput)
}

// GetFirewallPolicySrcVendorMacArrayInput is an input type that accepts GetFirewallPolicySrcVendorMacArray and GetFirewallPolicySrcVendorMacArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcVendorMacArrayInput` via:
//
//	GetFirewallPolicySrcVendorMacArray{ GetFirewallPolicySrcVendorMacArgs{...} }
type GetFirewallPolicySrcVendorMacArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcVendorMacArrayOutput() GetFirewallPolicySrcVendorMacArrayOutput
	ToGetFirewallPolicySrcVendorMacArrayOutputWithContext(context.Context) GetFirewallPolicySrcVendorMacArrayOutput
}

type GetFirewallPolicySrcVendorMacArray []GetFirewallPolicySrcVendorMacInput

func (GetFirewallPolicySrcVendorMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcVendorMac)(nil)).Elem()
}

func (i GetFirewallPolicySrcVendorMacArray) ToGetFirewallPolicySrcVendorMacArrayOutput() GetFirewallPolicySrcVendorMacArrayOutput {
	return i.ToGetFirewallPolicySrcVendorMacArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcVendorMacArray) ToGetFirewallPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcVendorMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcVendorMacArrayOutput)
}

type GetFirewallPolicySrcVendorMacOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcVendorMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcVendorMac)(nil)).Elem()
}

func (o GetFirewallPolicySrcVendorMacOutput) ToGetFirewallPolicySrcVendorMacOutput() GetFirewallPolicySrcVendorMacOutput {
	return o
}

func (o GetFirewallPolicySrcVendorMacOutput) ToGetFirewallPolicySrcVendorMacOutputWithContext(ctx context.Context) GetFirewallPolicySrcVendorMacOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicySrcVendorMacOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicySrcVendorMac) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicySrcVendorMacArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcVendorMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcVendorMac)(nil)).Elem()
}

func (o GetFirewallPolicySrcVendorMacArrayOutput) ToGetFirewallPolicySrcVendorMacArrayOutput() GetFirewallPolicySrcVendorMacArrayOutput {
	return o
}

func (o GetFirewallPolicySrcVendorMacArrayOutput) ToGetFirewallPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcVendorMacArrayOutput {
	return o
}

func (o GetFirewallPolicySrcVendorMacArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySrcVendorMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySrcVendorMac {
		return vs[0].([]GetFirewallPolicySrcVendorMac)[vs[1].(int)]
	}).(GetFirewallPolicySrcVendorMacOutput)
}

type GetFirewallPolicySrcaddr6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicySrcaddr6Input is an input type that accepts GetFirewallPolicySrcaddr6Args and GetFirewallPolicySrcaddr6Output values.
// You can construct a concrete instance of `GetFirewallPolicySrcaddr6Input` via:
//
//	GetFirewallPolicySrcaddr6Args{...}
type GetFirewallPolicySrcaddr6Input interface {
	pulumi.Input

	ToGetFirewallPolicySrcaddr6Output() GetFirewallPolicySrcaddr6Output
	ToGetFirewallPolicySrcaddr6OutputWithContext(context.Context) GetFirewallPolicySrcaddr6Output
}

type GetFirewallPolicySrcaddr6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallPolicySrcaddr6Args) ToGetFirewallPolicySrcaddr6Output() GetFirewallPolicySrcaddr6Output {
	return i.ToGetFirewallPolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcaddr6Args) ToGetFirewallPolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcaddr6Output)
}

// GetFirewallPolicySrcaddr6ArrayInput is an input type that accepts GetFirewallPolicySrcaddr6Array and GetFirewallPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcaddr6ArrayInput` via:
//
//	GetFirewallPolicySrcaddr6Array{ GetFirewallPolicySrcaddr6Args{...} }
type GetFirewallPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcaddr6ArrayOutput() GetFirewallPolicySrcaddr6ArrayOutput
	ToGetFirewallPolicySrcaddr6ArrayOutputWithContext(context.Context) GetFirewallPolicySrcaddr6ArrayOutput
}

type GetFirewallPolicySrcaddr6Array []GetFirewallPolicySrcaddr6Input

func (GetFirewallPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallPolicySrcaddr6Array) ToGetFirewallPolicySrcaddr6ArrayOutput() GetFirewallPolicySrcaddr6ArrayOutput {
	return i.ToGetFirewallPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcaddr6Array) ToGetFirewallPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcaddr6ArrayOutput)
}

type GetFirewallPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallPolicySrcaddr6Output) ToGetFirewallPolicySrcaddr6Output() GetFirewallPolicySrcaddr6Output {
	return o
}

func (o GetFirewallPolicySrcaddr6Output) ToGetFirewallPolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallPolicySrcaddr6Output {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallPolicySrcaddr6ArrayOutput) ToGetFirewallPolicySrcaddr6ArrayOutput() GetFirewallPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallPolicySrcaddr6ArrayOutput) ToGetFirewallPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySrcaddr6 {
		return vs[0].([]GetFirewallPolicySrcaddr6)[vs[1].(int)]
	}).(GetFirewallPolicySrcaddr6Output)
}

type GetFirewallPolicySrcaddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicySrcaddrInput is an input type that accepts GetFirewallPolicySrcaddrArgs and GetFirewallPolicySrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcaddrInput` via:
//
//	GetFirewallPolicySrcaddrArgs{...}
type GetFirewallPolicySrcaddrInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcaddrOutput() GetFirewallPolicySrcaddrOutput
	ToGetFirewallPolicySrcaddrOutputWithContext(context.Context) GetFirewallPolicySrcaddrOutput
}

type GetFirewallPolicySrcaddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallPolicySrcaddrArgs) ToGetFirewallPolicySrcaddrOutput() GetFirewallPolicySrcaddrOutput {
	return i.ToGetFirewallPolicySrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcaddrArgs) ToGetFirewallPolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcaddrOutput)
}

// GetFirewallPolicySrcaddrArrayInput is an input type that accepts GetFirewallPolicySrcaddrArray and GetFirewallPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcaddrArrayInput` via:
//
//	GetFirewallPolicySrcaddrArray{ GetFirewallPolicySrcaddrArgs{...} }
type GetFirewallPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcaddrArrayOutput() GetFirewallPolicySrcaddrArrayOutput
	ToGetFirewallPolicySrcaddrArrayOutputWithContext(context.Context) GetFirewallPolicySrcaddrArrayOutput
}

type GetFirewallPolicySrcaddrArray []GetFirewallPolicySrcaddrInput

func (GetFirewallPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallPolicySrcaddrArray) ToGetFirewallPolicySrcaddrArrayOutput() GetFirewallPolicySrcaddrArrayOutput {
	return i.ToGetFirewallPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcaddrArray) ToGetFirewallPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcaddrArrayOutput)
}

type GetFirewallPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallPolicySrcaddrOutput) ToGetFirewallPolicySrcaddrOutput() GetFirewallPolicySrcaddrOutput {
	return o
}

func (o GetFirewallPolicySrcaddrOutput) ToGetFirewallPolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddrOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallPolicySrcaddrArrayOutput) ToGetFirewallPolicySrcaddrArrayOutput() GetFirewallPolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicySrcaddrArrayOutput) ToGetFirewallPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySrcaddr {
		return vs[0].([]GetFirewallPolicySrcaddr)[vs[1].(int)]
	}).(GetFirewallPolicySrcaddrOutput)
}

type GetFirewallPolicySrcintf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicySrcintfInput is an input type that accepts GetFirewallPolicySrcintfArgs and GetFirewallPolicySrcintfOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcintfInput` via:
//
//	GetFirewallPolicySrcintfArgs{...}
type GetFirewallPolicySrcintfInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcintfOutput() GetFirewallPolicySrcintfOutput
	ToGetFirewallPolicySrcintfOutputWithContext(context.Context) GetFirewallPolicySrcintfOutput
}

type GetFirewallPolicySrcintfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcintf)(nil)).Elem()
}

func (i GetFirewallPolicySrcintfArgs) ToGetFirewallPolicySrcintfOutput() GetFirewallPolicySrcintfOutput {
	return i.ToGetFirewallPolicySrcintfOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcintfArgs) ToGetFirewallPolicySrcintfOutputWithContext(ctx context.Context) GetFirewallPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcintfOutput)
}

// GetFirewallPolicySrcintfArrayInput is an input type that accepts GetFirewallPolicySrcintfArray and GetFirewallPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySrcintfArrayInput` via:
//
//	GetFirewallPolicySrcintfArray{ GetFirewallPolicySrcintfArgs{...} }
type GetFirewallPolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySrcintfArrayOutput() GetFirewallPolicySrcintfArrayOutput
	ToGetFirewallPolicySrcintfArrayOutputWithContext(context.Context) GetFirewallPolicySrcintfArrayOutput
}

type GetFirewallPolicySrcintfArray []GetFirewallPolicySrcintfInput

func (GetFirewallPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcintf)(nil)).Elem()
}

func (i GetFirewallPolicySrcintfArray) ToGetFirewallPolicySrcintfArrayOutput() GetFirewallPolicySrcintfArrayOutput {
	return i.ToGetFirewallPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySrcintfArray) ToGetFirewallPolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySrcintfArrayOutput)
}

type GetFirewallPolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySrcintf)(nil)).Elem()
}

func (o GetFirewallPolicySrcintfOutput) ToGetFirewallPolicySrcintfOutput() GetFirewallPolicySrcintfOutput {
	return o
}

func (o GetFirewallPolicySrcintfOutput) ToGetFirewallPolicySrcintfOutputWithContext(ctx context.Context) GetFirewallPolicySrcintfOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySrcintf)(nil)).Elem()
}

func (o GetFirewallPolicySrcintfArrayOutput) ToGetFirewallPolicySrcintfArrayOutput() GetFirewallPolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallPolicySrcintfArrayOutput) ToGetFirewallPolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallPolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallPolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySrcintf {
		return vs[0].([]GetFirewallPolicySrcintf)[vs[1].(int)]
	}).(GetFirewallPolicySrcintfOutput)
}

type GetFirewallPolicySslMirrorIntf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicySslMirrorIntfInput is an input type that accepts GetFirewallPolicySslMirrorIntfArgs and GetFirewallPolicySslMirrorIntfOutput values.
// You can construct a concrete instance of `GetFirewallPolicySslMirrorIntfInput` via:
//
//	GetFirewallPolicySslMirrorIntfArgs{...}
type GetFirewallPolicySslMirrorIntfInput interface {
	pulumi.Input

	ToGetFirewallPolicySslMirrorIntfOutput() GetFirewallPolicySslMirrorIntfOutput
	ToGetFirewallPolicySslMirrorIntfOutputWithContext(context.Context) GetFirewallPolicySslMirrorIntfOutput
}

type GetFirewallPolicySslMirrorIntfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicySslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (i GetFirewallPolicySslMirrorIntfArgs) ToGetFirewallPolicySslMirrorIntfOutput() GetFirewallPolicySslMirrorIntfOutput {
	return i.ToGetFirewallPolicySslMirrorIntfOutputWithContext(context.Background())
}

func (i GetFirewallPolicySslMirrorIntfArgs) ToGetFirewallPolicySslMirrorIntfOutputWithContext(ctx context.Context) GetFirewallPolicySslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySslMirrorIntfOutput)
}

// GetFirewallPolicySslMirrorIntfArrayInput is an input type that accepts GetFirewallPolicySslMirrorIntfArray and GetFirewallPolicySslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicySslMirrorIntfArrayInput` via:
//
//	GetFirewallPolicySslMirrorIntfArray{ GetFirewallPolicySslMirrorIntfArgs{...} }
type GetFirewallPolicySslMirrorIntfArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicySslMirrorIntfArrayOutput() GetFirewallPolicySslMirrorIntfArrayOutput
	ToGetFirewallPolicySslMirrorIntfArrayOutputWithContext(context.Context) GetFirewallPolicySslMirrorIntfArrayOutput
}

type GetFirewallPolicySslMirrorIntfArray []GetFirewallPolicySslMirrorIntfInput

func (GetFirewallPolicySslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (i GetFirewallPolicySslMirrorIntfArray) ToGetFirewallPolicySslMirrorIntfArrayOutput() GetFirewallPolicySslMirrorIntfArrayOutput {
	return i.ToGetFirewallPolicySslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicySslMirrorIntfArray) ToGetFirewallPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) GetFirewallPolicySslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicySslMirrorIntfArrayOutput)
}

type GetFirewallPolicySslMirrorIntfOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (o GetFirewallPolicySslMirrorIntfOutput) ToGetFirewallPolicySslMirrorIntfOutput() GetFirewallPolicySslMirrorIntfOutput {
	return o
}

func (o GetFirewallPolicySslMirrorIntfOutput) ToGetFirewallPolicySslMirrorIntfOutputWithContext(ctx context.Context) GetFirewallPolicySslMirrorIntfOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicySslMirrorIntfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicySslMirrorIntf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicySslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicySslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (o GetFirewallPolicySslMirrorIntfArrayOutput) ToGetFirewallPolicySslMirrorIntfArrayOutput() GetFirewallPolicySslMirrorIntfArrayOutput {
	return o
}

func (o GetFirewallPolicySslMirrorIntfArrayOutput) ToGetFirewallPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) GetFirewallPolicySslMirrorIntfArrayOutput {
	return o
}

func (o GetFirewallPolicySslMirrorIntfArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicySslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicySslMirrorIntf {
		return vs[0].([]GetFirewallPolicySslMirrorIntf)[vs[1].(int)]
	}).(GetFirewallPolicySslMirrorIntfOutput)
}

type GetFirewallPolicyUrlCategory struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetFirewallPolicyUrlCategoryInput is an input type that accepts GetFirewallPolicyUrlCategoryArgs and GetFirewallPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `GetFirewallPolicyUrlCategoryInput` via:
//
//	GetFirewallPolicyUrlCategoryArgs{...}
type GetFirewallPolicyUrlCategoryInput interface {
	pulumi.Input

	ToGetFirewallPolicyUrlCategoryOutput() GetFirewallPolicyUrlCategoryOutput
	ToGetFirewallPolicyUrlCategoryOutputWithContext(context.Context) GetFirewallPolicyUrlCategoryOutput
}

type GetFirewallPolicyUrlCategoryArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyUrlCategory)(nil)).Elem()
}

func (i GetFirewallPolicyUrlCategoryArgs) ToGetFirewallPolicyUrlCategoryOutput() GetFirewallPolicyUrlCategoryOutput {
	return i.ToGetFirewallPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i GetFirewallPolicyUrlCategoryArgs) ToGetFirewallPolicyUrlCategoryOutputWithContext(ctx context.Context) GetFirewallPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyUrlCategoryOutput)
}

// GetFirewallPolicyUrlCategoryArrayInput is an input type that accepts GetFirewallPolicyUrlCategoryArray and GetFirewallPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyUrlCategoryArrayInput` via:
//
//	GetFirewallPolicyUrlCategoryArray{ GetFirewallPolicyUrlCategoryArgs{...} }
type GetFirewallPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyUrlCategoryArrayOutput() GetFirewallPolicyUrlCategoryArrayOutput
	ToGetFirewallPolicyUrlCategoryArrayOutputWithContext(context.Context) GetFirewallPolicyUrlCategoryArrayOutput
}

type GetFirewallPolicyUrlCategoryArray []GetFirewallPolicyUrlCategoryInput

func (GetFirewallPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyUrlCategory)(nil)).Elem()
}

func (i GetFirewallPolicyUrlCategoryArray) ToGetFirewallPolicyUrlCategoryArrayOutput() GetFirewallPolicyUrlCategoryArrayOutput {
	return i.ToGetFirewallPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyUrlCategoryArray) ToGetFirewallPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyUrlCategoryArrayOutput)
}

type GetFirewallPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyUrlCategory)(nil)).Elem()
}

func (o GetFirewallPolicyUrlCategoryOutput) ToGetFirewallPolicyUrlCategoryOutput() GetFirewallPolicyUrlCategoryOutput {
	return o
}

func (o GetFirewallPolicyUrlCategoryOutput) ToGetFirewallPolicyUrlCategoryOutputWithContext(ctx context.Context) GetFirewallPolicyUrlCategoryOutput {
	return o
}

// Security group tag.
func (o GetFirewallPolicyUrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallPolicyUrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyUrlCategory)(nil)).Elem()
}

func (o GetFirewallPolicyUrlCategoryArrayOutput) ToGetFirewallPolicyUrlCategoryArrayOutput() GetFirewallPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicyUrlCategoryArrayOutput) ToGetFirewallPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetFirewallPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyUrlCategory {
		return vs[0].([]GetFirewallPolicyUrlCategory)[vs[1].(int)]
	}).(GetFirewallPolicyUrlCategoryOutput)
}

type GetFirewallPolicyUser struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyUserInput is an input type that accepts GetFirewallPolicyUserArgs and GetFirewallPolicyUserOutput values.
// You can construct a concrete instance of `GetFirewallPolicyUserInput` via:
//
//	GetFirewallPolicyUserArgs{...}
type GetFirewallPolicyUserInput interface {
	pulumi.Input

	ToGetFirewallPolicyUserOutput() GetFirewallPolicyUserOutput
	ToGetFirewallPolicyUserOutputWithContext(context.Context) GetFirewallPolicyUserOutput
}

type GetFirewallPolicyUserArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyUser)(nil)).Elem()
}

func (i GetFirewallPolicyUserArgs) ToGetFirewallPolicyUserOutput() GetFirewallPolicyUserOutput {
	return i.ToGetFirewallPolicyUserOutputWithContext(context.Background())
}

func (i GetFirewallPolicyUserArgs) ToGetFirewallPolicyUserOutputWithContext(ctx context.Context) GetFirewallPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyUserOutput)
}

// GetFirewallPolicyUserArrayInput is an input type that accepts GetFirewallPolicyUserArray and GetFirewallPolicyUserArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyUserArrayInput` via:
//
//	GetFirewallPolicyUserArray{ GetFirewallPolicyUserArgs{...} }
type GetFirewallPolicyUserArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyUserArrayOutput() GetFirewallPolicyUserArrayOutput
	ToGetFirewallPolicyUserArrayOutputWithContext(context.Context) GetFirewallPolicyUserArrayOutput
}

type GetFirewallPolicyUserArray []GetFirewallPolicyUserInput

func (GetFirewallPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyUser)(nil)).Elem()
}

func (i GetFirewallPolicyUserArray) ToGetFirewallPolicyUserArrayOutput() GetFirewallPolicyUserArrayOutput {
	return i.ToGetFirewallPolicyUserArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyUserArray) ToGetFirewallPolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyUserArrayOutput)
}

type GetFirewallPolicyUserOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyUser)(nil)).Elem()
}

func (o GetFirewallPolicyUserOutput) ToGetFirewallPolicyUserOutput() GetFirewallPolicyUserOutput {
	return o
}

func (o GetFirewallPolicyUserOutput) ToGetFirewallPolicyUserOutputWithContext(ctx context.Context) GetFirewallPolicyUserOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyUser)(nil)).Elem()
}

func (o GetFirewallPolicyUserArrayOutput) ToGetFirewallPolicyUserArrayOutput() GetFirewallPolicyUserArrayOutput {
	return o
}

func (o GetFirewallPolicyUserArrayOutput) ToGetFirewallPolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallPolicyUserArrayOutput {
	return o
}

func (o GetFirewallPolicyUserArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyUser {
		return vs[0].([]GetFirewallPolicyUser)[vs[1].(int)]
	}).(GetFirewallPolicyUserOutput)
}

type GetFirewallPolicyZtnaEmsTag struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyZtnaEmsTagInput is an input type that accepts GetFirewallPolicyZtnaEmsTagArgs and GetFirewallPolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `GetFirewallPolicyZtnaEmsTagInput` via:
//
//	GetFirewallPolicyZtnaEmsTagArgs{...}
type GetFirewallPolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToGetFirewallPolicyZtnaEmsTagOutput() GetFirewallPolicyZtnaEmsTagOutput
	ToGetFirewallPolicyZtnaEmsTagOutputWithContext(context.Context) GetFirewallPolicyZtnaEmsTagOutput
}

type GetFirewallPolicyZtnaEmsTagArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetFirewallPolicyZtnaEmsTagArgs) ToGetFirewallPolicyZtnaEmsTagOutput() GetFirewallPolicyZtnaEmsTagOutput {
	return i.ToGetFirewallPolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i GetFirewallPolicyZtnaEmsTagArgs) ToGetFirewallPolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyZtnaEmsTagOutput)
}

// GetFirewallPolicyZtnaEmsTagArrayInput is an input type that accepts GetFirewallPolicyZtnaEmsTagArray and GetFirewallPolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyZtnaEmsTagArrayInput` via:
//
//	GetFirewallPolicyZtnaEmsTagArray{ GetFirewallPolicyZtnaEmsTagArgs{...} }
type GetFirewallPolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyZtnaEmsTagArrayOutput() GetFirewallPolicyZtnaEmsTagArrayOutput
	ToGetFirewallPolicyZtnaEmsTagArrayOutputWithContext(context.Context) GetFirewallPolicyZtnaEmsTagArrayOutput
}

type GetFirewallPolicyZtnaEmsTagArray []GetFirewallPolicyZtnaEmsTagInput

func (GetFirewallPolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetFirewallPolicyZtnaEmsTagArray) ToGetFirewallPolicyZtnaEmsTagArrayOutput() GetFirewallPolicyZtnaEmsTagArrayOutput {
	return i.ToGetFirewallPolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyZtnaEmsTagArray) ToGetFirewallPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyZtnaEmsTagArrayOutput)
}

type GetFirewallPolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetFirewallPolicyZtnaEmsTagOutput) ToGetFirewallPolicyZtnaEmsTagOutput() GetFirewallPolicyZtnaEmsTagOutput {
	return o
}

func (o GetFirewallPolicyZtnaEmsTagOutput) ToGetFirewallPolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaEmsTagOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyZtnaEmsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyZtnaEmsTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetFirewallPolicyZtnaEmsTagArrayOutput) ToGetFirewallPolicyZtnaEmsTagArrayOutput() GetFirewallPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetFirewallPolicyZtnaEmsTagArrayOutput) ToGetFirewallPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetFirewallPolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyZtnaEmsTag {
		return vs[0].([]GetFirewallPolicyZtnaEmsTag)[vs[1].(int)]
	}).(GetFirewallPolicyZtnaEmsTagOutput)
}

type GetFirewallPolicyZtnaGeoTag struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetFirewallPolicyZtnaGeoTagInput is an input type that accepts GetFirewallPolicyZtnaGeoTagArgs and GetFirewallPolicyZtnaGeoTagOutput values.
// You can construct a concrete instance of `GetFirewallPolicyZtnaGeoTagInput` via:
//
//	GetFirewallPolicyZtnaGeoTagArgs{...}
type GetFirewallPolicyZtnaGeoTagInput interface {
	pulumi.Input

	ToGetFirewallPolicyZtnaGeoTagOutput() GetFirewallPolicyZtnaGeoTagOutput
	ToGetFirewallPolicyZtnaGeoTagOutputWithContext(context.Context) GetFirewallPolicyZtnaGeoTagOutput
}

type GetFirewallPolicyZtnaGeoTagArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallPolicyZtnaGeoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (i GetFirewallPolicyZtnaGeoTagArgs) ToGetFirewallPolicyZtnaGeoTagOutput() GetFirewallPolicyZtnaGeoTagOutput {
	return i.ToGetFirewallPolicyZtnaGeoTagOutputWithContext(context.Background())
}

func (i GetFirewallPolicyZtnaGeoTagArgs) ToGetFirewallPolicyZtnaGeoTagOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaGeoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyZtnaGeoTagOutput)
}

// GetFirewallPolicyZtnaGeoTagArrayInput is an input type that accepts GetFirewallPolicyZtnaGeoTagArray and GetFirewallPolicyZtnaGeoTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyZtnaGeoTagArrayInput` via:
//
//	GetFirewallPolicyZtnaGeoTagArray{ GetFirewallPolicyZtnaGeoTagArgs{...} }
type GetFirewallPolicyZtnaGeoTagArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyZtnaGeoTagArrayOutput() GetFirewallPolicyZtnaGeoTagArrayOutput
	ToGetFirewallPolicyZtnaGeoTagArrayOutputWithContext(context.Context) GetFirewallPolicyZtnaGeoTagArrayOutput
}

type GetFirewallPolicyZtnaGeoTagArray []GetFirewallPolicyZtnaGeoTagInput

func (GetFirewallPolicyZtnaGeoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (i GetFirewallPolicyZtnaGeoTagArray) ToGetFirewallPolicyZtnaGeoTagArrayOutput() GetFirewallPolicyZtnaGeoTagArrayOutput {
	return i.ToGetFirewallPolicyZtnaGeoTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyZtnaGeoTagArray) ToGetFirewallPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaGeoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyZtnaGeoTagArrayOutput)
}

type GetFirewallPolicyZtnaGeoTagOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyZtnaGeoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (o GetFirewallPolicyZtnaGeoTagOutput) ToGetFirewallPolicyZtnaGeoTagOutput() GetFirewallPolicyZtnaGeoTagOutput {
	return o
}

func (o GetFirewallPolicyZtnaGeoTagOutput) ToGetFirewallPolicyZtnaGeoTagOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaGeoTagOutput {
	return o
}

// Mirror Interface name.
func (o GetFirewallPolicyZtnaGeoTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallPolicyZtnaGeoTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallPolicyZtnaGeoTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyZtnaGeoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (o GetFirewallPolicyZtnaGeoTagArrayOutput) ToGetFirewallPolicyZtnaGeoTagArrayOutput() GetFirewallPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o GetFirewallPolicyZtnaGeoTagArrayOutput) ToGetFirewallPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) GetFirewallPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o GetFirewallPolicyZtnaGeoTagArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyZtnaGeoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyZtnaGeoTag {
		return vs[0].([]GetFirewallPolicyZtnaGeoTag)[vs[1].(int)]
	}).(GetFirewallPolicyZtnaGeoTagOutput)
}

type GetFirewallProfileprotocoloptionsCif struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController string `pulumi:"domainController"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// CIFS server credential type.
	ServerCredentialType string `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs []GetFirewallProfileprotocoloptionsCifServerKeytab `pulumi:"serverKeytabs"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsCifInput is an input type that accepts GetFirewallProfileprotocoloptionsCifArgs and GetFirewallProfileprotocoloptionsCifOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsCifInput` via:
//
//	GetFirewallProfileprotocoloptionsCifArgs{...}
type GetFirewallProfileprotocoloptionsCifInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsCifOutput() GetFirewallProfileprotocoloptionsCifOutput
	ToGetFirewallProfileprotocoloptionsCifOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsCifOutput
}

type GetFirewallProfileprotocoloptionsCifArgs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController pulumi.StringInput `pulumi:"domainController"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// CIFS server credential type.
	ServerCredentialType pulumi.StringInput `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs GetFirewallProfileprotocoloptionsCifServerKeytabArrayInput `pulumi:"serverKeytabs"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsCifArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsCif)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsCifArgs) ToGetFirewallProfileprotocoloptionsCifOutput() GetFirewallProfileprotocoloptionsCifOutput {
	return i.ToGetFirewallProfileprotocoloptionsCifOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsCifArgs) ToGetFirewallProfileprotocoloptionsCifOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsCifOutput)
}

// GetFirewallProfileprotocoloptionsCifArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsCifArray and GetFirewallProfileprotocoloptionsCifArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsCifArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsCifArray{ GetFirewallProfileprotocoloptionsCifArgs{...} }
type GetFirewallProfileprotocoloptionsCifArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsCifArrayOutput() GetFirewallProfileprotocoloptionsCifArrayOutput
	ToGetFirewallProfileprotocoloptionsCifArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsCifArrayOutput
}

type GetFirewallProfileprotocoloptionsCifArray []GetFirewallProfileprotocoloptionsCifInput

func (GetFirewallProfileprotocoloptionsCifArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsCif)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsCifArray) ToGetFirewallProfileprotocoloptionsCifArrayOutput() GetFirewallProfileprotocoloptionsCifArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsCifArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsCifArray) ToGetFirewallProfileprotocoloptionsCifArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsCifArrayOutput)
}

type GetFirewallProfileprotocoloptionsCifOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsCifOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsCif)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsCifOutput) ToGetFirewallProfileprotocoloptionsCifOutput() GetFirewallProfileprotocoloptionsCifOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifOutput) ToGetFirewallProfileprotocoloptionsCifOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifOutput {
	return o
}

// Domain for which to decrypt CIFS traffic.
func (o GetFirewallProfileprotocoloptionsCifOutput) DomainController() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.DomainController }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsCifOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsCifOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsCifOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsCifOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// CIFS server credential type.
func (o GetFirewallProfileprotocoloptionsCifOutput) ServerCredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.ServerCredentialType }).(pulumi.StringOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o GetFirewallProfileprotocoloptionsCifOutput) ServerKeytabs() GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) []GetFirewallProfileprotocoloptionsCifServerKeytab {
		return v.ServerKeytabs
	}).(GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsCifOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetFirewallProfileprotocoloptionsCifOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetFirewallProfileprotocoloptionsCifOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetFirewallProfileprotocoloptionsCifOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetFirewallProfileprotocoloptionsCifOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsCifOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsCifOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCif) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsCifArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsCifArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsCif)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsCifArrayOutput) ToGetFirewallProfileprotocoloptionsCifArrayOutput() GetFirewallProfileprotocoloptionsCifArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifArrayOutput) ToGetFirewallProfileprotocoloptionsCifArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsCifOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsCif {
		return vs[0].([]GetFirewallProfileprotocoloptionsCif)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsCifOutput)
}

type GetFirewallProfileprotocoloptionsCifServerKeytab struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab string `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal string `pulumi:"principal"`
}

// GetFirewallProfileprotocoloptionsCifServerKeytabInput is an input type that accepts GetFirewallProfileprotocoloptionsCifServerKeytabArgs and GetFirewallProfileprotocoloptionsCifServerKeytabOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsCifServerKeytabInput` via:
//
//	GetFirewallProfileprotocoloptionsCifServerKeytabArgs{...}
type GetFirewallProfileprotocoloptionsCifServerKeytabInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsCifServerKeytabOutput() GetFirewallProfileprotocoloptionsCifServerKeytabOutput
	ToGetFirewallProfileprotocoloptionsCifServerKeytabOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabOutput
}

type GetFirewallProfileprotocoloptionsCifServerKeytabArgs struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab pulumi.StringInput `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (GetFirewallProfileprotocoloptionsCifServerKeytabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsCifServerKeytabArgs) ToGetFirewallProfileprotocoloptionsCifServerKeytabOutput() GetFirewallProfileprotocoloptionsCifServerKeytabOutput {
	return i.ToGetFirewallProfileprotocoloptionsCifServerKeytabOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsCifServerKeytabArgs) ToGetFirewallProfileprotocoloptionsCifServerKeytabOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsCifServerKeytabOutput)
}

// GetFirewallProfileprotocoloptionsCifServerKeytabArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsCifServerKeytabArray and GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsCifServerKeytabArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsCifServerKeytabArray{ GetFirewallProfileprotocoloptionsCifServerKeytabArgs{...} }
type GetFirewallProfileprotocoloptionsCifServerKeytabArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput() GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput
	ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput
}

type GetFirewallProfileprotocoloptionsCifServerKeytabArray []GetFirewallProfileprotocoloptionsCifServerKeytabInput

func (GetFirewallProfileprotocoloptionsCifServerKeytabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsCifServerKeytabArray) ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput() GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsCifServerKeytabArray) ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput)
}

type GetFirewallProfileprotocoloptionsCifServerKeytabOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsCifServerKeytabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsCifServerKeytabOutput) ToGetFirewallProfileprotocoloptionsCifServerKeytabOutput() GetFirewallProfileprotocoloptionsCifServerKeytabOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifServerKeytabOutput) ToGetFirewallProfileprotocoloptionsCifServerKeytabOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabOutput {
	return o
}

// Base64 encoded keytab file containing credential of the server.
func (o GetFirewallProfileprotocoloptionsCifServerKeytabOutput) Keytab() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCifServerKeytab) string { return v.Keytab }).(pulumi.StringOutput)
}

// Service principal.  For example, "host/cifsserver.example.com@example.com".
func (o GetFirewallProfileprotocoloptionsCifServerKeytabOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsCifServerKeytab) string { return v.Principal }).(pulumi.StringOutput)
}

type GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput) ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput() GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput) ToGetFirewallProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsCifServerKeytabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsCifServerKeytab {
		return vs[0].([]GetFirewallProfileprotocoloptionsCifServerKeytab)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsCifServerKeytabOutput)
}

type GetFirewallProfileprotocoloptionsDn struct {
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
}

// GetFirewallProfileprotocoloptionsDnInput is an input type that accepts GetFirewallProfileprotocoloptionsDnArgs and GetFirewallProfileprotocoloptionsDnOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsDnInput` via:
//
//	GetFirewallProfileprotocoloptionsDnArgs{...}
type GetFirewallProfileprotocoloptionsDnInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsDnOutput() GetFirewallProfileprotocoloptionsDnOutput
	ToGetFirewallProfileprotocoloptionsDnOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsDnOutput
}

type GetFirewallProfileprotocoloptionsDnArgs struct {
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFirewallProfileprotocoloptionsDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsDn)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsDnArgs) ToGetFirewallProfileprotocoloptionsDnOutput() GetFirewallProfileprotocoloptionsDnOutput {
	return i.ToGetFirewallProfileprotocoloptionsDnOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsDnArgs) ToGetFirewallProfileprotocoloptionsDnOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsDnOutput)
}

// GetFirewallProfileprotocoloptionsDnArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsDnArray and GetFirewallProfileprotocoloptionsDnArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsDnArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsDnArray{ GetFirewallProfileprotocoloptionsDnArgs{...} }
type GetFirewallProfileprotocoloptionsDnArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsDnArrayOutput() GetFirewallProfileprotocoloptionsDnArrayOutput
	ToGetFirewallProfileprotocoloptionsDnArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsDnArrayOutput
}

type GetFirewallProfileprotocoloptionsDnArray []GetFirewallProfileprotocoloptionsDnInput

func (GetFirewallProfileprotocoloptionsDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsDn)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsDnArray) ToGetFirewallProfileprotocoloptionsDnArrayOutput() GetFirewallProfileprotocoloptionsDnArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsDnArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsDnArray) ToGetFirewallProfileprotocoloptionsDnArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsDnArrayOutput)
}

type GetFirewallProfileprotocoloptionsDnOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsDn)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsDnOutput) ToGetFirewallProfileprotocoloptionsDnOutput() GetFirewallProfileprotocoloptionsDnOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsDnOutput) ToGetFirewallProfileprotocoloptionsDnOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsDnOutput {
	return o
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsDnOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsDn) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsDnOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsDn) string { return v.Status }).(pulumi.StringOutput)
}

type GetFirewallProfileprotocoloptionsDnArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsDn)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsDnArrayOutput) ToGetFirewallProfileprotocoloptionsDnArrayOutput() GetFirewallProfileprotocoloptionsDnArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsDnArrayOutput) ToGetFirewallProfileprotocoloptionsDnArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsDnArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsDnArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsDn {
		return vs[0].([]GetFirewallProfileprotocoloptionsDn)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsDnOutput)
}

type GetFirewallProfileprotocoloptionsFtp struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS.
	ExplicitFtpTls string `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsFtpInput is an input type that accepts GetFirewallProfileprotocoloptionsFtpArgs and GetFirewallProfileprotocoloptionsFtpOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsFtpInput` via:
//
//	GetFirewallProfileprotocoloptionsFtpArgs{...}
type GetFirewallProfileprotocoloptionsFtpInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsFtpOutput() GetFirewallProfileprotocoloptionsFtpOutput
	ToGetFirewallProfileprotocoloptionsFtpOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsFtpOutput
}

type GetFirewallProfileprotocoloptionsFtpArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS.
	ExplicitFtpTls pulumi.StringInput `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsFtpArgs) ToGetFirewallProfileprotocoloptionsFtpOutput() GetFirewallProfileprotocoloptionsFtpOutput {
	return i.ToGetFirewallProfileprotocoloptionsFtpOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsFtpArgs) ToGetFirewallProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsFtpOutput)
}

// GetFirewallProfileprotocoloptionsFtpArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsFtpArray and GetFirewallProfileprotocoloptionsFtpArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsFtpArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsFtpArray{ GetFirewallProfileprotocoloptionsFtpArgs{...} }
type GetFirewallProfileprotocoloptionsFtpArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsFtpArrayOutput() GetFirewallProfileprotocoloptionsFtpArrayOutput
	ToGetFirewallProfileprotocoloptionsFtpArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsFtpArrayOutput
}

type GetFirewallProfileprotocoloptionsFtpArray []GetFirewallProfileprotocoloptionsFtpInput

func (GetFirewallProfileprotocoloptionsFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsFtpArray) ToGetFirewallProfileprotocoloptionsFtpArrayOutput() GetFirewallProfileprotocoloptionsFtpArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsFtpArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsFtpArray) ToGetFirewallProfileprotocoloptionsFtpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsFtpArrayOutput)
}

type GetFirewallProfileprotocoloptionsFtpOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsFtpOutput) ToGetFirewallProfileprotocoloptionsFtpOutput() GetFirewallProfileprotocoloptionsFtpOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsFtpOutput) ToGetFirewallProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsFtpOutput {
	return o
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetFirewallProfileprotocoloptionsFtpOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetFirewallProfileprotocoloptionsFtpOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// Enable/disable FTP redirection for explicit FTPS.
func (o GetFirewallProfileprotocoloptionsFtpOutput) ExplicitFtpTls() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.ExplicitFtpTls }).(pulumi.StringOutput)
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsFtpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsFtpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsFtpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsFtpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsFtpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsFtpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsFtpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetFirewallProfileprotocoloptionsFtpOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetFirewallProfileprotocoloptionsFtpOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetFirewallProfileprotocoloptionsFtpOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetFirewallProfileprotocoloptionsFtpOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetFirewallProfileprotocoloptionsFtpOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsFtpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsFtpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsFtp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsFtpArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsFtpArrayOutput) ToGetFirewallProfileprotocoloptionsFtpArrayOutput() GetFirewallProfileprotocoloptionsFtpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsFtpArrayOutput) ToGetFirewallProfileprotocoloptionsFtpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsFtpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsFtpArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsFtp {
		return vs[0].([]GetFirewallProfileprotocoloptionsFtp)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsFtpOutput)
}

type GetFirewallProfileprotocoloptionsHttp struct {
	// Enable/disable IP based URL rating.
	AddressIpRating string `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode int `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content.
	FortinetBar string `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort int `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade.
	H2c string `pulumi:"h2c"`
	// Enable/disable HTTP policy check.
	HttpPolicy string `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
	PostLang string `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads.
	RangeBlock string `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount int `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering.
	StreamingContentBypass string `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header.
	StripXForwardedFor string `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol.
	SwitchingProtocols string `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
	TunnelNonHttp string `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
	UnknownHttpVersion string `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching.
	VerifyDnsForPolicyMatching string `pulumi:"verifyDnsForPolicyMatching"`
}

// GetFirewallProfileprotocoloptionsHttpInput is an input type that accepts GetFirewallProfileprotocoloptionsHttpArgs and GetFirewallProfileprotocoloptionsHttpOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsHttpInput` via:
//
//	GetFirewallProfileprotocoloptionsHttpArgs{...}
type GetFirewallProfileprotocoloptionsHttpInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsHttpOutput() GetFirewallProfileprotocoloptionsHttpOutput
	ToGetFirewallProfileprotocoloptionsHttpOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsHttpOutput
}

type GetFirewallProfileprotocoloptionsHttpArgs struct {
	// Enable/disable IP based URL rating.
	AddressIpRating pulumi.StringInput `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode pulumi.IntInput `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content.
	FortinetBar pulumi.StringInput `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort pulumi.IntInput `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade.
	H2c pulumi.StringInput `pulumi:"h2c"`
	// Enable/disable HTTP policy check.
	HttpPolicy pulumi.StringInput `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
	PostLang pulumi.StringInput `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads.
	RangeBlock pulumi.StringInput `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering.
	StreamingContentBypass pulumi.StringInput `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header.
	StripXForwardedFor pulumi.StringInput `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol.
	SwitchingProtocols pulumi.StringInput `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
	TunnelNonHttp pulumi.StringInput `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
	UnknownHttpVersion pulumi.StringInput `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching.
	VerifyDnsForPolicyMatching pulumi.StringInput `pulumi:"verifyDnsForPolicyMatching"`
}

func (GetFirewallProfileprotocoloptionsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsHttpArgs) ToGetFirewallProfileprotocoloptionsHttpOutput() GetFirewallProfileprotocoloptionsHttpOutput {
	return i.ToGetFirewallProfileprotocoloptionsHttpOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsHttpArgs) ToGetFirewallProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsHttpOutput)
}

// GetFirewallProfileprotocoloptionsHttpArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsHttpArray and GetFirewallProfileprotocoloptionsHttpArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsHttpArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsHttpArray{ GetFirewallProfileprotocoloptionsHttpArgs{...} }
type GetFirewallProfileprotocoloptionsHttpArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsHttpArrayOutput() GetFirewallProfileprotocoloptionsHttpArrayOutput
	ToGetFirewallProfileprotocoloptionsHttpArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsHttpArrayOutput
}

type GetFirewallProfileprotocoloptionsHttpArray []GetFirewallProfileprotocoloptionsHttpInput

func (GetFirewallProfileprotocoloptionsHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsHttpArray) ToGetFirewallProfileprotocoloptionsHttpArrayOutput() GetFirewallProfileprotocoloptionsHttpArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsHttpArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsHttpArray) ToGetFirewallProfileprotocoloptionsHttpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsHttpArrayOutput)
}

type GetFirewallProfileprotocoloptionsHttpOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsHttpOutput) ToGetFirewallProfileprotocoloptionsHttpOutput() GetFirewallProfileprotocoloptionsHttpOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsHttpOutput) ToGetFirewallProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsHttpOutput {
	return o
}

// Enable/disable IP based URL rating.
func (o GetFirewallProfileprotocoloptionsHttpOutput) AddressIpRating() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.AddressIpRating }).(pulumi.StringOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o GetFirewallProfileprotocoloptionsHttpOutput) BlockPageStatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.BlockPageStatusCode }).(pulumi.IntOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetFirewallProfileprotocoloptionsHttpOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetFirewallProfileprotocoloptionsHttpOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// Enable/disable Fortinet bar on HTML content.
func (o GetFirewallProfileprotocoloptionsHttpOutput) FortinetBar() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.FortinetBar }).(pulumi.StringOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o GetFirewallProfileprotocoloptionsHttpOutput) FortinetBarPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.FortinetBarPort }).(pulumi.IntOutput)
}

// Enable/disable h2c HTTP connection upgrade.
func (o GetFirewallProfileprotocoloptionsHttpOutput) H2c() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.H2c }).(pulumi.StringOutput)
}

// Enable/disable HTTP policy check.
func (o GetFirewallProfileprotocoloptionsHttpOutput) HttpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.HttpPolicy }).(pulumi.StringOutput)
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsHttpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsHttpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsHttpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsHttpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.Ports }).(pulumi.IntOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
func (o GetFirewallProfileprotocoloptionsHttpOutput) PostLang() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.PostLang }).(pulumi.StringOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetFirewallProfileprotocoloptionsHttpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable blocking of partial downloads.
func (o GetFirewallProfileprotocoloptionsHttpOutput) RangeBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.RangeBlock }).(pulumi.StringOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o GetFirewallProfileprotocoloptionsHttpOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.RetryCount }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsHttpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsHttpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsHttpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetFirewallProfileprotocoloptionsHttpOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Enable/disable bypassing of streaming content from buffering.
func (o GetFirewallProfileprotocoloptionsHttpOutput) StreamingContentBypass() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.StreamingContentBypass }).(pulumi.StringOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header.
func (o GetFirewallProfileprotocoloptionsHttpOutput) StripXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.StripXForwardedFor }).(pulumi.StringOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol.
func (o GetFirewallProfileprotocoloptionsHttpOutput) SwitchingProtocols() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.SwitchingProtocols }).(pulumi.StringOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetFirewallProfileprotocoloptionsHttpOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetFirewallProfileprotocoloptionsHttpOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetFirewallProfileprotocoloptionsHttpOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetFirewallProfileprotocoloptionsHttpOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
func (o GetFirewallProfileprotocoloptionsHttpOutput) TunnelNonHttp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.TunnelNonHttp }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsHttpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsHttpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
func (o GetFirewallProfileprotocoloptionsHttpOutput) UnknownHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.UnknownHttpVersion }).(pulumi.StringOutput)
}

// Enable/disable verification of DNS for policy matching.
func (o GetFirewallProfileprotocoloptionsHttpOutput) VerifyDnsForPolicyMatching() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsHttp) string { return v.VerifyDnsForPolicyMatching }).(pulumi.StringOutput)
}

type GetFirewallProfileprotocoloptionsHttpArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsHttpArrayOutput) ToGetFirewallProfileprotocoloptionsHttpArrayOutput() GetFirewallProfileprotocoloptionsHttpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsHttpArrayOutput) ToGetFirewallProfileprotocoloptionsHttpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsHttpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsHttpArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsHttp {
		return vs[0].([]GetFirewallProfileprotocoloptionsHttp)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsHttpOutput)
}

type GetFirewallProfileprotocoloptionsImap struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsImapInput is an input type that accepts GetFirewallProfileprotocoloptionsImapArgs and GetFirewallProfileprotocoloptionsImapOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsImapInput` via:
//
//	GetFirewallProfileprotocoloptionsImapArgs{...}
type GetFirewallProfileprotocoloptionsImapInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsImapOutput() GetFirewallProfileprotocoloptionsImapOutput
	ToGetFirewallProfileprotocoloptionsImapOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsImapOutput
}

type GetFirewallProfileprotocoloptionsImapArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsImapArgs) ToGetFirewallProfileprotocoloptionsImapOutput() GetFirewallProfileprotocoloptionsImapOutput {
	return i.ToGetFirewallProfileprotocoloptionsImapOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsImapArgs) ToGetFirewallProfileprotocoloptionsImapOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsImapOutput)
}

// GetFirewallProfileprotocoloptionsImapArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsImapArray and GetFirewallProfileprotocoloptionsImapArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsImapArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsImapArray{ GetFirewallProfileprotocoloptionsImapArgs{...} }
type GetFirewallProfileprotocoloptionsImapArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsImapArrayOutput() GetFirewallProfileprotocoloptionsImapArrayOutput
	ToGetFirewallProfileprotocoloptionsImapArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsImapArrayOutput
}

type GetFirewallProfileprotocoloptionsImapArray []GetFirewallProfileprotocoloptionsImapInput

func (GetFirewallProfileprotocoloptionsImapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsImapArray) ToGetFirewallProfileprotocoloptionsImapArrayOutput() GetFirewallProfileprotocoloptionsImapArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsImapArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsImapArray) ToGetFirewallProfileprotocoloptionsImapArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsImapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsImapArrayOutput)
}

type GetFirewallProfileprotocoloptionsImapOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsImapOutput) ToGetFirewallProfileprotocoloptionsImapOutput() GetFirewallProfileprotocoloptionsImapOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsImapOutput) ToGetFirewallProfileprotocoloptionsImapOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsImapOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsImapOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsImapOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsImapOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsImapOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetFirewallProfileprotocoloptionsImapOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsImapOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsImapOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsImapOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsImapOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsImapOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsImap) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsImapArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsImapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsImapArrayOutput) ToGetFirewallProfileprotocoloptionsImapArrayOutput() GetFirewallProfileprotocoloptionsImapArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsImapArrayOutput) ToGetFirewallProfileprotocoloptionsImapArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsImapArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsImapArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsImapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsImap {
		return vs[0].([]GetFirewallProfileprotocoloptionsImap)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsImapOutput)
}

type GetFirewallProfileprotocoloptionsMailSignature struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature string `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
}

// GetFirewallProfileprotocoloptionsMailSignatureInput is an input type that accepts GetFirewallProfileprotocoloptionsMailSignatureArgs and GetFirewallProfileprotocoloptionsMailSignatureOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsMailSignatureInput` via:
//
//	GetFirewallProfileprotocoloptionsMailSignatureArgs{...}
type GetFirewallProfileprotocoloptionsMailSignatureInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsMailSignatureOutput() GetFirewallProfileprotocoloptionsMailSignatureOutput
	ToGetFirewallProfileprotocoloptionsMailSignatureOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsMailSignatureOutput
}

type GetFirewallProfileprotocoloptionsMailSignatureArgs struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature pulumi.StringInput `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFirewallProfileprotocoloptionsMailSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsMailSignatureArgs) ToGetFirewallProfileprotocoloptionsMailSignatureOutput() GetFirewallProfileprotocoloptionsMailSignatureOutput {
	return i.ToGetFirewallProfileprotocoloptionsMailSignatureOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsMailSignatureArgs) ToGetFirewallProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMailSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsMailSignatureOutput)
}

// GetFirewallProfileprotocoloptionsMailSignatureArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsMailSignatureArray and GetFirewallProfileprotocoloptionsMailSignatureArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsMailSignatureArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsMailSignatureArray{ GetFirewallProfileprotocoloptionsMailSignatureArgs{...} }
type GetFirewallProfileprotocoloptionsMailSignatureArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutput() GetFirewallProfileprotocoloptionsMailSignatureArrayOutput
	ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsMailSignatureArrayOutput
}

type GetFirewallProfileprotocoloptionsMailSignatureArray []GetFirewallProfileprotocoloptionsMailSignatureInput

func (GetFirewallProfileprotocoloptionsMailSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsMailSignatureArray) ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutput() GetFirewallProfileprotocoloptionsMailSignatureArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsMailSignatureArray) ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMailSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsMailSignatureArrayOutput)
}

type GetFirewallProfileprotocoloptionsMailSignatureOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsMailSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsMailSignatureOutput) ToGetFirewallProfileprotocoloptionsMailSignatureOutput() GetFirewallProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMailSignatureOutput) ToGetFirewallProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMailSignatureOutput {
	return o
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o GetFirewallProfileprotocoloptionsMailSignatureOutput) Signature() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMailSignature) string { return v.Signature }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsMailSignatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMailSignature) string { return v.Status }).(pulumi.StringOutput)
}

type GetFirewallProfileprotocoloptionsMailSignatureArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsMailSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsMailSignatureArrayOutput) ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutput() GetFirewallProfileprotocoloptionsMailSignatureArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMailSignatureArrayOutput) ToGetFirewallProfileprotocoloptionsMailSignatureArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMailSignatureArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMailSignatureArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsMailSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsMailSignature {
		return vs[0].([]GetFirewallProfileprotocoloptionsMailSignature)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsMailSignatureOutput)
}

type GetFirewallProfileprotocoloptionsMapi struct {
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsMapiInput is an input type that accepts GetFirewallProfileprotocoloptionsMapiArgs and GetFirewallProfileprotocoloptionsMapiOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsMapiInput` via:
//
//	GetFirewallProfileprotocoloptionsMapiArgs{...}
type GetFirewallProfileprotocoloptionsMapiInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsMapiOutput() GetFirewallProfileprotocoloptionsMapiOutput
	ToGetFirewallProfileprotocoloptionsMapiOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsMapiOutput
}

type GetFirewallProfileprotocoloptionsMapiArgs struct {
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsMapiArgs) ToGetFirewallProfileprotocoloptionsMapiOutput() GetFirewallProfileprotocoloptionsMapiOutput {
	return i.ToGetFirewallProfileprotocoloptionsMapiOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsMapiArgs) ToGetFirewallProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsMapiOutput)
}

// GetFirewallProfileprotocoloptionsMapiArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsMapiArray and GetFirewallProfileprotocoloptionsMapiArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsMapiArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsMapiArray{ GetFirewallProfileprotocoloptionsMapiArgs{...} }
type GetFirewallProfileprotocoloptionsMapiArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsMapiArrayOutput() GetFirewallProfileprotocoloptionsMapiArrayOutput
	ToGetFirewallProfileprotocoloptionsMapiArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsMapiArrayOutput
}

type GetFirewallProfileprotocoloptionsMapiArray []GetFirewallProfileprotocoloptionsMapiInput

func (GetFirewallProfileprotocoloptionsMapiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsMapiArray) ToGetFirewallProfileprotocoloptionsMapiArrayOutput() GetFirewallProfileprotocoloptionsMapiArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsMapiArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsMapiArray) ToGetFirewallProfileprotocoloptionsMapiArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMapiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsMapiArrayOutput)
}

type GetFirewallProfileprotocoloptionsMapiOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsMapiOutput) ToGetFirewallProfileprotocoloptionsMapiOutput() GetFirewallProfileprotocoloptionsMapiOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMapiOutput) ToGetFirewallProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMapiOutput {
	return o
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsMapiOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsMapiOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsMapiOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsMapiOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsMapiOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsMapiOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsMapiOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsMapi) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsMapiArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsMapiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsMapiArrayOutput) ToGetFirewallProfileprotocoloptionsMapiArrayOutput() GetFirewallProfileprotocoloptionsMapiArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMapiArrayOutput) ToGetFirewallProfileprotocoloptionsMapiArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsMapiArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsMapiArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsMapiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsMapi {
		return vs[0].([]GetFirewallProfileprotocoloptionsMapi)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsMapiOutput)
}

type GetFirewallProfileprotocoloptionsNntp struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsNntpInput is an input type that accepts GetFirewallProfileprotocoloptionsNntpArgs and GetFirewallProfileprotocoloptionsNntpOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsNntpInput` via:
//
//	GetFirewallProfileprotocoloptionsNntpArgs{...}
type GetFirewallProfileprotocoloptionsNntpInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsNntpOutput() GetFirewallProfileprotocoloptionsNntpOutput
	ToGetFirewallProfileprotocoloptionsNntpOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsNntpOutput
}

type GetFirewallProfileprotocoloptionsNntpArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsNntpArgs) ToGetFirewallProfileprotocoloptionsNntpOutput() GetFirewallProfileprotocoloptionsNntpOutput {
	return i.ToGetFirewallProfileprotocoloptionsNntpOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsNntpArgs) ToGetFirewallProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsNntpOutput)
}

// GetFirewallProfileprotocoloptionsNntpArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsNntpArray and GetFirewallProfileprotocoloptionsNntpArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsNntpArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsNntpArray{ GetFirewallProfileprotocoloptionsNntpArgs{...} }
type GetFirewallProfileprotocoloptionsNntpArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsNntpArrayOutput() GetFirewallProfileprotocoloptionsNntpArrayOutput
	ToGetFirewallProfileprotocoloptionsNntpArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsNntpArrayOutput
}

type GetFirewallProfileprotocoloptionsNntpArray []GetFirewallProfileprotocoloptionsNntpInput

func (GetFirewallProfileprotocoloptionsNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsNntpArray) ToGetFirewallProfileprotocoloptionsNntpArrayOutput() GetFirewallProfileprotocoloptionsNntpArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsNntpArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsNntpArray) ToGetFirewallProfileprotocoloptionsNntpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsNntpArrayOutput)
}

type GetFirewallProfileprotocoloptionsNntpOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsNntpOutput) ToGetFirewallProfileprotocoloptionsNntpOutput() GetFirewallProfileprotocoloptionsNntpOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsNntpOutput) ToGetFirewallProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsNntpOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsNntpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsNntpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsNntpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsNntpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetFirewallProfileprotocoloptionsNntpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsNntpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsNntpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsNntpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsNntpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsNntp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsNntpArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsNntpArrayOutput) ToGetFirewallProfileprotocoloptionsNntpArrayOutput() GetFirewallProfileprotocoloptionsNntpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsNntpArrayOutput) ToGetFirewallProfileprotocoloptionsNntpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsNntpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsNntpArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsNntp {
		return vs[0].([]GetFirewallProfileprotocoloptionsNntp)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsNntpOutput)
}

type GetFirewallProfileprotocoloptionsPop3 struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsPop3Input is an input type that accepts GetFirewallProfileprotocoloptionsPop3Args and GetFirewallProfileprotocoloptionsPop3Output values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsPop3Input` via:
//
//	GetFirewallProfileprotocoloptionsPop3Args{...}
type GetFirewallProfileprotocoloptionsPop3Input interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsPop3Output() GetFirewallProfileprotocoloptionsPop3Output
	ToGetFirewallProfileprotocoloptionsPop3OutputWithContext(context.Context) GetFirewallProfileprotocoloptionsPop3Output
}

type GetFirewallProfileprotocoloptionsPop3Args struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsPop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsPop3Args) ToGetFirewallProfileprotocoloptionsPop3Output() GetFirewallProfileprotocoloptionsPop3Output {
	return i.ToGetFirewallProfileprotocoloptionsPop3OutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsPop3Args) ToGetFirewallProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsPop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsPop3Output)
}

// GetFirewallProfileprotocoloptionsPop3ArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsPop3Array and GetFirewallProfileprotocoloptionsPop3ArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsPop3ArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsPop3Array{ GetFirewallProfileprotocoloptionsPop3Args{...} }
type GetFirewallProfileprotocoloptionsPop3ArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsPop3ArrayOutput() GetFirewallProfileprotocoloptionsPop3ArrayOutput
	ToGetFirewallProfileprotocoloptionsPop3ArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsPop3ArrayOutput
}

type GetFirewallProfileprotocoloptionsPop3Array []GetFirewallProfileprotocoloptionsPop3Input

func (GetFirewallProfileprotocoloptionsPop3Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsPop3Array) ToGetFirewallProfileprotocoloptionsPop3ArrayOutput() GetFirewallProfileprotocoloptionsPop3ArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsPop3ArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsPop3Array) ToGetFirewallProfileprotocoloptionsPop3ArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsPop3ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsPop3ArrayOutput)
}

type GetFirewallProfileprotocoloptionsPop3Output struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsPop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsPop3Output) ToGetFirewallProfileprotocoloptionsPop3Output() GetFirewallProfileprotocoloptionsPop3Output {
	return o
}

func (o GetFirewallProfileprotocoloptionsPop3Output) ToGetFirewallProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsPop3Output {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsPop3Output) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsPop3Output) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsPop3Output) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsPop3Output) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetFirewallProfileprotocoloptionsPop3Output) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsPop3Output) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsPop3Output) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsPop3Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsPop3Output) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsPop3Output) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsPop3) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsPop3ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsPop3ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsPop3ArrayOutput) ToGetFirewallProfileprotocoloptionsPop3ArrayOutput() GetFirewallProfileprotocoloptionsPop3ArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsPop3ArrayOutput) ToGetFirewallProfileprotocoloptionsPop3ArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsPop3ArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsPop3ArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsPop3Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsPop3 {
		return vs[0].([]GetFirewallProfileprotocoloptionsPop3)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsPop3Output)
}

type GetFirewallProfileprotocoloptionsSmtp struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available.
	ServerBusy string `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsSmtpInput is an input type that accepts GetFirewallProfileprotocoloptionsSmtpArgs and GetFirewallProfileprotocoloptionsSmtpOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsSmtpInput` via:
//
//	GetFirewallProfileprotocoloptionsSmtpArgs{...}
type GetFirewallProfileprotocoloptionsSmtpInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsSmtpOutput() GetFirewallProfileprotocoloptionsSmtpOutput
	ToGetFirewallProfileprotocoloptionsSmtpOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsSmtpOutput
}

type GetFirewallProfileprotocoloptionsSmtpArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available.
	ServerBusy pulumi.StringInput `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsSmtpArgs) ToGetFirewallProfileprotocoloptionsSmtpOutput() GetFirewallProfileprotocoloptionsSmtpOutput {
	return i.ToGetFirewallProfileprotocoloptionsSmtpOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsSmtpArgs) ToGetFirewallProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsSmtpOutput)
}

// GetFirewallProfileprotocoloptionsSmtpArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsSmtpArray and GetFirewallProfileprotocoloptionsSmtpArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsSmtpArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsSmtpArray{ GetFirewallProfileprotocoloptionsSmtpArgs{...} }
type GetFirewallProfileprotocoloptionsSmtpArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsSmtpArrayOutput() GetFirewallProfileprotocoloptionsSmtpArrayOutput
	ToGetFirewallProfileprotocoloptionsSmtpArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsSmtpArrayOutput
}

type GetFirewallProfileprotocoloptionsSmtpArray []GetFirewallProfileprotocoloptionsSmtpInput

func (GetFirewallProfileprotocoloptionsSmtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsSmtpArray) ToGetFirewallProfileprotocoloptionsSmtpArrayOutput() GetFirewallProfileprotocoloptionsSmtpArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsSmtpArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsSmtpArray) ToGetFirewallProfileprotocoloptionsSmtpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSmtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsSmtpArrayOutput)
}

type GetFirewallProfileprotocoloptionsSmtpOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsSmtpOutput) ToGetFirewallProfileprotocoloptionsSmtpOutput() GetFirewallProfileprotocoloptionsSmtpOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSmtpOutput) ToGetFirewallProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSmtpOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsSmtpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetFirewallProfileprotocoloptionsSmtpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetFirewallProfileprotocoloptionsSmtpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable SMTP server busy when server not available.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) ServerBusy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.ServerBusy }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetFirewallProfileprotocoloptionsSmtpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsSmtpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsSmtpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSmtp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsSmtpArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsSmtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsSmtpArrayOutput) ToGetFirewallProfileprotocoloptionsSmtpArrayOutput() GetFirewallProfileprotocoloptionsSmtpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSmtpArrayOutput) ToGetFirewallProfileprotocoloptionsSmtpArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSmtpArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSmtpArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsSmtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsSmtp {
		return vs[0].([]GetFirewallProfileprotocoloptionsSmtp)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsSmtpOutput)
}

type GetFirewallProfileprotocoloptionsSsh struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetFirewallProfileprotocoloptionsSshInput is an input type that accepts GetFirewallProfileprotocoloptionsSshArgs and GetFirewallProfileprotocoloptionsSshOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsSshInput` via:
//
//	GetFirewallProfileprotocoloptionsSshArgs{...}
type GetFirewallProfileprotocoloptionsSshInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsSshOutput() GetFirewallProfileprotocoloptionsSshOutput
	ToGetFirewallProfileprotocoloptionsSshOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsSshOutput
}

type GetFirewallProfileprotocoloptionsSshArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetFirewallProfileprotocoloptionsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsSshArgs) ToGetFirewallProfileprotocoloptionsSshOutput() GetFirewallProfileprotocoloptionsSshOutput {
	return i.ToGetFirewallProfileprotocoloptionsSshOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsSshArgs) ToGetFirewallProfileprotocoloptionsSshOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsSshOutput)
}

// GetFirewallProfileprotocoloptionsSshArrayInput is an input type that accepts GetFirewallProfileprotocoloptionsSshArray and GetFirewallProfileprotocoloptionsSshArrayOutput values.
// You can construct a concrete instance of `GetFirewallProfileprotocoloptionsSshArrayInput` via:
//
//	GetFirewallProfileprotocoloptionsSshArray{ GetFirewallProfileprotocoloptionsSshArgs{...} }
type GetFirewallProfileprotocoloptionsSshArrayInput interface {
	pulumi.Input

	ToGetFirewallProfileprotocoloptionsSshArrayOutput() GetFirewallProfileprotocoloptionsSshArrayOutput
	ToGetFirewallProfileprotocoloptionsSshArrayOutputWithContext(context.Context) GetFirewallProfileprotocoloptionsSshArrayOutput
}

type GetFirewallProfileprotocoloptionsSshArray []GetFirewallProfileprotocoloptionsSshInput

func (GetFirewallProfileprotocoloptionsSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i GetFirewallProfileprotocoloptionsSshArray) ToGetFirewallProfileprotocoloptionsSshArrayOutput() GetFirewallProfileprotocoloptionsSshArrayOutput {
	return i.ToGetFirewallProfileprotocoloptionsSshArrayOutputWithContext(context.Background())
}

func (i GetFirewallProfileprotocoloptionsSshArray) ToGetFirewallProfileprotocoloptionsSshArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProfileprotocoloptionsSshArrayOutput)
}

type GetFirewallProfileprotocoloptionsSshOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsSshOutput) ToGetFirewallProfileprotocoloptionsSshOutput() GetFirewallProfileprotocoloptionsSshOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSshOutput) ToGetFirewallProfileprotocoloptionsSshOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSshOutput {
	return o
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetFirewallProfileprotocoloptionsSshOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetFirewallProfileprotocoloptionsSshOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// One or more options that can be applied to the session.
func (o GetFirewallProfileprotocoloptionsSshOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetFirewallProfileprotocoloptionsSshOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetFirewallProfileprotocoloptionsSshOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetFirewallProfileprotocoloptionsSshOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetFirewallProfileprotocoloptionsSshOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetFirewallProfileprotocoloptionsSshOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetFirewallProfileprotocoloptionsSshOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetFirewallProfileprotocoloptionsSshOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetFirewallProfileprotocoloptionsSshOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetFirewallProfileprotocoloptionsSshOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetFirewallProfileprotocoloptionsSshOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProfileprotocoloptionsSsh) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetFirewallProfileprotocoloptionsSshArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProfileprotocoloptionsSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o GetFirewallProfileprotocoloptionsSshArrayOutput) ToGetFirewallProfileprotocoloptionsSshArrayOutput() GetFirewallProfileprotocoloptionsSshArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSshArrayOutput) ToGetFirewallProfileprotocoloptionsSshArrayOutputWithContext(ctx context.Context) GetFirewallProfileprotocoloptionsSshArrayOutput {
	return o
}

func (o GetFirewallProfileprotocoloptionsSshArrayOutput) Index(i pulumi.IntInput) GetFirewallProfileprotocoloptionsSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProfileprotocoloptionsSsh {
		return vs[0].([]GetFirewallProfileprotocoloptionsSsh)[vs[1].(int)]
	}).(GetFirewallProfileprotocoloptionsSshOutput)
}

type GetFirewallProxyaddressApplication struct {
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
}

// GetFirewallProxyaddressApplicationInput is an input type that accepts GetFirewallProxyaddressApplicationArgs and GetFirewallProxyaddressApplicationOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressApplicationInput` via:
//
//	GetFirewallProxyaddressApplicationArgs{...}
type GetFirewallProxyaddressApplicationInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressApplicationOutput() GetFirewallProxyaddressApplicationOutput
	ToGetFirewallProxyaddressApplicationOutputWithContext(context.Context) GetFirewallProxyaddressApplicationOutput
}

type GetFirewallProxyaddressApplicationArgs struct {
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxyaddressApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressApplication)(nil)).Elem()
}

func (i GetFirewallProxyaddressApplicationArgs) ToGetFirewallProxyaddressApplicationOutput() GetFirewallProxyaddressApplicationOutput {
	return i.ToGetFirewallProxyaddressApplicationOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressApplicationArgs) ToGetFirewallProxyaddressApplicationOutputWithContext(ctx context.Context) GetFirewallProxyaddressApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressApplicationOutput)
}

// GetFirewallProxyaddressApplicationArrayInput is an input type that accepts GetFirewallProxyaddressApplicationArray and GetFirewallProxyaddressApplicationArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressApplicationArrayInput` via:
//
//	GetFirewallProxyaddressApplicationArray{ GetFirewallProxyaddressApplicationArgs{...} }
type GetFirewallProxyaddressApplicationArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressApplicationArrayOutput() GetFirewallProxyaddressApplicationArrayOutput
	ToGetFirewallProxyaddressApplicationArrayOutputWithContext(context.Context) GetFirewallProxyaddressApplicationArrayOutput
}

type GetFirewallProxyaddressApplicationArray []GetFirewallProxyaddressApplicationInput

func (GetFirewallProxyaddressApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressApplication)(nil)).Elem()
}

func (i GetFirewallProxyaddressApplicationArray) ToGetFirewallProxyaddressApplicationArrayOutput() GetFirewallProxyaddressApplicationArrayOutput {
	return i.ToGetFirewallProxyaddressApplicationArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressApplicationArray) ToGetFirewallProxyaddressApplicationArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressApplicationArrayOutput)
}

type GetFirewallProxyaddressApplicationOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressApplication)(nil)).Elem()
}

func (o GetFirewallProxyaddressApplicationOutput) ToGetFirewallProxyaddressApplicationOutput() GetFirewallProxyaddressApplicationOutput {
	return o
}

func (o GetFirewallProxyaddressApplicationOutput) ToGetFirewallProxyaddressApplicationOutputWithContext(ctx context.Context) GetFirewallProxyaddressApplicationOutput {
	return o
}

// Specify the name of the desired firewall proxyaddress.
func (o GetFirewallProxyaddressApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressApplication) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxyaddressApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressApplication)(nil)).Elem()
}

func (o GetFirewallProxyaddressApplicationArrayOutput) ToGetFirewallProxyaddressApplicationArrayOutput() GetFirewallProxyaddressApplicationArrayOutput {
	return o
}

func (o GetFirewallProxyaddressApplicationArrayOutput) ToGetFirewallProxyaddressApplicationArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressApplicationArrayOutput {
	return o
}

func (o GetFirewallProxyaddressApplicationArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddressApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddressApplication {
		return vs[0].([]GetFirewallProxyaddressApplication)[vs[1].(int)]
	}).(GetFirewallProxyaddressApplicationOutput)
}

type GetFirewallProxyaddressCategory struct {
	// ID.
	Id int `pulumi:"id"`
}

// GetFirewallProxyaddressCategoryInput is an input type that accepts GetFirewallProxyaddressCategoryArgs and GetFirewallProxyaddressCategoryOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressCategoryInput` via:
//
//	GetFirewallProxyaddressCategoryArgs{...}
type GetFirewallProxyaddressCategoryInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressCategoryOutput() GetFirewallProxyaddressCategoryOutput
	ToGetFirewallProxyaddressCategoryOutputWithContext(context.Context) GetFirewallProxyaddressCategoryOutput
}

type GetFirewallProxyaddressCategoryArgs struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallProxyaddressCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressCategory)(nil)).Elem()
}

func (i GetFirewallProxyaddressCategoryArgs) ToGetFirewallProxyaddressCategoryOutput() GetFirewallProxyaddressCategoryOutput {
	return i.ToGetFirewallProxyaddressCategoryOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressCategoryArgs) ToGetFirewallProxyaddressCategoryOutputWithContext(ctx context.Context) GetFirewallProxyaddressCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressCategoryOutput)
}

// GetFirewallProxyaddressCategoryArrayInput is an input type that accepts GetFirewallProxyaddressCategoryArray and GetFirewallProxyaddressCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressCategoryArrayInput` via:
//
//	GetFirewallProxyaddressCategoryArray{ GetFirewallProxyaddressCategoryArgs{...} }
type GetFirewallProxyaddressCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressCategoryArrayOutput() GetFirewallProxyaddressCategoryArrayOutput
	ToGetFirewallProxyaddressCategoryArrayOutputWithContext(context.Context) GetFirewallProxyaddressCategoryArrayOutput
}

type GetFirewallProxyaddressCategoryArray []GetFirewallProxyaddressCategoryInput

func (GetFirewallProxyaddressCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressCategory)(nil)).Elem()
}

func (i GetFirewallProxyaddressCategoryArray) ToGetFirewallProxyaddressCategoryArrayOutput() GetFirewallProxyaddressCategoryArrayOutput {
	return i.ToGetFirewallProxyaddressCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressCategoryArray) ToGetFirewallProxyaddressCategoryArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressCategoryArrayOutput)
}

type GetFirewallProxyaddressCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressCategory)(nil)).Elem()
}

func (o GetFirewallProxyaddressCategoryOutput) ToGetFirewallProxyaddressCategoryOutput() GetFirewallProxyaddressCategoryOutput {
	return o
}

func (o GetFirewallProxyaddressCategoryOutput) ToGetFirewallProxyaddressCategoryOutputWithContext(ctx context.Context) GetFirewallProxyaddressCategoryOutput {
	return o
}

// ID.
func (o GetFirewallProxyaddressCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallProxyaddressCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressCategory)(nil)).Elem()
}

func (o GetFirewallProxyaddressCategoryArrayOutput) ToGetFirewallProxyaddressCategoryArrayOutput() GetFirewallProxyaddressCategoryArrayOutput {
	return o
}

func (o GetFirewallProxyaddressCategoryArrayOutput) ToGetFirewallProxyaddressCategoryArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressCategoryArrayOutput {
	return o
}

func (o GetFirewallProxyaddressCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddressCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddressCategory {
		return vs[0].([]GetFirewallProxyaddressCategory)[vs[1].(int)]
	}).(GetFirewallProxyaddressCategoryOutput)
}

type GetFirewallProxyaddressHeaderGroup struct {
	// Case sensitivity in pattern.
	CaseSensitivity string `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header string `pulumi:"header"`
	// HTTP header.
	HeaderName string `pulumi:"headerName"`
	// ID.
	Id int `pulumi:"id"`
}

// GetFirewallProxyaddressHeaderGroupInput is an input type that accepts GetFirewallProxyaddressHeaderGroupArgs and GetFirewallProxyaddressHeaderGroupOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressHeaderGroupInput` via:
//
//	GetFirewallProxyaddressHeaderGroupArgs{...}
type GetFirewallProxyaddressHeaderGroupInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressHeaderGroupOutput() GetFirewallProxyaddressHeaderGroupOutput
	ToGetFirewallProxyaddressHeaderGroupOutputWithContext(context.Context) GetFirewallProxyaddressHeaderGroupOutput
}

type GetFirewallProxyaddressHeaderGroupArgs struct {
	// Case sensitivity in pattern.
	CaseSensitivity pulumi.StringInput `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header pulumi.StringInput `pulumi:"header"`
	// HTTP header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallProxyaddressHeaderGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (i GetFirewallProxyaddressHeaderGroupArgs) ToGetFirewallProxyaddressHeaderGroupOutput() GetFirewallProxyaddressHeaderGroupOutput {
	return i.ToGetFirewallProxyaddressHeaderGroupOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressHeaderGroupArgs) ToGetFirewallProxyaddressHeaderGroupOutputWithContext(ctx context.Context) GetFirewallProxyaddressHeaderGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressHeaderGroupOutput)
}

// GetFirewallProxyaddressHeaderGroupArrayInput is an input type that accepts GetFirewallProxyaddressHeaderGroupArray and GetFirewallProxyaddressHeaderGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressHeaderGroupArrayInput` via:
//
//	GetFirewallProxyaddressHeaderGroupArray{ GetFirewallProxyaddressHeaderGroupArgs{...} }
type GetFirewallProxyaddressHeaderGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressHeaderGroupArrayOutput() GetFirewallProxyaddressHeaderGroupArrayOutput
	ToGetFirewallProxyaddressHeaderGroupArrayOutputWithContext(context.Context) GetFirewallProxyaddressHeaderGroupArrayOutput
}

type GetFirewallProxyaddressHeaderGroupArray []GetFirewallProxyaddressHeaderGroupInput

func (GetFirewallProxyaddressHeaderGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (i GetFirewallProxyaddressHeaderGroupArray) ToGetFirewallProxyaddressHeaderGroupArrayOutput() GetFirewallProxyaddressHeaderGroupArrayOutput {
	return i.ToGetFirewallProxyaddressHeaderGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressHeaderGroupArray) ToGetFirewallProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressHeaderGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressHeaderGroupArrayOutput)
}

type GetFirewallProxyaddressHeaderGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressHeaderGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (o GetFirewallProxyaddressHeaderGroupOutput) ToGetFirewallProxyaddressHeaderGroupOutput() GetFirewallProxyaddressHeaderGroupOutput {
	return o
}

func (o GetFirewallProxyaddressHeaderGroupOutput) ToGetFirewallProxyaddressHeaderGroupOutputWithContext(ctx context.Context) GetFirewallProxyaddressHeaderGroupOutput {
	return o
}

// Case sensitivity in pattern.
func (o GetFirewallProxyaddressHeaderGroupOutput) CaseSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressHeaderGroup) string { return v.CaseSensitivity }).(pulumi.StringOutput)
}

// HTTP header regular expression.
func (o GetFirewallProxyaddressHeaderGroupOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressHeaderGroup) string { return v.Header }).(pulumi.StringOutput)
}

// HTTP header.
func (o GetFirewallProxyaddressHeaderGroupOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressHeaderGroup) string { return v.HeaderName }).(pulumi.StringOutput)
}

// ID.
func (o GetFirewallProxyaddressHeaderGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressHeaderGroup) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallProxyaddressHeaderGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressHeaderGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (o GetFirewallProxyaddressHeaderGroupArrayOutput) ToGetFirewallProxyaddressHeaderGroupArrayOutput() GetFirewallProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o GetFirewallProxyaddressHeaderGroupArrayOutput) ToGetFirewallProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o GetFirewallProxyaddressHeaderGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddressHeaderGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddressHeaderGroup {
		return vs[0].([]GetFirewallProxyaddressHeaderGroup)[vs[1].(int)]
	}).(GetFirewallProxyaddressHeaderGroupOutput)
}

type GetFirewallProxyaddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallProxyaddressTaggingTag `pulumi:"tags"`
}

// GetFirewallProxyaddressTaggingInput is an input type that accepts GetFirewallProxyaddressTaggingArgs and GetFirewallProxyaddressTaggingOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressTaggingInput` via:
//
//	GetFirewallProxyaddressTaggingArgs{...}
type GetFirewallProxyaddressTaggingInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressTaggingOutput() GetFirewallProxyaddressTaggingOutput
	ToGetFirewallProxyaddressTaggingOutputWithContext(context.Context) GetFirewallProxyaddressTaggingOutput
}

type GetFirewallProxyaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallProxyaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallProxyaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressTagging)(nil)).Elem()
}

func (i GetFirewallProxyaddressTaggingArgs) ToGetFirewallProxyaddressTaggingOutput() GetFirewallProxyaddressTaggingOutput {
	return i.ToGetFirewallProxyaddressTaggingOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressTaggingArgs) ToGetFirewallProxyaddressTaggingOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressTaggingOutput)
}

// GetFirewallProxyaddressTaggingArrayInput is an input type that accepts GetFirewallProxyaddressTaggingArray and GetFirewallProxyaddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressTaggingArrayInput` via:
//
//	GetFirewallProxyaddressTaggingArray{ GetFirewallProxyaddressTaggingArgs{...} }
type GetFirewallProxyaddressTaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressTaggingArrayOutput() GetFirewallProxyaddressTaggingArrayOutput
	ToGetFirewallProxyaddressTaggingArrayOutputWithContext(context.Context) GetFirewallProxyaddressTaggingArrayOutput
}

type GetFirewallProxyaddressTaggingArray []GetFirewallProxyaddressTaggingInput

func (GetFirewallProxyaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressTagging)(nil)).Elem()
}

func (i GetFirewallProxyaddressTaggingArray) ToGetFirewallProxyaddressTaggingArrayOutput() GetFirewallProxyaddressTaggingArrayOutput {
	return i.ToGetFirewallProxyaddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressTaggingArray) ToGetFirewallProxyaddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressTaggingArrayOutput)
}

type GetFirewallProxyaddressTaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressTagging)(nil)).Elem()
}

func (o GetFirewallProxyaddressTaggingOutput) ToGetFirewallProxyaddressTaggingOutput() GetFirewallProxyaddressTaggingOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingOutput) ToGetFirewallProxyaddressTaggingOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallProxyaddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall proxyaddress.
func (o GetFirewallProxyaddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallProxyaddressTaggingOutput) Tags() GetFirewallProxyaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressTagging) []GetFirewallProxyaddressTaggingTag { return v.Tags }).(GetFirewallProxyaddressTaggingTagArrayOutput)
}

type GetFirewallProxyaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressTagging)(nil)).Elem()
}

func (o GetFirewallProxyaddressTaggingArrayOutput) ToGetFirewallProxyaddressTaggingArrayOutput() GetFirewallProxyaddressTaggingArrayOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingArrayOutput) ToGetFirewallProxyaddressTaggingArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingArrayOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddressTagging {
		return vs[0].([]GetFirewallProxyaddressTagging)[vs[1].(int)]
	}).(GetFirewallProxyaddressTaggingOutput)
}

type GetFirewallProxyaddressTaggingTag struct {
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
}

// GetFirewallProxyaddressTaggingTagInput is an input type that accepts GetFirewallProxyaddressTaggingTagArgs and GetFirewallProxyaddressTaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressTaggingTagInput` via:
//
//	GetFirewallProxyaddressTaggingTagArgs{...}
type GetFirewallProxyaddressTaggingTagInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressTaggingTagOutput() GetFirewallProxyaddressTaggingTagOutput
	ToGetFirewallProxyaddressTaggingTagOutputWithContext(context.Context) GetFirewallProxyaddressTaggingTagOutput
}

type GetFirewallProxyaddressTaggingTagArgs struct {
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxyaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallProxyaddressTaggingTagArgs) ToGetFirewallProxyaddressTaggingTagOutput() GetFirewallProxyaddressTaggingTagOutput {
	return i.ToGetFirewallProxyaddressTaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressTaggingTagArgs) ToGetFirewallProxyaddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressTaggingTagOutput)
}

// GetFirewallProxyaddressTaggingTagArrayInput is an input type that accepts GetFirewallProxyaddressTaggingTagArray and GetFirewallProxyaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddressTaggingTagArrayInput` via:
//
//	GetFirewallProxyaddressTaggingTagArray{ GetFirewallProxyaddressTaggingTagArgs{...} }
type GetFirewallProxyaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddressTaggingTagArrayOutput() GetFirewallProxyaddressTaggingTagArrayOutput
	ToGetFirewallProxyaddressTaggingTagArrayOutputWithContext(context.Context) GetFirewallProxyaddressTaggingTagArrayOutput
}

type GetFirewallProxyaddressTaggingTagArray []GetFirewallProxyaddressTaggingTagInput

func (GetFirewallProxyaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (i GetFirewallProxyaddressTaggingTagArray) ToGetFirewallProxyaddressTaggingTagArrayOutput() GetFirewallProxyaddressTaggingTagArrayOutput {
	return i.ToGetFirewallProxyaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddressTaggingTagArray) ToGetFirewallProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddressTaggingTagArrayOutput)
}

type GetFirewallProxyaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallProxyaddressTaggingTagOutput) ToGetFirewallProxyaddressTaggingTagOutput() GetFirewallProxyaddressTaggingTagOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingTagOutput) ToGetFirewallProxyaddressTaggingTagOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall proxyaddress.
func (o GetFirewallProxyaddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxyaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (o GetFirewallProxyaddressTaggingTagArrayOutput) ToGetFirewallProxyaddressTaggingTagArrayOutput() GetFirewallProxyaddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingTagArrayOutput) ToGetFirewallProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddressTaggingTagArrayOutput {
	return o
}

func (o GetFirewallProxyaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddressTaggingTag {
		return vs[0].([]GetFirewallProxyaddressTaggingTag)[vs[1].(int)]
	}).(GetFirewallProxyaddressTaggingTagOutput)
}

type GetFirewallProxyaddrgrpMember struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
}

// GetFirewallProxyaddrgrpMemberInput is an input type that accepts GetFirewallProxyaddrgrpMemberArgs and GetFirewallProxyaddrgrpMemberOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpMemberInput` via:
//
//	GetFirewallProxyaddrgrpMemberArgs{...}
type GetFirewallProxyaddrgrpMemberInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpMemberOutput() GetFirewallProxyaddrgrpMemberOutput
	ToGetFirewallProxyaddrgrpMemberOutputWithContext(context.Context) GetFirewallProxyaddrgrpMemberOutput
}

type GetFirewallProxyaddrgrpMemberArgs struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxyaddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpMember)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpMemberArgs) ToGetFirewallProxyaddrgrpMemberOutput() GetFirewallProxyaddrgrpMemberOutput {
	return i.ToGetFirewallProxyaddrgrpMemberOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpMemberArgs) ToGetFirewallProxyaddrgrpMemberOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpMemberOutput)
}

// GetFirewallProxyaddrgrpMemberArrayInput is an input type that accepts GetFirewallProxyaddrgrpMemberArray and GetFirewallProxyaddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpMemberArrayInput` via:
//
//	GetFirewallProxyaddrgrpMemberArray{ GetFirewallProxyaddrgrpMemberArgs{...} }
type GetFirewallProxyaddrgrpMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpMemberArrayOutput() GetFirewallProxyaddrgrpMemberArrayOutput
	ToGetFirewallProxyaddrgrpMemberArrayOutputWithContext(context.Context) GetFirewallProxyaddrgrpMemberArrayOutput
}

type GetFirewallProxyaddrgrpMemberArray []GetFirewallProxyaddrgrpMemberInput

func (GetFirewallProxyaddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpMember)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpMemberArray) ToGetFirewallProxyaddrgrpMemberArrayOutput() GetFirewallProxyaddrgrpMemberArrayOutput {
	return i.ToGetFirewallProxyaddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpMemberArray) ToGetFirewallProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpMemberArrayOutput)
}

type GetFirewallProxyaddrgrpMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpMember)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpMemberOutput) ToGetFirewallProxyaddrgrpMemberOutput() GetFirewallProxyaddrgrpMemberOutput {
	return o
}

func (o GetFirewallProxyaddrgrpMemberOutput) ToGetFirewallProxyaddrgrpMemberOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpMemberOutput {
	return o
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetFirewallProxyaddrgrpMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddrgrpMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxyaddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpMember)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpMemberArrayOutput) ToGetFirewallProxyaddrgrpMemberArrayOutput() GetFirewallProxyaddrgrpMemberArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpMemberArrayOutput) ToGetFirewallProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpMemberArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddrgrpMember {
		return vs[0].([]GetFirewallProxyaddrgrpMember)[vs[1].(int)]
	}).(GetFirewallProxyaddrgrpMemberOutput)
}

type GetFirewallProxyaddrgrpTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetFirewallProxyaddrgrpTaggingTag `pulumi:"tags"`
}

// GetFirewallProxyaddrgrpTaggingInput is an input type that accepts GetFirewallProxyaddrgrpTaggingArgs and GetFirewallProxyaddrgrpTaggingOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpTaggingInput` via:
//
//	GetFirewallProxyaddrgrpTaggingArgs{...}
type GetFirewallProxyaddrgrpTaggingInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpTaggingOutput() GetFirewallProxyaddrgrpTaggingOutput
	ToGetFirewallProxyaddrgrpTaggingOutputWithContext(context.Context) GetFirewallProxyaddrgrpTaggingOutput
}

type GetFirewallProxyaddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetFirewallProxyaddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (GetFirewallProxyaddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpTaggingArgs) ToGetFirewallProxyaddrgrpTaggingOutput() GetFirewallProxyaddrgrpTaggingOutput {
	return i.ToGetFirewallProxyaddrgrpTaggingOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpTaggingArgs) ToGetFirewallProxyaddrgrpTaggingOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpTaggingOutput)
}

// GetFirewallProxyaddrgrpTaggingArrayInput is an input type that accepts GetFirewallProxyaddrgrpTaggingArray and GetFirewallProxyaddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpTaggingArrayInput` via:
//
//	GetFirewallProxyaddrgrpTaggingArray{ GetFirewallProxyaddrgrpTaggingArgs{...} }
type GetFirewallProxyaddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpTaggingArrayOutput() GetFirewallProxyaddrgrpTaggingArrayOutput
	ToGetFirewallProxyaddrgrpTaggingArrayOutputWithContext(context.Context) GetFirewallProxyaddrgrpTaggingArrayOutput
}

type GetFirewallProxyaddrgrpTaggingArray []GetFirewallProxyaddrgrpTaggingInput

func (GetFirewallProxyaddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpTaggingArray) ToGetFirewallProxyaddrgrpTaggingArrayOutput() GetFirewallProxyaddrgrpTaggingArrayOutput {
	return i.ToGetFirewallProxyaddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpTaggingArray) ToGetFirewallProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpTaggingArrayOutput)
}

type GetFirewallProxyaddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpTaggingOutput) ToGetFirewallProxyaddrgrpTaggingOutput() GetFirewallProxyaddrgrpTaggingOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingOutput) ToGetFirewallProxyaddrgrpTaggingOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o GetFirewallProxyaddrgrpTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddrgrpTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetFirewallProxyaddrgrpTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddrgrpTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetFirewallProxyaddrgrpTaggingOutput) Tags() GetFirewallProxyaddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v GetFirewallProxyaddrgrpTagging) []GetFirewallProxyaddrgrpTaggingTag { return v.Tags }).(GetFirewallProxyaddrgrpTaggingTagArrayOutput)
}

type GetFirewallProxyaddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpTaggingArrayOutput) ToGetFirewallProxyaddrgrpTaggingArrayOutput() GetFirewallProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingArrayOutput) ToGetFirewallProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddrgrpTagging {
		return vs[0].([]GetFirewallProxyaddrgrpTagging)[vs[1].(int)]
	}).(GetFirewallProxyaddrgrpTaggingOutput)
}

type GetFirewallProxyaddrgrpTaggingTag struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
}

// GetFirewallProxyaddrgrpTaggingTagInput is an input type that accepts GetFirewallProxyaddrgrpTaggingTagArgs and GetFirewallProxyaddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpTaggingTagInput` via:
//
//	GetFirewallProxyaddrgrpTaggingTagArgs{...}
type GetFirewallProxyaddrgrpTaggingTagInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpTaggingTagOutput() GetFirewallProxyaddrgrpTaggingTagOutput
	ToGetFirewallProxyaddrgrpTaggingTagOutputWithContext(context.Context) GetFirewallProxyaddrgrpTaggingTagOutput
}

type GetFirewallProxyaddrgrpTaggingTagArgs struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxyaddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpTaggingTagArgs) ToGetFirewallProxyaddrgrpTaggingTagOutput() GetFirewallProxyaddrgrpTaggingTagOutput {
	return i.ToGetFirewallProxyaddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpTaggingTagArgs) ToGetFirewallProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpTaggingTagOutput)
}

// GetFirewallProxyaddrgrpTaggingTagArrayInput is an input type that accepts GetFirewallProxyaddrgrpTaggingTagArray and GetFirewallProxyaddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxyaddrgrpTaggingTagArrayInput` via:
//
//	GetFirewallProxyaddrgrpTaggingTagArray{ GetFirewallProxyaddrgrpTaggingTagArgs{...} }
type GetFirewallProxyaddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToGetFirewallProxyaddrgrpTaggingTagArrayOutput() GetFirewallProxyaddrgrpTaggingTagArrayOutput
	ToGetFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(context.Context) GetFirewallProxyaddrgrpTaggingTagArrayOutput
}

type GetFirewallProxyaddrgrpTaggingTagArray []GetFirewallProxyaddrgrpTaggingTagInput

func (GetFirewallProxyaddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i GetFirewallProxyaddrgrpTaggingTagArray) ToGetFirewallProxyaddrgrpTaggingTagArrayOutput() GetFirewallProxyaddrgrpTaggingTagArrayOutput {
	return i.ToGetFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxyaddrgrpTaggingTagArray) ToGetFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxyaddrgrpTaggingTagArrayOutput)
}

type GetFirewallProxyaddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpTaggingTagOutput) ToGetFirewallProxyaddrgrpTaggingTagOutput() GetFirewallProxyaddrgrpTaggingTagOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingTagOutput) ToGetFirewallProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetFirewallProxyaddrgrpTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxyaddrgrpTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxyaddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxyaddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o GetFirewallProxyaddrgrpTaggingTagArrayOutput) ToGetFirewallProxyaddrgrpTaggingTagArrayOutput() GetFirewallProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingTagArrayOutput) ToGetFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetFirewallProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetFirewallProxyaddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) GetFirewallProxyaddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxyaddrgrpTaggingTag {
		return vs[0].([]GetFirewallProxyaddrgrpTaggingTag)[vs[1].(int)]
	}).(GetFirewallProxyaddrgrpTaggingTagOutput)
}

type GetFirewallProxypolicyAccessProxy6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyAccessProxy6Input is an input type that accepts GetFirewallProxypolicyAccessProxy6Args and GetFirewallProxypolicyAccessProxy6Output values.
// You can construct a concrete instance of `GetFirewallProxypolicyAccessProxy6Input` via:
//
//	GetFirewallProxypolicyAccessProxy6Args{...}
type GetFirewallProxypolicyAccessProxy6Input interface {
	pulumi.Input

	ToGetFirewallProxypolicyAccessProxy6Output() GetFirewallProxypolicyAccessProxy6Output
	ToGetFirewallProxypolicyAccessProxy6OutputWithContext(context.Context) GetFirewallProxypolicyAccessProxy6Output
}

type GetFirewallProxypolicyAccessProxy6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyAccessProxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (i GetFirewallProxypolicyAccessProxy6Args) ToGetFirewallProxypolicyAccessProxy6Output() GetFirewallProxypolicyAccessProxy6Output {
	return i.ToGetFirewallProxypolicyAccessProxy6OutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyAccessProxy6Args) ToGetFirewallProxypolicyAccessProxy6OutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyAccessProxy6Output)
}

// GetFirewallProxypolicyAccessProxy6ArrayInput is an input type that accepts GetFirewallProxypolicyAccessProxy6Array and GetFirewallProxypolicyAccessProxy6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyAccessProxy6ArrayInput` via:
//
//	GetFirewallProxypolicyAccessProxy6Array{ GetFirewallProxypolicyAccessProxy6Args{...} }
type GetFirewallProxypolicyAccessProxy6ArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyAccessProxy6ArrayOutput() GetFirewallProxypolicyAccessProxy6ArrayOutput
	ToGetFirewallProxypolicyAccessProxy6ArrayOutputWithContext(context.Context) GetFirewallProxypolicyAccessProxy6ArrayOutput
}

type GetFirewallProxypolicyAccessProxy6Array []GetFirewallProxypolicyAccessProxy6Input

func (GetFirewallProxypolicyAccessProxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (i GetFirewallProxypolicyAccessProxy6Array) ToGetFirewallProxypolicyAccessProxy6ArrayOutput() GetFirewallProxypolicyAccessProxy6ArrayOutput {
	return i.ToGetFirewallProxypolicyAccessProxy6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyAccessProxy6Array) ToGetFirewallProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyAccessProxy6ArrayOutput)
}

type GetFirewallProxypolicyAccessProxy6Output struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyAccessProxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (o GetFirewallProxypolicyAccessProxy6Output) ToGetFirewallProxypolicyAccessProxy6Output() GetFirewallProxypolicyAccessProxy6Output {
	return o
}

func (o GetFirewallProxypolicyAccessProxy6Output) ToGetFirewallProxypolicyAccessProxy6OutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxy6Output {
	return o
}

// Group name.
func (o GetFirewallProxypolicyAccessProxy6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyAccessProxy6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyAccessProxy6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyAccessProxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (o GetFirewallProxypolicyAccessProxy6ArrayOutput) ToGetFirewallProxypolicyAccessProxy6ArrayOutput() GetFirewallProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicyAccessProxy6ArrayOutput) ToGetFirewallProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicyAccessProxy6ArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyAccessProxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyAccessProxy6 {
		return vs[0].([]GetFirewallProxypolicyAccessProxy6)[vs[1].(int)]
	}).(GetFirewallProxypolicyAccessProxy6Output)
}

type GetFirewallProxypolicyAccessProxy struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyAccessProxyInput is an input type that accepts GetFirewallProxypolicyAccessProxyArgs and GetFirewallProxypolicyAccessProxyOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyAccessProxyInput` via:
//
//	GetFirewallProxypolicyAccessProxyArgs{...}
type GetFirewallProxypolicyAccessProxyInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyAccessProxyOutput() GetFirewallProxypolicyAccessProxyOutput
	ToGetFirewallProxypolicyAccessProxyOutputWithContext(context.Context) GetFirewallProxypolicyAccessProxyOutput
}

type GetFirewallProxypolicyAccessProxyArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyAccessProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (i GetFirewallProxypolicyAccessProxyArgs) ToGetFirewallProxypolicyAccessProxyOutput() GetFirewallProxypolicyAccessProxyOutput {
	return i.ToGetFirewallProxypolicyAccessProxyOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyAccessProxyArgs) ToGetFirewallProxypolicyAccessProxyOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyAccessProxyOutput)
}

// GetFirewallProxypolicyAccessProxyArrayInput is an input type that accepts GetFirewallProxypolicyAccessProxyArray and GetFirewallProxypolicyAccessProxyArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyAccessProxyArrayInput` via:
//
//	GetFirewallProxypolicyAccessProxyArray{ GetFirewallProxypolicyAccessProxyArgs{...} }
type GetFirewallProxypolicyAccessProxyArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyAccessProxyArrayOutput() GetFirewallProxypolicyAccessProxyArrayOutput
	ToGetFirewallProxypolicyAccessProxyArrayOutputWithContext(context.Context) GetFirewallProxypolicyAccessProxyArrayOutput
}

type GetFirewallProxypolicyAccessProxyArray []GetFirewallProxypolicyAccessProxyInput

func (GetFirewallProxypolicyAccessProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (i GetFirewallProxypolicyAccessProxyArray) ToGetFirewallProxypolicyAccessProxyArrayOutput() GetFirewallProxypolicyAccessProxyArrayOutput {
	return i.ToGetFirewallProxypolicyAccessProxyArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyAccessProxyArray) ToGetFirewallProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyAccessProxyArrayOutput)
}

type GetFirewallProxypolicyAccessProxyOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyAccessProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (o GetFirewallProxypolicyAccessProxyOutput) ToGetFirewallProxypolicyAccessProxyOutput() GetFirewallProxypolicyAccessProxyOutput {
	return o
}

func (o GetFirewallProxypolicyAccessProxyOutput) ToGetFirewallProxypolicyAccessProxyOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxyOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyAccessProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyAccessProxy) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyAccessProxyArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyAccessProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (o GetFirewallProxypolicyAccessProxyArrayOutput) ToGetFirewallProxypolicyAccessProxyArrayOutput() GetFirewallProxypolicyAccessProxyArrayOutput {
	return o
}

func (o GetFirewallProxypolicyAccessProxyArrayOutput) ToGetFirewallProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyAccessProxyArrayOutput {
	return o
}

func (o GetFirewallProxypolicyAccessProxyArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyAccessProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyAccessProxy {
		return vs[0].([]GetFirewallProxypolicyAccessProxy)[vs[1].(int)]
	}).(GetFirewallProxypolicyAccessProxyOutput)
}

type GetFirewallProxypolicyDstaddr6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyDstaddr6Input is an input type that accepts GetFirewallProxypolicyDstaddr6Args and GetFirewallProxypolicyDstaddr6Output values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstaddr6Input` via:
//
//	GetFirewallProxypolicyDstaddr6Args{...}
type GetFirewallProxypolicyDstaddr6Input interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstaddr6Output() GetFirewallProxypolicyDstaddr6Output
	ToGetFirewallProxypolicyDstaddr6OutputWithContext(context.Context) GetFirewallProxypolicyDstaddr6Output
}

type GetFirewallProxypolicyDstaddr6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstaddr6Args) ToGetFirewallProxypolicyDstaddr6Output() GetFirewallProxypolicyDstaddr6Output {
	return i.ToGetFirewallProxypolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstaddr6Args) ToGetFirewallProxypolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstaddr6Output)
}

// GetFirewallProxypolicyDstaddr6ArrayInput is an input type that accepts GetFirewallProxypolicyDstaddr6Array and GetFirewallProxypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstaddr6ArrayInput` via:
//
//	GetFirewallProxypolicyDstaddr6Array{ GetFirewallProxypolicyDstaddr6Args{...} }
type GetFirewallProxypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstaddr6ArrayOutput() GetFirewallProxypolicyDstaddr6ArrayOutput
	ToGetFirewallProxypolicyDstaddr6ArrayOutputWithContext(context.Context) GetFirewallProxypolicyDstaddr6ArrayOutput
}

type GetFirewallProxypolicyDstaddr6Array []GetFirewallProxypolicyDstaddr6Input

func (GetFirewallProxypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstaddr6Array) ToGetFirewallProxypolicyDstaddr6ArrayOutput() GetFirewallProxypolicyDstaddr6ArrayOutput {
	return i.ToGetFirewallProxypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstaddr6Array) ToGetFirewallProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstaddr6ArrayOutput)
}

type GetFirewallProxypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstaddr6Output) ToGetFirewallProxypolicyDstaddr6Output() GetFirewallProxypolicyDstaddr6Output {
	return o
}

func (o GetFirewallProxypolicyDstaddr6Output) ToGetFirewallProxypolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddr6Output {
	return o
}

// Group name.
func (o GetFirewallProxypolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstaddr6ArrayOutput) ToGetFirewallProxypolicyDstaddr6ArrayOutput() GetFirewallProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstaddr6ArrayOutput) ToGetFirewallProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyDstaddr6 {
		return vs[0].([]GetFirewallProxypolicyDstaddr6)[vs[1].(int)]
	}).(GetFirewallProxypolicyDstaddr6Output)
}

type GetFirewallProxypolicyDstaddr struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyDstaddrInput is an input type that accepts GetFirewallProxypolicyDstaddrArgs and GetFirewallProxypolicyDstaddrOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstaddrInput` via:
//
//	GetFirewallProxypolicyDstaddrArgs{...}
type GetFirewallProxypolicyDstaddrInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstaddrOutput() GetFirewallProxypolicyDstaddrOutput
	ToGetFirewallProxypolicyDstaddrOutputWithContext(context.Context) GetFirewallProxypolicyDstaddrOutput
}

type GetFirewallProxypolicyDstaddrArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstaddrArgs) ToGetFirewallProxypolicyDstaddrOutput() GetFirewallProxypolicyDstaddrOutput {
	return i.ToGetFirewallProxypolicyDstaddrOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstaddrArgs) ToGetFirewallProxypolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstaddrOutput)
}

// GetFirewallProxypolicyDstaddrArrayInput is an input type that accepts GetFirewallProxypolicyDstaddrArray and GetFirewallProxypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstaddrArrayInput` via:
//
//	GetFirewallProxypolicyDstaddrArray{ GetFirewallProxypolicyDstaddrArgs{...} }
type GetFirewallProxypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstaddrArrayOutput() GetFirewallProxypolicyDstaddrArrayOutput
	ToGetFirewallProxypolicyDstaddrArrayOutputWithContext(context.Context) GetFirewallProxypolicyDstaddrArrayOutput
}

type GetFirewallProxypolicyDstaddrArray []GetFirewallProxypolicyDstaddrInput

func (GetFirewallProxypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstaddr)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstaddrArray) ToGetFirewallProxypolicyDstaddrArrayOutput() GetFirewallProxypolicyDstaddrArrayOutput {
	return i.ToGetFirewallProxypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstaddrArray) ToGetFirewallProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstaddrArrayOutput)
}

type GetFirewallProxypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstaddrOutput) ToGetFirewallProxypolicyDstaddrOutput() GetFirewallProxypolicyDstaddrOutput {
	return o
}

func (o GetFirewallProxypolicyDstaddrOutput) ToGetFirewallProxypolicyDstaddrOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddrOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstaddr)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstaddrArrayOutput) ToGetFirewallProxypolicyDstaddrArrayOutput() GetFirewallProxypolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstaddrArrayOutput) ToGetFirewallProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstaddrArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyDstaddr {
		return vs[0].([]GetFirewallProxypolicyDstaddr)[vs[1].(int)]
	}).(GetFirewallProxypolicyDstaddrOutput)
}

type GetFirewallProxypolicyDstintf struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyDstintfInput is an input type that accepts GetFirewallProxypolicyDstintfArgs and GetFirewallProxypolicyDstintfOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstintfInput` via:
//
//	GetFirewallProxypolicyDstintfArgs{...}
type GetFirewallProxypolicyDstintfInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstintfOutput() GetFirewallProxypolicyDstintfOutput
	ToGetFirewallProxypolicyDstintfOutputWithContext(context.Context) GetFirewallProxypolicyDstintfOutput
}

type GetFirewallProxypolicyDstintfArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstintf)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstintfArgs) ToGetFirewallProxypolicyDstintfOutput() GetFirewallProxypolicyDstintfOutput {
	return i.ToGetFirewallProxypolicyDstintfOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstintfArgs) ToGetFirewallProxypolicyDstintfOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstintfOutput)
}

// GetFirewallProxypolicyDstintfArrayInput is an input type that accepts GetFirewallProxypolicyDstintfArray and GetFirewallProxypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyDstintfArrayInput` via:
//
//	GetFirewallProxypolicyDstintfArray{ GetFirewallProxypolicyDstintfArgs{...} }
type GetFirewallProxypolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyDstintfArrayOutput() GetFirewallProxypolicyDstintfArrayOutput
	ToGetFirewallProxypolicyDstintfArrayOutputWithContext(context.Context) GetFirewallProxypolicyDstintfArrayOutput
}

type GetFirewallProxypolicyDstintfArray []GetFirewallProxypolicyDstintfInput

func (GetFirewallProxypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstintf)(nil)).Elem()
}

func (i GetFirewallProxypolicyDstintfArray) ToGetFirewallProxypolicyDstintfArrayOutput() GetFirewallProxypolicyDstintfArrayOutput {
	return i.ToGetFirewallProxypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyDstintfArray) ToGetFirewallProxypolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyDstintfArrayOutput)
}

type GetFirewallProxypolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyDstintf)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstintfOutput) ToGetFirewallProxypolicyDstintfOutput() GetFirewallProxypolicyDstintfOutput {
	return o
}

func (o GetFirewallProxypolicyDstintfOutput) ToGetFirewallProxypolicyDstintfOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstintfOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyDstintf)(nil)).Elem()
}

func (o GetFirewallProxypolicyDstintfArrayOutput) ToGetFirewallProxypolicyDstintfArrayOutput() GetFirewallProxypolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstintfArrayOutput) ToGetFirewallProxypolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallProxypolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyDstintf {
		return vs[0].([]GetFirewallProxypolicyDstintf)[vs[1].(int)]
	}).(GetFirewallProxypolicyDstintfOutput)
}

type GetFirewallProxypolicyGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyGroupInput is an input type that accepts GetFirewallProxypolicyGroupArgs and GetFirewallProxypolicyGroupOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyGroupInput` via:
//
//	GetFirewallProxypolicyGroupArgs{...}
type GetFirewallProxypolicyGroupInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyGroupOutput() GetFirewallProxypolicyGroupOutput
	ToGetFirewallProxypolicyGroupOutputWithContext(context.Context) GetFirewallProxypolicyGroupOutput
}

type GetFirewallProxypolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyGroupArgs) ToGetFirewallProxypolicyGroupOutput() GetFirewallProxypolicyGroupOutput {
	return i.ToGetFirewallProxypolicyGroupOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyGroupArgs) ToGetFirewallProxypolicyGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyGroupOutput)
}

// GetFirewallProxypolicyGroupArrayInput is an input type that accepts GetFirewallProxypolicyGroupArray and GetFirewallProxypolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyGroupArrayInput` via:
//
//	GetFirewallProxypolicyGroupArray{ GetFirewallProxypolicyGroupArgs{...} }
type GetFirewallProxypolicyGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyGroupArrayOutput() GetFirewallProxypolicyGroupArrayOutput
	ToGetFirewallProxypolicyGroupArrayOutputWithContext(context.Context) GetFirewallProxypolicyGroupArrayOutput
}

type GetFirewallProxypolicyGroupArray []GetFirewallProxypolicyGroupInput

func (GetFirewallProxypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyGroupArray) ToGetFirewallProxypolicyGroupArrayOutput() GetFirewallProxypolicyGroupArrayOutput {
	return i.ToGetFirewallProxypolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyGroupArray) ToGetFirewallProxypolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyGroupArrayOutput)
}

type GetFirewallProxypolicyGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyGroupOutput) ToGetFirewallProxypolicyGroupOutput() GetFirewallProxypolicyGroupOutput {
	return o
}

func (o GetFirewallProxypolicyGroupOutput) ToGetFirewallProxypolicyGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyGroupOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyGroupArrayOutput) ToGetFirewallProxypolicyGroupArrayOutput() GetFirewallProxypolicyGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyGroupArrayOutput) ToGetFirewallProxypolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyGroup {
		return vs[0].([]GetFirewallProxypolicyGroup)[vs[1].(int)]
	}).(GetFirewallProxypolicyGroupOutput)
}

type GetFirewallProxypolicyInternetServiceCustom struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyInternetServiceCustomInput is an input type that accepts GetFirewallProxypolicyInternetServiceCustomArgs and GetFirewallProxypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceCustomInput` via:
//
//	GetFirewallProxypolicyInternetServiceCustomArgs{...}
type GetFirewallProxypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceCustomOutput() GetFirewallProxypolicyInternetServiceCustomOutput
	ToGetFirewallProxypolicyInternetServiceCustomOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceCustomOutput
}

type GetFirewallProxypolicyInternetServiceCustomArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceCustomArgs) ToGetFirewallProxypolicyInternetServiceCustomOutput() GetFirewallProxypolicyInternetServiceCustomOutput {
	return i.ToGetFirewallProxypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceCustomArgs) ToGetFirewallProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceCustomOutput)
}

// GetFirewallProxypolicyInternetServiceCustomArrayInput is an input type that accepts GetFirewallProxypolicyInternetServiceCustomArray and GetFirewallProxypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceCustomArrayInput` via:
//
//	GetFirewallProxypolicyInternetServiceCustomArray{ GetFirewallProxypolicyInternetServiceCustomArgs{...} }
type GetFirewallProxypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceCustomArrayOutput() GetFirewallProxypolicyInternetServiceCustomArrayOutput
	ToGetFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceCustomArrayOutput
}

type GetFirewallProxypolicyInternetServiceCustomArray []GetFirewallProxypolicyInternetServiceCustomInput

func (GetFirewallProxypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceCustomArray) ToGetFirewallProxypolicyInternetServiceCustomArrayOutput() GetFirewallProxypolicyInternetServiceCustomArrayOutput {
	return i.ToGetFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceCustomArray) ToGetFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceCustomArrayOutput)
}

type GetFirewallProxypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceCustomOutput) ToGetFirewallProxypolicyInternetServiceCustomOutput() GetFirewallProxypolicyInternetServiceCustomOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomOutput) ToGetFirewallProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceCustomArrayOutput) ToGetFirewallProxypolicyInternetServiceCustomArrayOutput() GetFirewallProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomArrayOutput) ToGetFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyInternetServiceCustom {
		return vs[0].([]GetFirewallProxypolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetFirewallProxypolicyInternetServiceCustomOutput)
}

type GetFirewallProxypolicyInternetServiceCustomGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyInternetServiceCustomGroupInput is an input type that accepts GetFirewallProxypolicyInternetServiceCustomGroupArgs and GetFirewallProxypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceCustomGroupInput` via:
//
//	GetFirewallProxypolicyInternetServiceCustomGroupArgs{...}
type GetFirewallProxypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceCustomGroupOutput() GetFirewallProxypolicyInternetServiceCustomGroupOutput
	ToGetFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceCustomGroupOutput
}

type GetFirewallProxypolicyInternetServiceCustomGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceCustomGroupArgs) ToGetFirewallProxypolicyInternetServiceCustomGroupOutput() GetFirewallProxypolicyInternetServiceCustomGroupOutput {
	return i.ToGetFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceCustomGroupArgs) ToGetFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceCustomGroupOutput)
}

// GetFirewallProxypolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetFirewallProxypolicyInternetServiceCustomGroupArray and GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetFirewallProxypolicyInternetServiceCustomGroupArray{ GetFirewallProxypolicyInternetServiceCustomGroupArgs{...} }
type GetFirewallProxypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutput() GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput
	ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput
}

type GetFirewallProxypolicyInternetServiceCustomGroupArray []GetFirewallProxypolicyInternetServiceCustomGroupInput

func (GetFirewallProxypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceCustomGroupArray) ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutput() GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceCustomGroupArray) ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput)
}

type GetFirewallProxypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceCustomGroupOutput) ToGetFirewallProxypolicyInternetServiceCustomGroupOutput() GetFirewallProxypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomGroupOutput) ToGetFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomGroupOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutput() GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyInternetServiceCustomGroup {
		return vs[0].([]GetFirewallProxypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetFirewallProxypolicyInternetServiceCustomGroupOutput)
}

type GetFirewallProxypolicyInternetServiceGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyInternetServiceGroupInput is an input type that accepts GetFirewallProxypolicyInternetServiceGroupArgs and GetFirewallProxypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceGroupInput` via:
//
//	GetFirewallProxypolicyInternetServiceGroupArgs{...}
type GetFirewallProxypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceGroupOutput() GetFirewallProxypolicyInternetServiceGroupOutput
	ToGetFirewallProxypolicyInternetServiceGroupOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceGroupOutput
}

type GetFirewallProxypolicyInternetServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceGroupArgs) ToGetFirewallProxypolicyInternetServiceGroupOutput() GetFirewallProxypolicyInternetServiceGroupOutput {
	return i.ToGetFirewallProxypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceGroupArgs) ToGetFirewallProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceGroupOutput)
}

// GetFirewallProxypolicyInternetServiceGroupArrayInput is an input type that accepts GetFirewallProxypolicyInternetServiceGroupArray and GetFirewallProxypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceGroupArrayInput` via:
//
//	GetFirewallProxypolicyInternetServiceGroupArray{ GetFirewallProxypolicyInternetServiceGroupArgs{...} }
type GetFirewallProxypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceGroupArrayOutput() GetFirewallProxypolicyInternetServiceGroupArrayOutput
	ToGetFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceGroupArrayOutput
}

type GetFirewallProxypolicyInternetServiceGroupArray []GetFirewallProxypolicyInternetServiceGroupInput

func (GetFirewallProxypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceGroupArray) ToGetFirewallProxypolicyInternetServiceGroupArrayOutput() GetFirewallProxypolicyInternetServiceGroupArrayOutput {
	return i.ToGetFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceGroupArray) ToGetFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceGroupArrayOutput)
}

type GetFirewallProxypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceGroupOutput) ToGetFirewallProxypolicyInternetServiceGroupOutput() GetFirewallProxypolicyInternetServiceGroupOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceGroupOutput) ToGetFirewallProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceGroupOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceGroupArrayOutput) ToGetFirewallProxypolicyInternetServiceGroupArrayOutput() GetFirewallProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceGroupArrayOutput) ToGetFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyInternetServiceGroup {
		return vs[0].([]GetFirewallProxypolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetFirewallProxypolicyInternetServiceGroupOutput)
}

type GetFirewallProxypolicyInternetServiceId struct {
	// Internet Service ID.
	Id int `pulumi:"id"`
}

// GetFirewallProxypolicyInternetServiceIdInput is an input type that accepts GetFirewallProxypolicyInternetServiceIdArgs and GetFirewallProxypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceIdInput` via:
//
//	GetFirewallProxypolicyInternetServiceIdArgs{...}
type GetFirewallProxypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceIdOutput() GetFirewallProxypolicyInternetServiceIdOutput
	ToGetFirewallProxypolicyInternetServiceIdOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceIdOutput
}

type GetFirewallProxypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallProxypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceIdArgs) ToGetFirewallProxypolicyInternetServiceIdOutput() GetFirewallProxypolicyInternetServiceIdOutput {
	return i.ToGetFirewallProxypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceIdArgs) ToGetFirewallProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceIdOutput)
}

// GetFirewallProxypolicyInternetServiceIdArrayInput is an input type that accepts GetFirewallProxypolicyInternetServiceIdArray and GetFirewallProxypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceIdArrayInput` via:
//
//	GetFirewallProxypolicyInternetServiceIdArray{ GetFirewallProxypolicyInternetServiceIdArgs{...} }
type GetFirewallProxypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceIdArrayOutput() GetFirewallProxypolicyInternetServiceIdArrayOutput
	ToGetFirewallProxypolicyInternetServiceIdArrayOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceIdArrayOutput
}

type GetFirewallProxypolicyInternetServiceIdArray []GetFirewallProxypolicyInternetServiceIdInput

func (GetFirewallProxypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceIdArray) ToGetFirewallProxypolicyInternetServiceIdArrayOutput() GetFirewallProxypolicyInternetServiceIdArrayOutput {
	return i.ToGetFirewallProxypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceIdArray) ToGetFirewallProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceIdArrayOutput)
}

type GetFirewallProxypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceIdOutput) ToGetFirewallProxypolicyInternetServiceIdOutput() GetFirewallProxypolicyInternetServiceIdOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceIdOutput) ToGetFirewallProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o GetFirewallProxypolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallProxypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceIdArrayOutput) ToGetFirewallProxypolicyInternetServiceIdArrayOutput() GetFirewallProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceIdArrayOutput) ToGetFirewallProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyInternetServiceId {
		return vs[0].([]GetFirewallProxypolicyInternetServiceId)[vs[1].(int)]
	}).(GetFirewallProxypolicyInternetServiceIdOutput)
}

type GetFirewallProxypolicyInternetServiceName struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyInternetServiceNameInput is an input type that accepts GetFirewallProxypolicyInternetServiceNameArgs and GetFirewallProxypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceNameInput` via:
//
//	GetFirewallProxypolicyInternetServiceNameArgs{...}
type GetFirewallProxypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceNameOutput() GetFirewallProxypolicyInternetServiceNameOutput
	ToGetFirewallProxypolicyInternetServiceNameOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceNameOutput
}

type GetFirewallProxypolicyInternetServiceNameArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceNameArgs) ToGetFirewallProxypolicyInternetServiceNameOutput() GetFirewallProxypolicyInternetServiceNameOutput {
	return i.ToGetFirewallProxypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceNameArgs) ToGetFirewallProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceNameOutput)
}

// GetFirewallProxypolicyInternetServiceNameArrayInput is an input type that accepts GetFirewallProxypolicyInternetServiceNameArray and GetFirewallProxypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyInternetServiceNameArrayInput` via:
//
//	GetFirewallProxypolicyInternetServiceNameArray{ GetFirewallProxypolicyInternetServiceNameArgs{...} }
type GetFirewallProxypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyInternetServiceNameArrayOutput() GetFirewallProxypolicyInternetServiceNameArrayOutput
	ToGetFirewallProxypolicyInternetServiceNameArrayOutputWithContext(context.Context) GetFirewallProxypolicyInternetServiceNameArrayOutput
}

type GetFirewallProxypolicyInternetServiceNameArray []GetFirewallProxypolicyInternetServiceNameInput

func (GetFirewallProxypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallProxypolicyInternetServiceNameArray) ToGetFirewallProxypolicyInternetServiceNameArrayOutput() GetFirewallProxypolicyInternetServiceNameArrayOutput {
	return i.ToGetFirewallProxypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyInternetServiceNameArray) ToGetFirewallProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyInternetServiceNameArrayOutput)
}

type GetFirewallProxypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceNameOutput) ToGetFirewallProxypolicyInternetServiceNameOutput() GetFirewallProxypolicyInternetServiceNameOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceNameOutput) ToGetFirewallProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceNameOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallProxypolicyInternetServiceNameArrayOutput) ToGetFirewallProxypolicyInternetServiceNameArrayOutput() GetFirewallProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceNameArrayOutput) ToGetFirewallProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallProxypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyInternetServiceName {
		return vs[0].([]GetFirewallProxypolicyInternetServiceName)[vs[1].(int)]
	}).(GetFirewallProxypolicyInternetServiceNameOutput)
}

type GetFirewallProxypolicyPoolname struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyPoolnameInput is an input type that accepts GetFirewallProxypolicyPoolnameArgs and GetFirewallProxypolicyPoolnameOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyPoolnameInput` via:
//
//	GetFirewallProxypolicyPoolnameArgs{...}
type GetFirewallProxypolicyPoolnameInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyPoolnameOutput() GetFirewallProxypolicyPoolnameOutput
	ToGetFirewallProxypolicyPoolnameOutputWithContext(context.Context) GetFirewallProxypolicyPoolnameOutput
}

type GetFirewallProxypolicyPoolnameArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyPoolname)(nil)).Elem()
}

func (i GetFirewallProxypolicyPoolnameArgs) ToGetFirewallProxypolicyPoolnameOutput() GetFirewallProxypolicyPoolnameOutput {
	return i.ToGetFirewallProxypolicyPoolnameOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyPoolnameArgs) ToGetFirewallProxypolicyPoolnameOutputWithContext(ctx context.Context) GetFirewallProxypolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyPoolnameOutput)
}

// GetFirewallProxypolicyPoolnameArrayInput is an input type that accepts GetFirewallProxypolicyPoolnameArray and GetFirewallProxypolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyPoolnameArrayInput` via:
//
//	GetFirewallProxypolicyPoolnameArray{ GetFirewallProxypolicyPoolnameArgs{...} }
type GetFirewallProxypolicyPoolnameArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyPoolnameArrayOutput() GetFirewallProxypolicyPoolnameArrayOutput
	ToGetFirewallProxypolicyPoolnameArrayOutputWithContext(context.Context) GetFirewallProxypolicyPoolnameArrayOutput
}

type GetFirewallProxypolicyPoolnameArray []GetFirewallProxypolicyPoolnameInput

func (GetFirewallProxypolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyPoolname)(nil)).Elem()
}

func (i GetFirewallProxypolicyPoolnameArray) ToGetFirewallProxypolicyPoolnameArrayOutput() GetFirewallProxypolicyPoolnameArrayOutput {
	return i.ToGetFirewallProxypolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyPoolnameArray) ToGetFirewallProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyPoolnameArrayOutput)
}

type GetFirewallProxypolicyPoolnameOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyPoolname)(nil)).Elem()
}

func (o GetFirewallProxypolicyPoolnameOutput) ToGetFirewallProxypolicyPoolnameOutput() GetFirewallProxypolicyPoolnameOutput {
	return o
}

func (o GetFirewallProxypolicyPoolnameOutput) ToGetFirewallProxypolicyPoolnameOutputWithContext(ctx context.Context) GetFirewallProxypolicyPoolnameOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyPoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyPoolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyPoolname)(nil)).Elem()
}

func (o GetFirewallProxypolicyPoolnameArrayOutput) ToGetFirewallProxypolicyPoolnameArrayOutput() GetFirewallProxypolicyPoolnameArrayOutput {
	return o
}

func (o GetFirewallProxypolicyPoolnameArrayOutput) ToGetFirewallProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyPoolnameArrayOutput {
	return o
}

func (o GetFirewallProxypolicyPoolnameArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyPoolname {
		return vs[0].([]GetFirewallProxypolicyPoolname)[vs[1].(int)]
	}).(GetFirewallProxypolicyPoolnameOutput)
}

type GetFirewallProxypolicyService struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyServiceInput is an input type that accepts GetFirewallProxypolicyServiceArgs and GetFirewallProxypolicyServiceOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyServiceInput` via:
//
//	GetFirewallProxypolicyServiceArgs{...}
type GetFirewallProxypolicyServiceInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyServiceOutput() GetFirewallProxypolicyServiceOutput
	ToGetFirewallProxypolicyServiceOutputWithContext(context.Context) GetFirewallProxypolicyServiceOutput
}

type GetFirewallProxypolicyServiceArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyService)(nil)).Elem()
}

func (i GetFirewallProxypolicyServiceArgs) ToGetFirewallProxypolicyServiceOutput() GetFirewallProxypolicyServiceOutput {
	return i.ToGetFirewallProxypolicyServiceOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyServiceArgs) ToGetFirewallProxypolicyServiceOutputWithContext(ctx context.Context) GetFirewallProxypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyServiceOutput)
}

// GetFirewallProxypolicyServiceArrayInput is an input type that accepts GetFirewallProxypolicyServiceArray and GetFirewallProxypolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyServiceArrayInput` via:
//
//	GetFirewallProxypolicyServiceArray{ GetFirewallProxypolicyServiceArgs{...} }
type GetFirewallProxypolicyServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyServiceArrayOutput() GetFirewallProxypolicyServiceArrayOutput
	ToGetFirewallProxypolicyServiceArrayOutputWithContext(context.Context) GetFirewallProxypolicyServiceArrayOutput
}

type GetFirewallProxypolicyServiceArray []GetFirewallProxypolicyServiceInput

func (GetFirewallProxypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyService)(nil)).Elem()
}

func (i GetFirewallProxypolicyServiceArray) ToGetFirewallProxypolicyServiceArrayOutput() GetFirewallProxypolicyServiceArrayOutput {
	return i.ToGetFirewallProxypolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyServiceArray) ToGetFirewallProxypolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyServiceArrayOutput)
}

type GetFirewallProxypolicyServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyService)(nil)).Elem()
}

func (o GetFirewallProxypolicyServiceOutput) ToGetFirewallProxypolicyServiceOutput() GetFirewallProxypolicyServiceOutput {
	return o
}

func (o GetFirewallProxypolicyServiceOutput) ToGetFirewallProxypolicyServiceOutputWithContext(ctx context.Context) GetFirewallProxypolicyServiceOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyService)(nil)).Elem()
}

func (o GetFirewallProxypolicyServiceArrayOutput) ToGetFirewallProxypolicyServiceArrayOutput() GetFirewallProxypolicyServiceArrayOutput {
	return o
}

func (o GetFirewallProxypolicyServiceArrayOutput) ToGetFirewallProxypolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyServiceArrayOutput {
	return o
}

func (o GetFirewallProxypolicyServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyService {
		return vs[0].([]GetFirewallProxypolicyService)[vs[1].(int)]
	}).(GetFirewallProxypolicyServiceOutput)
}

type GetFirewallProxypolicySrcaddr6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicySrcaddr6Input is an input type that accepts GetFirewallProxypolicySrcaddr6Args and GetFirewallProxypolicySrcaddr6Output values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcaddr6Input` via:
//
//	GetFirewallProxypolicySrcaddr6Args{...}
type GetFirewallProxypolicySrcaddr6Input interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcaddr6Output() GetFirewallProxypolicySrcaddr6Output
	ToGetFirewallProxypolicySrcaddr6OutputWithContext(context.Context) GetFirewallProxypolicySrcaddr6Output
}

type GetFirewallProxypolicySrcaddr6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcaddr6Args) ToGetFirewallProxypolicySrcaddr6Output() GetFirewallProxypolicySrcaddr6Output {
	return i.ToGetFirewallProxypolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcaddr6Args) ToGetFirewallProxypolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcaddr6Output)
}

// GetFirewallProxypolicySrcaddr6ArrayInput is an input type that accepts GetFirewallProxypolicySrcaddr6Array and GetFirewallProxypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcaddr6ArrayInput` via:
//
//	GetFirewallProxypolicySrcaddr6Array{ GetFirewallProxypolicySrcaddr6Args{...} }
type GetFirewallProxypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcaddr6ArrayOutput() GetFirewallProxypolicySrcaddr6ArrayOutput
	ToGetFirewallProxypolicySrcaddr6ArrayOutputWithContext(context.Context) GetFirewallProxypolicySrcaddr6ArrayOutput
}

type GetFirewallProxypolicySrcaddr6Array []GetFirewallProxypolicySrcaddr6Input

func (GetFirewallProxypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcaddr6Array) ToGetFirewallProxypolicySrcaddr6ArrayOutput() GetFirewallProxypolicySrcaddr6ArrayOutput {
	return i.ToGetFirewallProxypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcaddr6Array) ToGetFirewallProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcaddr6ArrayOutput)
}

type GetFirewallProxypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcaddr6Output) ToGetFirewallProxypolicySrcaddr6Output() GetFirewallProxypolicySrcaddr6Output {
	return o
}

func (o GetFirewallProxypolicySrcaddr6Output) ToGetFirewallProxypolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddr6Output {
	return o
}

// Group name.
func (o GetFirewallProxypolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcaddr6ArrayOutput) ToGetFirewallProxypolicySrcaddr6ArrayOutput() GetFirewallProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcaddr6ArrayOutput) ToGetFirewallProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicySrcaddr6 {
		return vs[0].([]GetFirewallProxypolicySrcaddr6)[vs[1].(int)]
	}).(GetFirewallProxypolicySrcaddr6Output)
}

type GetFirewallProxypolicySrcaddr struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicySrcaddrInput is an input type that accepts GetFirewallProxypolicySrcaddrArgs and GetFirewallProxypolicySrcaddrOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcaddrInput` via:
//
//	GetFirewallProxypolicySrcaddrArgs{...}
type GetFirewallProxypolicySrcaddrInput interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcaddrOutput() GetFirewallProxypolicySrcaddrOutput
	ToGetFirewallProxypolicySrcaddrOutputWithContext(context.Context) GetFirewallProxypolicySrcaddrOutput
}

type GetFirewallProxypolicySrcaddrArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcaddrArgs) ToGetFirewallProxypolicySrcaddrOutput() GetFirewallProxypolicySrcaddrOutput {
	return i.ToGetFirewallProxypolicySrcaddrOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcaddrArgs) ToGetFirewallProxypolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcaddrOutput)
}

// GetFirewallProxypolicySrcaddrArrayInput is an input type that accepts GetFirewallProxypolicySrcaddrArray and GetFirewallProxypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcaddrArrayInput` via:
//
//	GetFirewallProxypolicySrcaddrArray{ GetFirewallProxypolicySrcaddrArgs{...} }
type GetFirewallProxypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcaddrArrayOutput() GetFirewallProxypolicySrcaddrArrayOutput
	ToGetFirewallProxypolicySrcaddrArrayOutputWithContext(context.Context) GetFirewallProxypolicySrcaddrArrayOutput
}

type GetFirewallProxypolicySrcaddrArray []GetFirewallProxypolicySrcaddrInput

func (GetFirewallProxypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcaddr)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcaddrArray) ToGetFirewallProxypolicySrcaddrArrayOutput() GetFirewallProxypolicySrcaddrArrayOutput {
	return i.ToGetFirewallProxypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcaddrArray) ToGetFirewallProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcaddrArrayOutput)
}

type GetFirewallProxypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcaddrOutput) ToGetFirewallProxypolicySrcaddrOutput() GetFirewallProxypolicySrcaddrOutput {
	return o
}

func (o GetFirewallProxypolicySrcaddrOutput) ToGetFirewallProxypolicySrcaddrOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddrOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcaddr)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcaddrArrayOutput) ToGetFirewallProxypolicySrcaddrArrayOutput() GetFirewallProxypolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcaddrArrayOutput) ToGetFirewallProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcaddrArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicySrcaddr {
		return vs[0].([]GetFirewallProxypolicySrcaddr)[vs[1].(int)]
	}).(GetFirewallProxypolicySrcaddrOutput)
}

type GetFirewallProxypolicySrcintf struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicySrcintfInput is an input type that accepts GetFirewallProxypolicySrcintfArgs and GetFirewallProxypolicySrcintfOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcintfInput` via:
//
//	GetFirewallProxypolicySrcintfArgs{...}
type GetFirewallProxypolicySrcintfInput interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcintfOutput() GetFirewallProxypolicySrcintfOutput
	ToGetFirewallProxypolicySrcintfOutputWithContext(context.Context) GetFirewallProxypolicySrcintfOutput
}

type GetFirewallProxypolicySrcintfArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcintf)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcintfArgs) ToGetFirewallProxypolicySrcintfOutput() GetFirewallProxypolicySrcintfOutput {
	return i.ToGetFirewallProxypolicySrcintfOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcintfArgs) ToGetFirewallProxypolicySrcintfOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcintfOutput)
}

// GetFirewallProxypolicySrcintfArrayInput is an input type that accepts GetFirewallProxypolicySrcintfArray and GetFirewallProxypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicySrcintfArrayInput` via:
//
//	GetFirewallProxypolicySrcintfArray{ GetFirewallProxypolicySrcintfArgs{...} }
type GetFirewallProxypolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicySrcintfArrayOutput() GetFirewallProxypolicySrcintfArrayOutput
	ToGetFirewallProxypolicySrcintfArrayOutputWithContext(context.Context) GetFirewallProxypolicySrcintfArrayOutput
}

type GetFirewallProxypolicySrcintfArray []GetFirewallProxypolicySrcintfInput

func (GetFirewallProxypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcintf)(nil)).Elem()
}

func (i GetFirewallProxypolicySrcintfArray) ToGetFirewallProxypolicySrcintfArrayOutput() GetFirewallProxypolicySrcintfArrayOutput {
	return i.ToGetFirewallProxypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicySrcintfArray) ToGetFirewallProxypolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicySrcintfArrayOutput)
}

type GetFirewallProxypolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicySrcintf)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcintfOutput) ToGetFirewallProxypolicySrcintfOutput() GetFirewallProxypolicySrcintfOutput {
	return o
}

func (o GetFirewallProxypolicySrcintfOutput) ToGetFirewallProxypolicySrcintfOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcintfOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicySrcintf)(nil)).Elem()
}

func (o GetFirewallProxypolicySrcintfArrayOutput) ToGetFirewallProxypolicySrcintfArrayOutput() GetFirewallProxypolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcintfArrayOutput) ToGetFirewallProxypolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallProxypolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicySrcintf {
		return vs[0].([]GetFirewallProxypolicySrcintf)[vs[1].(int)]
	}).(GetFirewallProxypolicySrcintfOutput)
}

type GetFirewallProxypolicyUser struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyUserInput is an input type that accepts GetFirewallProxypolicyUserArgs and GetFirewallProxypolicyUserOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyUserInput` via:
//
//	GetFirewallProxypolicyUserArgs{...}
type GetFirewallProxypolicyUserInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyUserOutput() GetFirewallProxypolicyUserOutput
	ToGetFirewallProxypolicyUserOutputWithContext(context.Context) GetFirewallProxypolicyUserOutput
}

type GetFirewallProxypolicyUserArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyUser)(nil)).Elem()
}

func (i GetFirewallProxypolicyUserArgs) ToGetFirewallProxypolicyUserOutput() GetFirewallProxypolicyUserOutput {
	return i.ToGetFirewallProxypolicyUserOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyUserArgs) ToGetFirewallProxypolicyUserOutputWithContext(ctx context.Context) GetFirewallProxypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyUserOutput)
}

// GetFirewallProxypolicyUserArrayInput is an input type that accepts GetFirewallProxypolicyUserArray and GetFirewallProxypolicyUserArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyUserArrayInput` via:
//
//	GetFirewallProxypolicyUserArray{ GetFirewallProxypolicyUserArgs{...} }
type GetFirewallProxypolicyUserArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyUserArrayOutput() GetFirewallProxypolicyUserArrayOutput
	ToGetFirewallProxypolicyUserArrayOutputWithContext(context.Context) GetFirewallProxypolicyUserArrayOutput
}

type GetFirewallProxypolicyUserArray []GetFirewallProxypolicyUserInput

func (GetFirewallProxypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyUser)(nil)).Elem()
}

func (i GetFirewallProxypolicyUserArray) ToGetFirewallProxypolicyUserArrayOutput() GetFirewallProxypolicyUserArrayOutput {
	return i.ToGetFirewallProxypolicyUserArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyUserArray) ToGetFirewallProxypolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyUserArrayOutput)
}

type GetFirewallProxypolicyUserOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyUser)(nil)).Elem()
}

func (o GetFirewallProxypolicyUserOutput) ToGetFirewallProxypolicyUserOutput() GetFirewallProxypolicyUserOutput {
	return o
}

func (o GetFirewallProxypolicyUserOutput) ToGetFirewallProxypolicyUserOutputWithContext(ctx context.Context) GetFirewallProxypolicyUserOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyUser)(nil)).Elem()
}

func (o GetFirewallProxypolicyUserArrayOutput) ToGetFirewallProxypolicyUserArrayOutput() GetFirewallProxypolicyUserArrayOutput {
	return o
}

func (o GetFirewallProxypolicyUserArrayOutput) ToGetFirewallProxypolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyUserArrayOutput {
	return o
}

func (o GetFirewallProxypolicyUserArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyUser {
		return vs[0].([]GetFirewallProxypolicyUser)[vs[1].(int)]
	}).(GetFirewallProxypolicyUserOutput)
}

type GetFirewallProxypolicyZtnaEmsTag struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetFirewallProxypolicyZtnaEmsTagInput is an input type that accepts GetFirewallProxypolicyZtnaEmsTagArgs and GetFirewallProxypolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyZtnaEmsTagInput` via:
//
//	GetFirewallProxypolicyZtnaEmsTagArgs{...}
type GetFirewallProxypolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyZtnaEmsTagOutput() GetFirewallProxypolicyZtnaEmsTagOutput
	ToGetFirewallProxypolicyZtnaEmsTagOutputWithContext(context.Context) GetFirewallProxypolicyZtnaEmsTagOutput
}

type GetFirewallProxypolicyZtnaEmsTagArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallProxypolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetFirewallProxypolicyZtnaEmsTagArgs) ToGetFirewallProxypolicyZtnaEmsTagOutput() GetFirewallProxypolicyZtnaEmsTagOutput {
	return i.ToGetFirewallProxypolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyZtnaEmsTagArgs) ToGetFirewallProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetFirewallProxypolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyZtnaEmsTagOutput)
}

// GetFirewallProxypolicyZtnaEmsTagArrayInput is an input type that accepts GetFirewallProxypolicyZtnaEmsTagArray and GetFirewallProxypolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `GetFirewallProxypolicyZtnaEmsTagArrayInput` via:
//
//	GetFirewallProxypolicyZtnaEmsTagArray{ GetFirewallProxypolicyZtnaEmsTagArgs{...} }
type GetFirewallProxypolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToGetFirewallProxypolicyZtnaEmsTagArrayOutput() GetFirewallProxypolicyZtnaEmsTagArrayOutput
	ToGetFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(context.Context) GetFirewallProxypolicyZtnaEmsTagArrayOutput
}

type GetFirewallProxypolicyZtnaEmsTagArray []GetFirewallProxypolicyZtnaEmsTagInput

func (GetFirewallProxypolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetFirewallProxypolicyZtnaEmsTagArray) ToGetFirewallProxypolicyZtnaEmsTagArrayOutput() GetFirewallProxypolicyZtnaEmsTagArrayOutput {
	return i.ToGetFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i GetFirewallProxypolicyZtnaEmsTagArray) ToGetFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallProxypolicyZtnaEmsTagArrayOutput)
}

type GetFirewallProxypolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetFirewallProxypolicyZtnaEmsTagOutput) ToGetFirewallProxypolicyZtnaEmsTagOutput() GetFirewallProxypolicyZtnaEmsTagOutput {
	return o
}

func (o GetFirewallProxypolicyZtnaEmsTagOutput) ToGetFirewallProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetFirewallProxypolicyZtnaEmsTagOutput {
	return o
}

// Group name.
func (o GetFirewallProxypolicyZtnaEmsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallProxypolicyZtnaEmsTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallProxypolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallProxypolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetFirewallProxypolicyZtnaEmsTagArrayOutput) ToGetFirewallProxypolicyZtnaEmsTagArrayOutput() GetFirewallProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetFirewallProxypolicyZtnaEmsTagArrayOutput) ToGetFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetFirewallProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetFirewallProxypolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) GetFirewallProxypolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallProxypolicyZtnaEmsTag {
		return vs[0].([]GetFirewallProxypolicyZtnaEmsTag)[vs[1].(int)]
	}).(GetFirewallProxypolicyZtnaEmsTagOutput)
}

type GetFirewallconsolidatedPolicyAppCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallconsolidatedPolicyAppCategoryInput is an input type that accepts GetFirewallconsolidatedPolicyAppCategoryArgs and GetFirewallconsolidatedPolicyAppCategoryOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyAppCategoryInput` via:
//
//	GetFirewallconsolidatedPolicyAppCategoryArgs{...}
type GetFirewallconsolidatedPolicyAppCategoryInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyAppCategoryOutput() GetFirewallconsolidatedPolicyAppCategoryOutput
	ToGetFirewallconsolidatedPolicyAppCategoryOutputWithContext(context.Context) GetFirewallconsolidatedPolicyAppCategoryOutput
}

type GetFirewallconsolidatedPolicyAppCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallconsolidatedPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyAppCategoryArgs) ToGetFirewallconsolidatedPolicyAppCategoryOutput() GetFirewallconsolidatedPolicyAppCategoryOutput {
	return i.ToGetFirewallconsolidatedPolicyAppCategoryOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyAppCategoryArgs) ToGetFirewallconsolidatedPolicyAppCategoryOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyAppCategoryOutput)
}

// GetFirewallconsolidatedPolicyAppCategoryArrayInput is an input type that accepts GetFirewallconsolidatedPolicyAppCategoryArray and GetFirewallconsolidatedPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyAppCategoryArrayInput` via:
//
//	GetFirewallconsolidatedPolicyAppCategoryArray{ GetFirewallconsolidatedPolicyAppCategoryArgs{...} }
type GetFirewallconsolidatedPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyAppCategoryArrayOutput() GetFirewallconsolidatedPolicyAppCategoryArrayOutput
	ToGetFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyAppCategoryArrayOutput
}

type GetFirewallconsolidatedPolicyAppCategoryArray []GetFirewallconsolidatedPolicyAppCategoryInput

func (GetFirewallconsolidatedPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyAppCategoryArray) ToGetFirewallconsolidatedPolicyAppCategoryArrayOutput() GetFirewallconsolidatedPolicyAppCategoryArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyAppCategoryArray) ToGetFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyAppCategoryArrayOutput)
}

type GetFirewallconsolidatedPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyAppCategoryOutput) ToGetFirewallconsolidatedPolicyAppCategoryOutput() GetFirewallconsolidatedPolicyAppCategoryOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppCategoryOutput) ToGetFirewallconsolidatedPolicyAppCategoryOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppCategoryOutput {
	return o
}

// URL category ID.
func (o GetFirewallconsolidatedPolicyAppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyAppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallconsolidatedPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyAppCategoryArrayOutput) ToGetFirewallconsolidatedPolicyAppCategoryArrayOutput() GetFirewallconsolidatedPolicyAppCategoryArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppCategoryArrayOutput) ToGetFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppCategoryArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyAppCategory {
		return vs[0].([]GetFirewallconsolidatedPolicyAppCategory)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyAppCategoryOutput)
}

type GetFirewallconsolidatedPolicyAppGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyAppGroupInput is an input type that accepts GetFirewallconsolidatedPolicyAppGroupArgs and GetFirewallconsolidatedPolicyAppGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyAppGroupInput` via:
//
//	GetFirewallconsolidatedPolicyAppGroupArgs{...}
type GetFirewallconsolidatedPolicyAppGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyAppGroupOutput() GetFirewallconsolidatedPolicyAppGroupOutput
	ToGetFirewallconsolidatedPolicyAppGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyAppGroupOutput
}

type GetFirewallconsolidatedPolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyAppGroupArgs) ToGetFirewallconsolidatedPolicyAppGroupOutput() GetFirewallconsolidatedPolicyAppGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyAppGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyAppGroupArgs) ToGetFirewallconsolidatedPolicyAppGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyAppGroupOutput)
}

// GetFirewallconsolidatedPolicyAppGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyAppGroupArray and GetFirewallconsolidatedPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyAppGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyAppGroupArray{ GetFirewallconsolidatedPolicyAppGroupArgs{...} }
type GetFirewallconsolidatedPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyAppGroupArrayOutput() GetFirewallconsolidatedPolicyAppGroupArrayOutput
	ToGetFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyAppGroupArrayOutput
}

type GetFirewallconsolidatedPolicyAppGroupArray []GetFirewallconsolidatedPolicyAppGroupInput

func (GetFirewallconsolidatedPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyAppGroupArray) ToGetFirewallconsolidatedPolicyAppGroupArrayOutput() GetFirewallconsolidatedPolicyAppGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyAppGroupArray) ToGetFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyAppGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyAppGroupOutput) ToGetFirewallconsolidatedPolicyAppGroupOutput() GetFirewallconsolidatedPolicyAppGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppGroupOutput) ToGetFirewallconsolidatedPolicyAppGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyAppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyAppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyAppGroupArrayOutput) ToGetFirewallconsolidatedPolicyAppGroupArrayOutput() GetFirewallconsolidatedPolicyAppGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppGroupArrayOutput) ToGetFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyAppGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyAppGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyAppGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyAppGroupOutput)
}

type GetFirewallconsolidatedPolicyApplication struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallconsolidatedPolicyApplicationInput is an input type that accepts GetFirewallconsolidatedPolicyApplicationArgs and GetFirewallconsolidatedPolicyApplicationOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyApplicationInput` via:
//
//	GetFirewallconsolidatedPolicyApplicationArgs{...}
type GetFirewallconsolidatedPolicyApplicationInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyApplicationOutput() GetFirewallconsolidatedPolicyApplicationOutput
	ToGetFirewallconsolidatedPolicyApplicationOutputWithContext(context.Context) GetFirewallconsolidatedPolicyApplicationOutput
}

type GetFirewallconsolidatedPolicyApplicationArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallconsolidatedPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyApplicationArgs) ToGetFirewallconsolidatedPolicyApplicationOutput() GetFirewallconsolidatedPolicyApplicationOutput {
	return i.ToGetFirewallconsolidatedPolicyApplicationOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyApplicationArgs) ToGetFirewallconsolidatedPolicyApplicationOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyApplicationOutput)
}

// GetFirewallconsolidatedPolicyApplicationArrayInput is an input type that accepts GetFirewallconsolidatedPolicyApplicationArray and GetFirewallconsolidatedPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyApplicationArrayInput` via:
//
//	GetFirewallconsolidatedPolicyApplicationArray{ GetFirewallconsolidatedPolicyApplicationArgs{...} }
type GetFirewallconsolidatedPolicyApplicationArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyApplicationArrayOutput() GetFirewallconsolidatedPolicyApplicationArrayOutput
	ToGetFirewallconsolidatedPolicyApplicationArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyApplicationArrayOutput
}

type GetFirewallconsolidatedPolicyApplicationArray []GetFirewallconsolidatedPolicyApplicationInput

func (GetFirewallconsolidatedPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyApplicationArray) ToGetFirewallconsolidatedPolicyApplicationArrayOutput() GetFirewallconsolidatedPolicyApplicationArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyApplicationArray) ToGetFirewallconsolidatedPolicyApplicationArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyApplicationArrayOutput)
}

type GetFirewallconsolidatedPolicyApplicationOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyApplicationOutput) ToGetFirewallconsolidatedPolicyApplicationOutput() GetFirewallconsolidatedPolicyApplicationOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyApplicationOutput) ToGetFirewallconsolidatedPolicyApplicationOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyApplicationOutput {
	return o
}

// URL category ID.
func (o GetFirewallconsolidatedPolicyApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyApplication) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallconsolidatedPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyApplicationArrayOutput) ToGetFirewallconsolidatedPolicyApplicationArrayOutput() GetFirewallconsolidatedPolicyApplicationArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyApplicationArrayOutput) ToGetFirewallconsolidatedPolicyApplicationArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyApplicationArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyApplicationArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyApplication {
		return vs[0].([]GetFirewallconsolidatedPolicyApplication)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyApplicationOutput)
}

type GetFirewallconsolidatedPolicyDstaddr4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyDstaddr4Input is an input type that accepts GetFirewallconsolidatedPolicyDstaddr4Args and GetFirewallconsolidatedPolicyDstaddr4Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstaddr4Input` via:
//
//	GetFirewallconsolidatedPolicyDstaddr4Args{...}
type GetFirewallconsolidatedPolicyDstaddr4Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstaddr4Output() GetFirewallconsolidatedPolicyDstaddr4Output
	ToGetFirewallconsolidatedPolicyDstaddr4OutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstaddr4Output
}

type GetFirewallconsolidatedPolicyDstaddr4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstaddr4Args) ToGetFirewallconsolidatedPolicyDstaddr4Output() GetFirewallconsolidatedPolicyDstaddr4Output {
	return i.ToGetFirewallconsolidatedPolicyDstaddr4OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstaddr4Args) ToGetFirewallconsolidatedPolicyDstaddr4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstaddr4Output)
}

// GetFirewallconsolidatedPolicyDstaddr4ArrayInput is an input type that accepts GetFirewallconsolidatedPolicyDstaddr4Array and GetFirewallconsolidatedPolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstaddr4ArrayInput` via:
//
//	GetFirewallconsolidatedPolicyDstaddr4Array{ GetFirewallconsolidatedPolicyDstaddr4Args{...} }
type GetFirewallconsolidatedPolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutput() GetFirewallconsolidatedPolicyDstaddr4ArrayOutput
	ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstaddr4ArrayOutput
}

type GetFirewallconsolidatedPolicyDstaddr4Array []GetFirewallconsolidatedPolicyDstaddr4Input

func (GetFirewallconsolidatedPolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstaddr4Array) ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutput() GetFirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstaddr4Array) ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstaddr4ArrayOutput)
}

type GetFirewallconsolidatedPolicyDstaddr4Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstaddr4Output) ToGetFirewallconsolidatedPolicyDstaddr4Output() GetFirewallconsolidatedPolicyDstaddr4Output {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr4Output) ToGetFirewallconsolidatedPolicyDstaddr4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr4Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyDstaddr4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyDstaddr4) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstaddr4ArrayOutput) ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutput() GetFirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr4ArrayOutput) ToGetFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyDstaddr4 {
		return vs[0].([]GetFirewallconsolidatedPolicyDstaddr4)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyDstaddr4Output)
}

type GetFirewallconsolidatedPolicyDstaddr6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyDstaddr6Input is an input type that accepts GetFirewallconsolidatedPolicyDstaddr6Args and GetFirewallconsolidatedPolicyDstaddr6Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstaddr6Input` via:
//
//	GetFirewallconsolidatedPolicyDstaddr6Args{...}
type GetFirewallconsolidatedPolicyDstaddr6Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstaddr6Output() GetFirewallconsolidatedPolicyDstaddr6Output
	ToGetFirewallconsolidatedPolicyDstaddr6OutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstaddr6Output
}

type GetFirewallconsolidatedPolicyDstaddr6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstaddr6Args) ToGetFirewallconsolidatedPolicyDstaddr6Output() GetFirewallconsolidatedPolicyDstaddr6Output {
	return i.ToGetFirewallconsolidatedPolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstaddr6Args) ToGetFirewallconsolidatedPolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstaddr6Output)
}

// GetFirewallconsolidatedPolicyDstaddr6ArrayInput is an input type that accepts GetFirewallconsolidatedPolicyDstaddr6Array and GetFirewallconsolidatedPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstaddr6ArrayInput` via:
//
//	GetFirewallconsolidatedPolicyDstaddr6Array{ GetFirewallconsolidatedPolicyDstaddr6Args{...} }
type GetFirewallconsolidatedPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutput() GetFirewallconsolidatedPolicyDstaddr6ArrayOutput
	ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstaddr6ArrayOutput
}

type GetFirewallconsolidatedPolicyDstaddr6Array []GetFirewallconsolidatedPolicyDstaddr6Input

func (GetFirewallconsolidatedPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstaddr6Array) ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutput() GetFirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstaddr6Array) ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstaddr6ArrayOutput)
}

type GetFirewallconsolidatedPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstaddr6Output) ToGetFirewallconsolidatedPolicyDstaddr6Output() GetFirewallconsolidatedPolicyDstaddr6Output {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr6Output) ToGetFirewallconsolidatedPolicyDstaddr6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr6Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstaddr6ArrayOutput) ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutput() GetFirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr6ArrayOutput) ToGetFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyDstaddr6 {
		return vs[0].([]GetFirewallconsolidatedPolicyDstaddr6)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyDstaddr6Output)
}

type GetFirewallconsolidatedPolicyDstintf struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyDstintfInput is an input type that accepts GetFirewallconsolidatedPolicyDstintfArgs and GetFirewallconsolidatedPolicyDstintfOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstintfInput` via:
//
//	GetFirewallconsolidatedPolicyDstintfArgs{...}
type GetFirewallconsolidatedPolicyDstintfInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstintfOutput() GetFirewallconsolidatedPolicyDstintfOutput
	ToGetFirewallconsolidatedPolicyDstintfOutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstintfOutput
}

type GetFirewallconsolidatedPolicyDstintfArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstintfArgs) ToGetFirewallconsolidatedPolicyDstintfOutput() GetFirewallconsolidatedPolicyDstintfOutput {
	return i.ToGetFirewallconsolidatedPolicyDstintfOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstintfArgs) ToGetFirewallconsolidatedPolicyDstintfOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstintfOutput)
}

// GetFirewallconsolidatedPolicyDstintfArrayInput is an input type that accepts GetFirewallconsolidatedPolicyDstintfArray and GetFirewallconsolidatedPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyDstintfArrayInput` via:
//
//	GetFirewallconsolidatedPolicyDstintfArray{ GetFirewallconsolidatedPolicyDstintfArgs{...} }
type GetFirewallconsolidatedPolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyDstintfArrayOutput() GetFirewallconsolidatedPolicyDstintfArrayOutput
	ToGetFirewallconsolidatedPolicyDstintfArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyDstintfArrayOutput
}

type GetFirewallconsolidatedPolicyDstintfArray []GetFirewallconsolidatedPolicyDstintfInput

func (GetFirewallconsolidatedPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyDstintfArray) ToGetFirewallconsolidatedPolicyDstintfArrayOutput() GetFirewallconsolidatedPolicyDstintfArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyDstintfArray) ToGetFirewallconsolidatedPolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyDstintfArrayOutput)
}

type GetFirewallconsolidatedPolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstintfOutput) ToGetFirewallconsolidatedPolicyDstintfOutput() GetFirewallconsolidatedPolicyDstintfOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstintfOutput) ToGetFirewallconsolidatedPolicyDstintfOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstintfOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyDstintfArrayOutput) ToGetFirewallconsolidatedPolicyDstintfArrayOutput() GetFirewallconsolidatedPolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstintfArrayOutput) ToGetFirewallconsolidatedPolicyDstintfArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyDstintfArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyDstintf {
		return vs[0].([]GetFirewallconsolidatedPolicyDstintf)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyDstintfOutput)
}

type GetFirewallconsolidatedPolicyFssoGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyFssoGroupInput is an input type that accepts GetFirewallconsolidatedPolicyFssoGroupArgs and GetFirewallconsolidatedPolicyFssoGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyFssoGroupInput` via:
//
//	GetFirewallconsolidatedPolicyFssoGroupArgs{...}
type GetFirewallconsolidatedPolicyFssoGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyFssoGroupOutput() GetFirewallconsolidatedPolicyFssoGroupOutput
	ToGetFirewallconsolidatedPolicyFssoGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyFssoGroupOutput
}

type GetFirewallconsolidatedPolicyFssoGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyFssoGroupArgs) ToGetFirewallconsolidatedPolicyFssoGroupOutput() GetFirewallconsolidatedPolicyFssoGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyFssoGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyFssoGroupArgs) ToGetFirewallconsolidatedPolicyFssoGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyFssoGroupOutput)
}

// GetFirewallconsolidatedPolicyFssoGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyFssoGroupArray and GetFirewallconsolidatedPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyFssoGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyFssoGroupArray{ GetFirewallconsolidatedPolicyFssoGroupArgs{...} }
type GetFirewallconsolidatedPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyFssoGroupArrayOutput() GetFirewallconsolidatedPolicyFssoGroupArrayOutput
	ToGetFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyFssoGroupArrayOutput
}

type GetFirewallconsolidatedPolicyFssoGroupArray []GetFirewallconsolidatedPolicyFssoGroupInput

func (GetFirewallconsolidatedPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyFssoGroupArray) ToGetFirewallconsolidatedPolicyFssoGroupArrayOutput() GetFirewallconsolidatedPolicyFssoGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyFssoGroupArray) ToGetFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyFssoGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyFssoGroupOutput) ToGetFirewallconsolidatedPolicyFssoGroupOutput() GetFirewallconsolidatedPolicyFssoGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyFssoGroupOutput) ToGetFirewallconsolidatedPolicyFssoGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyFssoGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyFssoGroupArrayOutput) ToGetFirewallconsolidatedPolicyFssoGroupArrayOutput() GetFirewallconsolidatedPolicyFssoGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyFssoGroupArrayOutput) ToGetFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyFssoGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyFssoGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyFssoGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyFssoGroupOutput)
}

type GetFirewallconsolidatedPolicyGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyGroupInput is an input type that accepts GetFirewallconsolidatedPolicyGroupArgs and GetFirewallconsolidatedPolicyGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyGroupInput` via:
//
//	GetFirewallconsolidatedPolicyGroupArgs{...}
type GetFirewallconsolidatedPolicyGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyGroupOutput() GetFirewallconsolidatedPolicyGroupOutput
	ToGetFirewallconsolidatedPolicyGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyGroupOutput
}

type GetFirewallconsolidatedPolicyGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyGroupArgs) ToGetFirewallconsolidatedPolicyGroupOutput() GetFirewallconsolidatedPolicyGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyGroupArgs) ToGetFirewallconsolidatedPolicyGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyGroupOutput)
}

// GetFirewallconsolidatedPolicyGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyGroupArray and GetFirewallconsolidatedPolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyGroupArray{ GetFirewallconsolidatedPolicyGroupArgs{...} }
type GetFirewallconsolidatedPolicyGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyGroupArrayOutput() GetFirewallconsolidatedPolicyGroupArrayOutput
	ToGetFirewallconsolidatedPolicyGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyGroupArrayOutput
}

type GetFirewallconsolidatedPolicyGroupArray []GetFirewallconsolidatedPolicyGroupInput

func (GetFirewallconsolidatedPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyGroupArray) ToGetFirewallconsolidatedPolicyGroupArrayOutput() GetFirewallconsolidatedPolicyGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyGroupArray) ToGetFirewallconsolidatedPolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyGroupOutput) ToGetFirewallconsolidatedPolicyGroupOutput() GetFirewallconsolidatedPolicyGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyGroupOutput) ToGetFirewallconsolidatedPolicyGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyGroupArrayOutput) ToGetFirewallconsolidatedPolicyGroupArrayOutput() GetFirewallconsolidatedPolicyGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyGroupArrayOutput) ToGetFirewallconsolidatedPolicyGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyGroupOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustom struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceCustomInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceCustomArgs and GetFirewallconsolidatedPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceCustomInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceCustomArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceCustomOutput() GetFirewallconsolidatedPolicyInternetServiceCustomOutput
	ToGetFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomOutput
}

type GetFirewallconsolidatedPolicyInternetServiceCustomArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomArgs) ToGetFirewallconsolidatedPolicyInternetServiceCustomOutput() GetFirewallconsolidatedPolicyInternetServiceCustomOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomArgs) ToGetFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceCustomOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceCustomArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceCustomArray and GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceCustomArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceCustomArray{ GetFirewallconsolidatedPolicyInternetServiceCustomArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceCustomArray []GetFirewallconsolidatedPolicyInternetServiceCustomInput

func (GetFirewallconsolidatedPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomArray) ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomArray) ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomOutput() GetFirewallconsolidatedPolicyInternetServiceCustomOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceCustom {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceCustomOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustomGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceCustomGroupInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs and GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceCustomGroupInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput
	ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput
}

type GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray and GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray{ GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray []GetFirewallconsolidatedPolicyInternetServiceCustomGroupInput

func (GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceCustomGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceGroupInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceGroupArgs and GetFirewallconsolidatedPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceGroupInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceGroupArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceGroupOutput() GetFirewallconsolidatedPolicyInternetServiceGroupOutput
	ToGetFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupOutput
}

type GetFirewallconsolidatedPolicyInternetServiceGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceGroupOutput() GetFirewallconsolidatedPolicyInternetServiceGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceGroupOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceGroupArray and GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceGroupArray{ GetFirewallconsolidatedPolicyInternetServiceGroupArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceGroupArray []GetFirewallconsolidatedPolicyInternetServiceGroupInput

func (GetFirewallconsolidatedPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceGroupOutput() GetFirewallconsolidatedPolicyInternetServiceGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceGroupOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceId struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallconsolidatedPolicyInternetServiceIdInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceIdArgs and GetFirewallconsolidatedPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceIdInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceIdArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceIdOutput() GetFirewallconsolidatedPolicyInternetServiceIdOutput
	ToGetFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceIdOutput
}

type GetFirewallconsolidatedPolicyInternetServiceIdArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallconsolidatedPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceIdArgs) ToGetFirewallconsolidatedPolicyInternetServiceIdOutput() GetFirewallconsolidatedPolicyInternetServiceIdOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceIdArgs) ToGetFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceIdOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceIdArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceIdArray and GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceIdArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceIdArray{ GetFirewallconsolidatedPolicyInternetServiceIdArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceIdArray []GetFirewallconsolidatedPolicyInternetServiceIdInput

func (GetFirewallconsolidatedPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceIdArray) ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceIdArray) ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceIdOutput) ToGetFirewallconsolidatedPolicyInternetServiceIdOutput() GetFirewallconsolidatedPolicyInternetServiceIdOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceIdOutput) ToGetFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceIdOutput {
	return o
}

// URL category ID.
func (o GetFirewallconsolidatedPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceId {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceId)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceIdOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceName struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceNameInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceNameArgs and GetFirewallconsolidatedPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceNameInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceNameArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceNameOutput() GetFirewallconsolidatedPolicyInternetServiceNameOutput
	ToGetFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceNameOutput
}

type GetFirewallconsolidatedPolicyInternetServiceNameArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceNameArgs) ToGetFirewallconsolidatedPolicyInternetServiceNameOutput() GetFirewallconsolidatedPolicyInternetServiceNameOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceNameArgs) ToGetFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceNameOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceNameArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceNameArray and GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceNameArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceNameArray{ GetFirewallconsolidatedPolicyInternetServiceNameArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceNameArray []GetFirewallconsolidatedPolicyInternetServiceNameInput

func (GetFirewallconsolidatedPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceNameArray) ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceNameArray) ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceNameOutput) ToGetFirewallconsolidatedPolicyInternetServiceNameOutput() GetFirewallconsolidatedPolicyInternetServiceNameOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceNameOutput) ToGetFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceNameOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceName {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceName)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceNameOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustom struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceSrcCustomInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs and GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcCustomInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray and GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray{ GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray []GetFirewallconsolidatedPolicyInternetServiceSrcCustomInput

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceSrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceSrcCustom {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs and GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray and GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray{ GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray []GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceSrcGroupInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs and GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcGroupInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray and GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray{ GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray []GetFirewallconsolidatedPolicyInternetServiceSrcGroupInput

func (GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceSrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceSrcGroup {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcId struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallconsolidatedPolicyInternetServiceSrcIdInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs and GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcIdInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcIdArray and GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcIdArray{ GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcIdArray []GetFirewallconsolidatedPolicyInternetServiceSrcIdInput

func (GetFirewallconsolidatedPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcIdArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcIdArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return o
}

// URL category ID.
func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceSrcId) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceSrcId {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcName struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyInternetServiceSrcNameInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs and GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcNameInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs{...}
type GetFirewallconsolidatedPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput)
}

// GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayInput is an input type that accepts GetFirewallconsolidatedPolicyInternetServiceSrcNameArray and GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayInput` via:
//
//	GetFirewallconsolidatedPolicyInternetServiceSrcNameArray{ GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs{...} }
type GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput
	ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput
}

type GetFirewallconsolidatedPolicyInternetServiceSrcNameArray []GetFirewallconsolidatedPolicyInternetServiceSrcNameInput

func (GetFirewallconsolidatedPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcNameArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyInternetServiceSrcNameArray) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyInternetServiceSrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ToGetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyInternetServiceSrcName {
		return vs[0].([]GetFirewallconsolidatedPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput)
}

type GetFirewallconsolidatedPolicyPoolname4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyPoolname4Input is an input type that accepts GetFirewallconsolidatedPolicyPoolname4Args and GetFirewallconsolidatedPolicyPoolname4Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyPoolname4Input` via:
//
//	GetFirewallconsolidatedPolicyPoolname4Args{...}
type GetFirewallconsolidatedPolicyPoolname4Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyPoolname4Output() GetFirewallconsolidatedPolicyPoolname4Output
	ToGetFirewallconsolidatedPolicyPoolname4OutputWithContext(context.Context) GetFirewallconsolidatedPolicyPoolname4Output
}

type GetFirewallconsolidatedPolicyPoolname4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyPoolname4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyPoolname4Args) ToGetFirewallconsolidatedPolicyPoolname4Output() GetFirewallconsolidatedPolicyPoolname4Output {
	return i.ToGetFirewallconsolidatedPolicyPoolname4OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyPoolname4Args) ToGetFirewallconsolidatedPolicyPoolname4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyPoolname4Output)
}

// GetFirewallconsolidatedPolicyPoolname4ArrayInput is an input type that accepts GetFirewallconsolidatedPolicyPoolname4Array and GetFirewallconsolidatedPolicyPoolname4ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyPoolname4ArrayInput` via:
//
//	GetFirewallconsolidatedPolicyPoolname4Array{ GetFirewallconsolidatedPolicyPoolname4Args{...} }
type GetFirewallconsolidatedPolicyPoolname4ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyPoolname4ArrayOutput() GetFirewallconsolidatedPolicyPoolname4ArrayOutput
	ToGetFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyPoolname4ArrayOutput
}

type GetFirewallconsolidatedPolicyPoolname4Array []GetFirewallconsolidatedPolicyPoolname4Input

func (GetFirewallconsolidatedPolicyPoolname4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyPoolname4Array) ToGetFirewallconsolidatedPolicyPoolname4ArrayOutput() GetFirewallconsolidatedPolicyPoolname4ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyPoolname4Array) ToGetFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyPoolname4ArrayOutput)
}

type GetFirewallconsolidatedPolicyPoolname4Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyPoolname4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyPoolname4Output) ToGetFirewallconsolidatedPolicyPoolname4Output() GetFirewallconsolidatedPolicyPoolname4Output {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname4Output) ToGetFirewallconsolidatedPolicyPoolname4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname4Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyPoolname4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyPoolname4) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyPoolname4ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyPoolname4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyPoolname4ArrayOutput) ToGetFirewallconsolidatedPolicyPoolname4ArrayOutput() GetFirewallconsolidatedPolicyPoolname4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname4ArrayOutput) ToGetFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname4ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyPoolname4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyPoolname4 {
		return vs[0].([]GetFirewallconsolidatedPolicyPoolname4)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyPoolname4Output)
}

type GetFirewallconsolidatedPolicyPoolname6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyPoolname6Input is an input type that accepts GetFirewallconsolidatedPolicyPoolname6Args and GetFirewallconsolidatedPolicyPoolname6Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyPoolname6Input` via:
//
//	GetFirewallconsolidatedPolicyPoolname6Args{...}
type GetFirewallconsolidatedPolicyPoolname6Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyPoolname6Output() GetFirewallconsolidatedPolicyPoolname6Output
	ToGetFirewallconsolidatedPolicyPoolname6OutputWithContext(context.Context) GetFirewallconsolidatedPolicyPoolname6Output
}

type GetFirewallconsolidatedPolicyPoolname6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyPoolname6Args) ToGetFirewallconsolidatedPolicyPoolname6Output() GetFirewallconsolidatedPolicyPoolname6Output {
	return i.ToGetFirewallconsolidatedPolicyPoolname6OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyPoolname6Args) ToGetFirewallconsolidatedPolicyPoolname6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyPoolname6Output)
}

// GetFirewallconsolidatedPolicyPoolname6ArrayInput is an input type that accepts GetFirewallconsolidatedPolicyPoolname6Array and GetFirewallconsolidatedPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyPoolname6ArrayInput` via:
//
//	GetFirewallconsolidatedPolicyPoolname6Array{ GetFirewallconsolidatedPolicyPoolname6Args{...} }
type GetFirewallconsolidatedPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyPoolname6ArrayOutput() GetFirewallconsolidatedPolicyPoolname6ArrayOutput
	ToGetFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyPoolname6ArrayOutput
}

type GetFirewallconsolidatedPolicyPoolname6Array []GetFirewallconsolidatedPolicyPoolname6Input

func (GetFirewallconsolidatedPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyPoolname6Array) ToGetFirewallconsolidatedPolicyPoolname6ArrayOutput() GetFirewallconsolidatedPolicyPoolname6ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyPoolname6Array) ToGetFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyPoolname6ArrayOutput)
}

type GetFirewallconsolidatedPolicyPoolname6Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyPoolname6Output) ToGetFirewallconsolidatedPolicyPoolname6Output() GetFirewallconsolidatedPolicyPoolname6Output {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname6Output) ToGetFirewallconsolidatedPolicyPoolname6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname6Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyPoolname6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyPoolname6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyPoolname6ArrayOutput) ToGetFirewallconsolidatedPolicyPoolname6ArrayOutput() GetFirewallconsolidatedPolicyPoolname6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname6ArrayOutput) ToGetFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyPoolname6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyPoolname6 {
		return vs[0].([]GetFirewallconsolidatedPolicyPoolname6)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyPoolname6Output)
}

type GetFirewallconsolidatedPolicyService struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyServiceInput is an input type that accepts GetFirewallconsolidatedPolicyServiceArgs and GetFirewallconsolidatedPolicyServiceOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyServiceInput` via:
//
//	GetFirewallconsolidatedPolicyServiceArgs{...}
type GetFirewallconsolidatedPolicyServiceInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyServiceOutput() GetFirewallconsolidatedPolicyServiceOutput
	ToGetFirewallconsolidatedPolicyServiceOutputWithContext(context.Context) GetFirewallconsolidatedPolicyServiceOutput
}

type GetFirewallconsolidatedPolicyServiceArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyService)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyServiceArgs) ToGetFirewallconsolidatedPolicyServiceOutput() GetFirewallconsolidatedPolicyServiceOutput {
	return i.ToGetFirewallconsolidatedPolicyServiceOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyServiceArgs) ToGetFirewallconsolidatedPolicyServiceOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyServiceOutput)
}

// GetFirewallconsolidatedPolicyServiceArrayInput is an input type that accepts GetFirewallconsolidatedPolicyServiceArray and GetFirewallconsolidatedPolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyServiceArrayInput` via:
//
//	GetFirewallconsolidatedPolicyServiceArray{ GetFirewallconsolidatedPolicyServiceArgs{...} }
type GetFirewallconsolidatedPolicyServiceArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyServiceArrayOutput() GetFirewallconsolidatedPolicyServiceArrayOutput
	ToGetFirewallconsolidatedPolicyServiceArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyServiceArrayOutput
}

type GetFirewallconsolidatedPolicyServiceArray []GetFirewallconsolidatedPolicyServiceInput

func (GetFirewallconsolidatedPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyService)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyServiceArray) ToGetFirewallconsolidatedPolicyServiceArrayOutput() GetFirewallconsolidatedPolicyServiceArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyServiceArray) ToGetFirewallconsolidatedPolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyServiceArrayOutput)
}

type GetFirewallconsolidatedPolicyServiceOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyService)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyServiceOutput) ToGetFirewallconsolidatedPolicyServiceOutput() GetFirewallconsolidatedPolicyServiceOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyServiceOutput) ToGetFirewallconsolidatedPolicyServiceOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyServiceOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyService)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyServiceArrayOutput) ToGetFirewallconsolidatedPolicyServiceArrayOutput() GetFirewallconsolidatedPolicyServiceArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyServiceArrayOutput) ToGetFirewallconsolidatedPolicyServiceArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyServiceArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyServiceArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyService {
		return vs[0].([]GetFirewallconsolidatedPolicyService)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyServiceOutput)
}

type GetFirewallconsolidatedPolicySrcaddr4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicySrcaddr4Input is an input type that accepts GetFirewallconsolidatedPolicySrcaddr4Args and GetFirewallconsolidatedPolicySrcaddr4Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcaddr4Input` via:
//
//	GetFirewallconsolidatedPolicySrcaddr4Args{...}
type GetFirewallconsolidatedPolicySrcaddr4Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcaddr4Output() GetFirewallconsolidatedPolicySrcaddr4Output
	ToGetFirewallconsolidatedPolicySrcaddr4OutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcaddr4Output
}

type GetFirewallconsolidatedPolicySrcaddr4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcaddr4Args) ToGetFirewallconsolidatedPolicySrcaddr4Output() GetFirewallconsolidatedPolicySrcaddr4Output {
	return i.ToGetFirewallconsolidatedPolicySrcaddr4OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcaddr4Args) ToGetFirewallconsolidatedPolicySrcaddr4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcaddr4Output)
}

// GetFirewallconsolidatedPolicySrcaddr4ArrayInput is an input type that accepts GetFirewallconsolidatedPolicySrcaddr4Array and GetFirewallconsolidatedPolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcaddr4ArrayInput` via:
//
//	GetFirewallconsolidatedPolicySrcaddr4Array{ GetFirewallconsolidatedPolicySrcaddr4Args{...} }
type GetFirewallconsolidatedPolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutput() GetFirewallconsolidatedPolicySrcaddr4ArrayOutput
	ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcaddr4ArrayOutput
}

type GetFirewallconsolidatedPolicySrcaddr4Array []GetFirewallconsolidatedPolicySrcaddr4Input

func (GetFirewallconsolidatedPolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcaddr4Array) ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutput() GetFirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcaddr4Array) ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcaddr4ArrayOutput)
}

type GetFirewallconsolidatedPolicySrcaddr4Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcaddr4Output) ToGetFirewallconsolidatedPolicySrcaddr4Output() GetFirewallconsolidatedPolicySrcaddr4Output {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr4Output) ToGetFirewallconsolidatedPolicySrcaddr4OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr4Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicySrcaddr4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicySrcaddr4) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcaddr4ArrayOutput) ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutput() GetFirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr4ArrayOutput) ToGetFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicySrcaddr4 {
		return vs[0].([]GetFirewallconsolidatedPolicySrcaddr4)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicySrcaddr4Output)
}

type GetFirewallconsolidatedPolicySrcaddr6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicySrcaddr6Input is an input type that accepts GetFirewallconsolidatedPolicySrcaddr6Args and GetFirewallconsolidatedPolicySrcaddr6Output values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcaddr6Input` via:
//
//	GetFirewallconsolidatedPolicySrcaddr6Args{...}
type GetFirewallconsolidatedPolicySrcaddr6Input interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcaddr6Output() GetFirewallconsolidatedPolicySrcaddr6Output
	ToGetFirewallconsolidatedPolicySrcaddr6OutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcaddr6Output
}

type GetFirewallconsolidatedPolicySrcaddr6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcaddr6Args) ToGetFirewallconsolidatedPolicySrcaddr6Output() GetFirewallconsolidatedPolicySrcaddr6Output {
	return i.ToGetFirewallconsolidatedPolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcaddr6Args) ToGetFirewallconsolidatedPolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcaddr6Output)
}

// GetFirewallconsolidatedPolicySrcaddr6ArrayInput is an input type that accepts GetFirewallconsolidatedPolicySrcaddr6Array and GetFirewallconsolidatedPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcaddr6ArrayInput` via:
//
//	GetFirewallconsolidatedPolicySrcaddr6Array{ GetFirewallconsolidatedPolicySrcaddr6Args{...} }
type GetFirewallconsolidatedPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutput() GetFirewallconsolidatedPolicySrcaddr6ArrayOutput
	ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcaddr6ArrayOutput
}

type GetFirewallconsolidatedPolicySrcaddr6Array []GetFirewallconsolidatedPolicySrcaddr6Input

func (GetFirewallconsolidatedPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcaddr6Array) ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutput() GetFirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return i.ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcaddr6Array) ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcaddr6ArrayOutput)
}

type GetFirewallconsolidatedPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcaddr6Output) ToGetFirewallconsolidatedPolicySrcaddr6Output() GetFirewallconsolidatedPolicySrcaddr6Output {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr6Output) ToGetFirewallconsolidatedPolicySrcaddr6OutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr6Output {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcaddr6ArrayOutput) ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutput() GetFirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr6ArrayOutput) ToGetFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicySrcaddr6 {
		return vs[0].([]GetFirewallconsolidatedPolicySrcaddr6)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicySrcaddr6Output)
}

type GetFirewallconsolidatedPolicySrcintf struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicySrcintfInput is an input type that accepts GetFirewallconsolidatedPolicySrcintfArgs and GetFirewallconsolidatedPolicySrcintfOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcintfInput` via:
//
//	GetFirewallconsolidatedPolicySrcintfArgs{...}
type GetFirewallconsolidatedPolicySrcintfInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcintfOutput() GetFirewallconsolidatedPolicySrcintfOutput
	ToGetFirewallconsolidatedPolicySrcintfOutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcintfOutput
}

type GetFirewallconsolidatedPolicySrcintfArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcintfArgs) ToGetFirewallconsolidatedPolicySrcintfOutput() GetFirewallconsolidatedPolicySrcintfOutput {
	return i.ToGetFirewallconsolidatedPolicySrcintfOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcintfArgs) ToGetFirewallconsolidatedPolicySrcintfOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcintfOutput)
}

// GetFirewallconsolidatedPolicySrcintfArrayInput is an input type that accepts GetFirewallconsolidatedPolicySrcintfArray and GetFirewallconsolidatedPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicySrcintfArrayInput` via:
//
//	GetFirewallconsolidatedPolicySrcintfArray{ GetFirewallconsolidatedPolicySrcintfArgs{...} }
type GetFirewallconsolidatedPolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicySrcintfArrayOutput() GetFirewallconsolidatedPolicySrcintfArrayOutput
	ToGetFirewallconsolidatedPolicySrcintfArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicySrcintfArrayOutput
}

type GetFirewallconsolidatedPolicySrcintfArray []GetFirewallconsolidatedPolicySrcintfInput

func (GetFirewallconsolidatedPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicySrcintfArray) ToGetFirewallconsolidatedPolicySrcintfArrayOutput() GetFirewallconsolidatedPolicySrcintfArrayOutput {
	return i.ToGetFirewallconsolidatedPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicySrcintfArray) ToGetFirewallconsolidatedPolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicySrcintfArrayOutput)
}

type GetFirewallconsolidatedPolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcintfOutput) ToGetFirewallconsolidatedPolicySrcintfOutput() GetFirewallconsolidatedPolicySrcintfOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcintfOutput) ToGetFirewallconsolidatedPolicySrcintfOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcintfOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicySrcintfArrayOutput) ToGetFirewallconsolidatedPolicySrcintfArrayOutput() GetFirewallconsolidatedPolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcintfArrayOutput) ToGetFirewallconsolidatedPolicySrcintfArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicySrcintfArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicySrcintf {
		return vs[0].([]GetFirewallconsolidatedPolicySrcintf)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicySrcintfOutput)
}

type GetFirewallconsolidatedPolicyUrlCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetFirewallconsolidatedPolicyUrlCategoryInput is an input type that accepts GetFirewallconsolidatedPolicyUrlCategoryArgs and GetFirewallconsolidatedPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyUrlCategoryInput` via:
//
//	GetFirewallconsolidatedPolicyUrlCategoryArgs{...}
type GetFirewallconsolidatedPolicyUrlCategoryInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyUrlCategoryOutput() GetFirewallconsolidatedPolicyUrlCategoryOutput
	ToGetFirewallconsolidatedPolicyUrlCategoryOutputWithContext(context.Context) GetFirewallconsolidatedPolicyUrlCategoryOutput
}

type GetFirewallconsolidatedPolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallconsolidatedPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyUrlCategoryArgs) ToGetFirewallconsolidatedPolicyUrlCategoryOutput() GetFirewallconsolidatedPolicyUrlCategoryOutput {
	return i.ToGetFirewallconsolidatedPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyUrlCategoryArgs) ToGetFirewallconsolidatedPolicyUrlCategoryOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyUrlCategoryOutput)
}

// GetFirewallconsolidatedPolicyUrlCategoryArrayInput is an input type that accepts GetFirewallconsolidatedPolicyUrlCategoryArray and GetFirewallconsolidatedPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyUrlCategoryArrayInput` via:
//
//	GetFirewallconsolidatedPolicyUrlCategoryArray{ GetFirewallconsolidatedPolicyUrlCategoryArgs{...} }
type GetFirewallconsolidatedPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutput() GetFirewallconsolidatedPolicyUrlCategoryArrayOutput
	ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyUrlCategoryArrayOutput
}

type GetFirewallconsolidatedPolicyUrlCategoryArray []GetFirewallconsolidatedPolicyUrlCategoryInput

func (GetFirewallconsolidatedPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyUrlCategoryArray) ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutput() GetFirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyUrlCategoryArray) ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyUrlCategoryArrayOutput)
}

type GetFirewallconsolidatedPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyUrlCategoryOutput) ToGetFirewallconsolidatedPolicyUrlCategoryOutput() GetFirewallconsolidatedPolicyUrlCategoryOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUrlCategoryOutput) ToGetFirewallconsolidatedPolicyUrlCategoryOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o GetFirewallconsolidatedPolicyUrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyUrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallconsolidatedPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyUrlCategoryArrayOutput) ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutput() GetFirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUrlCategoryArrayOutput) ToGetFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyUrlCategory {
		return vs[0].([]GetFirewallconsolidatedPolicyUrlCategory)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyUrlCategoryOutput)
}

type GetFirewallconsolidatedPolicyUser struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetFirewallconsolidatedPolicyUserInput is an input type that accepts GetFirewallconsolidatedPolicyUserArgs and GetFirewallconsolidatedPolicyUserOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyUserInput` via:
//
//	GetFirewallconsolidatedPolicyUserArgs{...}
type GetFirewallconsolidatedPolicyUserInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyUserOutput() GetFirewallconsolidatedPolicyUserOutput
	ToGetFirewallconsolidatedPolicyUserOutputWithContext(context.Context) GetFirewallconsolidatedPolicyUserOutput
}

type GetFirewallconsolidatedPolicyUserArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallconsolidatedPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyUserArgs) ToGetFirewallconsolidatedPolicyUserOutput() GetFirewallconsolidatedPolicyUserOutput {
	return i.ToGetFirewallconsolidatedPolicyUserOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyUserArgs) ToGetFirewallconsolidatedPolicyUserOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyUserOutput)
}

// GetFirewallconsolidatedPolicyUserArrayInput is an input type that accepts GetFirewallconsolidatedPolicyUserArray and GetFirewallconsolidatedPolicyUserArrayOutput values.
// You can construct a concrete instance of `GetFirewallconsolidatedPolicyUserArrayInput` via:
//
//	GetFirewallconsolidatedPolicyUserArray{ GetFirewallconsolidatedPolicyUserArgs{...} }
type GetFirewallconsolidatedPolicyUserArrayInput interface {
	pulumi.Input

	ToGetFirewallconsolidatedPolicyUserArrayOutput() GetFirewallconsolidatedPolicyUserArrayOutput
	ToGetFirewallconsolidatedPolicyUserArrayOutputWithContext(context.Context) GetFirewallconsolidatedPolicyUserArrayOutput
}

type GetFirewallconsolidatedPolicyUserArray []GetFirewallconsolidatedPolicyUserInput

func (GetFirewallconsolidatedPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (i GetFirewallconsolidatedPolicyUserArray) ToGetFirewallconsolidatedPolicyUserArrayOutput() GetFirewallconsolidatedPolicyUserArrayOutput {
	return i.ToGetFirewallconsolidatedPolicyUserArrayOutputWithContext(context.Background())
}

func (i GetFirewallconsolidatedPolicyUserArray) ToGetFirewallconsolidatedPolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallconsolidatedPolicyUserArrayOutput)
}

type GetFirewallconsolidatedPolicyUserOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyUserOutput) ToGetFirewallconsolidatedPolicyUserOutput() GetFirewallconsolidatedPolicyUserOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUserOutput) ToGetFirewallconsolidatedPolicyUserOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUserOutput {
	return o
}

// Application group names.
func (o GetFirewallconsolidatedPolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallconsolidatedPolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallconsolidatedPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallconsolidatedPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (o GetFirewallconsolidatedPolicyUserArrayOutput) ToGetFirewallconsolidatedPolicyUserArrayOutput() GetFirewallconsolidatedPolicyUserArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUserArrayOutput) ToGetFirewallconsolidatedPolicyUserArrayOutputWithContext(ctx context.Context) GetFirewallconsolidatedPolicyUserArrayOutput {
	return o
}

func (o GetFirewallconsolidatedPolicyUserArrayOutput) Index(i pulumi.IntInput) GetFirewallconsolidatedPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallconsolidatedPolicyUser {
		return vs[0].([]GetFirewallconsolidatedPolicyUser)[vs[1].(int)]
	}).(GetFirewallconsolidatedPolicyUserOutput)
}

type GetFirewallscheduleGroupMember struct {
	// Specify the name of the desired firewallschedule group.
	Name string `pulumi:"name"`
}

// GetFirewallscheduleGroupMemberInput is an input type that accepts GetFirewallscheduleGroupMemberArgs and GetFirewallscheduleGroupMemberOutput values.
// You can construct a concrete instance of `GetFirewallscheduleGroupMemberInput` via:
//
//	GetFirewallscheduleGroupMemberArgs{...}
type GetFirewallscheduleGroupMemberInput interface {
	pulumi.Input

	ToGetFirewallscheduleGroupMemberOutput() GetFirewallscheduleGroupMemberOutput
	ToGetFirewallscheduleGroupMemberOutputWithContext(context.Context) GetFirewallscheduleGroupMemberOutput
}

type GetFirewallscheduleGroupMemberArgs struct {
	// Specify the name of the desired firewallschedule group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallscheduleGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallscheduleGroupMember)(nil)).Elem()
}

func (i GetFirewallscheduleGroupMemberArgs) ToGetFirewallscheduleGroupMemberOutput() GetFirewallscheduleGroupMemberOutput {
	return i.ToGetFirewallscheduleGroupMemberOutputWithContext(context.Background())
}

func (i GetFirewallscheduleGroupMemberArgs) ToGetFirewallscheduleGroupMemberOutputWithContext(ctx context.Context) GetFirewallscheduleGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallscheduleGroupMemberOutput)
}

// GetFirewallscheduleGroupMemberArrayInput is an input type that accepts GetFirewallscheduleGroupMemberArray and GetFirewallscheduleGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallscheduleGroupMemberArrayInput` via:
//
//	GetFirewallscheduleGroupMemberArray{ GetFirewallscheduleGroupMemberArgs{...} }
type GetFirewallscheduleGroupMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallscheduleGroupMemberArrayOutput() GetFirewallscheduleGroupMemberArrayOutput
	ToGetFirewallscheduleGroupMemberArrayOutputWithContext(context.Context) GetFirewallscheduleGroupMemberArrayOutput
}

type GetFirewallscheduleGroupMemberArray []GetFirewallscheduleGroupMemberInput

func (GetFirewallscheduleGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallscheduleGroupMember)(nil)).Elem()
}

func (i GetFirewallscheduleGroupMemberArray) ToGetFirewallscheduleGroupMemberArrayOutput() GetFirewallscheduleGroupMemberArrayOutput {
	return i.ToGetFirewallscheduleGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallscheduleGroupMemberArray) ToGetFirewallscheduleGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallscheduleGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallscheduleGroupMemberArrayOutput)
}

type GetFirewallscheduleGroupMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallscheduleGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallscheduleGroupMember)(nil)).Elem()
}

func (o GetFirewallscheduleGroupMemberOutput) ToGetFirewallscheduleGroupMemberOutput() GetFirewallscheduleGroupMemberOutput {
	return o
}

func (o GetFirewallscheduleGroupMemberOutput) ToGetFirewallscheduleGroupMemberOutputWithContext(ctx context.Context) GetFirewallscheduleGroupMemberOutput {
	return o
}

// Specify the name of the desired firewallschedule group.
func (o GetFirewallscheduleGroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallscheduleGroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallscheduleGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallscheduleGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallscheduleGroupMember)(nil)).Elem()
}

func (o GetFirewallscheduleGroupMemberArrayOutput) ToGetFirewallscheduleGroupMemberArrayOutput() GetFirewallscheduleGroupMemberArrayOutput {
	return o
}

func (o GetFirewallscheduleGroupMemberArrayOutput) ToGetFirewallscheduleGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallscheduleGroupMemberArrayOutput {
	return o
}

func (o GetFirewallscheduleGroupMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallscheduleGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallscheduleGroupMember {
		return vs[0].([]GetFirewallscheduleGroupMember)[vs[1].(int)]
	}).(GetFirewallscheduleGroupMemberOutput)
}

type GetFirewallserviceCustomAppCategory struct {
	// Application id.
	Id int `pulumi:"id"`
}

// GetFirewallserviceCustomAppCategoryInput is an input type that accepts GetFirewallserviceCustomAppCategoryArgs and GetFirewallserviceCustomAppCategoryOutput values.
// You can construct a concrete instance of `GetFirewallserviceCustomAppCategoryInput` via:
//
//	GetFirewallserviceCustomAppCategoryArgs{...}
type GetFirewallserviceCustomAppCategoryInput interface {
	pulumi.Input

	ToGetFirewallserviceCustomAppCategoryOutput() GetFirewallserviceCustomAppCategoryOutput
	ToGetFirewallserviceCustomAppCategoryOutputWithContext(context.Context) GetFirewallserviceCustomAppCategoryOutput
}

type GetFirewallserviceCustomAppCategoryArgs struct {
	// Application id.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallserviceCustomAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceCustomAppCategory)(nil)).Elem()
}

func (i GetFirewallserviceCustomAppCategoryArgs) ToGetFirewallserviceCustomAppCategoryOutput() GetFirewallserviceCustomAppCategoryOutput {
	return i.ToGetFirewallserviceCustomAppCategoryOutputWithContext(context.Background())
}

func (i GetFirewallserviceCustomAppCategoryArgs) ToGetFirewallserviceCustomAppCategoryOutputWithContext(ctx context.Context) GetFirewallserviceCustomAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceCustomAppCategoryOutput)
}

// GetFirewallserviceCustomAppCategoryArrayInput is an input type that accepts GetFirewallserviceCustomAppCategoryArray and GetFirewallserviceCustomAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetFirewallserviceCustomAppCategoryArrayInput` via:
//
//	GetFirewallserviceCustomAppCategoryArray{ GetFirewallserviceCustomAppCategoryArgs{...} }
type GetFirewallserviceCustomAppCategoryArrayInput interface {
	pulumi.Input

	ToGetFirewallserviceCustomAppCategoryArrayOutput() GetFirewallserviceCustomAppCategoryArrayOutput
	ToGetFirewallserviceCustomAppCategoryArrayOutputWithContext(context.Context) GetFirewallserviceCustomAppCategoryArrayOutput
}

type GetFirewallserviceCustomAppCategoryArray []GetFirewallserviceCustomAppCategoryInput

func (GetFirewallserviceCustomAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceCustomAppCategory)(nil)).Elem()
}

func (i GetFirewallserviceCustomAppCategoryArray) ToGetFirewallserviceCustomAppCategoryArrayOutput() GetFirewallserviceCustomAppCategoryArrayOutput {
	return i.ToGetFirewallserviceCustomAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetFirewallserviceCustomAppCategoryArray) ToGetFirewallserviceCustomAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallserviceCustomAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceCustomAppCategoryArrayOutput)
}

type GetFirewallserviceCustomAppCategoryOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceCustomAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceCustomAppCategory)(nil)).Elem()
}

func (o GetFirewallserviceCustomAppCategoryOutput) ToGetFirewallserviceCustomAppCategoryOutput() GetFirewallserviceCustomAppCategoryOutput {
	return o
}

func (o GetFirewallserviceCustomAppCategoryOutput) ToGetFirewallserviceCustomAppCategoryOutputWithContext(ctx context.Context) GetFirewallserviceCustomAppCategoryOutput {
	return o
}

// Application id.
func (o GetFirewallserviceCustomAppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallserviceCustomAppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallserviceCustomAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceCustomAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceCustomAppCategory)(nil)).Elem()
}

func (o GetFirewallserviceCustomAppCategoryArrayOutput) ToGetFirewallserviceCustomAppCategoryArrayOutput() GetFirewallserviceCustomAppCategoryArrayOutput {
	return o
}

func (o GetFirewallserviceCustomAppCategoryArrayOutput) ToGetFirewallserviceCustomAppCategoryArrayOutputWithContext(ctx context.Context) GetFirewallserviceCustomAppCategoryArrayOutput {
	return o
}

func (o GetFirewallserviceCustomAppCategoryArrayOutput) Index(i pulumi.IntInput) GetFirewallserviceCustomAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallserviceCustomAppCategory {
		return vs[0].([]GetFirewallserviceCustomAppCategory)[vs[1].(int)]
	}).(GetFirewallserviceCustomAppCategoryOutput)
}

type GetFirewallserviceCustomApplication struct {
	// Application id.
	Id int `pulumi:"id"`
}

// GetFirewallserviceCustomApplicationInput is an input type that accepts GetFirewallserviceCustomApplicationArgs and GetFirewallserviceCustomApplicationOutput values.
// You can construct a concrete instance of `GetFirewallserviceCustomApplicationInput` via:
//
//	GetFirewallserviceCustomApplicationArgs{...}
type GetFirewallserviceCustomApplicationInput interface {
	pulumi.Input

	ToGetFirewallserviceCustomApplicationOutput() GetFirewallserviceCustomApplicationOutput
	ToGetFirewallserviceCustomApplicationOutputWithContext(context.Context) GetFirewallserviceCustomApplicationOutput
}

type GetFirewallserviceCustomApplicationArgs struct {
	// Application id.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetFirewallserviceCustomApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceCustomApplication)(nil)).Elem()
}

func (i GetFirewallserviceCustomApplicationArgs) ToGetFirewallserviceCustomApplicationOutput() GetFirewallserviceCustomApplicationOutput {
	return i.ToGetFirewallserviceCustomApplicationOutputWithContext(context.Background())
}

func (i GetFirewallserviceCustomApplicationArgs) ToGetFirewallserviceCustomApplicationOutputWithContext(ctx context.Context) GetFirewallserviceCustomApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceCustomApplicationOutput)
}

// GetFirewallserviceCustomApplicationArrayInput is an input type that accepts GetFirewallserviceCustomApplicationArray and GetFirewallserviceCustomApplicationArrayOutput values.
// You can construct a concrete instance of `GetFirewallserviceCustomApplicationArrayInput` via:
//
//	GetFirewallserviceCustomApplicationArray{ GetFirewallserviceCustomApplicationArgs{...} }
type GetFirewallserviceCustomApplicationArrayInput interface {
	pulumi.Input

	ToGetFirewallserviceCustomApplicationArrayOutput() GetFirewallserviceCustomApplicationArrayOutput
	ToGetFirewallserviceCustomApplicationArrayOutputWithContext(context.Context) GetFirewallserviceCustomApplicationArrayOutput
}

type GetFirewallserviceCustomApplicationArray []GetFirewallserviceCustomApplicationInput

func (GetFirewallserviceCustomApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceCustomApplication)(nil)).Elem()
}

func (i GetFirewallserviceCustomApplicationArray) ToGetFirewallserviceCustomApplicationArrayOutput() GetFirewallserviceCustomApplicationArrayOutput {
	return i.ToGetFirewallserviceCustomApplicationArrayOutputWithContext(context.Background())
}

func (i GetFirewallserviceCustomApplicationArray) ToGetFirewallserviceCustomApplicationArrayOutputWithContext(ctx context.Context) GetFirewallserviceCustomApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceCustomApplicationArrayOutput)
}

type GetFirewallserviceCustomApplicationOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceCustomApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceCustomApplication)(nil)).Elem()
}

func (o GetFirewallserviceCustomApplicationOutput) ToGetFirewallserviceCustomApplicationOutput() GetFirewallserviceCustomApplicationOutput {
	return o
}

func (o GetFirewallserviceCustomApplicationOutput) ToGetFirewallserviceCustomApplicationOutputWithContext(ctx context.Context) GetFirewallserviceCustomApplicationOutput {
	return o
}

// Application id.
func (o GetFirewallserviceCustomApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallserviceCustomApplication) int { return v.Id }).(pulumi.IntOutput)
}

type GetFirewallserviceCustomApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceCustomApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceCustomApplication)(nil)).Elem()
}

func (o GetFirewallserviceCustomApplicationArrayOutput) ToGetFirewallserviceCustomApplicationArrayOutput() GetFirewallserviceCustomApplicationArrayOutput {
	return o
}

func (o GetFirewallserviceCustomApplicationArrayOutput) ToGetFirewallserviceCustomApplicationArrayOutputWithContext(ctx context.Context) GetFirewallserviceCustomApplicationArrayOutput {
	return o
}

func (o GetFirewallserviceCustomApplicationArrayOutput) Index(i pulumi.IntInput) GetFirewallserviceCustomApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallserviceCustomApplication {
		return vs[0].([]GetFirewallserviceCustomApplication)[vs[1].(int)]
	}).(GetFirewallserviceCustomApplicationOutput)
}

type GetFirewallserviceGroupMember struct {
	// Specify the name of the desired firewallservice group.
	Name string `pulumi:"name"`
}

// GetFirewallserviceGroupMemberInput is an input type that accepts GetFirewallserviceGroupMemberArgs and GetFirewallserviceGroupMemberOutput values.
// You can construct a concrete instance of `GetFirewallserviceGroupMemberInput` via:
//
//	GetFirewallserviceGroupMemberArgs{...}
type GetFirewallserviceGroupMemberInput interface {
	pulumi.Input

	ToGetFirewallserviceGroupMemberOutput() GetFirewallserviceGroupMemberOutput
	ToGetFirewallserviceGroupMemberOutputWithContext(context.Context) GetFirewallserviceGroupMemberOutput
}

type GetFirewallserviceGroupMemberArgs struct {
	// Specify the name of the desired firewallservice group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallserviceGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceGroupMember)(nil)).Elem()
}

func (i GetFirewallserviceGroupMemberArgs) ToGetFirewallserviceGroupMemberOutput() GetFirewallserviceGroupMemberOutput {
	return i.ToGetFirewallserviceGroupMemberOutputWithContext(context.Background())
}

func (i GetFirewallserviceGroupMemberArgs) ToGetFirewallserviceGroupMemberOutputWithContext(ctx context.Context) GetFirewallserviceGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceGroupMemberOutput)
}

// GetFirewallserviceGroupMemberArrayInput is an input type that accepts GetFirewallserviceGroupMemberArray and GetFirewallserviceGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallserviceGroupMemberArrayInput` via:
//
//	GetFirewallserviceGroupMemberArray{ GetFirewallserviceGroupMemberArgs{...} }
type GetFirewallserviceGroupMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallserviceGroupMemberArrayOutput() GetFirewallserviceGroupMemberArrayOutput
	ToGetFirewallserviceGroupMemberArrayOutputWithContext(context.Context) GetFirewallserviceGroupMemberArrayOutput
}

type GetFirewallserviceGroupMemberArray []GetFirewallserviceGroupMemberInput

func (GetFirewallserviceGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceGroupMember)(nil)).Elem()
}

func (i GetFirewallserviceGroupMemberArray) ToGetFirewallserviceGroupMemberArrayOutput() GetFirewallserviceGroupMemberArrayOutput {
	return i.ToGetFirewallserviceGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallserviceGroupMemberArray) ToGetFirewallserviceGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallserviceGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallserviceGroupMemberArrayOutput)
}

type GetFirewallserviceGroupMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallserviceGroupMember)(nil)).Elem()
}

func (o GetFirewallserviceGroupMemberOutput) ToGetFirewallserviceGroupMemberOutput() GetFirewallserviceGroupMemberOutput {
	return o
}

func (o GetFirewallserviceGroupMemberOutput) ToGetFirewallserviceGroupMemberOutputWithContext(ctx context.Context) GetFirewallserviceGroupMemberOutput {
	return o
}

// Specify the name of the desired firewallservice group.
func (o GetFirewallserviceGroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallserviceGroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallserviceGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallserviceGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallserviceGroupMember)(nil)).Elem()
}

func (o GetFirewallserviceGroupMemberArrayOutput) ToGetFirewallserviceGroupMemberArrayOutput() GetFirewallserviceGroupMemberArrayOutput {
	return o
}

func (o GetFirewallserviceGroupMemberArrayOutput) ToGetFirewallserviceGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallserviceGroupMemberArrayOutput {
	return o
}

func (o GetFirewallserviceGroupMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallserviceGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallserviceGroupMember {
		return vs[0].([]GetFirewallserviceGroupMember)[vs[1].(int)]
	}).(GetFirewallserviceGroupMemberOutput)
}

type GetFirewallwildcardfqdnGroupMember struct {
	// Specify the name of the desired firewallwildcardfqdn group.
	Name string `pulumi:"name"`
}

// GetFirewallwildcardfqdnGroupMemberInput is an input type that accepts GetFirewallwildcardfqdnGroupMemberArgs and GetFirewallwildcardfqdnGroupMemberOutput values.
// You can construct a concrete instance of `GetFirewallwildcardfqdnGroupMemberInput` via:
//
//	GetFirewallwildcardfqdnGroupMemberArgs{...}
type GetFirewallwildcardfqdnGroupMemberInput interface {
	pulumi.Input

	ToGetFirewallwildcardfqdnGroupMemberOutput() GetFirewallwildcardfqdnGroupMemberOutput
	ToGetFirewallwildcardfqdnGroupMemberOutputWithContext(context.Context) GetFirewallwildcardfqdnGroupMemberOutput
}

type GetFirewallwildcardfqdnGroupMemberArgs struct {
	// Specify the name of the desired firewallwildcardfqdn group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFirewallwildcardfqdnGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (i GetFirewallwildcardfqdnGroupMemberArgs) ToGetFirewallwildcardfqdnGroupMemberOutput() GetFirewallwildcardfqdnGroupMemberOutput {
	return i.ToGetFirewallwildcardfqdnGroupMemberOutputWithContext(context.Background())
}

func (i GetFirewallwildcardfqdnGroupMemberArgs) ToGetFirewallwildcardfqdnGroupMemberOutputWithContext(ctx context.Context) GetFirewallwildcardfqdnGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallwildcardfqdnGroupMemberOutput)
}

// GetFirewallwildcardfqdnGroupMemberArrayInput is an input type that accepts GetFirewallwildcardfqdnGroupMemberArray and GetFirewallwildcardfqdnGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetFirewallwildcardfqdnGroupMemberArrayInput` via:
//
//	GetFirewallwildcardfqdnGroupMemberArray{ GetFirewallwildcardfqdnGroupMemberArgs{...} }
type GetFirewallwildcardfqdnGroupMemberArrayInput interface {
	pulumi.Input

	ToGetFirewallwildcardfqdnGroupMemberArrayOutput() GetFirewallwildcardfqdnGroupMemberArrayOutput
	ToGetFirewallwildcardfqdnGroupMemberArrayOutputWithContext(context.Context) GetFirewallwildcardfqdnGroupMemberArrayOutput
}

type GetFirewallwildcardfqdnGroupMemberArray []GetFirewallwildcardfqdnGroupMemberInput

func (GetFirewallwildcardfqdnGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (i GetFirewallwildcardfqdnGroupMemberArray) ToGetFirewallwildcardfqdnGroupMemberArrayOutput() GetFirewallwildcardfqdnGroupMemberArrayOutput {
	return i.ToGetFirewallwildcardfqdnGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetFirewallwildcardfqdnGroupMemberArray) ToGetFirewallwildcardfqdnGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallwildcardfqdnGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallwildcardfqdnGroupMemberArrayOutput)
}

type GetFirewallwildcardfqdnGroupMemberOutput struct{ *pulumi.OutputState }

func (GetFirewallwildcardfqdnGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (o GetFirewallwildcardfqdnGroupMemberOutput) ToGetFirewallwildcardfqdnGroupMemberOutput() GetFirewallwildcardfqdnGroupMemberOutput {
	return o
}

func (o GetFirewallwildcardfqdnGroupMemberOutput) ToGetFirewallwildcardfqdnGroupMemberOutputWithContext(ctx context.Context) GetFirewallwildcardfqdnGroupMemberOutput {
	return o
}

// Specify the name of the desired firewallwildcardfqdn group.
func (o GetFirewallwildcardfqdnGroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallwildcardfqdnGroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetFirewallwildcardfqdnGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallwildcardfqdnGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (o GetFirewallwildcardfqdnGroupMemberArrayOutput) ToGetFirewallwildcardfqdnGroupMemberArrayOutput() GetFirewallwildcardfqdnGroupMemberArrayOutput {
	return o
}

func (o GetFirewallwildcardfqdnGroupMemberArrayOutput) ToGetFirewallwildcardfqdnGroupMemberArrayOutputWithContext(ctx context.Context) GetFirewallwildcardfqdnGroupMemberArrayOutput {
	return o
}

func (o GetFirewallwildcardfqdnGroupMemberArrayOutput) Index(i pulumi.IntInput) GetFirewallwildcardfqdnGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallwildcardfqdnGroupMember {
		return vs[0].([]GetFirewallwildcardfqdnGroupMember)[vs[1].(int)]
	}).(GetFirewallwildcardfqdnGroupMemberOutput)
}

type GetRouterAccesslist6Rule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Enable/disable exact prefix match.
	ExactMatch string `pulumi:"exactMatch"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Rule ID.
	Id int `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterAccesslist6RuleInput is an input type that accepts GetRouterAccesslist6RuleArgs and GetRouterAccesslist6RuleOutput values.
// You can construct a concrete instance of `GetRouterAccesslist6RuleInput` via:
//
//	GetRouterAccesslist6RuleArgs{...}
type GetRouterAccesslist6RuleInput interface {
	pulumi.Input

	ToGetRouterAccesslist6RuleOutput() GetRouterAccesslist6RuleOutput
	ToGetRouterAccesslist6RuleOutputWithContext(context.Context) GetRouterAccesslist6RuleOutput
}

type GetRouterAccesslist6RuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable exact prefix match.
	ExactMatch pulumi.StringInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterAccesslist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAccesslist6Rule)(nil)).Elem()
}

func (i GetRouterAccesslist6RuleArgs) ToGetRouterAccesslist6RuleOutput() GetRouterAccesslist6RuleOutput {
	return i.ToGetRouterAccesslist6RuleOutputWithContext(context.Background())
}

func (i GetRouterAccesslist6RuleArgs) ToGetRouterAccesslist6RuleOutputWithContext(ctx context.Context) GetRouterAccesslist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAccesslist6RuleOutput)
}

// GetRouterAccesslist6RuleArrayInput is an input type that accepts GetRouterAccesslist6RuleArray and GetRouterAccesslist6RuleArrayOutput values.
// You can construct a concrete instance of `GetRouterAccesslist6RuleArrayInput` via:
//
//	GetRouterAccesslist6RuleArray{ GetRouterAccesslist6RuleArgs{...} }
type GetRouterAccesslist6RuleArrayInput interface {
	pulumi.Input

	ToGetRouterAccesslist6RuleArrayOutput() GetRouterAccesslist6RuleArrayOutput
	ToGetRouterAccesslist6RuleArrayOutputWithContext(context.Context) GetRouterAccesslist6RuleArrayOutput
}

type GetRouterAccesslist6RuleArray []GetRouterAccesslist6RuleInput

func (GetRouterAccesslist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAccesslist6Rule)(nil)).Elem()
}

func (i GetRouterAccesslist6RuleArray) ToGetRouterAccesslist6RuleArrayOutput() GetRouterAccesslist6RuleArrayOutput {
	return i.ToGetRouterAccesslist6RuleArrayOutputWithContext(context.Background())
}

func (i GetRouterAccesslist6RuleArray) ToGetRouterAccesslist6RuleArrayOutputWithContext(ctx context.Context) GetRouterAccesslist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAccesslist6RuleArrayOutput)
}

type GetRouterAccesslist6RuleOutput struct{ *pulumi.OutputState }

func (GetRouterAccesslist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAccesslist6Rule)(nil)).Elem()
}

func (o GetRouterAccesslist6RuleOutput) ToGetRouterAccesslist6RuleOutput() GetRouterAccesslist6RuleOutput {
	return o
}

func (o GetRouterAccesslist6RuleOutput) ToGetRouterAccesslist6RuleOutputWithContext(ctx context.Context) GetRouterAccesslist6RuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetRouterAccesslist6RuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslist6Rule) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable exact prefix match.
func (o GetRouterAccesslist6RuleOutput) ExactMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslist6Rule) string { return v.ExactMatch }).(pulumi.StringOutput)
}

// Flags.
func (o GetRouterAccesslist6RuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterAccesslist6Rule) int { return v.Flags }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetRouterAccesslist6RuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterAccesslist6Rule) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetRouterAccesslist6RuleOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslist6Rule) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterAccesslist6RuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterAccesslist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAccesslist6Rule)(nil)).Elem()
}

func (o GetRouterAccesslist6RuleArrayOutput) ToGetRouterAccesslist6RuleArrayOutput() GetRouterAccesslist6RuleArrayOutput {
	return o
}

func (o GetRouterAccesslist6RuleArrayOutput) ToGetRouterAccesslist6RuleArrayOutputWithContext(ctx context.Context) GetRouterAccesslist6RuleArrayOutput {
	return o
}

func (o GetRouterAccesslist6RuleArrayOutput) Index(i pulumi.IntInput) GetRouterAccesslist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterAccesslist6Rule {
		return vs[0].([]GetRouterAccesslist6Rule)[vs[1].(int)]
	}).(GetRouterAccesslist6RuleOutput)
}

type GetRouterAccesslistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch string `pulumi:"exactMatch"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Rule ID.
	Id int `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix string `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard string `pulumi:"wildcard"`
}

// GetRouterAccesslistRuleInput is an input type that accepts GetRouterAccesslistRuleArgs and GetRouterAccesslistRuleOutput values.
// You can construct a concrete instance of `GetRouterAccesslistRuleInput` via:
//
//	GetRouterAccesslistRuleArgs{...}
type GetRouterAccesslistRuleInput interface {
	pulumi.Input

	ToGetRouterAccesslistRuleOutput() GetRouterAccesslistRuleOutput
	ToGetRouterAccesslistRuleOutputWithContext(context.Context) GetRouterAccesslistRuleOutput
}

type GetRouterAccesslistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch pulumi.StringInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard pulumi.StringInput `pulumi:"wildcard"`
}

func (GetRouterAccesslistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAccesslistRule)(nil)).Elem()
}

func (i GetRouterAccesslistRuleArgs) ToGetRouterAccesslistRuleOutput() GetRouterAccesslistRuleOutput {
	return i.ToGetRouterAccesslistRuleOutputWithContext(context.Background())
}

func (i GetRouterAccesslistRuleArgs) ToGetRouterAccesslistRuleOutputWithContext(ctx context.Context) GetRouterAccesslistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAccesslistRuleOutput)
}

// GetRouterAccesslistRuleArrayInput is an input type that accepts GetRouterAccesslistRuleArray and GetRouterAccesslistRuleArrayOutput values.
// You can construct a concrete instance of `GetRouterAccesslistRuleArrayInput` via:
//
//	GetRouterAccesslistRuleArray{ GetRouterAccesslistRuleArgs{...} }
type GetRouterAccesslistRuleArrayInput interface {
	pulumi.Input

	ToGetRouterAccesslistRuleArrayOutput() GetRouterAccesslistRuleArrayOutput
	ToGetRouterAccesslistRuleArrayOutputWithContext(context.Context) GetRouterAccesslistRuleArrayOutput
}

type GetRouterAccesslistRuleArray []GetRouterAccesslistRuleInput

func (GetRouterAccesslistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAccesslistRule)(nil)).Elem()
}

func (i GetRouterAccesslistRuleArray) ToGetRouterAccesslistRuleArrayOutput() GetRouterAccesslistRuleArrayOutput {
	return i.ToGetRouterAccesslistRuleArrayOutputWithContext(context.Background())
}

func (i GetRouterAccesslistRuleArray) ToGetRouterAccesslistRuleArrayOutputWithContext(ctx context.Context) GetRouterAccesslistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAccesslistRuleArrayOutput)
}

type GetRouterAccesslistRuleOutput struct{ *pulumi.OutputState }

func (GetRouterAccesslistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAccesslistRule)(nil)).Elem()
}

func (o GetRouterAccesslistRuleOutput) ToGetRouterAccesslistRuleOutput() GetRouterAccesslistRuleOutput {
	return o
}

func (o GetRouterAccesslistRuleOutput) ToGetRouterAccesslistRuleOutputWithContext(ctx context.Context) GetRouterAccesslistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetRouterAccesslistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable exact match.
func (o GetRouterAccesslistRuleOutput) ExactMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) string { return v.ExactMatch }).(pulumi.StringOutput)
}

// Flags.
func (o GetRouterAccesslistRuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) int { return v.Flags }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetRouterAccesslistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetRouterAccesslistRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// Wildcard to define Cisco-style wildcard filter criteria.
func (o GetRouterAccesslistRuleOutput) Wildcard() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAccesslistRule) string { return v.Wildcard }).(pulumi.StringOutput)
}

type GetRouterAccesslistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterAccesslistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAccesslistRule)(nil)).Elem()
}

func (o GetRouterAccesslistRuleArrayOutput) ToGetRouterAccesslistRuleArrayOutput() GetRouterAccesslistRuleArrayOutput {
	return o
}

func (o GetRouterAccesslistRuleArrayOutput) ToGetRouterAccesslistRuleArrayOutputWithContext(ctx context.Context) GetRouterAccesslistRuleArrayOutput {
	return o
}

func (o GetRouterAccesslistRuleArrayOutput) Index(i pulumi.IntInput) GetRouterAccesslistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterAccesslistRule {
		return vs[0].([]GetRouterAccesslistRule)[vs[1].(int)]
	}).(GetRouterAccesslistRuleOutput)
}

type GetRouterAspathlistRule struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute.
	Action string `pulumi:"action"`
	// ID.
	Id int `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp string `pulumi:"regexp"`
}

// GetRouterAspathlistRuleInput is an input type that accepts GetRouterAspathlistRuleArgs and GetRouterAspathlistRuleOutput values.
// You can construct a concrete instance of `GetRouterAspathlistRuleInput` via:
//
//	GetRouterAspathlistRuleArgs{...}
type GetRouterAspathlistRuleInput interface {
	pulumi.Input

	ToGetRouterAspathlistRuleOutput() GetRouterAspathlistRuleOutput
	ToGetRouterAspathlistRuleOutputWithContext(context.Context) GetRouterAspathlistRuleOutput
}

type GetRouterAspathlistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute.
	Action pulumi.StringInput `pulumi:"action"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp pulumi.StringInput `pulumi:"regexp"`
}

func (GetRouterAspathlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAspathlistRule)(nil)).Elem()
}

func (i GetRouterAspathlistRuleArgs) ToGetRouterAspathlistRuleOutput() GetRouterAspathlistRuleOutput {
	return i.ToGetRouterAspathlistRuleOutputWithContext(context.Background())
}

func (i GetRouterAspathlistRuleArgs) ToGetRouterAspathlistRuleOutputWithContext(ctx context.Context) GetRouterAspathlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAspathlistRuleOutput)
}

// GetRouterAspathlistRuleArrayInput is an input type that accepts GetRouterAspathlistRuleArray and GetRouterAspathlistRuleArrayOutput values.
// You can construct a concrete instance of `GetRouterAspathlistRuleArrayInput` via:
//
//	GetRouterAspathlistRuleArray{ GetRouterAspathlistRuleArgs{...} }
type GetRouterAspathlistRuleArrayInput interface {
	pulumi.Input

	ToGetRouterAspathlistRuleArrayOutput() GetRouterAspathlistRuleArrayOutput
	ToGetRouterAspathlistRuleArrayOutputWithContext(context.Context) GetRouterAspathlistRuleArrayOutput
}

type GetRouterAspathlistRuleArray []GetRouterAspathlistRuleInput

func (GetRouterAspathlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAspathlistRule)(nil)).Elem()
}

func (i GetRouterAspathlistRuleArray) ToGetRouterAspathlistRuleArrayOutput() GetRouterAspathlistRuleArrayOutput {
	return i.ToGetRouterAspathlistRuleArrayOutputWithContext(context.Background())
}

func (i GetRouterAspathlistRuleArray) ToGetRouterAspathlistRuleArrayOutputWithContext(ctx context.Context) GetRouterAspathlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterAspathlistRuleArrayOutput)
}

type GetRouterAspathlistRuleOutput struct{ *pulumi.OutputState }

func (GetRouterAspathlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterAspathlistRule)(nil)).Elem()
}

func (o GetRouterAspathlistRuleOutput) ToGetRouterAspathlistRuleOutput() GetRouterAspathlistRuleOutput {
	return o
}

func (o GetRouterAspathlistRuleOutput) ToGetRouterAspathlistRuleOutputWithContext(ctx context.Context) GetRouterAspathlistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's AS_PATH attribute.
func (o GetRouterAspathlistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAspathlistRule) string { return v.Action }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterAspathlistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterAspathlistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
func (o GetRouterAspathlistRuleOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterAspathlistRule) string { return v.Regexp }).(pulumi.StringOutput)
}

type GetRouterAspathlistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterAspathlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterAspathlistRule)(nil)).Elem()
}

func (o GetRouterAspathlistRuleArrayOutput) ToGetRouterAspathlistRuleArrayOutput() GetRouterAspathlistRuleArrayOutput {
	return o
}

func (o GetRouterAspathlistRuleArrayOutput) ToGetRouterAspathlistRuleArrayOutputWithContext(ctx context.Context) GetRouterAspathlistRuleArrayOutput {
	return o
}

func (o GetRouterAspathlistRuleArrayOutput) Index(i pulumi.IntInput) GetRouterAspathlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterAspathlistRule {
		return vs[0].([]GetRouterAspathlistRule)[vs[1].(int)]
	}).(GetRouterAspathlistRuleOutput)
}

type GetRouterBfd6MultihopTemplate struct {
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst string `pulumi:"dst"`
	// ID.
	Id int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key string `pulumi:"md5Key"`
	// Source prefix.
	Src string `pulumi:"src"`
}

// GetRouterBfd6MultihopTemplateInput is an input type that accepts GetRouterBfd6MultihopTemplateArgs and GetRouterBfd6MultihopTemplateOutput values.
// You can construct a concrete instance of `GetRouterBfd6MultihopTemplateInput` via:
//
//	GetRouterBfd6MultihopTemplateArgs{...}
type GetRouterBfd6MultihopTemplateInput interface {
	pulumi.Input

	ToGetRouterBfd6MultihopTemplateOutput() GetRouterBfd6MultihopTemplateOutput
	ToGetRouterBfd6MultihopTemplateOutputWithContext(context.Context) GetRouterBfd6MultihopTemplateOutput
}

type GetRouterBfd6MultihopTemplateArgs struct {
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringInput `pulumi:"src"`
}

func (GetRouterBfd6MultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i GetRouterBfd6MultihopTemplateArgs) ToGetRouterBfd6MultihopTemplateOutput() GetRouterBfd6MultihopTemplateOutput {
	return i.ToGetRouterBfd6MultihopTemplateOutputWithContext(context.Background())
}

func (i GetRouterBfd6MultihopTemplateArgs) ToGetRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) GetRouterBfd6MultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfd6MultihopTemplateOutput)
}

// GetRouterBfd6MultihopTemplateArrayInput is an input type that accepts GetRouterBfd6MultihopTemplateArray and GetRouterBfd6MultihopTemplateArrayOutput values.
// You can construct a concrete instance of `GetRouterBfd6MultihopTemplateArrayInput` via:
//
//	GetRouterBfd6MultihopTemplateArray{ GetRouterBfd6MultihopTemplateArgs{...} }
type GetRouterBfd6MultihopTemplateArrayInput interface {
	pulumi.Input

	ToGetRouterBfd6MultihopTemplateArrayOutput() GetRouterBfd6MultihopTemplateArrayOutput
	ToGetRouterBfd6MultihopTemplateArrayOutputWithContext(context.Context) GetRouterBfd6MultihopTemplateArrayOutput
}

type GetRouterBfd6MultihopTemplateArray []GetRouterBfd6MultihopTemplateInput

func (GetRouterBfd6MultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i GetRouterBfd6MultihopTemplateArray) ToGetRouterBfd6MultihopTemplateArrayOutput() GetRouterBfd6MultihopTemplateArrayOutput {
	return i.ToGetRouterBfd6MultihopTemplateArrayOutputWithContext(context.Background())
}

func (i GetRouterBfd6MultihopTemplateArray) ToGetRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) GetRouterBfd6MultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfd6MultihopTemplateArrayOutput)
}

type GetRouterBfd6MultihopTemplateOutput struct{ *pulumi.OutputState }

func (GetRouterBfd6MultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o GetRouterBfd6MultihopTemplateOutput) ToGetRouterBfd6MultihopTemplateOutput() GetRouterBfd6MultihopTemplateOutput {
	return o
}

func (o GetRouterBfd6MultihopTemplateOutput) ToGetRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) GetRouterBfd6MultihopTemplateOutput {
	return o
}

// Authentication mode.
func (o GetRouterBfd6MultihopTemplateOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) string { return v.AuthMode }).(pulumi.StringOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o GetRouterBfd6MultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) int { return v.BfdDesiredMinTx }).(pulumi.IntOutput)
}

// BFD detection multiplier.
func (o GetRouterBfd6MultihopTemplateOutput) BfdDetectMult() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) int { return v.BfdDetectMult }).(pulumi.IntOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o GetRouterBfd6MultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) int { return v.BfdRequiredMinRx }).(pulumi.IntOutput)
}

// Destination prefix.
func (o GetRouterBfd6MultihopTemplateOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) string { return v.Dst }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBfd6MultihopTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) int { return v.Id }).(pulumi.IntOutput)
}

// MD5 key of key ID 1.
func (o GetRouterBfd6MultihopTemplateOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Source prefix.
func (o GetRouterBfd6MultihopTemplateOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6MultihopTemplate) string { return v.Src }).(pulumi.StringOutput)
}

type GetRouterBfd6MultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBfd6MultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o GetRouterBfd6MultihopTemplateArrayOutput) ToGetRouterBfd6MultihopTemplateArrayOutput() GetRouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o GetRouterBfd6MultihopTemplateArrayOutput) ToGetRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) GetRouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o GetRouterBfd6MultihopTemplateArrayOutput) Index(i pulumi.IntInput) GetRouterBfd6MultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBfd6MultihopTemplate {
		return vs[0].([]GetRouterBfd6MultihopTemplate)[vs[1].(int)]
	}).(GetRouterBfd6MultihopTemplateOutput)
}

type GetRouterBfd6Neighbor struct {
	// Interface to the BFD neighbor.
	Interface string `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address string `pulumi:"ip6Address"`
}

// GetRouterBfd6NeighborInput is an input type that accepts GetRouterBfd6NeighborArgs and GetRouterBfd6NeighborOutput values.
// You can construct a concrete instance of `GetRouterBfd6NeighborInput` via:
//
//	GetRouterBfd6NeighborArgs{...}
type GetRouterBfd6NeighborInput interface {
	pulumi.Input

	ToGetRouterBfd6NeighborOutput() GetRouterBfd6NeighborOutput
	ToGetRouterBfd6NeighborOutputWithContext(context.Context) GetRouterBfd6NeighborOutput
}

type GetRouterBfd6NeighborArgs struct {
	// Interface to the BFD neighbor.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address pulumi.StringInput `pulumi:"ip6Address"`
}

func (GetRouterBfd6NeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfd6Neighbor)(nil)).Elem()
}

func (i GetRouterBfd6NeighborArgs) ToGetRouterBfd6NeighborOutput() GetRouterBfd6NeighborOutput {
	return i.ToGetRouterBfd6NeighborOutputWithContext(context.Background())
}

func (i GetRouterBfd6NeighborArgs) ToGetRouterBfd6NeighborOutputWithContext(ctx context.Context) GetRouterBfd6NeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfd6NeighborOutput)
}

// GetRouterBfd6NeighborArrayInput is an input type that accepts GetRouterBfd6NeighborArray and GetRouterBfd6NeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterBfd6NeighborArrayInput` via:
//
//	GetRouterBfd6NeighborArray{ GetRouterBfd6NeighborArgs{...} }
type GetRouterBfd6NeighborArrayInput interface {
	pulumi.Input

	ToGetRouterBfd6NeighborArrayOutput() GetRouterBfd6NeighborArrayOutput
	ToGetRouterBfd6NeighborArrayOutputWithContext(context.Context) GetRouterBfd6NeighborArrayOutput
}

type GetRouterBfd6NeighborArray []GetRouterBfd6NeighborInput

func (GetRouterBfd6NeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfd6Neighbor)(nil)).Elem()
}

func (i GetRouterBfd6NeighborArray) ToGetRouterBfd6NeighborArrayOutput() GetRouterBfd6NeighborArrayOutput {
	return i.ToGetRouterBfd6NeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterBfd6NeighborArray) ToGetRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) GetRouterBfd6NeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfd6NeighborArrayOutput)
}

type GetRouterBfd6NeighborOutput struct{ *pulumi.OutputState }

func (GetRouterBfd6NeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfd6Neighbor)(nil)).Elem()
}

func (o GetRouterBfd6NeighborOutput) ToGetRouterBfd6NeighborOutput() GetRouterBfd6NeighborOutput {
	return o
}

func (o GetRouterBfd6NeighborOutput) ToGetRouterBfd6NeighborOutputWithContext(ctx context.Context) GetRouterBfd6NeighborOutput {
	return o
}

// Interface to the BFD neighbor.
func (o GetRouterBfd6NeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6Neighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv6 address of the BFD neighbor.
func (o GetRouterBfd6NeighborOutput) Ip6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfd6Neighbor) string { return v.Ip6Address }).(pulumi.StringOutput)
}

type GetRouterBfd6NeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBfd6NeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfd6Neighbor)(nil)).Elem()
}

func (o GetRouterBfd6NeighborArrayOutput) ToGetRouterBfd6NeighborArrayOutput() GetRouterBfd6NeighborArrayOutput {
	return o
}

func (o GetRouterBfd6NeighborArrayOutput) ToGetRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) GetRouterBfd6NeighborArrayOutput {
	return o
}

func (o GetRouterBfd6NeighborArrayOutput) Index(i pulumi.IntInput) GetRouterBfd6NeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBfd6Neighbor {
		return vs[0].([]GetRouterBfd6Neighbor)[vs[1].(int)]
	}).(GetRouterBfd6NeighborOutput)
}

type GetRouterBfdMultihopTemplate struct {
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst string `pulumi:"dst"`
	// ID.
	Id int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key string `pulumi:"md5Key"`
	// Source prefix.
	Src string `pulumi:"src"`
}

// GetRouterBfdMultihopTemplateInput is an input type that accepts GetRouterBfdMultihopTemplateArgs and GetRouterBfdMultihopTemplateOutput values.
// You can construct a concrete instance of `GetRouterBfdMultihopTemplateInput` via:
//
//	GetRouterBfdMultihopTemplateArgs{...}
type GetRouterBfdMultihopTemplateInput interface {
	pulumi.Input

	ToGetRouterBfdMultihopTemplateOutput() GetRouterBfdMultihopTemplateOutput
	ToGetRouterBfdMultihopTemplateOutputWithContext(context.Context) GetRouterBfdMultihopTemplateOutput
}

type GetRouterBfdMultihopTemplateArgs struct {
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringInput `pulumi:"src"`
}

func (GetRouterBfdMultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfdMultihopTemplate)(nil)).Elem()
}

func (i GetRouterBfdMultihopTemplateArgs) ToGetRouterBfdMultihopTemplateOutput() GetRouterBfdMultihopTemplateOutput {
	return i.ToGetRouterBfdMultihopTemplateOutputWithContext(context.Background())
}

func (i GetRouterBfdMultihopTemplateArgs) ToGetRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) GetRouterBfdMultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfdMultihopTemplateOutput)
}

// GetRouterBfdMultihopTemplateArrayInput is an input type that accepts GetRouterBfdMultihopTemplateArray and GetRouterBfdMultihopTemplateArrayOutput values.
// You can construct a concrete instance of `GetRouterBfdMultihopTemplateArrayInput` via:
//
//	GetRouterBfdMultihopTemplateArray{ GetRouterBfdMultihopTemplateArgs{...} }
type GetRouterBfdMultihopTemplateArrayInput interface {
	pulumi.Input

	ToGetRouterBfdMultihopTemplateArrayOutput() GetRouterBfdMultihopTemplateArrayOutput
	ToGetRouterBfdMultihopTemplateArrayOutputWithContext(context.Context) GetRouterBfdMultihopTemplateArrayOutput
}

type GetRouterBfdMultihopTemplateArray []GetRouterBfdMultihopTemplateInput

func (GetRouterBfdMultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfdMultihopTemplate)(nil)).Elem()
}

func (i GetRouterBfdMultihopTemplateArray) ToGetRouterBfdMultihopTemplateArrayOutput() GetRouterBfdMultihopTemplateArrayOutput {
	return i.ToGetRouterBfdMultihopTemplateArrayOutputWithContext(context.Background())
}

func (i GetRouterBfdMultihopTemplateArray) ToGetRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) GetRouterBfdMultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfdMultihopTemplateArrayOutput)
}

type GetRouterBfdMultihopTemplateOutput struct{ *pulumi.OutputState }

func (GetRouterBfdMultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfdMultihopTemplate)(nil)).Elem()
}

func (o GetRouterBfdMultihopTemplateOutput) ToGetRouterBfdMultihopTemplateOutput() GetRouterBfdMultihopTemplateOutput {
	return o
}

func (o GetRouterBfdMultihopTemplateOutput) ToGetRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) GetRouterBfdMultihopTemplateOutput {
	return o
}

// Authentication mode.
func (o GetRouterBfdMultihopTemplateOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) string { return v.AuthMode }).(pulumi.StringOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o GetRouterBfdMultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) int { return v.BfdDesiredMinTx }).(pulumi.IntOutput)
}

// BFD detection multiplier.
func (o GetRouterBfdMultihopTemplateOutput) BfdDetectMult() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) int { return v.BfdDetectMult }).(pulumi.IntOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o GetRouterBfdMultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) int { return v.BfdRequiredMinRx }).(pulumi.IntOutput)
}

// Destination prefix.
func (o GetRouterBfdMultihopTemplateOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) string { return v.Dst }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBfdMultihopTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) int { return v.Id }).(pulumi.IntOutput)
}

// MD5 key of key ID 1.
func (o GetRouterBfdMultihopTemplateOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Source prefix.
func (o GetRouterBfdMultihopTemplateOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdMultihopTemplate) string { return v.Src }).(pulumi.StringOutput)
}

type GetRouterBfdMultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBfdMultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfdMultihopTemplate)(nil)).Elem()
}

func (o GetRouterBfdMultihopTemplateArrayOutput) ToGetRouterBfdMultihopTemplateArrayOutput() GetRouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o GetRouterBfdMultihopTemplateArrayOutput) ToGetRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) GetRouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o GetRouterBfdMultihopTemplateArrayOutput) Index(i pulumi.IntInput) GetRouterBfdMultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBfdMultihopTemplate {
		return vs[0].([]GetRouterBfdMultihopTemplate)[vs[1].(int)]
	}).(GetRouterBfdMultihopTemplateOutput)
}

type GetRouterBfdNeighbor struct {
	// Interface name.
	Interface string `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip string `pulumi:"ip"`
}

// GetRouterBfdNeighborInput is an input type that accepts GetRouterBfdNeighborArgs and GetRouterBfdNeighborOutput values.
// You can construct a concrete instance of `GetRouterBfdNeighborInput` via:
//
//	GetRouterBfdNeighborArgs{...}
type GetRouterBfdNeighborInput interface {
	pulumi.Input

	ToGetRouterBfdNeighborOutput() GetRouterBfdNeighborOutput
	ToGetRouterBfdNeighborOutputWithContext(context.Context) GetRouterBfdNeighborOutput
}

type GetRouterBfdNeighborArgs struct {
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetRouterBfdNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfdNeighbor)(nil)).Elem()
}

func (i GetRouterBfdNeighborArgs) ToGetRouterBfdNeighborOutput() GetRouterBfdNeighborOutput {
	return i.ToGetRouterBfdNeighborOutputWithContext(context.Background())
}

func (i GetRouterBfdNeighborArgs) ToGetRouterBfdNeighborOutputWithContext(ctx context.Context) GetRouterBfdNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfdNeighborOutput)
}

// GetRouterBfdNeighborArrayInput is an input type that accepts GetRouterBfdNeighborArray and GetRouterBfdNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterBfdNeighborArrayInput` via:
//
//	GetRouterBfdNeighborArray{ GetRouterBfdNeighborArgs{...} }
type GetRouterBfdNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterBfdNeighborArrayOutput() GetRouterBfdNeighborArrayOutput
	ToGetRouterBfdNeighborArrayOutputWithContext(context.Context) GetRouterBfdNeighborArrayOutput
}

type GetRouterBfdNeighborArray []GetRouterBfdNeighborInput

func (GetRouterBfdNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfdNeighbor)(nil)).Elem()
}

func (i GetRouterBfdNeighborArray) ToGetRouterBfdNeighborArrayOutput() GetRouterBfdNeighborArrayOutput {
	return i.ToGetRouterBfdNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterBfdNeighborArray) ToGetRouterBfdNeighborArrayOutputWithContext(ctx context.Context) GetRouterBfdNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBfdNeighborArrayOutput)
}

type GetRouterBfdNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterBfdNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBfdNeighbor)(nil)).Elem()
}

func (o GetRouterBfdNeighborOutput) ToGetRouterBfdNeighborOutput() GetRouterBfdNeighborOutput {
	return o
}

func (o GetRouterBfdNeighborOutput) ToGetRouterBfdNeighborOutputWithContext(ctx context.Context) GetRouterBfdNeighborOutput {
	return o
}

// Interface name.
func (o GetRouterBfdNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv4 address of the BFD neighbor.
func (o GetRouterBfdNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBfdNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

type GetRouterBfdNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBfdNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBfdNeighbor)(nil)).Elem()
}

func (o GetRouterBfdNeighborArrayOutput) ToGetRouterBfdNeighborArrayOutput() GetRouterBfdNeighborArrayOutput {
	return o
}

func (o GetRouterBfdNeighborArrayOutput) ToGetRouterBfdNeighborArrayOutputWithContext(ctx context.Context) GetRouterBfdNeighborArrayOutput {
	return o
}

func (o GetRouterBfdNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterBfdNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBfdNeighbor {
		return vs[0].([]GetRouterBfdNeighbor)[vs[1].(int)]
	}).(GetRouterBfdNeighborOutput)
}

type GetRouterBgpAdminDistance struct {
	// Administrative distance to apply (1 - 255).
	Distance int `pulumi:"distance"`
	// ID.
	Id int `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix string `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList string `pulumi:"routeList"`
}

// GetRouterBgpAdminDistanceInput is an input type that accepts GetRouterBgpAdminDistanceArgs and GetRouterBgpAdminDistanceOutput values.
// You can construct a concrete instance of `GetRouterBgpAdminDistanceInput` via:
//
//	GetRouterBgpAdminDistanceArgs{...}
type GetRouterBgpAdminDistanceInput interface {
	pulumi.Input

	ToGetRouterBgpAdminDistanceOutput() GetRouterBgpAdminDistanceOutput
	ToGetRouterBgpAdminDistanceOutputWithContext(context.Context) GetRouterBgpAdminDistanceOutput
}

type GetRouterBgpAdminDistanceArgs struct {
	// Administrative distance to apply (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix pulumi.StringInput `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList pulumi.StringInput `pulumi:"routeList"`
}

func (GetRouterBgpAdminDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAdminDistance)(nil)).Elem()
}

func (i GetRouterBgpAdminDistanceArgs) ToGetRouterBgpAdminDistanceOutput() GetRouterBgpAdminDistanceOutput {
	return i.ToGetRouterBgpAdminDistanceOutputWithContext(context.Background())
}

func (i GetRouterBgpAdminDistanceArgs) ToGetRouterBgpAdminDistanceOutputWithContext(ctx context.Context) GetRouterBgpAdminDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAdminDistanceOutput)
}

// GetRouterBgpAdminDistanceArrayInput is an input type that accepts GetRouterBgpAdminDistanceArray and GetRouterBgpAdminDistanceArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpAdminDistanceArrayInput` via:
//
//	GetRouterBgpAdminDistanceArray{ GetRouterBgpAdminDistanceArgs{...} }
type GetRouterBgpAdminDistanceArrayInput interface {
	pulumi.Input

	ToGetRouterBgpAdminDistanceArrayOutput() GetRouterBgpAdminDistanceArrayOutput
	ToGetRouterBgpAdminDistanceArrayOutputWithContext(context.Context) GetRouterBgpAdminDistanceArrayOutput
}

type GetRouterBgpAdminDistanceArray []GetRouterBgpAdminDistanceInput

func (GetRouterBgpAdminDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAdminDistance)(nil)).Elem()
}

func (i GetRouterBgpAdminDistanceArray) ToGetRouterBgpAdminDistanceArrayOutput() GetRouterBgpAdminDistanceArrayOutput {
	return i.ToGetRouterBgpAdminDistanceArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpAdminDistanceArray) ToGetRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) GetRouterBgpAdminDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAdminDistanceArrayOutput)
}

type GetRouterBgpAdminDistanceOutput struct{ *pulumi.OutputState }

func (GetRouterBgpAdminDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAdminDistance)(nil)).Elem()
}

func (o GetRouterBgpAdminDistanceOutput) ToGetRouterBgpAdminDistanceOutput() GetRouterBgpAdminDistanceOutput {
	return o
}

func (o GetRouterBgpAdminDistanceOutput) ToGetRouterBgpAdminDistanceOutputWithContext(ctx context.Context) GetRouterBgpAdminDistanceOutput {
	return o
}

// Administrative distance to apply (1 - 255).
func (o GetRouterBgpAdminDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpAdminDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// ID.
func (o GetRouterBgpAdminDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpAdminDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Neighbor address prefix.
func (o GetRouterBgpAdminDistanceOutput) NeighbourPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAdminDistance) string { return v.NeighbourPrefix }).(pulumi.StringOutput)
}

// Access list of routes to apply new distance to.
func (o GetRouterBgpAdminDistanceOutput) RouteList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAdminDistance) string { return v.RouteList }).(pulumi.StringOutput)
}

type GetRouterBgpAdminDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpAdminDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAdminDistance)(nil)).Elem()
}

func (o GetRouterBgpAdminDistanceArrayOutput) ToGetRouterBgpAdminDistanceArrayOutput() GetRouterBgpAdminDistanceArrayOutput {
	return o
}

func (o GetRouterBgpAdminDistanceArrayOutput) ToGetRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) GetRouterBgpAdminDistanceArrayOutput {
	return o
}

func (o GetRouterBgpAdminDistanceArrayOutput) Index(i pulumi.IntInput) GetRouterBgpAdminDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpAdminDistance {
		return vs[0].([]GetRouterBgpAdminDistance)[vs[1].(int)]
	}).(GetRouterBgpAdminDistanceOutput)
}

type GetRouterBgpAggregateAddress6 struct {
	// Enable/disable generate AS set path information.
	AsSet string `pulumi:"asSet"`
	// ID.
	Id int `pulumi:"id"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly string `pulumi:"summaryOnly"`
}

// GetRouterBgpAggregateAddress6Input is an input type that accepts GetRouterBgpAggregateAddress6Args and GetRouterBgpAggregateAddress6Output values.
// You can construct a concrete instance of `GetRouterBgpAggregateAddress6Input` via:
//
//	GetRouterBgpAggregateAddress6Args{...}
type GetRouterBgpAggregateAddress6Input interface {
	pulumi.Input

	ToGetRouterBgpAggregateAddress6Output() GetRouterBgpAggregateAddress6Output
	ToGetRouterBgpAggregateAddress6OutputWithContext(context.Context) GetRouterBgpAggregateAddress6Output
}

type GetRouterBgpAggregateAddress6Args struct {
	// Enable/disable generate AS set path information.
	AsSet pulumi.StringInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly pulumi.StringInput `pulumi:"summaryOnly"`
}

func (GetRouterBgpAggregateAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAggregateAddress6)(nil)).Elem()
}

func (i GetRouterBgpAggregateAddress6Args) ToGetRouterBgpAggregateAddress6Output() GetRouterBgpAggregateAddress6Output {
	return i.ToGetRouterBgpAggregateAddress6OutputWithContext(context.Background())
}

func (i GetRouterBgpAggregateAddress6Args) ToGetRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) GetRouterBgpAggregateAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAggregateAddress6Output)
}

// GetRouterBgpAggregateAddress6ArrayInput is an input type that accepts GetRouterBgpAggregateAddress6Array and GetRouterBgpAggregateAddress6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpAggregateAddress6ArrayInput` via:
//
//	GetRouterBgpAggregateAddress6Array{ GetRouterBgpAggregateAddress6Args{...} }
type GetRouterBgpAggregateAddress6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpAggregateAddress6ArrayOutput() GetRouterBgpAggregateAddress6ArrayOutput
	ToGetRouterBgpAggregateAddress6ArrayOutputWithContext(context.Context) GetRouterBgpAggregateAddress6ArrayOutput
}

type GetRouterBgpAggregateAddress6Array []GetRouterBgpAggregateAddress6Input

func (GetRouterBgpAggregateAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAggregateAddress6)(nil)).Elem()
}

func (i GetRouterBgpAggregateAddress6Array) ToGetRouterBgpAggregateAddress6ArrayOutput() GetRouterBgpAggregateAddress6ArrayOutput {
	return i.ToGetRouterBgpAggregateAddress6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpAggregateAddress6Array) ToGetRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAggregateAddress6ArrayOutput)
}

type GetRouterBgpAggregateAddress6Output struct{ *pulumi.OutputState }

func (GetRouterBgpAggregateAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAggregateAddress6)(nil)).Elem()
}

func (o GetRouterBgpAggregateAddress6Output) ToGetRouterBgpAggregateAddress6Output() GetRouterBgpAggregateAddress6Output {
	return o
}

func (o GetRouterBgpAggregateAddress6Output) ToGetRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) GetRouterBgpAggregateAddress6Output {
	return o
}

// Enable/disable generate AS set path information.
func (o GetRouterBgpAggregateAddress6Output) AsSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress6) string { return v.AsSet }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBgpAggregateAddress6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress6) int { return v.Id }).(pulumi.IntOutput)
}

// Network IPv6 prefix.
func (o GetRouterBgpAggregateAddress6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Enable/disable filter more specific routes from updates.
func (o GetRouterBgpAggregateAddress6Output) SummaryOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress6) string { return v.SummaryOnly }).(pulumi.StringOutput)
}

type GetRouterBgpAggregateAddress6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpAggregateAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAggregateAddress6)(nil)).Elem()
}

func (o GetRouterBgpAggregateAddress6ArrayOutput) ToGetRouterBgpAggregateAddress6ArrayOutput() GetRouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o GetRouterBgpAggregateAddress6ArrayOutput) ToGetRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o GetRouterBgpAggregateAddress6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpAggregateAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpAggregateAddress6 {
		return vs[0].([]GetRouterBgpAggregateAddress6)[vs[1].(int)]
	}).(GetRouterBgpAggregateAddress6Output)
}

type GetRouterBgpAggregateAddress struct {
	// Enable/disable generate AS set path information.
	AsSet string `pulumi:"asSet"`
	// ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly string `pulumi:"summaryOnly"`
}

// GetRouterBgpAggregateAddressInput is an input type that accepts GetRouterBgpAggregateAddressArgs and GetRouterBgpAggregateAddressOutput values.
// You can construct a concrete instance of `GetRouterBgpAggregateAddressInput` via:
//
//	GetRouterBgpAggregateAddressArgs{...}
type GetRouterBgpAggregateAddressInput interface {
	pulumi.Input

	ToGetRouterBgpAggregateAddressOutput() GetRouterBgpAggregateAddressOutput
	ToGetRouterBgpAggregateAddressOutputWithContext(context.Context) GetRouterBgpAggregateAddressOutput
}

type GetRouterBgpAggregateAddressArgs struct {
	// Enable/disable generate AS set path information.
	AsSet pulumi.StringInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly pulumi.StringInput `pulumi:"summaryOnly"`
}

func (GetRouterBgpAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAggregateAddress)(nil)).Elem()
}

func (i GetRouterBgpAggregateAddressArgs) ToGetRouterBgpAggregateAddressOutput() GetRouterBgpAggregateAddressOutput {
	return i.ToGetRouterBgpAggregateAddressOutputWithContext(context.Background())
}

func (i GetRouterBgpAggregateAddressArgs) ToGetRouterBgpAggregateAddressOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAggregateAddressOutput)
}

// GetRouterBgpAggregateAddressArrayInput is an input type that accepts GetRouterBgpAggregateAddressArray and GetRouterBgpAggregateAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpAggregateAddressArrayInput` via:
//
//	GetRouterBgpAggregateAddressArray{ GetRouterBgpAggregateAddressArgs{...} }
type GetRouterBgpAggregateAddressArrayInput interface {
	pulumi.Input

	ToGetRouterBgpAggregateAddressArrayOutput() GetRouterBgpAggregateAddressArrayOutput
	ToGetRouterBgpAggregateAddressArrayOutputWithContext(context.Context) GetRouterBgpAggregateAddressArrayOutput
}

type GetRouterBgpAggregateAddressArray []GetRouterBgpAggregateAddressInput

func (GetRouterBgpAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAggregateAddress)(nil)).Elem()
}

func (i GetRouterBgpAggregateAddressArray) ToGetRouterBgpAggregateAddressArrayOutput() GetRouterBgpAggregateAddressArrayOutput {
	return i.ToGetRouterBgpAggregateAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpAggregateAddressArray) ToGetRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpAggregateAddressArrayOutput)
}

type GetRouterBgpAggregateAddressOutput struct{ *pulumi.OutputState }

func (GetRouterBgpAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpAggregateAddress)(nil)).Elem()
}

func (o GetRouterBgpAggregateAddressOutput) ToGetRouterBgpAggregateAddressOutput() GetRouterBgpAggregateAddressOutput {
	return o
}

func (o GetRouterBgpAggregateAddressOutput) ToGetRouterBgpAggregateAddressOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddressOutput {
	return o
}

// Enable/disable generate AS set path information.
func (o GetRouterBgpAggregateAddressOutput) AsSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress) string { return v.AsSet }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBgpAggregateAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetRouterBgpAggregateAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

// Enable/disable filter more specific routes from updates.
func (o GetRouterBgpAggregateAddressOutput) SummaryOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpAggregateAddress) string { return v.SummaryOnly }).(pulumi.StringOutput)
}

type GetRouterBgpAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpAggregateAddress)(nil)).Elem()
}

func (o GetRouterBgpAggregateAddressArrayOutput) ToGetRouterBgpAggregateAddressArrayOutput() GetRouterBgpAggregateAddressArrayOutput {
	return o
}

func (o GetRouterBgpAggregateAddressArrayOutput) ToGetRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) GetRouterBgpAggregateAddressArrayOutput {
	return o
}

func (o GetRouterBgpAggregateAddressArrayOutput) Index(i pulumi.IntInput) GetRouterBgpAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpAggregateAddress {
		return vs[0].([]GetRouterBgpAggregateAddress)[vs[1].(int)]
	}).(GetRouterBgpAggregateAddressOutput)
}

type GetRouterBgpConfederationPeer struct {
	// Peer ID.
	Peer string `pulumi:"peer"`
}

// GetRouterBgpConfederationPeerInput is an input type that accepts GetRouterBgpConfederationPeerArgs and GetRouterBgpConfederationPeerOutput values.
// You can construct a concrete instance of `GetRouterBgpConfederationPeerInput` via:
//
//	GetRouterBgpConfederationPeerArgs{...}
type GetRouterBgpConfederationPeerInput interface {
	pulumi.Input

	ToGetRouterBgpConfederationPeerOutput() GetRouterBgpConfederationPeerOutput
	ToGetRouterBgpConfederationPeerOutputWithContext(context.Context) GetRouterBgpConfederationPeerOutput
}

type GetRouterBgpConfederationPeerArgs struct {
	// Peer ID.
	Peer pulumi.StringInput `pulumi:"peer"`
}

func (GetRouterBgpConfederationPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpConfederationPeer)(nil)).Elem()
}

func (i GetRouterBgpConfederationPeerArgs) ToGetRouterBgpConfederationPeerOutput() GetRouterBgpConfederationPeerOutput {
	return i.ToGetRouterBgpConfederationPeerOutputWithContext(context.Background())
}

func (i GetRouterBgpConfederationPeerArgs) ToGetRouterBgpConfederationPeerOutputWithContext(ctx context.Context) GetRouterBgpConfederationPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpConfederationPeerOutput)
}

// GetRouterBgpConfederationPeerArrayInput is an input type that accepts GetRouterBgpConfederationPeerArray and GetRouterBgpConfederationPeerArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpConfederationPeerArrayInput` via:
//
//	GetRouterBgpConfederationPeerArray{ GetRouterBgpConfederationPeerArgs{...} }
type GetRouterBgpConfederationPeerArrayInput interface {
	pulumi.Input

	ToGetRouterBgpConfederationPeerArrayOutput() GetRouterBgpConfederationPeerArrayOutput
	ToGetRouterBgpConfederationPeerArrayOutputWithContext(context.Context) GetRouterBgpConfederationPeerArrayOutput
}

type GetRouterBgpConfederationPeerArray []GetRouterBgpConfederationPeerInput

func (GetRouterBgpConfederationPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpConfederationPeer)(nil)).Elem()
}

func (i GetRouterBgpConfederationPeerArray) ToGetRouterBgpConfederationPeerArrayOutput() GetRouterBgpConfederationPeerArrayOutput {
	return i.ToGetRouterBgpConfederationPeerArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpConfederationPeerArray) ToGetRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) GetRouterBgpConfederationPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpConfederationPeerArrayOutput)
}

type GetRouterBgpConfederationPeerOutput struct{ *pulumi.OutputState }

func (GetRouterBgpConfederationPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpConfederationPeer)(nil)).Elem()
}

func (o GetRouterBgpConfederationPeerOutput) ToGetRouterBgpConfederationPeerOutput() GetRouterBgpConfederationPeerOutput {
	return o
}

func (o GetRouterBgpConfederationPeerOutput) ToGetRouterBgpConfederationPeerOutputWithContext(ctx context.Context) GetRouterBgpConfederationPeerOutput {
	return o
}

// Peer ID.
func (o GetRouterBgpConfederationPeerOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpConfederationPeer) string { return v.Peer }).(pulumi.StringOutput)
}

type GetRouterBgpConfederationPeerArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpConfederationPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpConfederationPeer)(nil)).Elem()
}

func (o GetRouterBgpConfederationPeerArrayOutput) ToGetRouterBgpConfederationPeerArrayOutput() GetRouterBgpConfederationPeerArrayOutput {
	return o
}

func (o GetRouterBgpConfederationPeerArrayOutput) ToGetRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) GetRouterBgpConfederationPeerArrayOutput {
	return o
}

func (o GetRouterBgpConfederationPeerArrayOutput) Index(i pulumi.IntInput) GetRouterBgpConfederationPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpConfederationPeer {
		return vs[0].([]GetRouterBgpConfederationPeer)[vs[1].(int)]
	}).(GetRouterBgpConfederationPeerOutput)
}

type GetRouterBgpNeighbor struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 string `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 string `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 string `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 int `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 string `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 int `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 string `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor.
	Bfd string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh string `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s []GetRouterBgpNeighborConditionalAdvertise6 `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises []GetRouterBgpNeighborConditionalAdvertise `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 string `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 string `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 string `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 string `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer int `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip string `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 int `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 int `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 int `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 string `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 string `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 string `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 string `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 string `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 string `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable string `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable string `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 string `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 string `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 string `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 string `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor.
	Shutdown string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 string `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down.
	StaleRoute string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight int `pulumi:"weight"`
}

// GetRouterBgpNeighborInput is an input type that accepts GetRouterBgpNeighborArgs and GetRouterBgpNeighborOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborInput` via:
//
//	GetRouterBgpNeighborArgs{...}
type GetRouterBgpNeighborInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborOutput() GetRouterBgpNeighborOutput
	ToGetRouterBgpNeighborOutputWithContext(context.Context) GetRouterBgpNeighborOutput
}

type GetRouterBgpNeighborArgs struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate pulumi.StringInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 pulumi.StringInput `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 pulumi.StringInput `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath pulumi.StringInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 pulumi.StringInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 pulumi.StringInput `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntInput `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable pulumi.StringInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 pulumi.StringInput `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntInput `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride pulumi.StringInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 pulumi.StringInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged pulumi.StringInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 pulumi.StringInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 pulumi.StringInput `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor.
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate pulumi.StringInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 pulumi.StringInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic pulumi.StringInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart pulumi.StringInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 pulumi.StringInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf pulumi.StringInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 pulumi.StringInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh pulumi.StringInput `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s GetRouterBgpNeighborConditionalAdvertise6ArrayInput `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises GetRouterBgpNeighborConditionalAdvertiseArrayInput `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringInput `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringInput `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate pulumi.StringInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop pulumi.StringInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringInput `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringInput `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntInput `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover pulumi.StringInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend pulumi.StringInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs pulumi.StringInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntInput `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntInput `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly pulumi.StringInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf pulumi.StringInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 pulumi.StringInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr pulumi.StringInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 pulumi.StringInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 pulumi.StringInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability pulumi.StringInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive pulumi.StringInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringInput `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringInput `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs pulumi.IntInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs pulumi.StringInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 pulumi.StringInput `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 pulumi.StringInput `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringInput `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringInput `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringInput `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient pulumi.StringInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 pulumi.StringInput `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 pulumi.StringInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient pulumi.StringInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 pulumi.StringInput `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 pulumi.StringInput `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity pulumi.StringInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 pulumi.StringInput `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 pulumi.StringInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor.
	Shutdown pulumi.StringInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration pulumi.StringInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 pulumi.StringInput `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 pulumi.StringInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down.
	StaleRoute pulumi.StringInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch pulumi.StringInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetRouterBgpNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighbor)(nil)).Elem()
}

func (i GetRouterBgpNeighborArgs) ToGetRouterBgpNeighborOutput() GetRouterBgpNeighborOutput {
	return i.ToGetRouterBgpNeighborOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborArgs) ToGetRouterBgpNeighborOutputWithContext(ctx context.Context) GetRouterBgpNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborOutput)
}

// GetRouterBgpNeighborArrayInput is an input type that accepts GetRouterBgpNeighborArray and GetRouterBgpNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborArrayInput` via:
//
//	GetRouterBgpNeighborArray{ GetRouterBgpNeighborArgs{...} }
type GetRouterBgpNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborArrayOutput() GetRouterBgpNeighborArrayOutput
	ToGetRouterBgpNeighborArrayOutputWithContext(context.Context) GetRouterBgpNeighborArrayOutput
}

type GetRouterBgpNeighborArray []GetRouterBgpNeighborInput

func (GetRouterBgpNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighbor)(nil)).Elem()
}

func (i GetRouterBgpNeighborArray) ToGetRouterBgpNeighborArrayOutput() GetRouterBgpNeighborArrayOutput {
	return i.ToGetRouterBgpNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborArray) ToGetRouterBgpNeighborArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborArrayOutput)
}

type GetRouterBgpNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighbor)(nil)).Elem()
}

func (o GetRouterBgpNeighborOutput) ToGetRouterBgpNeighborOutput() GetRouterBgpNeighborOutput {
	return o
}

func (o GetRouterBgpNeighborOutput) ToGetRouterBgpNeighborOutputWithContext(ctx context.Context) GetRouterBgpNeighborOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor.
func (o GetRouterBgpNeighborOutput) Activate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Activate }).(pulumi.StringOutput)
}

// Enable/disable address family IPv6 for this neighbor.
func (o GetRouterBgpNeighborOutput) Activate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Activate6 }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv4 for this neighbor.
func (o GetRouterBgpNeighborOutput) ActivateVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.ActivateVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 additional-path capability.
func (o GetRouterBgpNeighborOutput) AdditionalPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AdditionalPath }).(pulumi.StringOutput)
}

// Enable/disable IPv6 additional-path capability.
func (o GetRouterBgpNeighborOutput) AdditionalPath6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AdditionalPath6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 additional-path capability.
func (o GetRouterBgpNeighborOutput) AdditionalPathVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AdditionalPathVpnv4 }).(pulumi.StringOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborOutput) AdvAdditionalPath() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AdvAdditionalPath }).(pulumi.IntOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborOutput) AdvAdditionalPath6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AdvAdditionalPath6 }).(pulumi.IntOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborOutput) AdvAdditionalPathVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntOutput)
}

// Minimum interval (sec) between sending updates.
func (o GetRouterBgpNeighborOutput) AdvertisementInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AdvertisementInterval }).(pulumi.IntOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o GetRouterBgpNeighborOutput) AllowasIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AllowasIn }).(pulumi.IntOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o GetRouterBgpNeighborOutput) AllowasIn6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AllowasIn6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path.
func (o GetRouterBgpNeighborOutput) AllowasInEnable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AllowasInEnable }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path.
func (o GetRouterBgpNeighborOutput) AllowasInEnable6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AllowasInEnable6 }).(pulumi.StringOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o GetRouterBgpNeighborOutput) AllowasInVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.AllowasInVpnv4 }).(pulumi.IntOutput)
}

// Enable/disable replace peer AS with own AS for IPv4.
func (o GetRouterBgpNeighborOutput) AsOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AsOverride }).(pulumi.StringOutput)
}

// Enable/disable replace peer AS with own AS for IPv6.
func (o GetRouterBgpNeighborOutput) AsOverride6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AsOverride6 }).(pulumi.StringOutput)
}

// IPv4 List of attributes that should be unchanged.
func (o GetRouterBgpNeighborOutput) AttributeUnchanged() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AttributeUnchanged }).(pulumi.StringOutput)
}

// IPv6 List of attributes that should be unchanged.
func (o GetRouterBgpNeighborOutput) AttributeUnchanged6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AttributeUnchanged6 }).(pulumi.StringOutput)
}

// List of attributes that should be unchanged for VPNv4 route.
func (o GetRouterBgpNeighborOutput) AttributeUnchangedVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable BFD for this neighbor.
func (o GetRouterBgpNeighborOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Bfd }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityDefaultOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityDefaultOriginate }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityDefaultOriginate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringOutput)
}

// Enable/disable advertise dynamic capability to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityDynamic }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityGracefulRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityGracefulRestart }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityGracefulRestart6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityGracefulRestart6 }).(pulumi.StringOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityGracefulRestartVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityOrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityOrf }).(pulumi.StringOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityOrf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityOrf6 }).(pulumi.StringOutput)
}

// Enable/disable advertise route refresh capability to this neighbor.
func (o GetRouterBgpNeighborOutput) CapabilityRouteRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.CapabilityRouteRefresh }).(pulumi.StringOutput)
}

// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
func (o GetRouterBgpNeighborOutput) ConditionalAdvertise6s() GetRouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) []GetRouterBgpNeighborConditionalAdvertise6 {
		return v.ConditionalAdvertise6s
	}).(GetRouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
func (o GetRouterBgpNeighborOutput) ConditionalAdvertises() GetRouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) []GetRouterBgpNeighborConditionalAdvertise {
		return v.ConditionalAdvertises
	}).(GetRouterBgpNeighborConditionalAdvertiseArrayOutput)
}

// Interval (sec) for connect timer.
func (o GetRouterBgpNeighborOutput) ConnectTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.ConnectTimer }).(pulumi.IntOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o GetRouterBgpNeighborOutput) DefaultOriginateRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DefaultOriginateRoutemap }).(pulumi.StringOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o GetRouterBgpNeighborOutput) DefaultOriginateRoutemap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringOutput)
}

// Description.
func (o GetRouterBgpNeighborOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Description }).(pulumi.StringOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListIn }).(pulumi.StringOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListIn6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListInVpnv4 }).(pulumi.StringOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListOut }).(pulumi.StringOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListOut6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o GetRouterBgpNeighborOutput) DistributeListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DistributeListOutVpnv4 }).(pulumi.StringOutput)
}

// Don't negotiate capabilities with this neighbor
func (o GetRouterBgpNeighborOutput) DontCapabilityNegotiate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.DontCapabilityNegotiate }).(pulumi.StringOutput)
}

// Enable/disable allow multi-hop EBGP neighbors.
func (o GetRouterBgpNeighborOutput) EbgpEnforceMultihop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.EbgpEnforceMultihop }).(pulumi.StringOutput)
}

// EBGP multihop TTL for this peer.
func (o GetRouterBgpNeighborOutput) EbgpMultihopTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.EbgpMultihopTtl }).(pulumi.IntOutput)
}

// BGP filter for IPv4 inbound routes.
func (o GetRouterBgpNeighborOutput) FilterListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.FilterListIn }).(pulumi.StringOutput)
}

// BGP filter for IPv6 inbound routes.
func (o GetRouterBgpNeighborOutput) FilterListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.FilterListIn6 }).(pulumi.StringOutput)
}

// BGP filter for IPv4 outbound routes.
func (o GetRouterBgpNeighborOutput) FilterListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.FilterListOut }).(pulumi.StringOutput)
}

// BGP filter for IPv6 outbound routes.
func (o GetRouterBgpNeighborOutput) FilterListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.FilterListOut6 }).(pulumi.StringOutput)
}

// Interval (sec) before peer considered dead.
func (o GetRouterBgpNeighborOutput) HoldtimeTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.HoldtimeTimer }).(pulumi.IntOutput)
}

// Interface which is used to leak routes to target VRF.
func (o GetRouterBgpNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IP/IPv6 address of neighbor.
func (o GetRouterBgpNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

// Keep alive timer interval (sec).
func (o GetRouterBgpNeighborOutput) KeepAliveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.KeepAliveTimer }).(pulumi.IntOutput)
}

// Enable/disable failover upon link down.
func (o GetRouterBgpNeighborOutput) LinkDownFailover() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.LinkDownFailover }).(pulumi.StringOutput)
}

// Local AS number of neighbor.
func (o GetRouterBgpNeighborOutput) LocalAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.LocalAs }).(pulumi.IntOutput)
}

// Do not prepend local-as to incoming updates.
func (o GetRouterBgpNeighborOutput) LocalAsNoPrepend() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.LocalAsNoPrepend }).(pulumi.StringOutput)
}

// Replace real AS with local-as in outgoing updates.
func (o GetRouterBgpNeighborOutput) LocalAsReplaceAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.LocalAsReplaceAs }).(pulumi.StringOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o GetRouterBgpNeighborOutput) MaximumPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefix }).(pulumi.IntOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o GetRouterBgpNeighborOutput) MaximumPrefix6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefix6 }).(pulumi.IntOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborOutput) MaximumPrefixThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefixThreshold }).(pulumi.IntOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborOutput) MaximumPrefixThreshold6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefixThreshold6 }).(pulumi.IntOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborOutput) MaximumPrefixThresholdVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o GetRouterBgpNeighborOutput) MaximumPrefixVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.MaximumPrefixVpnv4 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded.
func (o GetRouterBgpNeighborOutput) MaximumPrefixWarningOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.MaximumPrefixWarningOnly }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded.
func (o GetRouterBgpNeighborOutput) MaximumPrefixWarningOnly6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
func (o GetRouterBgpNeighborOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor.
func (o GetRouterBgpNeighborOutput) NextHopSelf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.NextHopSelf }).(pulumi.StringOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor.
func (o GetRouterBgpNeighborOutput) NextHopSelf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.NextHopSelf6 }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
func (o GetRouterBgpNeighborOutput) NextHopSelfRr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.NextHopSelfRr }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
func (o GetRouterBgpNeighborOutput) NextHopSelfRr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.NextHopSelfRr6 }).(pulumi.StringOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
func (o GetRouterBgpNeighborOutput) NextHopSelfVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.NextHopSelfVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable override result of capability negotiation.
func (o GetRouterBgpNeighborOutput) OverrideCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.OverrideCapability }).(pulumi.StringOutput)
}

// Enable/disable sending of open messages to this neighbor.
func (o GetRouterBgpNeighborOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Passive }).(pulumi.StringOutput)
}

// Password used in MD5 authentication.
func (o GetRouterBgpNeighborOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Password }).(pulumi.StringOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListIn }).(pulumi.StringOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListIn6 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListInVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListOut }).(pulumi.StringOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListOut6 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o GetRouterBgpNeighborOutput) PrefixListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.PrefixListOutVpnv4 }).(pulumi.StringOutput)
}

// AS number of neighbor.
func (o GetRouterBgpNeighborOutput) RemoteAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.RemoteAs }).(pulumi.IntOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates.
func (o GetRouterBgpNeighborOutput) RemovePrivateAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RemovePrivateAs }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates.
func (o GetRouterBgpNeighborOutput) RemovePrivateAs6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RemovePrivateAs6 }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates.
func (o GetRouterBgpNeighborOutput) RemovePrivateAsVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o GetRouterBgpNeighborOutput) RestartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.RestartTime }).(pulumi.IntOutput)
}

// Time to retain stale routes.
func (o GetRouterBgpNeighborOutput) RetainStaleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.RetainStaleTime }).(pulumi.IntOutput)
}

// IPv4 Inbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapIn }).(pulumi.StringOutput)
}

// IPv6 Inbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapIn6 }).(pulumi.StringOutput)
}

// VPNv4 inbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapInVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Outbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOut }).(pulumi.StringOutput)
}

// IPv6 Outbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOut6 }).(pulumi.StringOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborOutput) RouteMapOut6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOut6Preferable }).(pulumi.StringOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborOutput) RouteMapOutPreferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOutPreferable }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter.
func (o GetRouterBgpNeighborOutput) RouteMapOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOutVpnv4 }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborOutput) RouteMapOutVpnv4Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route reflector client.
func (o GetRouterBgpNeighborOutput) RouteReflectorClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteReflectorClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route reflector client.
func (o GetRouterBgpNeighborOutput) RouteReflectorClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteReflectorClient6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor.
func (o GetRouterBgpNeighborOutput) RouteReflectorClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route server client.
func (o GetRouterBgpNeighborOutput) RouteServerClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteServerClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route server client.
func (o GetRouterBgpNeighborOutput) RouteServerClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteServerClient6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor.
func (o GetRouterBgpNeighborOutput) RouteServerClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.RouteServerClientVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Send community attribute to neighbor.
func (o GetRouterBgpNeighborOutput) SendCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SendCommunity }).(pulumi.StringOutput)
}

// IPv6 Send community attribute to neighbor.
func (o GetRouterBgpNeighborOutput) SendCommunity6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SendCommunity6 }).(pulumi.StringOutput)
}

// Send community attribute to neighbor for VPNv4 address family.
func (o GetRouterBgpNeighborOutput) SendCommunityVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SendCommunityVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable shutdown this neighbor.
func (o GetRouterBgpNeighborOutput) Shutdown() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.Shutdown }).(pulumi.StringOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration.
func (o GetRouterBgpNeighborOutput) SoftReconfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SoftReconfiguration }).(pulumi.StringOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration.
func (o GetRouterBgpNeighborOutput) SoftReconfiguration6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SoftReconfiguration6 }).(pulumi.StringOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration.
func (o GetRouterBgpNeighborOutput) SoftReconfigurationVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable stale route after neighbor down.
func (o GetRouterBgpNeighborOutput) StaleRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.StaleRoute }).(pulumi.StringOutput)
}

// Enable/disable strict capability matching.
func (o GetRouterBgpNeighborOutput) StrictCapabilityMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.StrictCapabilityMatch }).(pulumi.StringOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o GetRouterBgpNeighborOutput) UnsuppressMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.UnsuppressMap }).(pulumi.StringOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o GetRouterBgpNeighborOutput) UnsuppressMap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.UnsuppressMap6 }).(pulumi.StringOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o GetRouterBgpNeighborOutput) UpdateSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) string { return v.UpdateSource }).(pulumi.StringOutput)
}

// Neighbor weight.
func (o GetRouterBgpNeighborOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighbor) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouterBgpNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighbor)(nil)).Elem()
}

func (o GetRouterBgpNeighborArrayOutput) ToGetRouterBgpNeighborArrayOutput() GetRouterBgpNeighborArrayOutput {
	return o
}

func (o GetRouterBgpNeighborArrayOutput) ToGetRouterBgpNeighborArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborArrayOutput {
	return o
}

func (o GetRouterBgpNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighbor {
		return vs[0].([]GetRouterBgpNeighbor)[vs[1].(int)]
	}).(GetRouterBgpNeighborOutput)
}

type GetRouterBgpNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetRouterBgpNeighborConditionalAdvertise6Input is an input type that accepts GetRouterBgpNeighborConditionalAdvertise6Args and GetRouterBgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `GetRouterBgpNeighborConditionalAdvertise6Input` via:
//
//	GetRouterBgpNeighborConditionalAdvertise6Args{...}
type GetRouterBgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToGetRouterBgpNeighborConditionalAdvertise6Output() GetRouterBgpNeighborConditionalAdvertise6Output
	ToGetRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Context) GetRouterBgpNeighborConditionalAdvertise6Output
}

type GetRouterBgpNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetRouterBgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetRouterBgpNeighborConditionalAdvertise6Args) ToGetRouterBgpNeighborConditionalAdvertise6Output() GetRouterBgpNeighborConditionalAdvertise6Output {
	return i.ToGetRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborConditionalAdvertise6Args) ToGetRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborConditionalAdvertise6Output)
}

// GetRouterBgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts GetRouterBgpNeighborConditionalAdvertise6Array and GetRouterBgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	GetRouterBgpNeighborConditionalAdvertise6Array{ GetRouterBgpNeighborConditionalAdvertise6Args{...} }
type GetRouterBgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutput() GetRouterBgpNeighborConditionalAdvertise6ArrayOutput
	ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) GetRouterBgpNeighborConditionalAdvertise6ArrayOutput
}

type GetRouterBgpNeighborConditionalAdvertise6Array []GetRouterBgpNeighborConditionalAdvertise6Input

func (GetRouterBgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetRouterBgpNeighborConditionalAdvertise6Array) ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutput() GetRouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborConditionalAdvertise6Array) ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

type GetRouterBgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetRouterBgpNeighborConditionalAdvertise6Output) ToGetRouterBgpNeighborConditionalAdvertise6Output() GetRouterBgpNeighborConditionalAdvertise6Output {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertise6Output) ToGetRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o GetRouterBgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise6) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetRouterBgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise6) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetRouterBgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise6) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetRouterBgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetRouterBgpNeighborConditionalAdvertise6ArrayOutput) ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutput() GetRouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertise6ArrayOutput) ToGetRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighborConditionalAdvertise6 {
		return vs[0].([]GetRouterBgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(GetRouterBgpNeighborConditionalAdvertise6Output)
}

type GetRouterBgpNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetRouterBgpNeighborConditionalAdvertiseInput is an input type that accepts GetRouterBgpNeighborConditionalAdvertiseArgs and GetRouterBgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborConditionalAdvertiseInput` via:
//
//	GetRouterBgpNeighborConditionalAdvertiseArgs{...}
type GetRouterBgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborConditionalAdvertiseOutput() GetRouterBgpNeighborConditionalAdvertiseOutput
	ToGetRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Context) GetRouterBgpNeighborConditionalAdvertiseOutput
}

type GetRouterBgpNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetRouterBgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetRouterBgpNeighborConditionalAdvertiseArgs) ToGetRouterBgpNeighborConditionalAdvertiseOutput() GetRouterBgpNeighborConditionalAdvertiseOutput {
	return i.ToGetRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborConditionalAdvertiseArgs) ToGetRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborConditionalAdvertiseOutput)
}

// GetRouterBgpNeighborConditionalAdvertiseArrayInput is an input type that accepts GetRouterBgpNeighborConditionalAdvertiseArray and GetRouterBgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborConditionalAdvertiseArrayInput` via:
//
//	GetRouterBgpNeighborConditionalAdvertiseArray{ GetRouterBgpNeighborConditionalAdvertiseArgs{...} }
type GetRouterBgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborConditionalAdvertiseArrayOutput() GetRouterBgpNeighborConditionalAdvertiseArrayOutput
	ToGetRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) GetRouterBgpNeighborConditionalAdvertiseArrayOutput
}

type GetRouterBgpNeighborConditionalAdvertiseArray []GetRouterBgpNeighborConditionalAdvertiseInput

func (GetRouterBgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetRouterBgpNeighborConditionalAdvertiseArray) ToGetRouterBgpNeighborConditionalAdvertiseArrayOutput() GetRouterBgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToGetRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborConditionalAdvertiseArray) ToGetRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborConditionalAdvertiseArrayOutput)
}

type GetRouterBgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetRouterBgpNeighborConditionalAdvertiseOutput) ToGetRouterBgpNeighborConditionalAdvertiseOutput() GetRouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertiseOutput) ToGetRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o GetRouterBgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetRouterBgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetRouterBgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborConditionalAdvertise) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetRouterBgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetRouterBgpNeighborConditionalAdvertiseArrayOutput) ToGetRouterBgpNeighborConditionalAdvertiseArrayOutput() GetRouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertiseArrayOutput) ToGetRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetRouterBgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighborConditionalAdvertise {
		return vs[0].([]GetRouterBgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(GetRouterBgpNeighborConditionalAdvertiseOutput)
}

type GetRouterBgpNeighborGroup struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 string `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 string `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 string `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 int `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 string `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 int `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 string `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor.
	Bfd string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh string `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 string `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 string `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 string `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 string `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer int `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 int `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 int `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 int `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive string `pulumi:"passive"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 string `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 string `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 string `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 string `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 string `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 string `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable string `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable string `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 string `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 string `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 string `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 string `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor.
	Shutdown string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 string `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down.
	StaleRoute string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight int `pulumi:"weight"`
}

// GetRouterBgpNeighborGroupInput is an input type that accepts GetRouterBgpNeighborGroupArgs and GetRouterBgpNeighborGroupOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborGroupInput` via:
//
//	GetRouterBgpNeighborGroupArgs{...}
type GetRouterBgpNeighborGroupInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborGroupOutput() GetRouterBgpNeighborGroupOutput
	ToGetRouterBgpNeighborGroupOutputWithContext(context.Context) GetRouterBgpNeighborGroupOutput
}

type GetRouterBgpNeighborGroupArgs struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate pulumi.StringInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 pulumi.StringInput `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 pulumi.StringInput `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath pulumi.StringInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 pulumi.StringInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 pulumi.StringInput `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntInput `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable pulumi.StringInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 pulumi.StringInput `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntInput `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride pulumi.StringInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 pulumi.StringInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged pulumi.StringInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 pulumi.StringInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 pulumi.StringInput `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor.
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate pulumi.StringInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 pulumi.StringInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic pulumi.StringInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart pulumi.StringInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 pulumi.StringInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf pulumi.StringInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 pulumi.StringInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh pulumi.StringInput `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringInput `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringInput `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate pulumi.StringInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop pulumi.StringInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringInput `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringInput `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntInput `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover pulumi.StringInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend pulumi.StringInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs pulumi.StringInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntInput `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntInput `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly pulumi.StringInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf pulumi.StringInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 pulumi.StringInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr pulumi.StringInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 pulumi.StringInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 pulumi.StringInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability pulumi.StringInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive pulumi.StringInput `pulumi:"passive"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringInput `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringInput `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs pulumi.IntInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs pulumi.StringInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 pulumi.StringInput `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 pulumi.StringInput `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringInput `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringInput `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringInput `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient pulumi.StringInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 pulumi.StringInput `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 pulumi.StringInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient pulumi.StringInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 pulumi.StringInput `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 pulumi.StringInput `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity pulumi.StringInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 pulumi.StringInput `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 pulumi.StringInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor.
	Shutdown pulumi.StringInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration pulumi.StringInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 pulumi.StringInput `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 pulumi.StringInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down.
	StaleRoute pulumi.StringInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch pulumi.StringInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetRouterBgpNeighborGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborGroup)(nil)).Elem()
}

func (i GetRouterBgpNeighborGroupArgs) ToGetRouterBgpNeighborGroupOutput() GetRouterBgpNeighborGroupOutput {
	return i.ToGetRouterBgpNeighborGroupOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborGroupArgs) ToGetRouterBgpNeighborGroupOutputWithContext(ctx context.Context) GetRouterBgpNeighborGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborGroupOutput)
}

// GetRouterBgpNeighborGroupArrayInput is an input type that accepts GetRouterBgpNeighborGroupArray and GetRouterBgpNeighborGroupArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborGroupArrayInput` via:
//
//	GetRouterBgpNeighborGroupArray{ GetRouterBgpNeighborGroupArgs{...} }
type GetRouterBgpNeighborGroupArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborGroupArrayOutput() GetRouterBgpNeighborGroupArrayOutput
	ToGetRouterBgpNeighborGroupArrayOutputWithContext(context.Context) GetRouterBgpNeighborGroupArrayOutput
}

type GetRouterBgpNeighborGroupArray []GetRouterBgpNeighborGroupInput

func (GetRouterBgpNeighborGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborGroup)(nil)).Elem()
}

func (i GetRouterBgpNeighborGroupArray) ToGetRouterBgpNeighborGroupArrayOutput() GetRouterBgpNeighborGroupArrayOutput {
	return i.ToGetRouterBgpNeighborGroupArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborGroupArray) ToGetRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborGroupArrayOutput)
}

type GetRouterBgpNeighborGroupOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborGroup)(nil)).Elem()
}

func (o GetRouterBgpNeighborGroupOutput) ToGetRouterBgpNeighborGroupOutput() GetRouterBgpNeighborGroupOutput {
	return o
}

func (o GetRouterBgpNeighborGroupOutput) ToGetRouterBgpNeighborGroupOutputWithContext(ctx context.Context) GetRouterBgpNeighborGroupOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) Activate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Activate }).(pulumi.StringOutput)
}

// Enable/disable address family IPv6 for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) Activate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Activate6 }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv4 for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) ActivateVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.ActivateVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 additional-path capability.
func (o GetRouterBgpNeighborGroupOutput) AdditionalPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AdditionalPath }).(pulumi.StringOutput)
}

// Enable/disable IPv6 additional-path capability.
func (o GetRouterBgpNeighborGroupOutput) AdditionalPath6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AdditionalPath6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 additional-path capability.
func (o GetRouterBgpNeighborGroupOutput) AdditionalPathVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AdditionalPathVpnv4 }).(pulumi.StringOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) AdvAdditionalPath() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AdvAdditionalPath }).(pulumi.IntOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) AdvAdditionalPath6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AdvAdditionalPath6 }).(pulumi.IntOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) AdvAdditionalPathVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntOutput)
}

// Minimum interval (sec) between sending updates.
func (o GetRouterBgpNeighborGroupOutput) AdvertisementInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AdvertisementInterval }).(pulumi.IntOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o GetRouterBgpNeighborGroupOutput) AllowasIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AllowasIn }).(pulumi.IntOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o GetRouterBgpNeighborGroupOutput) AllowasIn6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AllowasIn6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path.
func (o GetRouterBgpNeighborGroupOutput) AllowasInEnable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AllowasInEnable }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path.
func (o GetRouterBgpNeighborGroupOutput) AllowasInEnable6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AllowasInEnable6 }).(pulumi.StringOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o GetRouterBgpNeighborGroupOutput) AllowasInVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.AllowasInVpnv4 }).(pulumi.IntOutput)
}

// Enable/disable replace peer AS with own AS for IPv4.
func (o GetRouterBgpNeighborGroupOutput) AsOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AsOverride }).(pulumi.StringOutput)
}

// Enable/disable replace peer AS with own AS for IPv6.
func (o GetRouterBgpNeighborGroupOutput) AsOverride6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AsOverride6 }).(pulumi.StringOutput)
}

// IPv4 List of attributes that should be unchanged.
func (o GetRouterBgpNeighborGroupOutput) AttributeUnchanged() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AttributeUnchanged }).(pulumi.StringOutput)
}

// IPv6 List of attributes that should be unchanged.
func (o GetRouterBgpNeighborGroupOutput) AttributeUnchanged6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AttributeUnchanged6 }).(pulumi.StringOutput)
}

// List of attributes that should be unchanged for VPNv4 route.
func (o GetRouterBgpNeighborGroupOutput) AttributeUnchangedVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable BFD for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Bfd }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityDefaultOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityDefaultOriginate }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityDefaultOriginate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringOutput)
}

// Enable/disable advertise dynamic capability to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityDynamic }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityGracefulRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityGracefulRestart }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityGracefulRestart6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityGracefulRestart6 }).(pulumi.StringOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityGracefulRestartVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityOrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityOrf }).(pulumi.StringOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityOrf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityOrf6 }).(pulumi.StringOutput)
}

// Enable/disable advertise route refresh capability to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) CapabilityRouteRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.CapabilityRouteRefresh }).(pulumi.StringOutput)
}

// Interval (sec) for connect timer.
func (o GetRouterBgpNeighborGroupOutput) ConnectTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.ConnectTimer }).(pulumi.IntOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o GetRouterBgpNeighborGroupOutput) DefaultOriginateRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DefaultOriginateRoutemap }).(pulumi.StringOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o GetRouterBgpNeighborGroupOutput) DefaultOriginateRoutemap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringOutput)
}

// Description.
func (o GetRouterBgpNeighborGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListIn }).(pulumi.StringOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListIn6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListInVpnv4 }).(pulumi.StringOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListOut }).(pulumi.StringOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListOut6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) DistributeListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DistributeListOutVpnv4 }).(pulumi.StringOutput)
}

// Don't negotiate capabilities with this neighbor
func (o GetRouterBgpNeighborGroupOutput) DontCapabilityNegotiate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.DontCapabilityNegotiate }).(pulumi.StringOutput)
}

// Enable/disable allow multi-hop EBGP neighbors.
func (o GetRouterBgpNeighborGroupOutput) EbgpEnforceMultihop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.EbgpEnforceMultihop }).(pulumi.StringOutput)
}

// EBGP multihop TTL for this peer.
func (o GetRouterBgpNeighborGroupOutput) EbgpMultihopTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.EbgpMultihopTtl }).(pulumi.IntOutput)
}

// BGP filter for IPv4 inbound routes.
func (o GetRouterBgpNeighborGroupOutput) FilterListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.FilterListIn }).(pulumi.StringOutput)
}

// BGP filter for IPv6 inbound routes.
func (o GetRouterBgpNeighborGroupOutput) FilterListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.FilterListIn6 }).(pulumi.StringOutput)
}

// BGP filter for IPv4 outbound routes.
func (o GetRouterBgpNeighborGroupOutput) FilterListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.FilterListOut }).(pulumi.StringOutput)
}

// BGP filter for IPv6 outbound routes.
func (o GetRouterBgpNeighborGroupOutput) FilterListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.FilterListOut6 }).(pulumi.StringOutput)
}

// Interval (sec) before peer considered dead.
func (o GetRouterBgpNeighborGroupOutput) HoldtimeTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.HoldtimeTimer }).(pulumi.IntOutput)
}

// Interface which is used to leak routes to target VRF.
func (o GetRouterBgpNeighborGroupOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Interface }).(pulumi.StringOutput)
}

// Keep alive timer interval (sec).
func (o GetRouterBgpNeighborGroupOutput) KeepAliveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.KeepAliveTimer }).(pulumi.IntOutput)
}

// Enable/disable failover upon link down.
func (o GetRouterBgpNeighborGroupOutput) LinkDownFailover() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.LinkDownFailover }).(pulumi.StringOutput)
}

// Local AS number of neighbor.
func (o GetRouterBgpNeighborGroupOutput) LocalAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.LocalAs }).(pulumi.IntOutput)
}

// Do not prepend local-as to incoming updates.
func (o GetRouterBgpNeighborGroupOutput) LocalAsNoPrepend() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.LocalAsNoPrepend }).(pulumi.StringOutput)
}

// Replace real AS with local-as in outgoing updates.
func (o GetRouterBgpNeighborGroupOutput) LocalAsReplaceAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.LocalAsReplaceAs }).(pulumi.StringOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefix }).(pulumi.IntOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefix6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefix6 }).(pulumi.IntOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefixThreshold }).(pulumi.IntOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixThreshold6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefixThreshold6 }).(pulumi.IntOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixThresholdVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.MaximumPrefixVpnv4 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.MaximumPrefixWarningOnly }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
func (o GetRouterBgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringOutput)
}

// Distribute list entry name.
func (o GetRouterBgpNeighborGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) NextHopSelf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.NextHopSelf }).(pulumi.StringOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) NextHopSelf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.NextHopSelf6 }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
func (o GetRouterBgpNeighborGroupOutput) NextHopSelfRr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.NextHopSelfRr }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
func (o GetRouterBgpNeighborGroupOutput) NextHopSelfRr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.NextHopSelfRr6 }).(pulumi.StringOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) NextHopSelfVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.NextHopSelfVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable override result of capability negotiation.
func (o GetRouterBgpNeighborGroupOutput) OverrideCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.OverrideCapability }).(pulumi.StringOutput)
}

// Enable/disable sending of open messages to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Passive }).(pulumi.StringOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListIn }).(pulumi.StringOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListIn6 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListInVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListOut }).(pulumi.StringOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListOut6 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o GetRouterBgpNeighborGroupOutput) PrefixListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.PrefixListOutVpnv4 }).(pulumi.StringOutput)
}

// AS number of neighbor.
func (o GetRouterBgpNeighborGroupOutput) RemoteAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.RemoteAs }).(pulumi.IntOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates.
func (o GetRouterBgpNeighborGroupOutput) RemovePrivateAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RemovePrivateAs }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates.
func (o GetRouterBgpNeighborGroupOutput) RemovePrivateAs6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RemovePrivateAs6 }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates.
func (o GetRouterBgpNeighborGroupOutput) RemovePrivateAsVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o GetRouterBgpNeighborGroupOutput) RestartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.RestartTime }).(pulumi.IntOutput)
}

// Time to retain stale routes.
func (o GetRouterBgpNeighborGroupOutput) RetainStaleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.RetainStaleTime }).(pulumi.IntOutput)
}

// IPv4 Inbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapIn }).(pulumi.StringOutput)
}

// IPv6 Inbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapIn6 }).(pulumi.StringOutput)
}

// VPNv4 inbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapInVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Outbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOut }).(pulumi.StringOutput)
}

// IPv6 Outbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOut6 }).(pulumi.StringOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOut6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOut6Preferable }).(pulumi.StringOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOutPreferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOutPreferable }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOutVpnv4 }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o GetRouterBgpNeighborGroupOutput) RouteMapOutVpnv4Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route reflector client.
func (o GetRouterBgpNeighborGroupOutput) RouteReflectorClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteReflectorClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route reflector client.
func (o GetRouterBgpNeighborGroupOutput) RouteReflectorClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteReflectorClient6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) RouteReflectorClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route server client.
func (o GetRouterBgpNeighborGroupOutput) RouteServerClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteServerClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route server client.
func (o GetRouterBgpNeighborGroupOutput) RouteServerClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteServerClient6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor.
func (o GetRouterBgpNeighborGroupOutput) RouteServerClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.RouteServerClientVpnv4 }).(pulumi.StringOutput)
}

// IPv4 Send community attribute to neighbor.
func (o GetRouterBgpNeighborGroupOutput) SendCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SendCommunity }).(pulumi.StringOutput)
}

// IPv6 Send community attribute to neighbor.
func (o GetRouterBgpNeighborGroupOutput) SendCommunity6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SendCommunity6 }).(pulumi.StringOutput)
}

// Send community attribute to neighbor for VPNv4 address family.
func (o GetRouterBgpNeighborGroupOutput) SendCommunityVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SendCommunityVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable shutdown this neighbor.
func (o GetRouterBgpNeighborGroupOutput) Shutdown() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.Shutdown }).(pulumi.StringOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration.
func (o GetRouterBgpNeighborGroupOutput) SoftReconfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SoftReconfiguration }).(pulumi.StringOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration.
func (o GetRouterBgpNeighborGroupOutput) SoftReconfiguration6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SoftReconfiguration6 }).(pulumi.StringOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration.
func (o GetRouterBgpNeighborGroupOutput) SoftReconfigurationVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable stale route after neighbor down.
func (o GetRouterBgpNeighborGroupOutput) StaleRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.StaleRoute }).(pulumi.StringOutput)
}

// Enable/disable strict capability matching.
func (o GetRouterBgpNeighborGroupOutput) StrictCapabilityMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.StrictCapabilityMatch }).(pulumi.StringOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o GetRouterBgpNeighborGroupOutput) UnsuppressMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.UnsuppressMap }).(pulumi.StringOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o GetRouterBgpNeighborGroupOutput) UnsuppressMap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.UnsuppressMap6 }).(pulumi.StringOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o GetRouterBgpNeighborGroupOutput) UpdateSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) string { return v.UpdateSource }).(pulumi.StringOutput)
}

// Neighbor weight.
func (o GetRouterBgpNeighborGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouterBgpNeighborGroupArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborGroup)(nil)).Elem()
}

func (o GetRouterBgpNeighborGroupArrayOutput) ToGetRouterBgpNeighborGroupArrayOutput() GetRouterBgpNeighborGroupArrayOutput {
	return o
}

func (o GetRouterBgpNeighborGroupArrayOutput) ToGetRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborGroupArrayOutput {
	return o
}

func (o GetRouterBgpNeighborGroupArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighborGroup {
		return vs[0].([]GetRouterBgpNeighborGroup)[vs[1].(int)]
	}).(GetRouterBgpNeighborGroupOutput)
}

type GetRouterBgpNeighborRange6 struct {
	// ID.
	Id int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup string `pulumi:"neighborGroup"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterBgpNeighborRange6Input is an input type that accepts GetRouterBgpNeighborRange6Args and GetRouterBgpNeighborRange6Output values.
// You can construct a concrete instance of `GetRouterBgpNeighborRange6Input` via:
//
//	GetRouterBgpNeighborRange6Args{...}
type GetRouterBgpNeighborRange6Input interface {
	pulumi.Input

	ToGetRouterBgpNeighborRange6Output() GetRouterBgpNeighborRange6Output
	ToGetRouterBgpNeighborRange6OutputWithContext(context.Context) GetRouterBgpNeighborRange6Output
}

type GetRouterBgpNeighborRange6Args struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringInput `pulumi:"neighborGroup"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterBgpNeighborRange6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborRange6)(nil)).Elem()
}

func (i GetRouterBgpNeighborRange6Args) ToGetRouterBgpNeighborRange6Output() GetRouterBgpNeighborRange6Output {
	return i.ToGetRouterBgpNeighborRange6OutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborRange6Args) ToGetRouterBgpNeighborRange6OutputWithContext(ctx context.Context) GetRouterBgpNeighborRange6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborRange6Output)
}

// GetRouterBgpNeighborRange6ArrayInput is an input type that accepts GetRouterBgpNeighborRange6Array and GetRouterBgpNeighborRange6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborRange6ArrayInput` via:
//
//	GetRouterBgpNeighborRange6Array{ GetRouterBgpNeighborRange6Args{...} }
type GetRouterBgpNeighborRange6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborRange6ArrayOutput() GetRouterBgpNeighborRange6ArrayOutput
	ToGetRouterBgpNeighborRange6ArrayOutputWithContext(context.Context) GetRouterBgpNeighborRange6ArrayOutput
}

type GetRouterBgpNeighborRange6Array []GetRouterBgpNeighborRange6Input

func (GetRouterBgpNeighborRange6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborRange6)(nil)).Elem()
}

func (i GetRouterBgpNeighborRange6Array) ToGetRouterBgpNeighborRange6ArrayOutput() GetRouterBgpNeighborRange6ArrayOutput {
	return i.ToGetRouterBgpNeighborRange6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborRange6Array) ToGetRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborRange6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborRange6ArrayOutput)
}

type GetRouterBgpNeighborRange6Output struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborRange6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborRange6)(nil)).Elem()
}

func (o GetRouterBgpNeighborRange6Output) ToGetRouterBgpNeighborRange6Output() GetRouterBgpNeighborRange6Output {
	return o
}

func (o GetRouterBgpNeighborRange6Output) ToGetRouterBgpNeighborRange6OutputWithContext(ctx context.Context) GetRouterBgpNeighborRange6Output {
	return o
}

// ID.
func (o GetRouterBgpNeighborRange6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange6) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum number of neighbors.
func (o GetRouterBgpNeighborRange6Output) MaxNeighborNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange6) int { return v.MaxNeighborNum }).(pulumi.IntOutput)
}

// Neighbor group name.
func (o GetRouterBgpNeighborRange6Output) NeighborGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange6) string { return v.NeighborGroup }).(pulumi.StringOutput)
}

// Network IPv6 prefix.
func (o GetRouterBgpNeighborRange6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterBgpNeighborRange6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborRange6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborRange6)(nil)).Elem()
}

func (o GetRouterBgpNeighborRange6ArrayOutput) ToGetRouterBgpNeighborRange6ArrayOutput() GetRouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o GetRouterBgpNeighborRange6ArrayOutput) ToGetRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o GetRouterBgpNeighborRange6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborRange6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighborRange6 {
		return vs[0].([]GetRouterBgpNeighborRange6)[vs[1].(int)]
	}).(GetRouterBgpNeighborRange6Output)
}

type GetRouterBgpNeighborRange struct {
	// ID.
	Id int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup string `pulumi:"neighborGroup"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterBgpNeighborRangeInput is an input type that accepts GetRouterBgpNeighborRangeArgs and GetRouterBgpNeighborRangeOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborRangeInput` via:
//
//	GetRouterBgpNeighborRangeArgs{...}
type GetRouterBgpNeighborRangeInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborRangeOutput() GetRouterBgpNeighborRangeOutput
	ToGetRouterBgpNeighborRangeOutputWithContext(context.Context) GetRouterBgpNeighborRangeOutput
}

type GetRouterBgpNeighborRangeArgs struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringInput `pulumi:"neighborGroup"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterBgpNeighborRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborRange)(nil)).Elem()
}

func (i GetRouterBgpNeighborRangeArgs) ToGetRouterBgpNeighborRangeOutput() GetRouterBgpNeighborRangeOutput {
	return i.ToGetRouterBgpNeighborRangeOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborRangeArgs) ToGetRouterBgpNeighborRangeOutputWithContext(ctx context.Context) GetRouterBgpNeighborRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborRangeOutput)
}

// GetRouterBgpNeighborRangeArrayInput is an input type that accepts GetRouterBgpNeighborRangeArray and GetRouterBgpNeighborRangeArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNeighborRangeArrayInput` via:
//
//	GetRouterBgpNeighborRangeArray{ GetRouterBgpNeighborRangeArgs{...} }
type GetRouterBgpNeighborRangeArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNeighborRangeArrayOutput() GetRouterBgpNeighborRangeArrayOutput
	ToGetRouterBgpNeighborRangeArrayOutputWithContext(context.Context) GetRouterBgpNeighborRangeArrayOutput
}

type GetRouterBgpNeighborRangeArray []GetRouterBgpNeighborRangeInput

func (GetRouterBgpNeighborRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborRange)(nil)).Elem()
}

func (i GetRouterBgpNeighborRangeArray) ToGetRouterBgpNeighborRangeArrayOutput() GetRouterBgpNeighborRangeArrayOutput {
	return i.ToGetRouterBgpNeighborRangeArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNeighborRangeArray) ToGetRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNeighborRangeArrayOutput)
}

type GetRouterBgpNeighborRangeOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNeighborRange)(nil)).Elem()
}

func (o GetRouterBgpNeighborRangeOutput) ToGetRouterBgpNeighborRangeOutput() GetRouterBgpNeighborRangeOutput {
	return o
}

func (o GetRouterBgpNeighborRangeOutput) ToGetRouterBgpNeighborRangeOutputWithContext(ctx context.Context) GetRouterBgpNeighborRangeOutput {
	return o
}

// ID.
func (o GetRouterBgpNeighborRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum number of neighbors.
func (o GetRouterBgpNeighborRangeOutput) MaxNeighborNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange) int { return v.MaxNeighborNum }).(pulumi.IntOutput)
}

// Neighbor group name.
func (o GetRouterBgpNeighborRangeOutput) NeighborGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange) string { return v.NeighborGroup }).(pulumi.StringOutput)
}

// Network prefix.
func (o GetRouterBgpNeighborRangeOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNeighborRange) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterBgpNeighborRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNeighborRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNeighborRange)(nil)).Elem()
}

func (o GetRouterBgpNeighborRangeArrayOutput) ToGetRouterBgpNeighborRangeArrayOutput() GetRouterBgpNeighborRangeArrayOutput {
	return o
}

func (o GetRouterBgpNeighborRangeArrayOutput) ToGetRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) GetRouterBgpNeighborRangeArrayOutput {
	return o
}

func (o GetRouterBgpNeighborRangeArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNeighborRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNeighborRange {
		return vs[0].([]GetRouterBgpNeighborRange)[vs[1].(int)]
	}).(GetRouterBgpNeighborRangeOutput)
}

type GetRouterBgpNetwork6 struct {
	// Enable/disable route as backdoor.
	Backdoor string `pulumi:"backdoor"`
	// ID.
	Id int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck string `pulumi:"networkImportCheck"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
}

// GetRouterBgpNetwork6Input is an input type that accepts GetRouterBgpNetwork6Args and GetRouterBgpNetwork6Output values.
// You can construct a concrete instance of `GetRouterBgpNetwork6Input` via:
//
//	GetRouterBgpNetwork6Args{...}
type GetRouterBgpNetwork6Input interface {
	pulumi.Input

	ToGetRouterBgpNetwork6Output() GetRouterBgpNetwork6Output
	ToGetRouterBgpNetwork6OutputWithContext(context.Context) GetRouterBgpNetwork6Output
}

type GetRouterBgpNetwork6Args struct {
	// Enable/disable route as backdoor.
	Backdoor pulumi.StringInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck pulumi.StringInput `pulumi:"networkImportCheck"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
}

func (GetRouterBgpNetwork6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNetwork6)(nil)).Elem()
}

func (i GetRouterBgpNetwork6Args) ToGetRouterBgpNetwork6Output() GetRouterBgpNetwork6Output {
	return i.ToGetRouterBgpNetwork6OutputWithContext(context.Background())
}

func (i GetRouterBgpNetwork6Args) ToGetRouterBgpNetwork6OutputWithContext(ctx context.Context) GetRouterBgpNetwork6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNetwork6Output)
}

// GetRouterBgpNetwork6ArrayInput is an input type that accepts GetRouterBgpNetwork6Array and GetRouterBgpNetwork6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNetwork6ArrayInput` via:
//
//	GetRouterBgpNetwork6Array{ GetRouterBgpNetwork6Args{...} }
type GetRouterBgpNetwork6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNetwork6ArrayOutput() GetRouterBgpNetwork6ArrayOutput
	ToGetRouterBgpNetwork6ArrayOutputWithContext(context.Context) GetRouterBgpNetwork6ArrayOutput
}

type GetRouterBgpNetwork6Array []GetRouterBgpNetwork6Input

func (GetRouterBgpNetwork6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNetwork6)(nil)).Elem()
}

func (i GetRouterBgpNetwork6Array) ToGetRouterBgpNetwork6ArrayOutput() GetRouterBgpNetwork6ArrayOutput {
	return i.ToGetRouterBgpNetwork6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNetwork6Array) ToGetRouterBgpNetwork6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNetwork6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNetwork6ArrayOutput)
}

type GetRouterBgpNetwork6Output struct{ *pulumi.OutputState }

func (GetRouterBgpNetwork6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNetwork6)(nil)).Elem()
}

func (o GetRouterBgpNetwork6Output) ToGetRouterBgpNetwork6Output() GetRouterBgpNetwork6Output {
	return o
}

func (o GetRouterBgpNetwork6Output) ToGetRouterBgpNetwork6OutputWithContext(ctx context.Context) GetRouterBgpNetwork6Output {
	return o
}

// Enable/disable route as backdoor.
func (o GetRouterBgpNetwork6Output) Backdoor() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork6) string { return v.Backdoor }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBgpNetwork6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork6) int { return v.Id }).(pulumi.IntOutput)
}

// Configure insurance of BGP network route existence in IGP.
func (o GetRouterBgpNetwork6Output) NetworkImportCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork6) string { return v.NetworkImportCheck }).(pulumi.StringOutput)
}

// Network IPv6 prefix.
func (o GetRouterBgpNetwork6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpNetwork6Output) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork6) string { return v.RouteMap }).(pulumi.StringOutput)
}

type GetRouterBgpNetwork6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNetwork6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNetwork6)(nil)).Elem()
}

func (o GetRouterBgpNetwork6ArrayOutput) ToGetRouterBgpNetwork6ArrayOutput() GetRouterBgpNetwork6ArrayOutput {
	return o
}

func (o GetRouterBgpNetwork6ArrayOutput) ToGetRouterBgpNetwork6ArrayOutputWithContext(ctx context.Context) GetRouterBgpNetwork6ArrayOutput {
	return o
}

func (o GetRouterBgpNetwork6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNetwork6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNetwork6 {
		return vs[0].([]GetRouterBgpNetwork6)[vs[1].(int)]
	}).(GetRouterBgpNetwork6Output)
}

type GetRouterBgpNetwork struct {
	// Enable/disable route as backdoor.
	Backdoor string `pulumi:"backdoor"`
	// ID.
	Id int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck string `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
}

// GetRouterBgpNetworkInput is an input type that accepts GetRouterBgpNetworkArgs and GetRouterBgpNetworkOutput values.
// You can construct a concrete instance of `GetRouterBgpNetworkInput` via:
//
//	GetRouterBgpNetworkArgs{...}
type GetRouterBgpNetworkInput interface {
	pulumi.Input

	ToGetRouterBgpNetworkOutput() GetRouterBgpNetworkOutput
	ToGetRouterBgpNetworkOutputWithContext(context.Context) GetRouterBgpNetworkOutput
}

type GetRouterBgpNetworkArgs struct {
	// Enable/disable route as backdoor.
	Backdoor pulumi.StringInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck pulumi.StringInput `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
}

func (GetRouterBgpNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNetwork)(nil)).Elem()
}

func (i GetRouterBgpNetworkArgs) ToGetRouterBgpNetworkOutput() GetRouterBgpNetworkOutput {
	return i.ToGetRouterBgpNetworkOutputWithContext(context.Background())
}

func (i GetRouterBgpNetworkArgs) ToGetRouterBgpNetworkOutputWithContext(ctx context.Context) GetRouterBgpNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNetworkOutput)
}

// GetRouterBgpNetworkArrayInput is an input type that accepts GetRouterBgpNetworkArray and GetRouterBgpNetworkArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpNetworkArrayInput` via:
//
//	GetRouterBgpNetworkArray{ GetRouterBgpNetworkArgs{...} }
type GetRouterBgpNetworkArrayInput interface {
	pulumi.Input

	ToGetRouterBgpNetworkArrayOutput() GetRouterBgpNetworkArrayOutput
	ToGetRouterBgpNetworkArrayOutputWithContext(context.Context) GetRouterBgpNetworkArrayOutput
}

type GetRouterBgpNetworkArray []GetRouterBgpNetworkInput

func (GetRouterBgpNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNetwork)(nil)).Elem()
}

func (i GetRouterBgpNetworkArray) ToGetRouterBgpNetworkArrayOutput() GetRouterBgpNetworkArrayOutput {
	return i.ToGetRouterBgpNetworkArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpNetworkArray) ToGetRouterBgpNetworkArrayOutputWithContext(ctx context.Context) GetRouterBgpNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpNetworkArrayOutput)
}

type GetRouterBgpNetworkOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpNetwork)(nil)).Elem()
}

func (o GetRouterBgpNetworkOutput) ToGetRouterBgpNetworkOutput() GetRouterBgpNetworkOutput {
	return o
}

func (o GetRouterBgpNetworkOutput) ToGetRouterBgpNetworkOutputWithContext(ctx context.Context) GetRouterBgpNetworkOutput {
	return o
}

// Enable/disable route as backdoor.
func (o GetRouterBgpNetworkOutput) Backdoor() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork) string { return v.Backdoor }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterBgpNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Configure insurance of BGP network route existence in IGP.
func (o GetRouterBgpNetworkOutput) NetworkImportCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork) string { return v.NetworkImportCheck }).(pulumi.StringOutput)
}

// Network prefix.
func (o GetRouterBgpNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpNetworkOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpNetwork) string { return v.RouteMap }).(pulumi.StringOutput)
}

type GetRouterBgpNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpNetwork)(nil)).Elem()
}

func (o GetRouterBgpNetworkArrayOutput) ToGetRouterBgpNetworkArrayOutput() GetRouterBgpNetworkArrayOutput {
	return o
}

func (o GetRouterBgpNetworkArrayOutput) ToGetRouterBgpNetworkArrayOutputWithContext(ctx context.Context) GetRouterBgpNetworkArrayOutput {
	return o
}

func (o GetRouterBgpNetworkArrayOutput) Index(i pulumi.IntInput) GetRouterBgpNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpNetwork {
		return vs[0].([]GetRouterBgpNetwork)[vs[1].(int)]
	}).(GetRouterBgpNetworkOutput)
}

type GetRouterBgpRedistribute6 struct {
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Status
	Status string `pulumi:"status"`
}

// GetRouterBgpRedistribute6Input is an input type that accepts GetRouterBgpRedistribute6Args and GetRouterBgpRedistribute6Output values.
// You can construct a concrete instance of `GetRouterBgpRedistribute6Input` via:
//
//	GetRouterBgpRedistribute6Args{...}
type GetRouterBgpRedistribute6Input interface {
	pulumi.Input

	ToGetRouterBgpRedistribute6Output() GetRouterBgpRedistribute6Output
	ToGetRouterBgpRedistribute6OutputWithContext(context.Context) GetRouterBgpRedistribute6Output
}

type GetRouterBgpRedistribute6Args struct {
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterBgpRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpRedistribute6)(nil)).Elem()
}

func (i GetRouterBgpRedistribute6Args) ToGetRouterBgpRedistribute6Output() GetRouterBgpRedistribute6Output {
	return i.ToGetRouterBgpRedistribute6OutputWithContext(context.Background())
}

func (i GetRouterBgpRedistribute6Args) ToGetRouterBgpRedistribute6OutputWithContext(ctx context.Context) GetRouterBgpRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpRedistribute6Output)
}

// GetRouterBgpRedistribute6ArrayInput is an input type that accepts GetRouterBgpRedistribute6Array and GetRouterBgpRedistribute6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpRedistribute6ArrayInput` via:
//
//	GetRouterBgpRedistribute6Array{ GetRouterBgpRedistribute6Args{...} }
type GetRouterBgpRedistribute6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpRedistribute6ArrayOutput() GetRouterBgpRedistribute6ArrayOutput
	ToGetRouterBgpRedistribute6ArrayOutputWithContext(context.Context) GetRouterBgpRedistribute6ArrayOutput
}

type GetRouterBgpRedistribute6Array []GetRouterBgpRedistribute6Input

func (GetRouterBgpRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpRedistribute6)(nil)).Elem()
}

func (i GetRouterBgpRedistribute6Array) ToGetRouterBgpRedistribute6ArrayOutput() GetRouterBgpRedistribute6ArrayOutput {
	return i.ToGetRouterBgpRedistribute6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpRedistribute6Array) ToGetRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) GetRouterBgpRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpRedistribute6ArrayOutput)
}

type GetRouterBgpRedistribute6Output struct{ *pulumi.OutputState }

func (GetRouterBgpRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpRedistribute6)(nil)).Elem()
}

func (o GetRouterBgpRedistribute6Output) ToGetRouterBgpRedistribute6Output() GetRouterBgpRedistribute6Output {
	return o
}

func (o GetRouterBgpRedistribute6Output) ToGetRouterBgpRedistribute6OutputWithContext(ctx context.Context) GetRouterBgpRedistribute6Output {
	return o
}

// Distribute list entry name.
func (o GetRouterBgpRedistribute6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute6) string { return v.Name }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpRedistribute6Output) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute6) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Status
func (o GetRouterBgpRedistribute6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute6) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterBgpRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpRedistribute6)(nil)).Elem()
}

func (o GetRouterBgpRedistribute6ArrayOutput) ToGetRouterBgpRedistribute6ArrayOutput() GetRouterBgpRedistribute6ArrayOutput {
	return o
}

func (o GetRouterBgpRedistribute6ArrayOutput) ToGetRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) GetRouterBgpRedistribute6ArrayOutput {
	return o
}

func (o GetRouterBgpRedistribute6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpRedistribute6 {
		return vs[0].([]GetRouterBgpRedistribute6)[vs[1].(int)]
	}).(GetRouterBgpRedistribute6Output)
}

type GetRouterBgpRedistribute struct {
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Status
	Status string `pulumi:"status"`
}

// GetRouterBgpRedistributeInput is an input type that accepts GetRouterBgpRedistributeArgs and GetRouterBgpRedistributeOutput values.
// You can construct a concrete instance of `GetRouterBgpRedistributeInput` via:
//
//	GetRouterBgpRedistributeArgs{...}
type GetRouterBgpRedistributeInput interface {
	pulumi.Input

	ToGetRouterBgpRedistributeOutput() GetRouterBgpRedistributeOutput
	ToGetRouterBgpRedistributeOutputWithContext(context.Context) GetRouterBgpRedistributeOutput
}

type GetRouterBgpRedistributeArgs struct {
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterBgpRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpRedistribute)(nil)).Elem()
}

func (i GetRouterBgpRedistributeArgs) ToGetRouterBgpRedistributeOutput() GetRouterBgpRedistributeOutput {
	return i.ToGetRouterBgpRedistributeOutputWithContext(context.Background())
}

func (i GetRouterBgpRedistributeArgs) ToGetRouterBgpRedistributeOutputWithContext(ctx context.Context) GetRouterBgpRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpRedistributeOutput)
}

// GetRouterBgpRedistributeArrayInput is an input type that accepts GetRouterBgpRedistributeArray and GetRouterBgpRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpRedistributeArrayInput` via:
//
//	GetRouterBgpRedistributeArray{ GetRouterBgpRedistributeArgs{...} }
type GetRouterBgpRedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterBgpRedistributeArrayOutput() GetRouterBgpRedistributeArrayOutput
	ToGetRouterBgpRedistributeArrayOutputWithContext(context.Context) GetRouterBgpRedistributeArrayOutput
}

type GetRouterBgpRedistributeArray []GetRouterBgpRedistributeInput

func (GetRouterBgpRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpRedistribute)(nil)).Elem()
}

func (i GetRouterBgpRedistributeArray) ToGetRouterBgpRedistributeArrayOutput() GetRouterBgpRedistributeArrayOutput {
	return i.ToGetRouterBgpRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpRedistributeArray) ToGetRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) GetRouterBgpRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpRedistributeArrayOutput)
}

type GetRouterBgpRedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterBgpRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpRedistribute)(nil)).Elem()
}

func (o GetRouterBgpRedistributeOutput) ToGetRouterBgpRedistributeOutput() GetRouterBgpRedistributeOutput {
	return o
}

func (o GetRouterBgpRedistributeOutput) ToGetRouterBgpRedistributeOutputWithContext(ctx context.Context) GetRouterBgpRedistributeOutput {
	return o
}

// Distribute list entry name.
func (o GetRouterBgpRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpRedistributeOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Status
func (o GetRouterBgpRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterBgpRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpRedistribute)(nil)).Elem()
}

func (o GetRouterBgpRedistributeArrayOutput) ToGetRouterBgpRedistributeArrayOutput() GetRouterBgpRedistributeArrayOutput {
	return o
}

func (o GetRouterBgpRedistributeArrayOutput) ToGetRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) GetRouterBgpRedistributeArrayOutput {
	return o
}

func (o GetRouterBgpRedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterBgpRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpRedistribute {
		return vs[0].([]GetRouterBgpRedistribute)[vs[1].(int)]
	}).(GetRouterBgpRedistributeOutput)
}

type GetRouterBgpVrf6 struct {
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []GetRouterBgpVrf6LeakTarget `pulumi:"leakTargets"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrf6Input is an input type that accepts GetRouterBgpVrf6Args and GetRouterBgpVrf6Output values.
// You can construct a concrete instance of `GetRouterBgpVrf6Input` via:
//
//	GetRouterBgpVrf6Args{...}
type GetRouterBgpVrf6Input interface {
	pulumi.Input

	ToGetRouterBgpVrf6Output() GetRouterBgpVrf6Output
	ToGetRouterBgpVrf6OutputWithContext(context.Context) GetRouterBgpVrf6Output
}

type GetRouterBgpVrf6Args struct {
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets GetRouterBgpVrf6LeakTargetArrayInput `pulumi:"leakTargets"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf6)(nil)).Elem()
}

func (i GetRouterBgpVrf6Args) ToGetRouterBgpVrf6Output() GetRouterBgpVrf6Output {
	return i.ToGetRouterBgpVrf6OutputWithContext(context.Background())
}

func (i GetRouterBgpVrf6Args) ToGetRouterBgpVrf6OutputWithContext(ctx context.Context) GetRouterBgpVrf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrf6Output)
}

// GetRouterBgpVrf6ArrayInput is an input type that accepts GetRouterBgpVrf6Array and GetRouterBgpVrf6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrf6ArrayInput` via:
//
//	GetRouterBgpVrf6Array{ GetRouterBgpVrf6Args{...} }
type GetRouterBgpVrf6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrf6ArrayOutput() GetRouterBgpVrf6ArrayOutput
	ToGetRouterBgpVrf6ArrayOutputWithContext(context.Context) GetRouterBgpVrf6ArrayOutput
}

type GetRouterBgpVrf6Array []GetRouterBgpVrf6Input

func (GetRouterBgpVrf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf6)(nil)).Elem()
}

func (i GetRouterBgpVrf6Array) ToGetRouterBgpVrf6ArrayOutput() GetRouterBgpVrf6ArrayOutput {
	return i.ToGetRouterBgpVrf6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrf6Array) ToGetRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) GetRouterBgpVrf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrf6ArrayOutput)
}

type GetRouterBgpVrf6Output struct{ *pulumi.OutputState }

func (GetRouterBgpVrf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf6)(nil)).Elem()
}

func (o GetRouterBgpVrf6Output) ToGetRouterBgpVrf6Output() GetRouterBgpVrf6Output {
	return o
}

func (o GetRouterBgpVrf6Output) ToGetRouterBgpVrf6OutputWithContext(ctx context.Context) GetRouterBgpVrf6Output {
	return o
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o GetRouterBgpVrf6Output) LeakTargets() GetRouterBgpVrf6LeakTargetArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrf6) []GetRouterBgpVrf6LeakTarget { return v.LeakTargets }).(GetRouterBgpVrf6LeakTargetArrayOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrf6Output) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf6) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrf6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf6)(nil)).Elem()
}

func (o GetRouterBgpVrf6ArrayOutput) ToGetRouterBgpVrf6ArrayOutput() GetRouterBgpVrf6ArrayOutput {
	return o
}

func (o GetRouterBgpVrf6ArrayOutput) ToGetRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) GetRouterBgpVrf6ArrayOutput {
	return o
}

func (o GetRouterBgpVrf6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrf6 {
		return vs[0].([]GetRouterBgpVrf6)[vs[1].(int)]
	}).(GetRouterBgpVrf6Output)
}

type GetRouterBgpVrf6LeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrf6LeakTargetInput is an input type that accepts GetRouterBgpVrf6LeakTargetArgs and GetRouterBgpVrf6LeakTargetOutput values.
// You can construct a concrete instance of `GetRouterBgpVrf6LeakTargetInput` via:
//
//	GetRouterBgpVrf6LeakTargetArgs{...}
type GetRouterBgpVrf6LeakTargetInput interface {
	pulumi.Input

	ToGetRouterBgpVrf6LeakTargetOutput() GetRouterBgpVrf6LeakTargetOutput
	ToGetRouterBgpVrf6LeakTargetOutputWithContext(context.Context) GetRouterBgpVrf6LeakTargetOutput
}

type GetRouterBgpVrf6LeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrf6LeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i GetRouterBgpVrf6LeakTargetArgs) ToGetRouterBgpVrf6LeakTargetOutput() GetRouterBgpVrf6LeakTargetOutput {
	return i.ToGetRouterBgpVrf6LeakTargetOutputWithContext(context.Background())
}

func (i GetRouterBgpVrf6LeakTargetArgs) ToGetRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) GetRouterBgpVrf6LeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrf6LeakTargetOutput)
}

// GetRouterBgpVrf6LeakTargetArrayInput is an input type that accepts GetRouterBgpVrf6LeakTargetArray and GetRouterBgpVrf6LeakTargetArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrf6LeakTargetArrayInput` via:
//
//	GetRouterBgpVrf6LeakTargetArray{ GetRouterBgpVrf6LeakTargetArgs{...} }
type GetRouterBgpVrf6LeakTargetArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrf6LeakTargetArrayOutput() GetRouterBgpVrf6LeakTargetArrayOutput
	ToGetRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Context) GetRouterBgpVrf6LeakTargetArrayOutput
}

type GetRouterBgpVrf6LeakTargetArray []GetRouterBgpVrf6LeakTargetInput

func (GetRouterBgpVrf6LeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i GetRouterBgpVrf6LeakTargetArray) ToGetRouterBgpVrf6LeakTargetArrayOutput() GetRouterBgpVrf6LeakTargetArrayOutput {
	return i.ToGetRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrf6LeakTargetArray) ToGetRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrf6LeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrf6LeakTargetArrayOutput)
}

type GetRouterBgpVrf6LeakTargetOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrf6LeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o GetRouterBgpVrf6LeakTargetOutput) ToGetRouterBgpVrf6LeakTargetOutput() GetRouterBgpVrf6LeakTargetOutput {
	return o
}

func (o GetRouterBgpVrf6LeakTargetOutput) ToGetRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) GetRouterBgpVrf6LeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetRouterBgpVrf6LeakTargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf6LeakTarget) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpVrf6LeakTargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf6LeakTarget) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrf6LeakTargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf6LeakTarget) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrf6LeakTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrf6LeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o GetRouterBgpVrf6LeakTargetArrayOutput) ToGetRouterBgpVrf6LeakTargetArrayOutput() GetRouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o GetRouterBgpVrf6LeakTargetArrayOutput) ToGetRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o GetRouterBgpVrf6LeakTargetArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrf6LeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrf6LeakTarget {
		return vs[0].([]GetRouterBgpVrf6LeakTarget)[vs[1].(int)]
	}).(GetRouterBgpVrf6LeakTargetOutput)
}

type GetRouterBgpVrf struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []GetRouterBgpVrfExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []GetRouterBgpVrfImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []GetRouterBgpVrfLeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd string `pulumi:"rd"`
	// VRF role.
	Role string `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrfInput is an input type that accepts GetRouterBgpVrfArgs and GetRouterBgpVrfOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfInput` via:
//
//	GetRouterBgpVrfArgs{...}
type GetRouterBgpVrfInput interface {
	pulumi.Input

	ToGetRouterBgpVrfOutput() GetRouterBgpVrfOutput
	ToGetRouterBgpVrfOutputWithContext(context.Context) GetRouterBgpVrfOutput
}

type GetRouterBgpVrfArgs struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts GetRouterBgpVrfExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts GetRouterBgpVrfImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets GetRouterBgpVrfLeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd pulumi.StringInput `pulumi:"rd"`
	// VRF role.
	Role pulumi.StringInput `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf)(nil)).Elem()
}

func (i GetRouterBgpVrfArgs) ToGetRouterBgpVrfOutput() GetRouterBgpVrfOutput {
	return i.ToGetRouterBgpVrfOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfArgs) ToGetRouterBgpVrfOutputWithContext(ctx context.Context) GetRouterBgpVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfOutput)
}

// GetRouterBgpVrfArrayInput is an input type that accepts GetRouterBgpVrfArray and GetRouterBgpVrfArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfArrayInput` via:
//
//	GetRouterBgpVrfArray{ GetRouterBgpVrfArgs{...} }
type GetRouterBgpVrfArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfArrayOutput() GetRouterBgpVrfArrayOutput
	ToGetRouterBgpVrfArrayOutputWithContext(context.Context) GetRouterBgpVrfArrayOutput
}

type GetRouterBgpVrfArray []GetRouterBgpVrfInput

func (GetRouterBgpVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf)(nil)).Elem()
}

func (i GetRouterBgpVrfArray) ToGetRouterBgpVrfArrayOutput() GetRouterBgpVrfArrayOutput {
	return i.ToGetRouterBgpVrfArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfArray) ToGetRouterBgpVrfArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfArrayOutput)
}

type GetRouterBgpVrfOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrf)(nil)).Elem()
}

func (o GetRouterBgpVrfOutput) ToGetRouterBgpVrfOutput() GetRouterBgpVrfOutput {
	return o
}

func (o GetRouterBgpVrfOutput) ToGetRouterBgpVrfOutputWithContext(ctx context.Context) GetRouterBgpVrfOutput {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o GetRouterBgpVrfOutput) ExportRts() GetRouterBgpVrfExportRtArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) []GetRouterBgpVrfExportRt { return v.ExportRts }).(GetRouterBgpVrfExportRtArrayOutput)
}

// Import route map.
func (o GetRouterBgpVrfOutput) ImportRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) string { return v.ImportRouteMap }).(pulumi.StringOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o GetRouterBgpVrfOutput) ImportRts() GetRouterBgpVrfImportRtArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) []GetRouterBgpVrfImportRt { return v.ImportRts }).(GetRouterBgpVrfImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o GetRouterBgpVrfOutput) LeakTargets() GetRouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) []GetRouterBgpVrfLeakTarget { return v.LeakTargets }).(GetRouterBgpVrfLeakTargetArrayOutput)
}

// Route Distinguisher: AA|AA:NN.
func (o GetRouterBgpVrfOutput) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) string { return v.Rd }).(pulumi.StringOutput)
}

// VRF role.
func (o GetRouterBgpVrfOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) string { return v.Role }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrfOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrf) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrfArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrf)(nil)).Elem()
}

func (o GetRouterBgpVrfArrayOutput) ToGetRouterBgpVrfArrayOutput() GetRouterBgpVrfArrayOutput {
	return o
}

func (o GetRouterBgpVrfArrayOutput) ToGetRouterBgpVrfArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfArrayOutput {
	return o
}

func (o GetRouterBgpVrfArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrf {
		return vs[0].([]GetRouterBgpVrf)[vs[1].(int)]
	}).(GetRouterBgpVrfOutput)
}

type GetRouterBgpVrfExportRt struct {
	// Attribute: AA|AA:NN.
	RouteTarget string `pulumi:"routeTarget"`
}

// GetRouterBgpVrfExportRtInput is an input type that accepts GetRouterBgpVrfExportRtArgs and GetRouterBgpVrfExportRtOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfExportRtInput` via:
//
//	GetRouterBgpVrfExportRtArgs{...}
type GetRouterBgpVrfExportRtInput interface {
	pulumi.Input

	ToGetRouterBgpVrfExportRtOutput() GetRouterBgpVrfExportRtOutput
	ToGetRouterBgpVrfExportRtOutputWithContext(context.Context) GetRouterBgpVrfExportRtOutput
}

type GetRouterBgpVrfExportRtArgs struct {
	// Attribute: AA|AA:NN.
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetRouterBgpVrfExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfExportRt)(nil)).Elem()
}

func (i GetRouterBgpVrfExportRtArgs) ToGetRouterBgpVrfExportRtOutput() GetRouterBgpVrfExportRtOutput {
	return i.ToGetRouterBgpVrfExportRtOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfExportRtArgs) ToGetRouterBgpVrfExportRtOutputWithContext(ctx context.Context) GetRouterBgpVrfExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfExportRtOutput)
}

// GetRouterBgpVrfExportRtArrayInput is an input type that accepts GetRouterBgpVrfExportRtArray and GetRouterBgpVrfExportRtArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfExportRtArrayInput` via:
//
//	GetRouterBgpVrfExportRtArray{ GetRouterBgpVrfExportRtArgs{...} }
type GetRouterBgpVrfExportRtArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfExportRtArrayOutput() GetRouterBgpVrfExportRtArrayOutput
	ToGetRouterBgpVrfExportRtArrayOutputWithContext(context.Context) GetRouterBgpVrfExportRtArrayOutput
}

type GetRouterBgpVrfExportRtArray []GetRouterBgpVrfExportRtInput

func (GetRouterBgpVrfExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfExportRt)(nil)).Elem()
}

func (i GetRouterBgpVrfExportRtArray) ToGetRouterBgpVrfExportRtArrayOutput() GetRouterBgpVrfExportRtArrayOutput {
	return i.ToGetRouterBgpVrfExportRtArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfExportRtArray) ToGetRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfExportRtArrayOutput)
}

type GetRouterBgpVrfExportRtOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfExportRt)(nil)).Elem()
}

func (o GetRouterBgpVrfExportRtOutput) ToGetRouterBgpVrfExportRtOutput() GetRouterBgpVrfExportRtOutput {
	return o
}

func (o GetRouterBgpVrfExportRtOutput) ToGetRouterBgpVrfExportRtOutputWithContext(ctx context.Context) GetRouterBgpVrfExportRtOutput {
	return o
}

// Attribute: AA|AA:NN.
func (o GetRouterBgpVrfExportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfExportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetRouterBgpVrfExportRtArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfExportRt)(nil)).Elem()
}

func (o GetRouterBgpVrfExportRtArrayOutput) ToGetRouterBgpVrfExportRtArrayOutput() GetRouterBgpVrfExportRtArrayOutput {
	return o
}

func (o GetRouterBgpVrfExportRtArrayOutput) ToGetRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfExportRtArrayOutput {
	return o
}

func (o GetRouterBgpVrfExportRtArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfExportRt {
		return vs[0].([]GetRouterBgpVrfExportRt)[vs[1].(int)]
	}).(GetRouterBgpVrfExportRtOutput)
}

type GetRouterBgpVrfImportRt struct {
	// Attribute: AA|AA:NN.
	RouteTarget string `pulumi:"routeTarget"`
}

// GetRouterBgpVrfImportRtInput is an input type that accepts GetRouterBgpVrfImportRtArgs and GetRouterBgpVrfImportRtOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfImportRtInput` via:
//
//	GetRouterBgpVrfImportRtArgs{...}
type GetRouterBgpVrfImportRtInput interface {
	pulumi.Input

	ToGetRouterBgpVrfImportRtOutput() GetRouterBgpVrfImportRtOutput
	ToGetRouterBgpVrfImportRtOutputWithContext(context.Context) GetRouterBgpVrfImportRtOutput
}

type GetRouterBgpVrfImportRtArgs struct {
	// Attribute: AA|AA:NN.
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetRouterBgpVrfImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfImportRt)(nil)).Elem()
}

func (i GetRouterBgpVrfImportRtArgs) ToGetRouterBgpVrfImportRtOutput() GetRouterBgpVrfImportRtOutput {
	return i.ToGetRouterBgpVrfImportRtOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfImportRtArgs) ToGetRouterBgpVrfImportRtOutputWithContext(ctx context.Context) GetRouterBgpVrfImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfImportRtOutput)
}

// GetRouterBgpVrfImportRtArrayInput is an input type that accepts GetRouterBgpVrfImportRtArray and GetRouterBgpVrfImportRtArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfImportRtArrayInput` via:
//
//	GetRouterBgpVrfImportRtArray{ GetRouterBgpVrfImportRtArgs{...} }
type GetRouterBgpVrfImportRtArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfImportRtArrayOutput() GetRouterBgpVrfImportRtArrayOutput
	ToGetRouterBgpVrfImportRtArrayOutputWithContext(context.Context) GetRouterBgpVrfImportRtArrayOutput
}

type GetRouterBgpVrfImportRtArray []GetRouterBgpVrfImportRtInput

func (GetRouterBgpVrfImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfImportRt)(nil)).Elem()
}

func (i GetRouterBgpVrfImportRtArray) ToGetRouterBgpVrfImportRtArrayOutput() GetRouterBgpVrfImportRtArrayOutput {
	return i.ToGetRouterBgpVrfImportRtArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfImportRtArray) ToGetRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfImportRtArrayOutput)
}

type GetRouterBgpVrfImportRtOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfImportRt)(nil)).Elem()
}

func (o GetRouterBgpVrfImportRtOutput) ToGetRouterBgpVrfImportRtOutput() GetRouterBgpVrfImportRtOutput {
	return o
}

func (o GetRouterBgpVrfImportRtOutput) ToGetRouterBgpVrfImportRtOutputWithContext(ctx context.Context) GetRouterBgpVrfImportRtOutput {
	return o
}

// Attribute: AA|AA:NN.
func (o GetRouterBgpVrfImportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfImportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetRouterBgpVrfImportRtArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfImportRt)(nil)).Elem()
}

func (o GetRouterBgpVrfImportRtArrayOutput) ToGetRouterBgpVrfImportRtArrayOutput() GetRouterBgpVrfImportRtArrayOutput {
	return o
}

func (o GetRouterBgpVrfImportRtArrayOutput) ToGetRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfImportRtArrayOutput {
	return o
}

func (o GetRouterBgpVrfImportRtArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfImportRt {
		return vs[0].([]GetRouterBgpVrfImportRt)[vs[1].(int)]
	}).(GetRouterBgpVrfImportRtOutput)
}

type GetRouterBgpVrfLeak6 struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []GetRouterBgpVrfLeak6Target `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrfLeak6Input is an input type that accepts GetRouterBgpVrfLeak6Args and GetRouterBgpVrfLeak6Output values.
// You can construct a concrete instance of `GetRouterBgpVrfLeak6Input` via:
//
//	GetRouterBgpVrfLeak6Args{...}
type GetRouterBgpVrfLeak6Input interface {
	pulumi.Input

	ToGetRouterBgpVrfLeak6Output() GetRouterBgpVrfLeak6Output
	ToGetRouterBgpVrfLeak6OutputWithContext(context.Context) GetRouterBgpVrfLeak6Output
}

type GetRouterBgpVrfLeak6Args struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets GetRouterBgpVrfLeak6TargetArrayInput `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrfLeak6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak6)(nil)).Elem()
}

func (i GetRouterBgpVrfLeak6Args) ToGetRouterBgpVrfLeak6Output() GetRouterBgpVrfLeak6Output {
	return i.ToGetRouterBgpVrfLeak6OutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeak6Args) ToGetRouterBgpVrfLeak6OutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeak6Output)
}

// GetRouterBgpVrfLeak6ArrayInput is an input type that accepts GetRouterBgpVrfLeak6Array and GetRouterBgpVrfLeak6ArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeak6ArrayInput` via:
//
//	GetRouterBgpVrfLeak6Array{ GetRouterBgpVrfLeak6Args{...} }
type GetRouterBgpVrfLeak6ArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeak6ArrayOutput() GetRouterBgpVrfLeak6ArrayOutput
	ToGetRouterBgpVrfLeak6ArrayOutputWithContext(context.Context) GetRouterBgpVrfLeak6ArrayOutput
}

type GetRouterBgpVrfLeak6Array []GetRouterBgpVrfLeak6Input

func (GetRouterBgpVrfLeak6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak6)(nil)).Elem()
}

func (i GetRouterBgpVrfLeak6Array) ToGetRouterBgpVrfLeak6ArrayOutput() GetRouterBgpVrfLeak6ArrayOutput {
	return i.ToGetRouterBgpVrfLeak6ArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeak6Array) ToGetRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeak6ArrayOutput)
}

type GetRouterBgpVrfLeak6Output struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeak6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak6)(nil)).Elem()
}

func (o GetRouterBgpVrfLeak6Output) ToGetRouterBgpVrfLeak6Output() GetRouterBgpVrfLeak6Output {
	return o
}

func (o GetRouterBgpVrfLeak6Output) ToGetRouterBgpVrfLeak6OutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6Output {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o GetRouterBgpVrfLeak6Output) Targets() GetRouterBgpVrfLeak6TargetArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak6) []GetRouterBgpVrfLeak6Target { return v.Targets }).(GetRouterBgpVrfLeak6TargetArrayOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrfLeak6Output) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak6) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrfLeak6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeak6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak6)(nil)).Elem()
}

func (o GetRouterBgpVrfLeak6ArrayOutput) ToGetRouterBgpVrfLeak6ArrayOutput() GetRouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeak6ArrayOutput) ToGetRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeak6ArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfLeak6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfLeak6 {
		return vs[0].([]GetRouterBgpVrfLeak6)[vs[1].(int)]
	}).(GetRouterBgpVrfLeak6Output)
}

type GetRouterBgpVrfLeak6Target struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrfLeak6TargetInput is an input type that accepts GetRouterBgpVrfLeak6TargetArgs and GetRouterBgpVrfLeak6TargetOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeak6TargetInput` via:
//
//	GetRouterBgpVrfLeak6TargetArgs{...}
type GetRouterBgpVrfLeak6TargetInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeak6TargetOutput() GetRouterBgpVrfLeak6TargetOutput
	ToGetRouterBgpVrfLeak6TargetOutputWithContext(context.Context) GetRouterBgpVrfLeak6TargetOutput
}

type GetRouterBgpVrfLeak6TargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrfLeak6TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i GetRouterBgpVrfLeak6TargetArgs) ToGetRouterBgpVrfLeak6TargetOutput() GetRouterBgpVrfLeak6TargetOutput {
	return i.ToGetRouterBgpVrfLeak6TargetOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeak6TargetArgs) ToGetRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeak6TargetOutput)
}

// GetRouterBgpVrfLeak6TargetArrayInput is an input type that accepts GetRouterBgpVrfLeak6TargetArray and GetRouterBgpVrfLeak6TargetArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeak6TargetArrayInput` via:
//
//	GetRouterBgpVrfLeak6TargetArray{ GetRouterBgpVrfLeak6TargetArgs{...} }
type GetRouterBgpVrfLeak6TargetArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeak6TargetArrayOutput() GetRouterBgpVrfLeak6TargetArrayOutput
	ToGetRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Context) GetRouterBgpVrfLeak6TargetArrayOutput
}

type GetRouterBgpVrfLeak6TargetArray []GetRouterBgpVrfLeak6TargetInput

func (GetRouterBgpVrfLeak6TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i GetRouterBgpVrfLeak6TargetArray) ToGetRouterBgpVrfLeak6TargetArrayOutput() GetRouterBgpVrfLeak6TargetArrayOutput {
	return i.ToGetRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeak6TargetArray) ToGetRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeak6TargetArrayOutput)
}

type GetRouterBgpVrfLeak6TargetOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeak6TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o GetRouterBgpVrfLeak6TargetOutput) ToGetRouterBgpVrfLeak6TargetOutput() GetRouterBgpVrfLeak6TargetOutput {
	return o
}

func (o GetRouterBgpVrfLeak6TargetOutput) ToGetRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6TargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetRouterBgpVrfLeak6TargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak6Target) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpVrfLeak6TargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak6Target) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrfLeak6TargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak6Target) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrfLeak6TargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeak6TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o GetRouterBgpVrfLeak6TargetArrayOutput) ToGetRouterBgpVrfLeak6TargetArrayOutput() GetRouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeak6TargetArrayOutput) ToGetRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeak6TargetArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfLeak6TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfLeak6Target {
		return vs[0].([]GetRouterBgpVrfLeak6Target)[vs[1].(int)]
	}).(GetRouterBgpVrfLeak6TargetOutput)
}

type GetRouterBgpVrfLeak struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []GetRouterBgpVrfLeakTarget `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrfLeakInput is an input type that accepts GetRouterBgpVrfLeakArgs and GetRouterBgpVrfLeakOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeakInput` via:
//
//	GetRouterBgpVrfLeakArgs{...}
type GetRouterBgpVrfLeakInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeakOutput() GetRouterBgpVrfLeakOutput
	ToGetRouterBgpVrfLeakOutputWithContext(context.Context) GetRouterBgpVrfLeakOutput
}

type GetRouterBgpVrfLeakArgs struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets GetRouterBgpVrfLeakTargetArrayInput `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrfLeakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak)(nil)).Elem()
}

func (i GetRouterBgpVrfLeakArgs) ToGetRouterBgpVrfLeakOutput() GetRouterBgpVrfLeakOutput {
	return i.ToGetRouterBgpVrfLeakOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeakArgs) ToGetRouterBgpVrfLeakOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeakOutput)
}

// GetRouterBgpVrfLeakArrayInput is an input type that accepts GetRouterBgpVrfLeakArray and GetRouterBgpVrfLeakArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeakArrayInput` via:
//
//	GetRouterBgpVrfLeakArray{ GetRouterBgpVrfLeakArgs{...} }
type GetRouterBgpVrfLeakArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeakArrayOutput() GetRouterBgpVrfLeakArrayOutput
	ToGetRouterBgpVrfLeakArrayOutputWithContext(context.Context) GetRouterBgpVrfLeakArrayOutput
}

type GetRouterBgpVrfLeakArray []GetRouterBgpVrfLeakInput

func (GetRouterBgpVrfLeakArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak)(nil)).Elem()
}

func (i GetRouterBgpVrfLeakArray) ToGetRouterBgpVrfLeakArrayOutput() GetRouterBgpVrfLeakArrayOutput {
	return i.ToGetRouterBgpVrfLeakArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeakArray) ToGetRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeakArrayOutput)
}

type GetRouterBgpVrfLeakOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeak)(nil)).Elem()
}

func (o GetRouterBgpVrfLeakOutput) ToGetRouterBgpVrfLeakOutput() GetRouterBgpVrfLeakOutput {
	return o
}

func (o GetRouterBgpVrfLeakOutput) ToGetRouterBgpVrfLeakOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakOutput {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o GetRouterBgpVrfLeakOutput) Targets() GetRouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak) []GetRouterBgpVrfLeakTarget { return v.Targets }).(GetRouterBgpVrfLeakTargetArrayOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrfLeakOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeak) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrfLeakArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeakArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeak)(nil)).Elem()
}

func (o GetRouterBgpVrfLeakArrayOutput) ToGetRouterBgpVrfLeakArrayOutput() GetRouterBgpVrfLeakArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeakArrayOutput) ToGetRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeakArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfLeakOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfLeak {
		return vs[0].([]GetRouterBgpVrfLeak)[vs[1].(int)]
	}).(GetRouterBgpVrfLeakOutput)
}

type GetRouterBgpVrfLeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetRouterBgpVrfLeakTargetInput is an input type that accepts GetRouterBgpVrfLeakTargetArgs and GetRouterBgpVrfLeakTargetOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeakTargetInput` via:
//
//	GetRouterBgpVrfLeakTargetArgs{...}
type GetRouterBgpVrfLeakTargetInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeakTargetOutput() GetRouterBgpVrfLeakTargetOutput
	ToGetRouterBgpVrfLeakTargetOutputWithContext(context.Context) GetRouterBgpVrfLeakTargetOutput
}

type GetRouterBgpVrfLeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetRouterBgpVrfLeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i GetRouterBgpVrfLeakTargetArgs) ToGetRouterBgpVrfLeakTargetOutput() GetRouterBgpVrfLeakTargetOutput {
	return i.ToGetRouterBgpVrfLeakTargetOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeakTargetArgs) ToGetRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeakTargetOutput)
}

// GetRouterBgpVrfLeakTargetArrayInput is an input type that accepts GetRouterBgpVrfLeakTargetArray and GetRouterBgpVrfLeakTargetArrayOutput values.
// You can construct a concrete instance of `GetRouterBgpVrfLeakTargetArrayInput` via:
//
//	GetRouterBgpVrfLeakTargetArray{ GetRouterBgpVrfLeakTargetArgs{...} }
type GetRouterBgpVrfLeakTargetArrayInput interface {
	pulumi.Input

	ToGetRouterBgpVrfLeakTargetArrayOutput() GetRouterBgpVrfLeakTargetArrayOutput
	ToGetRouterBgpVrfLeakTargetArrayOutputWithContext(context.Context) GetRouterBgpVrfLeakTargetArrayOutput
}

type GetRouterBgpVrfLeakTargetArray []GetRouterBgpVrfLeakTargetInput

func (GetRouterBgpVrfLeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i GetRouterBgpVrfLeakTargetArray) ToGetRouterBgpVrfLeakTargetArrayOutput() GetRouterBgpVrfLeakTargetArrayOutput {
	return i.ToGetRouterBgpVrfLeakTargetArrayOutputWithContext(context.Background())
}

func (i GetRouterBgpVrfLeakTargetArray) ToGetRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterBgpVrfLeakTargetArrayOutput)
}

type GetRouterBgpVrfLeakTargetOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o GetRouterBgpVrfLeakTargetOutput) ToGetRouterBgpVrfLeakTargetOutput() GetRouterBgpVrfLeakTargetOutput {
	return o
}

func (o GetRouterBgpVrfLeakTargetOutput) ToGetRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetRouterBgpVrfLeakTargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeakTarget) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetRouterBgpVrfLeakTargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeakTarget) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetRouterBgpVrfLeakTargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterBgpVrfLeakTarget) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetRouterBgpVrfLeakTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouterBgpVrfLeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o GetRouterBgpVrfLeakTargetArrayOutput) ToGetRouterBgpVrfLeakTargetArrayOutput() GetRouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeakTargetArrayOutput) ToGetRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) GetRouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o GetRouterBgpVrfLeakTargetArrayOutput) Index(i pulumi.IntInput) GetRouterBgpVrfLeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterBgpVrfLeakTarget {
		return vs[0].([]GetRouterBgpVrfLeakTarget)[vs[1].(int)]
	}).(GetRouterBgpVrfLeakTargetOutput)
}

type GetRouterCommunitylistRule struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
	Action string `pulumi:"action"`
	// ID.
	Id int `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match string `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp string `pulumi:"regexp"`
}

// GetRouterCommunitylistRuleInput is an input type that accepts GetRouterCommunitylistRuleArgs and GetRouterCommunitylistRuleOutput values.
// You can construct a concrete instance of `GetRouterCommunitylistRuleInput` via:
//
//	GetRouterCommunitylistRuleArgs{...}
type GetRouterCommunitylistRuleInput interface {
	pulumi.Input

	ToGetRouterCommunitylistRuleOutput() GetRouterCommunitylistRuleOutput
	ToGetRouterCommunitylistRuleOutputWithContext(context.Context) GetRouterCommunitylistRuleOutput
}

type GetRouterCommunitylistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
	Action pulumi.StringInput `pulumi:"action"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match pulumi.StringInput `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp pulumi.StringInput `pulumi:"regexp"`
}

func (GetRouterCommunitylistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterCommunitylistRule)(nil)).Elem()
}

func (i GetRouterCommunitylistRuleArgs) ToGetRouterCommunitylistRuleOutput() GetRouterCommunitylistRuleOutput {
	return i.ToGetRouterCommunitylistRuleOutputWithContext(context.Background())
}

func (i GetRouterCommunitylistRuleArgs) ToGetRouterCommunitylistRuleOutputWithContext(ctx context.Context) GetRouterCommunitylistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterCommunitylistRuleOutput)
}

// GetRouterCommunitylistRuleArrayInput is an input type that accepts GetRouterCommunitylistRuleArray and GetRouterCommunitylistRuleArrayOutput values.
// You can construct a concrete instance of `GetRouterCommunitylistRuleArrayInput` via:
//
//	GetRouterCommunitylistRuleArray{ GetRouterCommunitylistRuleArgs{...} }
type GetRouterCommunitylistRuleArrayInput interface {
	pulumi.Input

	ToGetRouterCommunitylistRuleArrayOutput() GetRouterCommunitylistRuleArrayOutput
	ToGetRouterCommunitylistRuleArrayOutputWithContext(context.Context) GetRouterCommunitylistRuleArrayOutput
}

type GetRouterCommunitylistRuleArray []GetRouterCommunitylistRuleInput

func (GetRouterCommunitylistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterCommunitylistRule)(nil)).Elem()
}

func (i GetRouterCommunitylistRuleArray) ToGetRouterCommunitylistRuleArrayOutput() GetRouterCommunitylistRuleArrayOutput {
	return i.ToGetRouterCommunitylistRuleArrayOutputWithContext(context.Background())
}

func (i GetRouterCommunitylistRuleArray) ToGetRouterCommunitylistRuleArrayOutputWithContext(ctx context.Context) GetRouterCommunitylistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterCommunitylistRuleArrayOutput)
}

type GetRouterCommunitylistRuleOutput struct{ *pulumi.OutputState }

func (GetRouterCommunitylistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterCommunitylistRule)(nil)).Elem()
}

func (o GetRouterCommunitylistRuleOutput) ToGetRouterCommunitylistRuleOutput() GetRouterCommunitylistRuleOutput {
	return o
}

func (o GetRouterCommunitylistRuleOutput) ToGetRouterCommunitylistRuleOutputWithContext(ctx context.Context) GetRouterCommunitylistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
func (o GetRouterCommunitylistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterCommunitylistRule) string { return v.Action }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterCommunitylistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterCommunitylistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Community specifications for matching a reserved community.
func (o GetRouterCommunitylistRuleOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterCommunitylistRule) string { return v.Match }).(pulumi.StringOutput)
}

// Ordered list of COMMUNITY attributes as a regular expression.
func (o GetRouterCommunitylistRuleOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterCommunitylistRule) string { return v.Regexp }).(pulumi.StringOutput)
}

type GetRouterCommunitylistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterCommunitylistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterCommunitylistRule)(nil)).Elem()
}

func (o GetRouterCommunitylistRuleArrayOutput) ToGetRouterCommunitylistRuleArrayOutput() GetRouterCommunitylistRuleArrayOutput {
	return o
}

func (o GetRouterCommunitylistRuleArrayOutput) ToGetRouterCommunitylistRuleArrayOutputWithContext(ctx context.Context) GetRouterCommunitylistRuleArrayOutput {
	return o
}

func (o GetRouterCommunitylistRuleArrayOutput) Index(i pulumi.IntInput) GetRouterCommunitylistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterCommunitylistRule {
		return vs[0].([]GetRouterCommunitylistRule)[vs[1].(int)]
	}).(GetRouterCommunitylistRuleOutput)
}

type GetRouterIsisIsisInterface struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 string `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 string `pulumi:"authKeychainL2"`
	// Level 1 authentication mode.
	AuthModeL1 string `pulumi:"authModeL1"`
	// Level 2 authentication mode.
	AuthModeL2 string `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 string `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 string `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs.
	AuthSendOnlyL1 string `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs.
	AuthSendOnlyL2 string `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type
	CircuitType string `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 int `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 int `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 int `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 int `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 int `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 int `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets.
	HelloPadding string `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval int `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval int `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group.
	MeshGroup string `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId int `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 int `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 int `pulumi:"metricL2"`
	// IS-IS interface name.
	Name string `pulumi:"name"`
	// IS-IS interface's network type
	NetworkType string `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 int `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 int `pulumi:"priorityL2"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS.
	Status6 string `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 int `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 int `pulumi:"wideMetricL2"`
}

// GetRouterIsisIsisInterfaceInput is an input type that accepts GetRouterIsisIsisInterfaceArgs and GetRouterIsisIsisInterfaceOutput values.
// You can construct a concrete instance of `GetRouterIsisIsisInterfaceInput` via:
//
//	GetRouterIsisIsisInterfaceArgs{...}
type GetRouterIsisIsisInterfaceInput interface {
	pulumi.Input

	ToGetRouterIsisIsisInterfaceOutput() GetRouterIsisIsisInterfaceOutput
	ToGetRouterIsisIsisInterfaceOutputWithContext(context.Context) GetRouterIsisIsisInterfaceOutput
}

type GetRouterIsisIsisInterfaceArgs struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 pulumi.StringInput `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 pulumi.StringInput `pulumi:"authKeychainL2"`
	// Level 1 authentication mode.
	AuthModeL1 pulumi.StringInput `pulumi:"authModeL1"`
	// Level 2 authentication mode.
	AuthModeL2 pulumi.StringInput `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 pulumi.StringInput `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 pulumi.StringInput `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs.
	AuthSendOnlyL1 pulumi.StringInput `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs.
	AuthSendOnlyL2 pulumi.StringInput `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type
	CircuitType pulumi.StringInput `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 pulumi.IntInput `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 pulumi.IntInput `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 pulumi.IntInput `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 pulumi.IntInput `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 pulumi.IntInput `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 pulumi.IntInput `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets.
	HelloPadding pulumi.StringInput `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval pulumi.IntInput `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval pulumi.IntInput `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group.
	MeshGroup pulumi.StringInput `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId pulumi.IntInput `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 pulumi.IntInput `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 pulumi.IntInput `pulumi:"metricL2"`
	// IS-IS interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// IS-IS interface's network type
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 pulumi.IntInput `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 pulumi.IntInput `pulumi:"priorityL2"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS.
	Status6 pulumi.StringInput `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 pulumi.IntInput `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 pulumi.IntInput `pulumi:"wideMetricL2"`
}

func (GetRouterIsisIsisInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisIsisInterface)(nil)).Elem()
}

func (i GetRouterIsisIsisInterfaceArgs) ToGetRouterIsisIsisInterfaceOutput() GetRouterIsisIsisInterfaceOutput {
	return i.ToGetRouterIsisIsisInterfaceOutputWithContext(context.Background())
}

func (i GetRouterIsisIsisInterfaceArgs) ToGetRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) GetRouterIsisIsisInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisIsisInterfaceOutput)
}

// GetRouterIsisIsisInterfaceArrayInput is an input type that accepts GetRouterIsisIsisInterfaceArray and GetRouterIsisIsisInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisIsisInterfaceArrayInput` via:
//
//	GetRouterIsisIsisInterfaceArray{ GetRouterIsisIsisInterfaceArgs{...} }
type GetRouterIsisIsisInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterIsisIsisInterfaceArrayOutput() GetRouterIsisIsisInterfaceArrayOutput
	ToGetRouterIsisIsisInterfaceArrayOutputWithContext(context.Context) GetRouterIsisIsisInterfaceArrayOutput
}

type GetRouterIsisIsisInterfaceArray []GetRouterIsisIsisInterfaceInput

func (GetRouterIsisIsisInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisIsisInterface)(nil)).Elem()
}

func (i GetRouterIsisIsisInterfaceArray) ToGetRouterIsisIsisInterfaceArrayOutput() GetRouterIsisIsisInterfaceArrayOutput {
	return i.ToGetRouterIsisIsisInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisIsisInterfaceArray) ToGetRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) GetRouterIsisIsisInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisIsisInterfaceArrayOutput)
}

type GetRouterIsisIsisInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterIsisIsisInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisIsisInterface)(nil)).Elem()
}

func (o GetRouterIsisIsisInterfaceOutput) ToGetRouterIsisIsisInterfaceOutput() GetRouterIsisIsisInterfaceOutput {
	return o
}

func (o GetRouterIsisIsisInterfaceOutput) ToGetRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) GetRouterIsisIsisInterfaceOutput {
	return o
}

// Authentication key-chain for level 1 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthKeychainL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthKeychainL1 }).(pulumi.StringOutput)
}

// Authentication key-chain for level 2 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthKeychainL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthKeychainL2 }).(pulumi.StringOutput)
}

// Level 1 authentication mode.
func (o GetRouterIsisIsisInterfaceOutput) AuthModeL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthModeL1 }).(pulumi.StringOutput)
}

// Level 2 authentication mode.
func (o GetRouterIsisIsisInterfaceOutput) AuthModeL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthModeL2 }).(pulumi.StringOutput)
}

// Authentication password for level 1 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthPasswordL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthPasswordL1 }).(pulumi.StringOutput)
}

// Authentication password for level 2 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthPasswordL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthPasswordL2 }).(pulumi.StringOutput)
}

// Enable/disable authentication send-only for level 1 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthSendOnlyL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthSendOnlyL1 }).(pulumi.StringOutput)
}

// Enable/disable authentication send-only for level 2 PDUs.
func (o GetRouterIsisIsisInterfaceOutput) AuthSendOnlyL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.AuthSendOnlyL2 }).(pulumi.StringOutput)
}

// IS-IS interface's circuit type
func (o GetRouterIsisIsisInterfaceOutput) CircuitType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.CircuitType }).(pulumi.StringOutput)
}

// Level 1 CSNP interval.
func (o GetRouterIsisIsisInterfaceOutput) CsnpIntervalL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.CsnpIntervalL1 }).(pulumi.IntOutput)
}

// Level 2 CSNP interval.
func (o GetRouterIsisIsisInterfaceOutput) CsnpIntervalL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.CsnpIntervalL2 }).(pulumi.IntOutput)
}

// Level 1 hello interval.
func (o GetRouterIsisIsisInterfaceOutput) HelloIntervalL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.HelloIntervalL1 }).(pulumi.IntOutput)
}

// Level 2 hello interval.
func (o GetRouterIsisIsisInterfaceOutput) HelloIntervalL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.HelloIntervalL2 }).(pulumi.IntOutput)
}

// Level 1 multiplier for Hello holding time.
func (o GetRouterIsisIsisInterfaceOutput) HelloMultiplierL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.HelloMultiplierL1 }).(pulumi.IntOutput)
}

// Level 2 multiplier for Hello holding time.
func (o GetRouterIsisIsisInterfaceOutput) HelloMultiplierL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.HelloMultiplierL2 }).(pulumi.IntOutput)
}

// Enable/disable padding to IS-IS hello packets.
func (o GetRouterIsisIsisInterfaceOutput) HelloPadding() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.HelloPadding }).(pulumi.StringOutput)
}

// LSP transmission interval (milliseconds).
func (o GetRouterIsisIsisInterfaceOutput) LspInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.LspInterval }).(pulumi.IntOutput)
}

// LSP retransmission interval (sec).
func (o GetRouterIsisIsisInterfaceOutput) LspRetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.LspRetransmitInterval }).(pulumi.IntOutput)
}

// Enable/disable IS-IS mesh group.
func (o GetRouterIsisIsisInterfaceOutput) MeshGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.MeshGroup }).(pulumi.StringOutput)
}

// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
func (o GetRouterIsisIsisInterfaceOutput) MeshGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.MeshGroupId }).(pulumi.IntOutput)
}

// Level 1 metric for interface.
func (o GetRouterIsisIsisInterfaceOutput) MetricL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.MetricL1 }).(pulumi.IntOutput)
}

// Level 2 metric for interface.
func (o GetRouterIsisIsisInterfaceOutput) MetricL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.MetricL2 }).(pulumi.IntOutput)
}

// IS-IS interface name.
func (o GetRouterIsisIsisInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.Name }).(pulumi.StringOutput)
}

// IS-IS interface's network type
func (o GetRouterIsisIsisInterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Level 1 priority.
func (o GetRouterIsisIsisInterfaceOutput) PriorityL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.PriorityL1 }).(pulumi.IntOutput)
}

// Level 2 priority.
func (o GetRouterIsisIsisInterfaceOutput) PriorityL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.PriorityL2 }).(pulumi.IntOutput)
}

// Enable/disable redistribution.
func (o GetRouterIsisIsisInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.Status }).(pulumi.StringOutput)
}

// Enable/disable IPv6 interface for IS-IS.
func (o GetRouterIsisIsisInterfaceOutput) Status6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) string { return v.Status6 }).(pulumi.StringOutput)
}

// Level 1 wide metric for interface.
func (o GetRouterIsisIsisInterfaceOutput) WideMetricL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.WideMetricL1 }).(pulumi.IntOutput)
}

// Level 2 wide metric for interface.
func (o GetRouterIsisIsisInterfaceOutput) WideMetricL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisInterface) int { return v.WideMetricL2 }).(pulumi.IntOutput)
}

type GetRouterIsisIsisInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisIsisInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisIsisInterface)(nil)).Elem()
}

func (o GetRouterIsisIsisInterfaceArrayOutput) ToGetRouterIsisIsisInterfaceArrayOutput() GetRouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o GetRouterIsisIsisInterfaceArrayOutput) ToGetRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) GetRouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o GetRouterIsisIsisInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterIsisIsisInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisIsisInterface {
		return vs[0].([]GetRouterIsisIsisInterface)[vs[1].(int)]
	}).(GetRouterIsisIsisInterfaceOutput)
}

type GetRouterIsisIsisNet struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net string `pulumi:"net"`
}

// GetRouterIsisIsisNetInput is an input type that accepts GetRouterIsisIsisNetArgs and GetRouterIsisIsisNetOutput values.
// You can construct a concrete instance of `GetRouterIsisIsisNetInput` via:
//
//	GetRouterIsisIsisNetArgs{...}
type GetRouterIsisIsisNetInput interface {
	pulumi.Input

	ToGetRouterIsisIsisNetOutput() GetRouterIsisIsisNetOutput
	ToGetRouterIsisIsisNetOutputWithContext(context.Context) GetRouterIsisIsisNetOutput
}

type GetRouterIsisIsisNetArgs struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net pulumi.StringInput `pulumi:"net"`
}

func (GetRouterIsisIsisNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisIsisNet)(nil)).Elem()
}

func (i GetRouterIsisIsisNetArgs) ToGetRouterIsisIsisNetOutput() GetRouterIsisIsisNetOutput {
	return i.ToGetRouterIsisIsisNetOutputWithContext(context.Background())
}

func (i GetRouterIsisIsisNetArgs) ToGetRouterIsisIsisNetOutputWithContext(ctx context.Context) GetRouterIsisIsisNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisIsisNetOutput)
}

// GetRouterIsisIsisNetArrayInput is an input type that accepts GetRouterIsisIsisNetArray and GetRouterIsisIsisNetArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisIsisNetArrayInput` via:
//
//	GetRouterIsisIsisNetArray{ GetRouterIsisIsisNetArgs{...} }
type GetRouterIsisIsisNetArrayInput interface {
	pulumi.Input

	ToGetRouterIsisIsisNetArrayOutput() GetRouterIsisIsisNetArrayOutput
	ToGetRouterIsisIsisNetArrayOutputWithContext(context.Context) GetRouterIsisIsisNetArrayOutput
}

type GetRouterIsisIsisNetArray []GetRouterIsisIsisNetInput

func (GetRouterIsisIsisNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisIsisNet)(nil)).Elem()
}

func (i GetRouterIsisIsisNetArray) ToGetRouterIsisIsisNetArrayOutput() GetRouterIsisIsisNetArrayOutput {
	return i.ToGetRouterIsisIsisNetArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisIsisNetArray) ToGetRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) GetRouterIsisIsisNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisIsisNetArrayOutput)
}

type GetRouterIsisIsisNetOutput struct{ *pulumi.OutputState }

func (GetRouterIsisIsisNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisIsisNet)(nil)).Elem()
}

func (o GetRouterIsisIsisNetOutput) ToGetRouterIsisIsisNetOutput() GetRouterIsisIsisNetOutput {
	return o
}

func (o GetRouterIsisIsisNetOutput) ToGetRouterIsisIsisNetOutputWithContext(ctx context.Context) GetRouterIsisIsisNetOutput {
	return o
}

// Prefix entry ID.
func (o GetRouterIsisIsisNetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisIsisNet) int { return v.Id }).(pulumi.IntOutput)
}

// IS-IS net xx.xxxx. ... .xxxx.xx.
func (o GetRouterIsisIsisNetOutput) Net() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisIsisNet) string { return v.Net }).(pulumi.StringOutput)
}

type GetRouterIsisIsisNetArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisIsisNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisIsisNet)(nil)).Elem()
}

func (o GetRouterIsisIsisNetArrayOutput) ToGetRouterIsisIsisNetArrayOutput() GetRouterIsisIsisNetArrayOutput {
	return o
}

func (o GetRouterIsisIsisNetArrayOutput) ToGetRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) GetRouterIsisIsisNetArrayOutput {
	return o
}

func (o GetRouterIsisIsisNetArrayOutput) Index(i pulumi.IntInput) GetRouterIsisIsisNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisIsisNet {
		return vs[0].([]GetRouterIsisIsisNet)[vs[1].(int)]
	}).(GetRouterIsisIsisNetOutput)
}

type GetRouterIsisRedistribute6 struct {
	// Level.
	Level string `pulumi:"level"`
	// Metric.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Protocol name.
	Protocol string `pulumi:"protocol"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
}

// GetRouterIsisRedistribute6Input is an input type that accepts GetRouterIsisRedistribute6Args and GetRouterIsisRedistribute6Output values.
// You can construct a concrete instance of `GetRouterIsisRedistribute6Input` via:
//
//	GetRouterIsisRedistribute6Args{...}
type GetRouterIsisRedistribute6Input interface {
	pulumi.Input

	ToGetRouterIsisRedistribute6Output() GetRouterIsisRedistribute6Output
	ToGetRouterIsisRedistribute6OutputWithContext(context.Context) GetRouterIsisRedistribute6Output
}

type GetRouterIsisRedistribute6Args struct {
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterIsisRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisRedistribute6)(nil)).Elem()
}

func (i GetRouterIsisRedistribute6Args) ToGetRouterIsisRedistribute6Output() GetRouterIsisRedistribute6Output {
	return i.ToGetRouterIsisRedistribute6OutputWithContext(context.Background())
}

func (i GetRouterIsisRedistribute6Args) ToGetRouterIsisRedistribute6OutputWithContext(ctx context.Context) GetRouterIsisRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisRedistribute6Output)
}

// GetRouterIsisRedistribute6ArrayInput is an input type that accepts GetRouterIsisRedistribute6Array and GetRouterIsisRedistribute6ArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisRedistribute6ArrayInput` via:
//
//	GetRouterIsisRedistribute6Array{ GetRouterIsisRedistribute6Args{...} }
type GetRouterIsisRedistribute6ArrayInput interface {
	pulumi.Input

	ToGetRouterIsisRedistribute6ArrayOutput() GetRouterIsisRedistribute6ArrayOutput
	ToGetRouterIsisRedistribute6ArrayOutputWithContext(context.Context) GetRouterIsisRedistribute6ArrayOutput
}

type GetRouterIsisRedistribute6Array []GetRouterIsisRedistribute6Input

func (GetRouterIsisRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisRedistribute6)(nil)).Elem()
}

func (i GetRouterIsisRedistribute6Array) ToGetRouterIsisRedistribute6ArrayOutput() GetRouterIsisRedistribute6ArrayOutput {
	return i.ToGetRouterIsisRedistribute6ArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisRedistribute6Array) ToGetRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) GetRouterIsisRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisRedistribute6ArrayOutput)
}

type GetRouterIsisRedistribute6Output struct{ *pulumi.OutputState }

func (GetRouterIsisRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisRedistribute6)(nil)).Elem()
}

func (o GetRouterIsisRedistribute6Output) ToGetRouterIsisRedistribute6Output() GetRouterIsisRedistribute6Output {
	return o
}

func (o GetRouterIsisRedistribute6Output) ToGetRouterIsisRedistribute6OutputWithContext(ctx context.Context) GetRouterIsisRedistribute6Output {
	return o
}

// Level.
func (o GetRouterIsisRedistribute6Output) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) string { return v.Level }).(pulumi.StringOutput)
}

// Metric.
func (o GetRouterIsisRedistribute6Output) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRouterIsisRedistribute6Output) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) string { return v.MetricType }).(pulumi.StringOutput)
}

// Protocol name.
func (o GetRouterIsisRedistribute6Output) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) string { return v.Protocol }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterIsisRedistribute6Output) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) string { return v.Routemap }).(pulumi.StringOutput)
}

// Enable/disable redistribution.
func (o GetRouterIsisRedistribute6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute6) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterIsisRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisRedistribute6)(nil)).Elem()
}

func (o GetRouterIsisRedistribute6ArrayOutput) ToGetRouterIsisRedistribute6ArrayOutput() GetRouterIsisRedistribute6ArrayOutput {
	return o
}

func (o GetRouterIsisRedistribute6ArrayOutput) ToGetRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) GetRouterIsisRedistribute6ArrayOutput {
	return o
}

func (o GetRouterIsisRedistribute6ArrayOutput) Index(i pulumi.IntInput) GetRouterIsisRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisRedistribute6 {
		return vs[0].([]GetRouterIsisRedistribute6)[vs[1].(int)]
	}).(GetRouterIsisRedistribute6Output)
}

type GetRouterIsisRedistribute struct {
	// Level.
	Level string `pulumi:"level"`
	// Metric.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Protocol name.
	Protocol string `pulumi:"protocol"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
}

// GetRouterIsisRedistributeInput is an input type that accepts GetRouterIsisRedistributeArgs and GetRouterIsisRedistributeOutput values.
// You can construct a concrete instance of `GetRouterIsisRedistributeInput` via:
//
//	GetRouterIsisRedistributeArgs{...}
type GetRouterIsisRedistributeInput interface {
	pulumi.Input

	ToGetRouterIsisRedistributeOutput() GetRouterIsisRedistributeOutput
	ToGetRouterIsisRedistributeOutputWithContext(context.Context) GetRouterIsisRedistributeOutput
}

type GetRouterIsisRedistributeArgs struct {
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterIsisRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisRedistribute)(nil)).Elem()
}

func (i GetRouterIsisRedistributeArgs) ToGetRouterIsisRedistributeOutput() GetRouterIsisRedistributeOutput {
	return i.ToGetRouterIsisRedistributeOutputWithContext(context.Background())
}

func (i GetRouterIsisRedistributeArgs) ToGetRouterIsisRedistributeOutputWithContext(ctx context.Context) GetRouterIsisRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisRedistributeOutput)
}

// GetRouterIsisRedistributeArrayInput is an input type that accepts GetRouterIsisRedistributeArray and GetRouterIsisRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisRedistributeArrayInput` via:
//
//	GetRouterIsisRedistributeArray{ GetRouterIsisRedistributeArgs{...} }
type GetRouterIsisRedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterIsisRedistributeArrayOutput() GetRouterIsisRedistributeArrayOutput
	ToGetRouterIsisRedistributeArrayOutputWithContext(context.Context) GetRouterIsisRedistributeArrayOutput
}

type GetRouterIsisRedistributeArray []GetRouterIsisRedistributeInput

func (GetRouterIsisRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisRedistribute)(nil)).Elem()
}

func (i GetRouterIsisRedistributeArray) ToGetRouterIsisRedistributeArrayOutput() GetRouterIsisRedistributeArrayOutput {
	return i.ToGetRouterIsisRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisRedistributeArray) ToGetRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) GetRouterIsisRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisRedistributeArrayOutput)
}

type GetRouterIsisRedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterIsisRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisRedistribute)(nil)).Elem()
}

func (o GetRouterIsisRedistributeOutput) ToGetRouterIsisRedistributeOutput() GetRouterIsisRedistributeOutput {
	return o
}

func (o GetRouterIsisRedistributeOutput) ToGetRouterIsisRedistributeOutputWithContext(ctx context.Context) GetRouterIsisRedistributeOutput {
	return o
}

// Level.
func (o GetRouterIsisRedistributeOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) string { return v.Level }).(pulumi.StringOutput)
}

// Metric.
func (o GetRouterIsisRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRouterIsisRedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Protocol name.
func (o GetRouterIsisRedistributeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) string { return v.Protocol }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterIsisRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// Enable/disable redistribution.
func (o GetRouterIsisRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterIsisRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisRedistribute)(nil)).Elem()
}

func (o GetRouterIsisRedistributeArrayOutput) ToGetRouterIsisRedistributeArrayOutput() GetRouterIsisRedistributeArrayOutput {
	return o
}

func (o GetRouterIsisRedistributeArrayOutput) ToGetRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) GetRouterIsisRedistributeArrayOutput {
	return o
}

func (o GetRouterIsisRedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterIsisRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisRedistribute {
		return vs[0].([]GetRouterIsisRedistribute)[vs[1].(int)]
	}).(GetRouterIsisRedistributeOutput)
}

type GetRouterIsisSummaryAddress6 struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// Level.
	Level string `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterIsisSummaryAddress6Input is an input type that accepts GetRouterIsisSummaryAddress6Args and GetRouterIsisSummaryAddress6Output values.
// You can construct a concrete instance of `GetRouterIsisSummaryAddress6Input` via:
//
//	GetRouterIsisSummaryAddress6Args{...}
type GetRouterIsisSummaryAddress6Input interface {
	pulumi.Input

	ToGetRouterIsisSummaryAddress6Output() GetRouterIsisSummaryAddress6Output
	ToGetRouterIsisSummaryAddress6OutputWithContext(context.Context) GetRouterIsisSummaryAddress6Output
}

type GetRouterIsisSummaryAddress6Args struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterIsisSummaryAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisSummaryAddress6)(nil)).Elem()
}

func (i GetRouterIsisSummaryAddress6Args) ToGetRouterIsisSummaryAddress6Output() GetRouterIsisSummaryAddress6Output {
	return i.ToGetRouterIsisSummaryAddress6OutputWithContext(context.Background())
}

func (i GetRouterIsisSummaryAddress6Args) ToGetRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) GetRouterIsisSummaryAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisSummaryAddress6Output)
}

// GetRouterIsisSummaryAddress6ArrayInput is an input type that accepts GetRouterIsisSummaryAddress6Array and GetRouterIsisSummaryAddress6ArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisSummaryAddress6ArrayInput` via:
//
//	GetRouterIsisSummaryAddress6Array{ GetRouterIsisSummaryAddress6Args{...} }
type GetRouterIsisSummaryAddress6ArrayInput interface {
	pulumi.Input

	ToGetRouterIsisSummaryAddress6ArrayOutput() GetRouterIsisSummaryAddress6ArrayOutput
	ToGetRouterIsisSummaryAddress6ArrayOutputWithContext(context.Context) GetRouterIsisSummaryAddress6ArrayOutput
}

type GetRouterIsisSummaryAddress6Array []GetRouterIsisSummaryAddress6Input

func (GetRouterIsisSummaryAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisSummaryAddress6)(nil)).Elem()
}

func (i GetRouterIsisSummaryAddress6Array) ToGetRouterIsisSummaryAddress6ArrayOutput() GetRouterIsisSummaryAddress6ArrayOutput {
	return i.ToGetRouterIsisSummaryAddress6ArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisSummaryAddress6Array) ToGetRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisSummaryAddress6ArrayOutput)
}

type GetRouterIsisSummaryAddress6Output struct{ *pulumi.OutputState }

func (GetRouterIsisSummaryAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisSummaryAddress6)(nil)).Elem()
}

func (o GetRouterIsisSummaryAddress6Output) ToGetRouterIsisSummaryAddress6Output() GetRouterIsisSummaryAddress6Output {
	return o
}

func (o GetRouterIsisSummaryAddress6Output) ToGetRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) GetRouterIsisSummaryAddress6Output {
	return o
}

// Prefix entry ID.
func (o GetRouterIsisSummaryAddress6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress6) int { return v.Id }).(pulumi.IntOutput)
}

// Level.
func (o GetRouterIsisSummaryAddress6Output) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress6) string { return v.Level }).(pulumi.StringOutput)
}

// IPv6 prefix.
func (o GetRouterIsisSummaryAddress6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterIsisSummaryAddress6ArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisSummaryAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisSummaryAddress6)(nil)).Elem()
}

func (o GetRouterIsisSummaryAddress6ArrayOutput) ToGetRouterIsisSummaryAddress6ArrayOutput() GetRouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o GetRouterIsisSummaryAddress6ArrayOutput) ToGetRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o GetRouterIsisSummaryAddress6ArrayOutput) Index(i pulumi.IntInput) GetRouterIsisSummaryAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisSummaryAddress6 {
		return vs[0].([]GetRouterIsisSummaryAddress6)[vs[1].(int)]
	}).(GetRouterIsisSummaryAddress6Output)
}

type GetRouterIsisSummaryAddress struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// Level.
	Level string `pulumi:"level"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterIsisSummaryAddressInput is an input type that accepts GetRouterIsisSummaryAddressArgs and GetRouterIsisSummaryAddressOutput values.
// You can construct a concrete instance of `GetRouterIsisSummaryAddressInput` via:
//
//	GetRouterIsisSummaryAddressArgs{...}
type GetRouterIsisSummaryAddressInput interface {
	pulumi.Input

	ToGetRouterIsisSummaryAddressOutput() GetRouterIsisSummaryAddressOutput
	ToGetRouterIsisSummaryAddressOutputWithContext(context.Context) GetRouterIsisSummaryAddressOutput
}

type GetRouterIsisSummaryAddressArgs struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterIsisSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisSummaryAddress)(nil)).Elem()
}

func (i GetRouterIsisSummaryAddressArgs) ToGetRouterIsisSummaryAddressOutput() GetRouterIsisSummaryAddressOutput {
	return i.ToGetRouterIsisSummaryAddressOutputWithContext(context.Background())
}

func (i GetRouterIsisSummaryAddressArgs) ToGetRouterIsisSummaryAddressOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisSummaryAddressOutput)
}

// GetRouterIsisSummaryAddressArrayInput is an input type that accepts GetRouterIsisSummaryAddressArray and GetRouterIsisSummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterIsisSummaryAddressArrayInput` via:
//
//	GetRouterIsisSummaryAddressArray{ GetRouterIsisSummaryAddressArgs{...} }
type GetRouterIsisSummaryAddressArrayInput interface {
	pulumi.Input

	ToGetRouterIsisSummaryAddressArrayOutput() GetRouterIsisSummaryAddressArrayOutput
	ToGetRouterIsisSummaryAddressArrayOutputWithContext(context.Context) GetRouterIsisSummaryAddressArrayOutput
}

type GetRouterIsisSummaryAddressArray []GetRouterIsisSummaryAddressInput

func (GetRouterIsisSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisSummaryAddress)(nil)).Elem()
}

func (i GetRouterIsisSummaryAddressArray) ToGetRouterIsisSummaryAddressArrayOutput() GetRouterIsisSummaryAddressArrayOutput {
	return i.ToGetRouterIsisSummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterIsisSummaryAddressArray) ToGetRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterIsisSummaryAddressArrayOutput)
}

type GetRouterIsisSummaryAddressOutput struct{ *pulumi.OutputState }

func (GetRouterIsisSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterIsisSummaryAddress)(nil)).Elem()
}

func (o GetRouterIsisSummaryAddressOutput) ToGetRouterIsisSummaryAddressOutput() GetRouterIsisSummaryAddressOutput {
	return o
}

func (o GetRouterIsisSummaryAddressOutput) ToGetRouterIsisSummaryAddressOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddressOutput {
	return o
}

// Prefix entry ID.
func (o GetRouterIsisSummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Level.
func (o GetRouterIsisSummaryAddressOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress) string { return v.Level }).(pulumi.StringOutput)
}

// Prefix.
func (o GetRouterIsisSummaryAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterIsisSummaryAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterIsisSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterIsisSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterIsisSummaryAddress)(nil)).Elem()
}

func (o GetRouterIsisSummaryAddressArrayOutput) ToGetRouterIsisSummaryAddressArrayOutput() GetRouterIsisSummaryAddressArrayOutput {
	return o
}

func (o GetRouterIsisSummaryAddressArrayOutput) ToGetRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterIsisSummaryAddressArrayOutput {
	return o
}

func (o GetRouterIsisSummaryAddressArrayOutput) Index(i pulumi.IntInput) GetRouterIsisSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterIsisSummaryAddress {
		return vs[0].([]GetRouterIsisSummaryAddress)[vs[1].(int)]
	}).(GetRouterIsisSummaryAddressOutput)
}

type GetRouterKeychainKey struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime string `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm string `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id int `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString string `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime string `pulumi:"sendLifetime"`
}

// GetRouterKeychainKeyInput is an input type that accepts GetRouterKeychainKeyArgs and GetRouterKeychainKeyOutput values.
// You can construct a concrete instance of `GetRouterKeychainKeyInput` via:
//
//	GetRouterKeychainKeyArgs{...}
type GetRouterKeychainKeyInput interface {
	pulumi.Input

	ToGetRouterKeychainKeyOutput() GetRouterKeychainKeyOutput
	ToGetRouterKeychainKeyOutputWithContext(context.Context) GetRouterKeychainKeyOutput
}

type GetRouterKeychainKeyArgs struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime pulumi.StringInput `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString pulumi.StringInput `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime pulumi.StringInput `pulumi:"sendLifetime"`
}

func (GetRouterKeychainKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterKeychainKey)(nil)).Elem()
}

func (i GetRouterKeychainKeyArgs) ToGetRouterKeychainKeyOutput() GetRouterKeychainKeyOutput {
	return i.ToGetRouterKeychainKeyOutputWithContext(context.Background())
}

func (i GetRouterKeychainKeyArgs) ToGetRouterKeychainKeyOutputWithContext(ctx context.Context) GetRouterKeychainKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterKeychainKeyOutput)
}

// GetRouterKeychainKeyArrayInput is an input type that accepts GetRouterKeychainKeyArray and GetRouterKeychainKeyArrayOutput values.
// You can construct a concrete instance of `GetRouterKeychainKeyArrayInput` via:
//
//	GetRouterKeychainKeyArray{ GetRouterKeychainKeyArgs{...} }
type GetRouterKeychainKeyArrayInput interface {
	pulumi.Input

	ToGetRouterKeychainKeyArrayOutput() GetRouterKeychainKeyArrayOutput
	ToGetRouterKeychainKeyArrayOutputWithContext(context.Context) GetRouterKeychainKeyArrayOutput
}

type GetRouterKeychainKeyArray []GetRouterKeychainKeyInput

func (GetRouterKeychainKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterKeychainKey)(nil)).Elem()
}

func (i GetRouterKeychainKeyArray) ToGetRouterKeychainKeyArrayOutput() GetRouterKeychainKeyArrayOutput {
	return i.ToGetRouterKeychainKeyArrayOutputWithContext(context.Background())
}

func (i GetRouterKeychainKeyArray) ToGetRouterKeychainKeyArrayOutputWithContext(ctx context.Context) GetRouterKeychainKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterKeychainKeyArrayOutput)
}

type GetRouterKeychainKeyOutput struct{ *pulumi.OutputState }

func (GetRouterKeychainKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterKeychainKey)(nil)).Elem()
}

func (o GetRouterKeychainKeyOutput) ToGetRouterKeychainKeyOutput() GetRouterKeychainKeyOutput {
	return o
}

func (o GetRouterKeychainKeyOutput) ToGetRouterKeychainKeyOutputWithContext(ctx context.Context) GetRouterKeychainKeyOutput {
	return o
}

// Lifetime of received authentication key (format: hh:mm:ss day month year).
func (o GetRouterKeychainKeyOutput) AcceptLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterKeychainKey) string { return v.AcceptLifetime }).(pulumi.StringOutput)
}

// Cryptographic algorithm.
func (o GetRouterKeychainKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterKeychainKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Key ID (0 - 2147483647).
func (o GetRouterKeychainKeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterKeychainKey) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key (max. = 35 characters).
func (o GetRouterKeychainKeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterKeychainKey) string { return v.KeyString }).(pulumi.StringOutput)
}

// Lifetime of sent authentication key (format: hh:mm:ss day month year).
func (o GetRouterKeychainKeyOutput) SendLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterKeychainKey) string { return v.SendLifetime }).(pulumi.StringOutput)
}

type GetRouterKeychainKeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterKeychainKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterKeychainKey)(nil)).Elem()
}

func (o GetRouterKeychainKeyArrayOutput) ToGetRouterKeychainKeyArrayOutput() GetRouterKeychainKeyArrayOutput {
	return o
}

func (o GetRouterKeychainKeyArrayOutput) ToGetRouterKeychainKeyArrayOutputWithContext(ctx context.Context) GetRouterKeychainKeyArrayOutput {
	return o
}

func (o GetRouterKeychainKeyArrayOutput) Index(i pulumi.IntInput) GetRouterKeychainKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterKeychainKey {
		return vs[0].([]GetRouterKeychainKey)[vs[1].(int)]
	}).(GetRouterKeychainKeyOutput)
}

type GetRouterMulticast6Interface struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval int `pulumi:"helloInterval"`
	// Interface name.
	Name string `pulumi:"name"`
}

// GetRouterMulticast6InterfaceInput is an input type that accepts GetRouterMulticast6InterfaceArgs and GetRouterMulticast6InterfaceOutput values.
// You can construct a concrete instance of `GetRouterMulticast6InterfaceInput` via:
//
//	GetRouterMulticast6InterfaceArgs{...}
type GetRouterMulticast6InterfaceInput interface {
	pulumi.Input

	ToGetRouterMulticast6InterfaceOutput() GetRouterMulticast6InterfaceOutput
	ToGetRouterMulticast6InterfaceOutputWithContext(context.Context) GetRouterMulticast6InterfaceOutput
}

type GetRouterMulticast6InterfaceArgs struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterMulticast6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6Interface)(nil)).Elem()
}

func (i GetRouterMulticast6InterfaceArgs) ToGetRouterMulticast6InterfaceOutput() GetRouterMulticast6InterfaceOutput {
	return i.ToGetRouterMulticast6InterfaceOutputWithContext(context.Background())
}

func (i GetRouterMulticast6InterfaceArgs) ToGetRouterMulticast6InterfaceOutputWithContext(ctx context.Context) GetRouterMulticast6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6InterfaceOutput)
}

// GetRouterMulticast6InterfaceArrayInput is an input type that accepts GetRouterMulticast6InterfaceArray and GetRouterMulticast6InterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticast6InterfaceArrayInput` via:
//
//	GetRouterMulticast6InterfaceArray{ GetRouterMulticast6InterfaceArgs{...} }
type GetRouterMulticast6InterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterMulticast6InterfaceArrayOutput() GetRouterMulticast6InterfaceArrayOutput
	ToGetRouterMulticast6InterfaceArrayOutputWithContext(context.Context) GetRouterMulticast6InterfaceArrayOutput
}

type GetRouterMulticast6InterfaceArray []GetRouterMulticast6InterfaceInput

func (GetRouterMulticast6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6Interface)(nil)).Elem()
}

func (i GetRouterMulticast6InterfaceArray) ToGetRouterMulticast6InterfaceArrayOutput() GetRouterMulticast6InterfaceArrayOutput {
	return i.ToGetRouterMulticast6InterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticast6InterfaceArray) ToGetRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) GetRouterMulticast6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6InterfaceArrayOutput)
}

type GetRouterMulticast6InterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6Interface)(nil)).Elem()
}

func (o GetRouterMulticast6InterfaceOutput) ToGetRouterMulticast6InterfaceOutput() GetRouterMulticast6InterfaceOutput {
	return o
}

func (o GetRouterMulticast6InterfaceOutput) ToGetRouterMulticast6InterfaceOutputWithContext(ctx context.Context) GetRouterMulticast6InterfaceOutput {
	return o
}

// Time before old neighbour information expires (1 - 65535 sec, default = 105).
func (o GetRouterMulticast6InterfaceOutput) HelloHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticast6Interface) int { return v.HelloHoldtime }).(pulumi.IntOutput)
}

// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
func (o GetRouterMulticast6InterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticast6Interface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterMulticast6InterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticast6Interface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterMulticast6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6Interface)(nil)).Elem()
}

func (o GetRouterMulticast6InterfaceArrayOutput) ToGetRouterMulticast6InterfaceArrayOutput() GetRouterMulticast6InterfaceArrayOutput {
	return o
}

func (o GetRouterMulticast6InterfaceArrayOutput) ToGetRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) GetRouterMulticast6InterfaceArrayOutput {
	return o
}

func (o GetRouterMulticast6InterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterMulticast6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticast6Interface {
		return vs[0].([]GetRouterMulticast6Interface)[vs[1].(int)]
	}).(GetRouterMulticast6InterfaceOutput)
}

type GetRouterMulticast6PimSmGlobal struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit int `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []GetRouterMulticast6PimSmGlobalRpAddress `pulumi:"rpAddresses"`
}

// GetRouterMulticast6PimSmGlobalInput is an input type that accepts GetRouterMulticast6PimSmGlobalArgs and GetRouterMulticast6PimSmGlobalOutput values.
// You can construct a concrete instance of `GetRouterMulticast6PimSmGlobalInput` via:
//
//	GetRouterMulticast6PimSmGlobalArgs{...}
type GetRouterMulticast6PimSmGlobalInput interface {
	pulumi.Input

	ToGetRouterMulticast6PimSmGlobalOutput() GetRouterMulticast6PimSmGlobalOutput
	ToGetRouterMulticast6PimSmGlobalOutputWithContext(context.Context) GetRouterMulticast6PimSmGlobalOutput
}

type GetRouterMulticast6PimSmGlobalArgs struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit pulumi.IntInput `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses GetRouterMulticast6PimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
}

func (GetRouterMulticast6PimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i GetRouterMulticast6PimSmGlobalArgs) ToGetRouterMulticast6PimSmGlobalOutput() GetRouterMulticast6PimSmGlobalOutput {
	return i.ToGetRouterMulticast6PimSmGlobalOutputWithContext(context.Background())
}

func (i GetRouterMulticast6PimSmGlobalArgs) ToGetRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6PimSmGlobalOutput)
}

// GetRouterMulticast6PimSmGlobalArrayInput is an input type that accepts GetRouterMulticast6PimSmGlobalArray and GetRouterMulticast6PimSmGlobalArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticast6PimSmGlobalArrayInput` via:
//
//	GetRouterMulticast6PimSmGlobalArray{ GetRouterMulticast6PimSmGlobalArgs{...} }
type GetRouterMulticast6PimSmGlobalArrayInput interface {
	pulumi.Input

	ToGetRouterMulticast6PimSmGlobalArrayOutput() GetRouterMulticast6PimSmGlobalArrayOutput
	ToGetRouterMulticast6PimSmGlobalArrayOutputWithContext(context.Context) GetRouterMulticast6PimSmGlobalArrayOutput
}

type GetRouterMulticast6PimSmGlobalArray []GetRouterMulticast6PimSmGlobalInput

func (GetRouterMulticast6PimSmGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i GetRouterMulticast6PimSmGlobalArray) ToGetRouterMulticast6PimSmGlobalArrayOutput() GetRouterMulticast6PimSmGlobalArrayOutput {
	return i.ToGetRouterMulticast6PimSmGlobalArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticast6PimSmGlobalArray) ToGetRouterMulticast6PimSmGlobalArrayOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6PimSmGlobalArrayOutput)
}

type GetRouterMulticast6PimSmGlobalOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6PimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o GetRouterMulticast6PimSmGlobalOutput) ToGetRouterMulticast6PimSmGlobalOutput() GetRouterMulticast6PimSmGlobalOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalOutput) ToGetRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalOutput {
	return o
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o GetRouterMulticast6PimSmGlobalOutput) RegisterRateLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticast6PimSmGlobal) int { return v.RegisterRateLimit }).(pulumi.IntOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o GetRouterMulticast6PimSmGlobalOutput) RpAddresses() GetRouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v GetRouterMulticast6PimSmGlobal) []GetRouterMulticast6PimSmGlobalRpAddress { return v.RpAddresses }).(GetRouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type GetRouterMulticast6PimSmGlobalArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6PimSmGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o GetRouterMulticast6PimSmGlobalArrayOutput) ToGetRouterMulticast6PimSmGlobalArrayOutput() GetRouterMulticast6PimSmGlobalArrayOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalArrayOutput) ToGetRouterMulticast6PimSmGlobalArrayOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalArrayOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalArrayOutput) Index(i pulumi.IntInput) GetRouterMulticast6PimSmGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticast6PimSmGlobal {
		return vs[0].([]GetRouterMulticast6PimSmGlobal)[vs[1].(int)]
	}).(GetRouterMulticast6PimSmGlobalOutput)
}

type GetRouterMulticast6PimSmGlobalRpAddress struct {
	// ID of the entry.
	Id int `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address string `pulumi:"ip6Address"`
}

// GetRouterMulticast6PimSmGlobalRpAddressInput is an input type that accepts GetRouterMulticast6PimSmGlobalRpAddressArgs and GetRouterMulticast6PimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `GetRouterMulticast6PimSmGlobalRpAddressInput` via:
//
//	GetRouterMulticast6PimSmGlobalRpAddressArgs{...}
type GetRouterMulticast6PimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToGetRouterMulticast6PimSmGlobalRpAddressOutput() GetRouterMulticast6PimSmGlobalRpAddressOutput
	ToGetRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Context) GetRouterMulticast6PimSmGlobalRpAddressOutput
}

type GetRouterMulticast6PimSmGlobalRpAddressArgs struct {
	// ID of the entry.
	Id pulumi.IntInput `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address pulumi.StringInput `pulumi:"ip6Address"`
}

func (GetRouterMulticast6PimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetRouterMulticast6PimSmGlobalRpAddressArgs) ToGetRouterMulticast6PimSmGlobalRpAddressOutput() GetRouterMulticast6PimSmGlobalRpAddressOutput {
	return i.ToGetRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i GetRouterMulticast6PimSmGlobalRpAddressArgs) ToGetRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6PimSmGlobalRpAddressOutput)
}

// GetRouterMulticast6PimSmGlobalRpAddressArrayInput is an input type that accepts GetRouterMulticast6PimSmGlobalRpAddressArray and GetRouterMulticast6PimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticast6PimSmGlobalRpAddressArrayInput` via:
//
//	GetRouterMulticast6PimSmGlobalRpAddressArray{ GetRouterMulticast6PimSmGlobalRpAddressArgs{...} }
type GetRouterMulticast6PimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutput() GetRouterMulticast6PimSmGlobalRpAddressArrayOutput
	ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Context) GetRouterMulticast6PimSmGlobalRpAddressArrayOutput
}

type GetRouterMulticast6PimSmGlobalRpAddressArray []GetRouterMulticast6PimSmGlobalRpAddressInput

func (GetRouterMulticast6PimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetRouterMulticast6PimSmGlobalRpAddressArray) ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutput() GetRouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return i.ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticast6PimSmGlobalRpAddressArray) ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type GetRouterMulticast6PimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6PimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetRouterMulticast6PimSmGlobalRpAddressOutput) ToGetRouterMulticast6PimSmGlobalRpAddressOutput() GetRouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalRpAddressOutput) ToGetRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

// ID of the entry.
func (o GetRouterMulticast6PimSmGlobalRpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticast6PimSmGlobalRpAddress) int { return v.Id }).(pulumi.IntOutput)
}

// RP router IPv6 address.
func (o GetRouterMulticast6PimSmGlobalRpAddressOutput) Ip6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticast6PimSmGlobalRpAddress) string { return v.Ip6Address }).(pulumi.StringOutput)
}

type GetRouterMulticast6PimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticast6PimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetRouterMulticast6PimSmGlobalRpAddressArrayOutput) ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutput() GetRouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalRpAddressArrayOutput) ToGetRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetRouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetRouterMulticast6PimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) GetRouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticast6PimSmGlobalRpAddress {
		return vs[0].([]GetRouterMulticast6PimSmGlobalRpAddress)[vs[1].(int)]
	}).(GetRouterMulticast6PimSmGlobalRpAddressOutput)
}

type GetRouterMulticastInterface struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS).
	CiscoExcludeGenid string `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority int `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval int `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmps []GetRouterMulticastInterfaceIgmp `pulumi:"igmps"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups []GetRouterMulticastInterfaceJoinGroup `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow string `pulumi:"multicastFlow"`
	// Interface name.
	Name string `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter string `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM.
	Passive string `pulumi:"passive"`
	// PIM operation mode.
	PimMode string `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay int `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections.
	RpCandidate string `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup string `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval int `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority int `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query.
	RpfNbrFailBack string `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter string `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval int `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup string `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold int `pulumi:"ttlThreshold"`
}

// GetRouterMulticastInterfaceInput is an input type that accepts GetRouterMulticastInterfaceArgs and GetRouterMulticastInterfaceOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceInput` via:
//
//	GetRouterMulticastInterfaceArgs{...}
type GetRouterMulticastInterfaceInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceOutput() GetRouterMulticastInterfaceOutput
	ToGetRouterMulticastInterfaceOutputWithContext(context.Context) GetRouterMulticastInterfaceOutput
}

type GetRouterMulticastInterfaceArgs struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS).
	CiscoExcludeGenid pulumi.StringInput `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority pulumi.IntInput `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmps GetRouterMulticastInterfaceIgmpArrayInput `pulumi:"igmps"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups GetRouterMulticastInterfaceJoinGroupArrayInput `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow pulumi.StringInput `pulumi:"multicastFlow"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter pulumi.StringInput `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM.
	Passive pulumi.StringInput `pulumi:"passive"`
	// PIM operation mode.
	PimMode pulumi.StringInput `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay pulumi.IntInput `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections.
	RpCandidate pulumi.StringInput `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup pulumi.StringInput `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval pulumi.IntInput `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority pulumi.IntInput `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query.
	RpfNbrFailBack pulumi.StringInput `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter pulumi.StringInput `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval pulumi.IntInput `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup pulumi.StringInput `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold pulumi.IntInput `pulumi:"ttlThreshold"`
}

func (GetRouterMulticastInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterface)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceArgs) ToGetRouterMulticastInterfaceOutput() GetRouterMulticastInterfaceOutput {
	return i.ToGetRouterMulticastInterfaceOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceArgs) ToGetRouterMulticastInterfaceOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceOutput)
}

// GetRouterMulticastInterfaceArrayInput is an input type that accepts GetRouterMulticastInterfaceArray and GetRouterMulticastInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceArrayInput` via:
//
//	GetRouterMulticastInterfaceArray{ GetRouterMulticastInterfaceArgs{...} }
type GetRouterMulticastInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceArrayOutput() GetRouterMulticastInterfaceArrayOutput
	ToGetRouterMulticastInterfaceArrayOutputWithContext(context.Context) GetRouterMulticastInterfaceArrayOutput
}

type GetRouterMulticastInterfaceArray []GetRouterMulticastInterfaceInput

func (GetRouterMulticastInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterface)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceArray) ToGetRouterMulticastInterfaceArrayOutput() GetRouterMulticastInterfaceArrayOutput {
	return i.ToGetRouterMulticastInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceArray) ToGetRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceArrayOutput)
}

type GetRouterMulticastInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterface)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceOutput) ToGetRouterMulticastInterfaceOutput() GetRouterMulticastInterfaceOutput {
	return o
}

func (o GetRouterMulticastInterfaceOutput) ToGetRouterMulticastInterfaceOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceOutput {
	return o
}

// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
func (o GetRouterMulticastInterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Exclude GenID from hello packets (compatibility with old Cisco IOS).
func (o GetRouterMulticastInterfaceOutput) CiscoExcludeGenid() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.CiscoExcludeGenid }).(pulumi.StringOutput)
}

// DR election priority.
func (o GetRouterMulticastInterfaceOutput) DrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.DrPriority }).(pulumi.IntOutput)
}

// Time before old neighbor information expires (0 - 65535 sec, default = 105).
func (o GetRouterMulticastInterfaceOutput) HelloHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.HelloHoldtime }).(pulumi.IntOutput)
}

// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
func (o GetRouterMulticastInterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// IGMP configuration options. The structure of `igmp` block is documented below.
func (o GetRouterMulticastInterfaceOutput) Igmps() GetRouterMulticastInterfaceIgmpArrayOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) []GetRouterMulticastInterfaceIgmp { return v.Igmps }).(GetRouterMulticastInterfaceIgmpArrayOutput)
}

// Join multicast groups. The structure of `joinGroup` block is documented below.
func (o GetRouterMulticastInterfaceOutput) JoinGroups() GetRouterMulticastInterfaceJoinGroupArrayOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) []GetRouterMulticastInterfaceJoinGroup { return v.JoinGroups }).(GetRouterMulticastInterfaceJoinGroupArrayOutput)
}

// Acceptable source for multicast group.
func (o GetRouterMulticastInterfaceOutput) MulticastFlow() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.MulticastFlow }).(pulumi.StringOutput)
}

// Interface name.
func (o GetRouterMulticastInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Routers acknowledged as neighbor routers.
func (o GetRouterMulticastInterfaceOutput) NeighbourFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.NeighbourFilter }).(pulumi.StringOutput)
}

// Enable/disable listening to IGMP but not participating in PIM.
func (o GetRouterMulticastInterfaceOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.Passive }).(pulumi.StringOutput)
}

// PIM operation mode.
func (o GetRouterMulticastInterfaceOutput) PimMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.PimMode }).(pulumi.StringOutput)
}

// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
func (o GetRouterMulticastInterfaceOutput) PropagationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.PropagationDelay }).(pulumi.IntOutput)
}

// Enable/disable compete to become RP in elections.
func (o GetRouterMulticastInterfaceOutput) RpCandidate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.RpCandidate }).(pulumi.StringOutput)
}

// Multicast groups managed by this RP.
func (o GetRouterMulticastInterfaceOutput) RpCandidateGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.RpCandidateGroup }).(pulumi.StringOutput)
}

// RP candidate advertisement interval (1 - 16383 sec, default = 60).
func (o GetRouterMulticastInterfaceOutput) RpCandidateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.RpCandidateInterval }).(pulumi.IntOutput)
}

// Router's priority as RP.
func (o GetRouterMulticastInterfaceOutput) RpCandidatePriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.RpCandidatePriority }).(pulumi.IntOutput)
}

// Enable/disable fail back for RPF neighbor query.
func (o GetRouterMulticastInterfaceOutput) RpfNbrFailBack() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.RpfNbrFailBack }).(pulumi.StringOutput)
}

// Filter for fail back RPF neighbors.
func (o GetRouterMulticastInterfaceOutput) RpfNbrFailBackFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.RpfNbrFailBackFilter }).(pulumi.StringOutput)
}

// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
func (o GetRouterMulticastInterfaceOutput) StateRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.StateRefreshInterval }).(pulumi.IntOutput)
}

// Statically set multicast groups to forward out.
func (o GetRouterMulticastInterfaceOutput) StaticGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) string { return v.StaticGroup }).(pulumi.StringOutput)
}

// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
func (o GetRouterMulticastInterfaceOutput) TtlThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterface) int { return v.TtlThreshold }).(pulumi.IntOutput)
}

type GetRouterMulticastInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterface)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceArrayOutput) ToGetRouterMulticastInterfaceArrayOutput() GetRouterMulticastInterfaceArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceArrayOutput) ToGetRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastInterface {
		return vs[0].([]GetRouterMulticastInterface)[vs[1].(int)]
	}).(GetRouterMulticastInterfaceOutput)
}

type GetRouterMulticastInterfaceIgmp struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup string `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup string `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount int `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval int `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval int `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime int `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout int `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option.
	RouterAlertCheck string `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support.
	Version string `pulumi:"version"`
}

// GetRouterMulticastInterfaceIgmpInput is an input type that accepts GetRouterMulticastInterfaceIgmpArgs and GetRouterMulticastInterfaceIgmpOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceIgmpInput` via:
//
//	GetRouterMulticastInterfaceIgmpArgs{...}
type GetRouterMulticastInterfaceIgmpInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceIgmpOutput() GetRouterMulticastInterfaceIgmpOutput
	ToGetRouterMulticastInterfaceIgmpOutputWithContext(context.Context) GetRouterMulticastInterfaceIgmpOutput
}

type GetRouterMulticastInterfaceIgmpArgs struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup pulumi.StringInput `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup pulumi.StringInput `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount pulumi.IntInput `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval pulumi.IntInput `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval pulumi.IntInput `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime pulumi.IntInput `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout pulumi.IntInput `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option.
	RouterAlertCheck pulumi.StringInput `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetRouterMulticastInterfaceIgmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceIgmpArgs) ToGetRouterMulticastInterfaceIgmpOutput() GetRouterMulticastInterfaceIgmpOutput {
	return i.ToGetRouterMulticastInterfaceIgmpOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceIgmpArgs) ToGetRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceIgmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceIgmpOutput)
}

// GetRouterMulticastInterfaceIgmpArrayInput is an input type that accepts GetRouterMulticastInterfaceIgmpArray and GetRouterMulticastInterfaceIgmpArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceIgmpArrayInput` via:
//
//	GetRouterMulticastInterfaceIgmpArray{ GetRouterMulticastInterfaceIgmpArgs{...} }
type GetRouterMulticastInterfaceIgmpArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceIgmpArrayOutput() GetRouterMulticastInterfaceIgmpArrayOutput
	ToGetRouterMulticastInterfaceIgmpArrayOutputWithContext(context.Context) GetRouterMulticastInterfaceIgmpArrayOutput
}

type GetRouterMulticastInterfaceIgmpArray []GetRouterMulticastInterfaceIgmpInput

func (GetRouterMulticastInterfaceIgmpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceIgmpArray) ToGetRouterMulticastInterfaceIgmpArrayOutput() GetRouterMulticastInterfaceIgmpArrayOutput {
	return i.ToGetRouterMulticastInterfaceIgmpArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceIgmpArray) ToGetRouterMulticastInterfaceIgmpArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceIgmpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceIgmpArrayOutput)
}

type GetRouterMulticastInterfaceIgmpOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceIgmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceIgmpOutput) ToGetRouterMulticastInterfaceIgmpOutput() GetRouterMulticastInterfaceIgmpOutput {
	return o
}

func (o GetRouterMulticastInterfaceIgmpOutput) ToGetRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceIgmpOutput {
	return o
}

// Groups IGMP hosts are allowed to join.
func (o GetRouterMulticastInterfaceIgmpOutput) AccessGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) string { return v.AccessGroup }).(pulumi.StringOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o GetRouterMulticastInterfaceIgmpOutput) ImmediateLeaveGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) string { return v.ImmediateLeaveGroup }).(pulumi.StringOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o GetRouterMulticastInterfaceIgmpOutput) LastMemberQueryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) int { return v.LastMemberQueryCount }).(pulumi.IntOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o GetRouterMulticastInterfaceIgmpOutput) LastMemberQueryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) int { return v.LastMemberQueryInterval }).(pulumi.IntOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o GetRouterMulticastInterfaceIgmpOutput) QueryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) int { return v.QueryInterval }).(pulumi.IntOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o GetRouterMulticastInterfaceIgmpOutput) QueryMaxResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) int { return v.QueryMaxResponseTime }).(pulumi.IntOutput)
}

// Timeout between queries before becoming querier for network (60 - 900, default = 255).
func (o GetRouterMulticastInterfaceIgmpOutput) QueryTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) int { return v.QueryTimeout }).(pulumi.IntOutput)
}

// Enable/disable require IGMP packets contain router alert option.
func (o GetRouterMulticastInterfaceIgmpOutput) RouterAlertCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) string { return v.RouterAlertCheck }).(pulumi.StringOutput)
}

// Maximum version of IGMP to support.
func (o GetRouterMulticastInterfaceIgmpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceIgmp) string { return v.Version }).(pulumi.StringOutput)
}

type GetRouterMulticastInterfaceIgmpArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceIgmpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceIgmpArrayOutput) ToGetRouterMulticastInterfaceIgmpArrayOutput() GetRouterMulticastInterfaceIgmpArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceIgmpArrayOutput) ToGetRouterMulticastInterfaceIgmpArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceIgmpArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceIgmpArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastInterfaceIgmpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastInterfaceIgmp {
		return vs[0].([]GetRouterMulticastInterfaceIgmp)[vs[1].(int)]
	}).(GetRouterMulticastInterfaceIgmpOutput)
}

type GetRouterMulticastInterfaceJoinGroup struct {
	// Multicast group IP address.
	Address string `pulumi:"address"`
}

// GetRouterMulticastInterfaceJoinGroupInput is an input type that accepts GetRouterMulticastInterfaceJoinGroupArgs and GetRouterMulticastInterfaceJoinGroupOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceJoinGroupInput` via:
//
//	GetRouterMulticastInterfaceJoinGroupArgs{...}
type GetRouterMulticastInterfaceJoinGroupInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceJoinGroupOutput() GetRouterMulticastInterfaceJoinGroupOutput
	ToGetRouterMulticastInterfaceJoinGroupOutputWithContext(context.Context) GetRouterMulticastInterfaceJoinGroupOutput
}

type GetRouterMulticastInterfaceJoinGroupArgs struct {
	// Multicast group IP address.
	Address pulumi.StringInput `pulumi:"address"`
}

func (GetRouterMulticastInterfaceJoinGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceJoinGroupArgs) ToGetRouterMulticastInterfaceJoinGroupOutput() GetRouterMulticastInterfaceJoinGroupOutput {
	return i.ToGetRouterMulticastInterfaceJoinGroupOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceJoinGroupArgs) ToGetRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceJoinGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceJoinGroupOutput)
}

// GetRouterMulticastInterfaceJoinGroupArrayInput is an input type that accepts GetRouterMulticastInterfaceJoinGroupArray and GetRouterMulticastInterfaceJoinGroupArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastInterfaceJoinGroupArrayInput` via:
//
//	GetRouterMulticastInterfaceJoinGroupArray{ GetRouterMulticastInterfaceJoinGroupArgs{...} }
type GetRouterMulticastInterfaceJoinGroupArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastInterfaceJoinGroupArrayOutput() GetRouterMulticastInterfaceJoinGroupArrayOutput
	ToGetRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Context) GetRouterMulticastInterfaceJoinGroupArrayOutput
}

type GetRouterMulticastInterfaceJoinGroupArray []GetRouterMulticastInterfaceJoinGroupInput

func (GetRouterMulticastInterfaceJoinGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i GetRouterMulticastInterfaceJoinGroupArray) ToGetRouterMulticastInterfaceJoinGroupArrayOutput() GetRouterMulticastInterfaceJoinGroupArrayOutput {
	return i.ToGetRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastInterfaceJoinGroupArray) ToGetRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceJoinGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastInterfaceJoinGroupArrayOutput)
}

type GetRouterMulticastInterfaceJoinGroupOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceJoinGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceJoinGroupOutput) ToGetRouterMulticastInterfaceJoinGroupOutput() GetRouterMulticastInterfaceJoinGroupOutput {
	return o
}

func (o GetRouterMulticastInterfaceJoinGroupOutput) ToGetRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceJoinGroupOutput {
	return o
}

// Multicast group IP address.
func (o GetRouterMulticastInterfaceJoinGroupOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastInterfaceJoinGroup) string { return v.Address }).(pulumi.StringOutput)
}

type GetRouterMulticastInterfaceJoinGroupArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastInterfaceJoinGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o GetRouterMulticastInterfaceJoinGroupArrayOutput) ToGetRouterMulticastInterfaceJoinGroupArrayOutput() GetRouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceJoinGroupArrayOutput) ToGetRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) GetRouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o GetRouterMulticastInterfaceJoinGroupArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastInterfaceJoinGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastInterfaceJoinGroup {
		return vs[0].([]GetRouterMulticastInterfaceJoinGroup)[vs[1].(int)]
	}).(GetRouterMulticastInterfaceJoinGroupOutput)
}

type GetRouterMulticastPimSmGlobal struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList string `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList string `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors.
	BsrAllowQuickRefresh string `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR).
	BsrCandidate string `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash int `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface string `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority int `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS.
	CiscoCrpPrefix string `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS).
	CiscoIgnoreRpSetPriority string `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility).
	CiscoRegisterChecksum string `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup string `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime int `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval int `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries int `pulumi:"nullRegisterRetries"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit int `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets.
	RegisterRpReachability string `pulumi:"registerRpReachability"`
	// Override source address in register packets.
	RegisterSource string `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface string `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp string `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression int `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []GetRouterMulticastPimSmGlobalRpAddress `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive int `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees.
	SptThreshold string `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup string `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast.
	Ssm string `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange string `pulumi:"ssmRange"`
}

// GetRouterMulticastPimSmGlobalInput is an input type that accepts GetRouterMulticastPimSmGlobalArgs and GetRouterMulticastPimSmGlobalOutput values.
// You can construct a concrete instance of `GetRouterMulticastPimSmGlobalInput` via:
//
//	GetRouterMulticastPimSmGlobalArgs{...}
type GetRouterMulticastPimSmGlobalInput interface {
	pulumi.Input

	ToGetRouterMulticastPimSmGlobalOutput() GetRouterMulticastPimSmGlobalOutput
	ToGetRouterMulticastPimSmGlobalOutputWithContext(context.Context) GetRouterMulticastPimSmGlobalOutput
}

type GetRouterMulticastPimSmGlobalArgs struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList pulumi.StringInput `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList pulumi.StringInput `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors.
	BsrAllowQuickRefresh pulumi.StringInput `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR).
	BsrCandidate pulumi.StringInput `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash pulumi.IntInput `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface pulumi.StringInput `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority pulumi.IntInput `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS.
	CiscoCrpPrefix pulumi.StringInput `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS).
	CiscoIgnoreRpSetPriority pulumi.StringInput `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility).
	CiscoRegisterChecksum pulumi.StringInput `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup pulumi.StringInput `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime pulumi.IntInput `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval pulumi.IntInput `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries pulumi.IntInput `pulumi:"nullRegisterRetries"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit pulumi.IntInput `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets.
	RegisterRpReachability pulumi.StringInput `pulumi:"registerRpReachability"`
	// Override source address in register packets.
	RegisterSource pulumi.StringInput `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface pulumi.StringInput `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp pulumi.StringInput `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression pulumi.IntInput `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses GetRouterMulticastPimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive pulumi.IntInput `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees.
	SptThreshold pulumi.StringInput `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup pulumi.StringInput `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast.
	Ssm pulumi.StringInput `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange pulumi.StringInput `pulumi:"ssmRange"`
}

func (GetRouterMulticastPimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i GetRouterMulticastPimSmGlobalArgs) ToGetRouterMulticastPimSmGlobalOutput() GetRouterMulticastPimSmGlobalOutput {
	return i.ToGetRouterMulticastPimSmGlobalOutputWithContext(context.Background())
}

func (i GetRouterMulticastPimSmGlobalArgs) ToGetRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastPimSmGlobalOutput)
}

// GetRouterMulticastPimSmGlobalArrayInput is an input type that accepts GetRouterMulticastPimSmGlobalArray and GetRouterMulticastPimSmGlobalArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastPimSmGlobalArrayInput` via:
//
//	GetRouterMulticastPimSmGlobalArray{ GetRouterMulticastPimSmGlobalArgs{...} }
type GetRouterMulticastPimSmGlobalArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastPimSmGlobalArrayOutput() GetRouterMulticastPimSmGlobalArrayOutput
	ToGetRouterMulticastPimSmGlobalArrayOutputWithContext(context.Context) GetRouterMulticastPimSmGlobalArrayOutput
}

type GetRouterMulticastPimSmGlobalArray []GetRouterMulticastPimSmGlobalInput

func (GetRouterMulticastPimSmGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i GetRouterMulticastPimSmGlobalArray) ToGetRouterMulticastPimSmGlobalArrayOutput() GetRouterMulticastPimSmGlobalArrayOutput {
	return i.ToGetRouterMulticastPimSmGlobalArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastPimSmGlobalArray) ToGetRouterMulticastPimSmGlobalArrayOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastPimSmGlobalArrayOutput)
}

type GetRouterMulticastPimSmGlobalOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastPimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o GetRouterMulticastPimSmGlobalOutput) ToGetRouterMulticastPimSmGlobalOutput() GetRouterMulticastPimSmGlobalOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalOutput) ToGetRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalOutput {
	return o
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o GetRouterMulticastPimSmGlobalOutput) AcceptRegisterList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.AcceptRegisterList }).(pulumi.StringOutput)
}

// Sources allowed to send multicast traffic.
func (o GetRouterMulticastPimSmGlobalOutput) AcceptSourceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.AcceptSourceList }).(pulumi.StringOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors.
func (o GetRouterMulticastPimSmGlobalOutput) BsrAllowQuickRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.BsrAllowQuickRefresh }).(pulumi.StringOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR).
func (o GetRouterMulticastPimSmGlobalOutput) BsrCandidate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.BsrCandidate }).(pulumi.StringOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o GetRouterMulticastPimSmGlobalOutput) BsrHash() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.BsrHash }).(pulumi.IntOutput)
}

// Interface to advertise as candidate BSR.
func (o GetRouterMulticastPimSmGlobalOutput) BsrInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.BsrInterface }).(pulumi.StringOutput)
}

// BSR priority (0 - 255, default = 0).
func (o GetRouterMulticastPimSmGlobalOutput) BsrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.BsrPriority }).(pulumi.IntOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS.
func (o GetRouterMulticastPimSmGlobalOutput) CiscoCrpPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.CiscoCrpPrefix }).(pulumi.StringOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS).
func (o GetRouterMulticastPimSmGlobalOutput) CiscoIgnoreRpSetPriority() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.CiscoIgnoreRpSetPriority }).(pulumi.StringOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility).
func (o GetRouterMulticastPimSmGlobalOutput) CiscoRegisterChecksum() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.CiscoRegisterChecksum }).(pulumi.StringOutput)
}

// Cisco register checksum only these groups.
func (o GetRouterMulticastPimSmGlobalOutput) CiscoRegisterChecksumGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.CiscoRegisterChecksumGroup }).(pulumi.StringOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o GetRouterMulticastPimSmGlobalOutput) JoinPruneHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.JoinPruneHoldtime }).(pulumi.IntOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o GetRouterMulticastPimSmGlobalOutput) MessageInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.MessageInterval }).(pulumi.IntOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o GetRouterMulticastPimSmGlobalOutput) NullRegisterRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.NullRegisterRetries }).(pulumi.IntOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o GetRouterMulticastPimSmGlobalOutput) RegisterRateLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.RegisterRateLimit }).(pulumi.IntOutput)
}

// Enable/disable check RP is reachable before registering packets.
func (o GetRouterMulticastPimSmGlobalOutput) RegisterRpReachability() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.RegisterRpReachability }).(pulumi.StringOutput)
}

// Override source address in register packets.
func (o GetRouterMulticastPimSmGlobalOutput) RegisterSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.RegisterSource }).(pulumi.StringOutput)
}

// Override with primary interface address.
func (o GetRouterMulticastPimSmGlobalOutput) RegisterSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.RegisterSourceInterface }).(pulumi.StringOutput)
}

// Override with local IP address.
func (o GetRouterMulticastPimSmGlobalOutput) RegisterSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.RegisterSourceIp }).(pulumi.StringOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o GetRouterMulticastPimSmGlobalOutput) RegisterSupression() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.RegisterSupression }).(pulumi.IntOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o GetRouterMulticastPimSmGlobalOutput) RpAddresses() GetRouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) []GetRouterMulticastPimSmGlobalRpAddress { return v.RpAddresses }).(GetRouterMulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o GetRouterMulticastPimSmGlobalOutput) RpRegisterKeepalive() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) int { return v.RpRegisterKeepalive }).(pulumi.IntOutput)
}

// Enable/disable switching to source specific trees.
func (o GetRouterMulticastPimSmGlobalOutput) SptThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.SptThreshold }).(pulumi.StringOutput)
}

// Groups allowed to switch to source tree.
func (o GetRouterMulticastPimSmGlobalOutput) SptThresholdGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.SptThresholdGroup }).(pulumi.StringOutput)
}

// Enable/disable source specific multicast.
func (o GetRouterMulticastPimSmGlobalOutput) Ssm() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.Ssm }).(pulumi.StringOutput)
}

// Groups allowed to source specific multicast.
func (o GetRouterMulticastPimSmGlobalOutput) SsmRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobal) string { return v.SsmRange }).(pulumi.StringOutput)
}

type GetRouterMulticastPimSmGlobalArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastPimSmGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o GetRouterMulticastPimSmGlobalArrayOutput) ToGetRouterMulticastPimSmGlobalArrayOutput() GetRouterMulticastPimSmGlobalArrayOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalArrayOutput) ToGetRouterMulticastPimSmGlobalArrayOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalArrayOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastPimSmGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastPimSmGlobal {
		return vs[0].([]GetRouterMulticastPimSmGlobal)[vs[1].(int)]
	}).(GetRouterMulticastPimSmGlobalOutput)
}

type GetRouterMulticastPimSmGlobalRpAddress struct {
	// Groups to use this RP.
	Group string `pulumi:"group"`
	// ID.
	Id int `pulumi:"id"`
	// RP router address.
	IpAddress string `pulumi:"ipAddress"`
}

// GetRouterMulticastPimSmGlobalRpAddressInput is an input type that accepts GetRouterMulticastPimSmGlobalRpAddressArgs and GetRouterMulticastPimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `GetRouterMulticastPimSmGlobalRpAddressInput` via:
//
//	GetRouterMulticastPimSmGlobalRpAddressArgs{...}
type GetRouterMulticastPimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToGetRouterMulticastPimSmGlobalRpAddressOutput() GetRouterMulticastPimSmGlobalRpAddressOutput
	ToGetRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Context) GetRouterMulticastPimSmGlobalRpAddressOutput
}

type GetRouterMulticastPimSmGlobalRpAddressArgs struct {
	// Groups to use this RP.
	Group pulumi.StringInput `pulumi:"group"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// RP router address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (GetRouterMulticastPimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetRouterMulticastPimSmGlobalRpAddressArgs) ToGetRouterMulticastPimSmGlobalRpAddressOutput() GetRouterMulticastPimSmGlobalRpAddressOutput {
	return i.ToGetRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i GetRouterMulticastPimSmGlobalRpAddressArgs) ToGetRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastPimSmGlobalRpAddressOutput)
}

// GetRouterMulticastPimSmGlobalRpAddressArrayInput is an input type that accepts GetRouterMulticastPimSmGlobalRpAddressArray and GetRouterMulticastPimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastPimSmGlobalRpAddressArrayInput` via:
//
//	GetRouterMulticastPimSmGlobalRpAddressArray{ GetRouterMulticastPimSmGlobalRpAddressArgs{...} }
type GetRouterMulticastPimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastPimSmGlobalRpAddressArrayOutput() GetRouterMulticastPimSmGlobalRpAddressArrayOutput
	ToGetRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Context) GetRouterMulticastPimSmGlobalRpAddressArrayOutput
}

type GetRouterMulticastPimSmGlobalRpAddressArray []GetRouterMulticastPimSmGlobalRpAddressInput

func (GetRouterMulticastPimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetRouterMulticastPimSmGlobalRpAddressArray) ToGetRouterMulticastPimSmGlobalRpAddressArrayOutput() GetRouterMulticastPimSmGlobalRpAddressArrayOutput {
	return i.ToGetRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastPimSmGlobalRpAddressArray) ToGetRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastPimSmGlobalRpAddressArrayOutput)
}

type GetRouterMulticastPimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastPimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetRouterMulticastPimSmGlobalRpAddressOutput) ToGetRouterMulticastPimSmGlobalRpAddressOutput() GetRouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalRpAddressOutput) ToGetRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

// Groups to use this RP.
func (o GetRouterMulticastPimSmGlobalRpAddressOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobalRpAddress) string { return v.Group }).(pulumi.StringOutput)
}

// ID.
func (o GetRouterMulticastPimSmGlobalRpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobalRpAddress) int { return v.Id }).(pulumi.IntOutput)
}

// RP router address.
func (o GetRouterMulticastPimSmGlobalRpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastPimSmGlobalRpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

type GetRouterMulticastPimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastPimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetRouterMulticastPimSmGlobalRpAddressArrayOutput) ToGetRouterMulticastPimSmGlobalRpAddressArrayOutput() GetRouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalRpAddressArrayOutput) ToGetRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetRouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetRouterMulticastPimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastPimSmGlobalRpAddress {
		return vs[0].([]GetRouterMulticastPimSmGlobalRpAddress)[vs[1].(int)]
	}).(GetRouterMulticastPimSmGlobalRpAddressOutput)
}

type GetRouterMulticastflowFlow struct {
	// Multicast group IP address.
	GroupAddr string `pulumi:"groupAddr"`
	// Flow ID.
	Id int `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr string `pulumi:"sourceAddr"`
}

// GetRouterMulticastflowFlowInput is an input type that accepts GetRouterMulticastflowFlowArgs and GetRouterMulticastflowFlowOutput values.
// You can construct a concrete instance of `GetRouterMulticastflowFlowInput` via:
//
//	GetRouterMulticastflowFlowArgs{...}
type GetRouterMulticastflowFlowInput interface {
	pulumi.Input

	ToGetRouterMulticastflowFlowOutput() GetRouterMulticastflowFlowOutput
	ToGetRouterMulticastflowFlowOutputWithContext(context.Context) GetRouterMulticastflowFlowOutput
}

type GetRouterMulticastflowFlowArgs struct {
	// Multicast group IP address.
	GroupAddr pulumi.StringInput `pulumi:"groupAddr"`
	// Flow ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr pulumi.StringInput `pulumi:"sourceAddr"`
}

func (GetRouterMulticastflowFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastflowFlow)(nil)).Elem()
}

func (i GetRouterMulticastflowFlowArgs) ToGetRouterMulticastflowFlowOutput() GetRouterMulticastflowFlowOutput {
	return i.ToGetRouterMulticastflowFlowOutputWithContext(context.Background())
}

func (i GetRouterMulticastflowFlowArgs) ToGetRouterMulticastflowFlowOutputWithContext(ctx context.Context) GetRouterMulticastflowFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastflowFlowOutput)
}

// GetRouterMulticastflowFlowArrayInput is an input type that accepts GetRouterMulticastflowFlowArray and GetRouterMulticastflowFlowArrayOutput values.
// You can construct a concrete instance of `GetRouterMulticastflowFlowArrayInput` via:
//
//	GetRouterMulticastflowFlowArray{ GetRouterMulticastflowFlowArgs{...} }
type GetRouterMulticastflowFlowArrayInput interface {
	pulumi.Input

	ToGetRouterMulticastflowFlowArrayOutput() GetRouterMulticastflowFlowArrayOutput
	ToGetRouterMulticastflowFlowArrayOutputWithContext(context.Context) GetRouterMulticastflowFlowArrayOutput
}

type GetRouterMulticastflowFlowArray []GetRouterMulticastflowFlowInput

func (GetRouterMulticastflowFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastflowFlow)(nil)).Elem()
}

func (i GetRouterMulticastflowFlowArray) ToGetRouterMulticastflowFlowArrayOutput() GetRouterMulticastflowFlowArrayOutput {
	return i.ToGetRouterMulticastflowFlowArrayOutputWithContext(context.Background())
}

func (i GetRouterMulticastflowFlowArray) ToGetRouterMulticastflowFlowArrayOutputWithContext(ctx context.Context) GetRouterMulticastflowFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterMulticastflowFlowArrayOutput)
}

type GetRouterMulticastflowFlowOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastflowFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterMulticastflowFlow)(nil)).Elem()
}

func (o GetRouterMulticastflowFlowOutput) ToGetRouterMulticastflowFlowOutput() GetRouterMulticastflowFlowOutput {
	return o
}

func (o GetRouterMulticastflowFlowOutput) ToGetRouterMulticastflowFlowOutputWithContext(ctx context.Context) GetRouterMulticastflowFlowOutput {
	return o
}

// Multicast group IP address.
func (o GetRouterMulticastflowFlowOutput) GroupAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastflowFlow) string { return v.GroupAddr }).(pulumi.StringOutput)
}

// Flow ID.
func (o GetRouterMulticastflowFlowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterMulticastflowFlow) int { return v.Id }).(pulumi.IntOutput)
}

// Multicast source IP address.
func (o GetRouterMulticastflowFlowOutput) SourceAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterMulticastflowFlow) string { return v.SourceAddr }).(pulumi.StringOutput)
}

type GetRouterMulticastflowFlowArrayOutput struct{ *pulumi.OutputState }

func (GetRouterMulticastflowFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterMulticastflowFlow)(nil)).Elem()
}

func (o GetRouterMulticastflowFlowArrayOutput) ToGetRouterMulticastflowFlowArrayOutput() GetRouterMulticastflowFlowArrayOutput {
	return o
}

func (o GetRouterMulticastflowFlowArrayOutput) ToGetRouterMulticastflowFlowArrayOutputWithContext(ctx context.Context) GetRouterMulticastflowFlowArrayOutput {
	return o
}

func (o GetRouterMulticastflowFlowArrayOutput) Index(i pulumi.IntInput) GetRouterMulticastflowFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterMulticastflowFlow {
		return vs[0].([]GetRouterMulticastflowFlow)[vs[1].(int)]
	}).(GetRouterMulticastflowFlowOutput)
}

type GetRouterOspf6Area struct {
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost int `pulumi:"defaultCost"`
	// Summary address entry ID.
	Id string `pulumi:"id"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetRouterOspf6AreaIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area.
	NssaDefaultInformationOriginate string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes.
	NssaDefaultInformationOriginateMetricType string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution string `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole string `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges []GetRouterOspf6AreaRange `pulumi:"ranges"`
	// Stub summary setting.
	StubType string `pulumi:"stubType"`
	// Area type setting.
	Type string `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []GetRouterOspf6AreaVirtualLink `pulumi:"virtualLinks"`
}

// GetRouterOspf6AreaInput is an input type that accepts GetRouterOspf6AreaArgs and GetRouterOspf6AreaOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaInput` via:
//
//	GetRouterOspf6AreaArgs{...}
type GetRouterOspf6AreaInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaOutput() GetRouterOspf6AreaOutput
	ToGetRouterOspf6AreaOutputWithContext(context.Context) GetRouterOspf6AreaOutput
}

type GetRouterOspf6AreaArgs struct {
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntInput `pulumi:"defaultCost"`
	// Summary address entry ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetRouterOspf6AreaIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area.
	NssaDefaultInformationOriginate pulumi.StringInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes.
	NssaDefaultInformationOriginateMetricType pulumi.StringInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution pulumi.StringInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole pulumi.StringInput `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges GetRouterOspf6AreaRangeArrayInput `pulumi:"ranges"`
	// Stub summary setting.
	StubType pulumi.StringInput `pulumi:"stubType"`
	// Area type setting.
	Type pulumi.StringInput `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks GetRouterOspf6AreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (GetRouterOspf6AreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Area)(nil)).Elem()
}

func (i GetRouterOspf6AreaArgs) ToGetRouterOspf6AreaOutput() GetRouterOspf6AreaOutput {
	return i.ToGetRouterOspf6AreaOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaArgs) ToGetRouterOspf6AreaOutputWithContext(ctx context.Context) GetRouterOspf6AreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaOutput)
}

// GetRouterOspf6AreaArrayInput is an input type that accepts GetRouterOspf6AreaArray and GetRouterOspf6AreaArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaArrayInput` via:
//
//	GetRouterOspf6AreaArray{ GetRouterOspf6AreaArgs{...} }
type GetRouterOspf6AreaArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaArrayOutput() GetRouterOspf6AreaArrayOutput
	ToGetRouterOspf6AreaArrayOutputWithContext(context.Context) GetRouterOspf6AreaArrayOutput
}

type GetRouterOspf6AreaArray []GetRouterOspf6AreaInput

func (GetRouterOspf6AreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Area)(nil)).Elem()
}

func (i GetRouterOspf6AreaArray) ToGetRouterOspf6AreaArrayOutput() GetRouterOspf6AreaArrayOutput {
	return i.ToGetRouterOspf6AreaArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaArray) ToGetRouterOspf6AreaArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaArrayOutput)
}

type GetRouterOspf6AreaOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Area)(nil)).Elem()
}

func (o GetRouterOspf6AreaOutput) ToGetRouterOspf6AreaOutput() GetRouterOspf6AreaOutput {
	return o
}

func (o GetRouterOspf6AreaOutput) ToGetRouterOspf6AreaOutputWithContext(ctx context.Context) GetRouterOspf6AreaOutput {
	return o
}

// Authentication mode.
func (o GetRouterOspf6AreaOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.Authentication }).(pulumi.StringOutput)
}

// Summary default cost of stub or NSSA area.
func (o GetRouterOspf6AreaOutput) DefaultCost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) int { return v.DefaultCost }).(pulumi.IntOutput)
}

// Summary address entry ID.
func (o GetRouterOspf6AreaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.Id }).(pulumi.StringOutput)
}

// Authentication algorithm.
func (o GetRouterOspf6AreaOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetRouterOspf6AreaOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetRouterOspf6AreaOutput) IpsecKeys() GetRouterOspf6AreaIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) []GetRouterOspf6AreaIpsecKey { return v.IpsecKeys }).(GetRouterOspf6AreaIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetRouterOspf6AreaOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// Enable/disable originate type 7 default into NSSA area.
func (o GetRouterOspf6AreaOutput) NssaDefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.NssaDefaultInformationOriginate }).(pulumi.StringOutput)
}

// OSPFv3 default metric.
func (o GetRouterOspf6AreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntOutput)
}

// OSPFv3 metric type for default routes.
func (o GetRouterOspf6AreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringOutput)
}

// Enable/disable redistribute into NSSA area.
func (o GetRouterOspf6AreaOutput) NssaRedistribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.NssaRedistribution }).(pulumi.StringOutput)
}

// NSSA translator role type.
func (o GetRouterOspf6AreaOutput) NssaTranslatorRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.NssaTranslatorRole }).(pulumi.StringOutput)
}

// OSPF6 area range configuration. The structure of `range` block is documented below.
func (o GetRouterOspf6AreaOutput) Ranges() GetRouterOspf6AreaRangeArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) []GetRouterOspf6AreaRange { return v.Ranges }).(GetRouterOspf6AreaRangeArrayOutput)
}

// Stub summary setting.
func (o GetRouterOspf6AreaOutput) StubType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.StubType }).(pulumi.StringOutput)
}

// Area type setting.
func (o GetRouterOspf6AreaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) string { return v.Type }).(pulumi.StringOutput)
}

// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
func (o GetRouterOspf6AreaOutput) VirtualLinks() GetRouterOspf6AreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6Area) []GetRouterOspf6AreaVirtualLink { return v.VirtualLinks }).(GetRouterOspf6AreaVirtualLinkArrayOutput)
}

type GetRouterOspf6AreaArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Area)(nil)).Elem()
}

func (o GetRouterOspf6AreaArrayOutput) ToGetRouterOspf6AreaArrayOutput() GetRouterOspf6AreaArrayOutput {
	return o
}

func (o GetRouterOspf6AreaArrayOutput) ToGetRouterOspf6AreaArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaArrayOutput {
	return o
}

func (o GetRouterOspf6AreaArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6AreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6Area {
		return vs[0].([]GetRouterOspf6Area)[vs[1].(int)]
	}).(GetRouterOspf6AreaOutput)
}

type GetRouterOspf6AreaIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetRouterOspf6AreaIpsecKeyInput is an input type that accepts GetRouterOspf6AreaIpsecKeyArgs and GetRouterOspf6AreaIpsecKeyOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaIpsecKeyInput` via:
//
//	GetRouterOspf6AreaIpsecKeyArgs{...}
type GetRouterOspf6AreaIpsecKeyInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaIpsecKeyOutput() GetRouterOspf6AreaIpsecKeyOutput
	ToGetRouterOspf6AreaIpsecKeyOutputWithContext(context.Context) GetRouterOspf6AreaIpsecKeyOutput
}

type GetRouterOspf6AreaIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetRouterOspf6AreaIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6AreaIpsecKeyArgs) ToGetRouterOspf6AreaIpsecKeyOutput() GetRouterOspf6AreaIpsecKeyOutput {
	return i.ToGetRouterOspf6AreaIpsecKeyOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaIpsecKeyArgs) ToGetRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6AreaIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaIpsecKeyOutput)
}

// GetRouterOspf6AreaIpsecKeyArrayInput is an input type that accepts GetRouterOspf6AreaIpsecKeyArray and GetRouterOspf6AreaIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaIpsecKeyArrayInput` via:
//
//	GetRouterOspf6AreaIpsecKeyArray{ GetRouterOspf6AreaIpsecKeyArgs{...} }
type GetRouterOspf6AreaIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaIpsecKeyArrayOutput() GetRouterOspf6AreaIpsecKeyArrayOutput
	ToGetRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Context) GetRouterOspf6AreaIpsecKeyArrayOutput
}

type GetRouterOspf6AreaIpsecKeyArray []GetRouterOspf6AreaIpsecKeyInput

func (GetRouterOspf6AreaIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6AreaIpsecKeyArray) ToGetRouterOspf6AreaIpsecKeyArrayOutput() GetRouterOspf6AreaIpsecKeyArrayOutput {
	return i.ToGetRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaIpsecKeyArray) ToGetRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaIpsecKeyArrayOutput)
}

type GetRouterOspf6AreaIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6AreaIpsecKeyOutput) ToGetRouterOspf6AreaIpsecKeyOutput() GetRouterOspf6AreaIpsecKeyOutput {
	return o
}

func (o GetRouterOspf6AreaIpsecKeyOutput) ToGetRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6AreaIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetRouterOspf6AreaIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetRouterOspf6AreaIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetRouterOspf6AreaIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetRouterOspf6AreaIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6AreaIpsecKeyArrayOutput) ToGetRouterOspf6AreaIpsecKeyArrayOutput() GetRouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6AreaIpsecKeyArrayOutput) ToGetRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6AreaIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6AreaIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6AreaIpsecKey {
		return vs[0].([]GetRouterOspf6AreaIpsecKey)[vs[1].(int)]
	}).(GetRouterOspf6AreaIpsecKeyOutput)
}

type GetRouterOspf6AreaRange struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Summary address entry ID.
	Id int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterOspf6AreaRangeInput is an input type that accepts GetRouterOspf6AreaRangeArgs and GetRouterOspf6AreaRangeOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaRangeInput` via:
//
//	GetRouterOspf6AreaRangeArgs{...}
type GetRouterOspf6AreaRangeInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaRangeOutput() GetRouterOspf6AreaRangeOutput
	ToGetRouterOspf6AreaRangeOutputWithContext(context.Context) GetRouterOspf6AreaRangeOutput
}

type GetRouterOspf6AreaRangeArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterOspf6AreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaRange)(nil)).Elem()
}

func (i GetRouterOspf6AreaRangeArgs) ToGetRouterOspf6AreaRangeOutput() GetRouterOspf6AreaRangeOutput {
	return i.ToGetRouterOspf6AreaRangeOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaRangeArgs) ToGetRouterOspf6AreaRangeOutputWithContext(ctx context.Context) GetRouterOspf6AreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaRangeOutput)
}

// GetRouterOspf6AreaRangeArrayInput is an input type that accepts GetRouterOspf6AreaRangeArray and GetRouterOspf6AreaRangeArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaRangeArrayInput` via:
//
//	GetRouterOspf6AreaRangeArray{ GetRouterOspf6AreaRangeArgs{...} }
type GetRouterOspf6AreaRangeArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaRangeArrayOutput() GetRouterOspf6AreaRangeArrayOutput
	ToGetRouterOspf6AreaRangeArrayOutputWithContext(context.Context) GetRouterOspf6AreaRangeArrayOutput
}

type GetRouterOspf6AreaRangeArray []GetRouterOspf6AreaRangeInput

func (GetRouterOspf6AreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaRange)(nil)).Elem()
}

func (i GetRouterOspf6AreaRangeArray) ToGetRouterOspf6AreaRangeArrayOutput() GetRouterOspf6AreaRangeArrayOutput {
	return i.ToGetRouterOspf6AreaRangeArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaRangeArray) ToGetRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaRangeArrayOutput)
}

type GetRouterOspf6AreaRangeOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaRange)(nil)).Elem()
}

func (o GetRouterOspf6AreaRangeOutput) ToGetRouterOspf6AreaRangeOutput() GetRouterOspf6AreaRangeOutput {
	return o
}

func (o GetRouterOspf6AreaRangeOutput) ToGetRouterOspf6AreaRangeOutputWithContext(ctx context.Context) GetRouterOspf6AreaRangeOutput {
	return o
}

// Enable/disable advertise status.
func (o GetRouterOspf6AreaRangeOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaRange) string { return v.Advertise }).(pulumi.StringOutput)
}

// Summary address entry ID.
func (o GetRouterOspf6AreaRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaRange) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix.
func (o GetRouterOspf6AreaRangeOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaRange) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterOspf6AreaRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaRange)(nil)).Elem()
}

func (o GetRouterOspf6AreaRangeArrayOutput) ToGetRouterOspf6AreaRangeArrayOutput() GetRouterOspf6AreaRangeArrayOutput {
	return o
}

func (o GetRouterOspf6AreaRangeArrayOutput) ToGetRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaRangeArrayOutput {
	return o
}

func (o GetRouterOspf6AreaRangeArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6AreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6AreaRange {
		return vs[0].([]GetRouterOspf6AreaRange)[vs[1].(int)]
	}).(GetRouterOspf6AreaRangeOutput)
}

type GetRouterOspf6AreaVirtualLink struct {
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetRouterOspf6AreaVirtualLinkIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetRouterOspf6AreaVirtualLinkInput is an input type that accepts GetRouterOspf6AreaVirtualLinkArgs and GetRouterOspf6AreaVirtualLinkOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaVirtualLinkInput` via:
//
//	GetRouterOspf6AreaVirtualLinkArgs{...}
type GetRouterOspf6AreaVirtualLinkInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaVirtualLinkOutput() GetRouterOspf6AreaVirtualLinkOutput
	ToGetRouterOspf6AreaVirtualLinkOutputWithContext(context.Context) GetRouterOspf6AreaVirtualLinkOutput
}

type GetRouterOspf6AreaVirtualLinkArgs struct {
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetRouterOspf6AreaVirtualLinkIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer pulumi.StringInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetRouterOspf6AreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i GetRouterOspf6AreaVirtualLinkArgs) ToGetRouterOspf6AreaVirtualLinkOutput() GetRouterOspf6AreaVirtualLinkOutput {
	return i.ToGetRouterOspf6AreaVirtualLinkOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaVirtualLinkArgs) ToGetRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaVirtualLinkOutput)
}

// GetRouterOspf6AreaVirtualLinkArrayInput is an input type that accepts GetRouterOspf6AreaVirtualLinkArray and GetRouterOspf6AreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaVirtualLinkArrayInput` via:
//
//	GetRouterOspf6AreaVirtualLinkArray{ GetRouterOspf6AreaVirtualLinkArgs{...} }
type GetRouterOspf6AreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaVirtualLinkArrayOutput() GetRouterOspf6AreaVirtualLinkArrayOutput
	ToGetRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Context) GetRouterOspf6AreaVirtualLinkArrayOutput
}

type GetRouterOspf6AreaVirtualLinkArray []GetRouterOspf6AreaVirtualLinkInput

func (GetRouterOspf6AreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i GetRouterOspf6AreaVirtualLinkArray) ToGetRouterOspf6AreaVirtualLinkArrayOutput() GetRouterOspf6AreaVirtualLinkArrayOutput {
	return i.ToGetRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaVirtualLinkArray) ToGetRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaVirtualLinkArrayOutput)
}

type GetRouterOspf6AreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o GetRouterOspf6AreaVirtualLinkOutput) ToGetRouterOspf6AreaVirtualLinkOutput() GetRouterOspf6AreaVirtualLinkOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkOutput) ToGetRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkOutput {
	return o
}

// Authentication mode.
func (o GetRouterOspf6AreaVirtualLinkOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) string { return v.Authentication }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetRouterOspf6AreaVirtualLinkOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetRouterOspf6AreaVirtualLinkOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Authentication algorithm.
func (o GetRouterOspf6AreaVirtualLinkOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetRouterOspf6AreaVirtualLinkOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetRouterOspf6AreaVirtualLinkOutput) IpsecKeys() GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) []GetRouterOspf6AreaVirtualLinkIpsecKey { return v.IpsecKeys }).(GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetRouterOspf6AreaVirtualLinkOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// Passive interface name.
func (o GetRouterOspf6AreaVirtualLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) string { return v.Name }).(pulumi.StringOutput)
}

// A.B.C.D, peer router ID.
func (o GetRouterOspf6AreaVirtualLinkOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) string { return v.Peer }).(pulumi.StringOutput)
}

// Retransmit interval.
func (o GetRouterOspf6AreaVirtualLinkOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Transmit delay.
func (o GetRouterOspf6AreaVirtualLinkOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLink) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetRouterOspf6AreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o GetRouterOspf6AreaVirtualLinkArrayOutput) ToGetRouterOspf6AreaVirtualLinkArrayOutput() GetRouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkArrayOutput) ToGetRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6AreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6AreaVirtualLink {
		return vs[0].([]GetRouterOspf6AreaVirtualLink)[vs[1].(int)]
	}).(GetRouterOspf6AreaVirtualLinkOutput)
}

type GetRouterOspf6AreaVirtualLinkIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetRouterOspf6AreaVirtualLinkIpsecKeyInput is an input type that accepts GetRouterOspf6AreaVirtualLinkIpsecKeyArgs and GetRouterOspf6AreaVirtualLinkIpsecKeyOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaVirtualLinkIpsecKeyInput` via:
//
//	GetRouterOspf6AreaVirtualLinkIpsecKeyArgs{...}
type GetRouterOspf6AreaVirtualLinkIpsecKeyInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyOutput
	ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyOutput
}

type GetRouterOspf6AreaVirtualLinkIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetRouterOspf6AreaVirtualLinkIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6AreaVirtualLinkIpsecKeyArgs) ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return i.ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaVirtualLinkIpsecKeyArgs) ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

// GetRouterOspf6AreaVirtualLinkIpsecKeyArrayInput is an input type that accepts GetRouterOspf6AreaVirtualLinkIpsecKeyArray and GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6AreaVirtualLinkIpsecKeyArrayInput` via:
//
//	GetRouterOspf6AreaVirtualLinkIpsecKeyArray{ GetRouterOspf6AreaVirtualLinkIpsecKeyArgs{...} }
type GetRouterOspf6AreaVirtualLinkIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
	ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
}

type GetRouterOspf6AreaVirtualLinkIpsecKeyArray []GetRouterOspf6AreaVirtualLinkIpsecKeyInput

func (GetRouterOspf6AreaVirtualLinkIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6AreaVirtualLinkIpsecKeyArray) ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return i.ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6AreaVirtualLinkIpsecKeyArray) ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

type GetRouterOspf6AreaVirtualLinkIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) ToGetRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLinkIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLinkIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetRouterOspf6AreaVirtualLinkIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6AreaVirtualLinkIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToGetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6AreaVirtualLinkIpsecKey {
		return vs[0].([]GetRouterOspf6AreaVirtualLinkIpsecKey)[vs[1].(int)]
	}).(GetRouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

type GetRouterOspf6Ospf6Interface struct {
	// A.B.C.D, in IPv4 address format.
	AreaId string `pulumi:"areaId"`
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface string `pulumi:"interface"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetRouterOspf6Ospf6InterfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets.
	MtuIgnore string `pulumi:"mtuIgnore"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []GetRouterOspf6Ospf6InterfaceNeighbor `pulumi:"neighbors"`
	// Network type.
	NetworkType string `pulumi:"networkType"`
	// priority
	Priority int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// status
	Status string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetRouterOspf6Ospf6InterfaceInput is an input type that accepts GetRouterOspf6Ospf6InterfaceArgs and GetRouterOspf6Ospf6InterfaceOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceInput` via:
//
//	GetRouterOspf6Ospf6InterfaceArgs{...}
type GetRouterOspf6Ospf6InterfaceInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceOutput() GetRouterOspf6Ospf6InterfaceOutput
	ToGetRouterOspf6Ospf6InterfaceOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceOutput
}

type GetRouterOspf6Ospf6InterfaceArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringInput `pulumi:"areaId"`
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetRouterOspf6Ospf6InterfaceIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntInput `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets.
	MtuIgnore pulumi.StringInput `pulumi:"mtuIgnore"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors GetRouterOspf6Ospf6InterfaceNeighborArrayInput `pulumi:"neighbors"`
	// Network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// priority
	Priority pulumi.IntInput `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetRouterOspf6Ospf6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6Interface)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceArgs) ToGetRouterOspf6Ospf6InterfaceOutput() GetRouterOspf6Ospf6InterfaceOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceArgs) ToGetRouterOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceOutput)
}

// GetRouterOspf6Ospf6InterfaceArrayInput is an input type that accepts GetRouterOspf6Ospf6InterfaceArray and GetRouterOspf6Ospf6InterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceArrayInput` via:
//
//	GetRouterOspf6Ospf6InterfaceArray{ GetRouterOspf6Ospf6InterfaceArgs{...} }
type GetRouterOspf6Ospf6InterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceArrayOutput() GetRouterOspf6Ospf6InterfaceArrayOutput
	ToGetRouterOspf6Ospf6InterfaceArrayOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceArrayOutput
}

type GetRouterOspf6Ospf6InterfaceArray []GetRouterOspf6Ospf6InterfaceInput

func (GetRouterOspf6Ospf6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6Interface)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceArray) ToGetRouterOspf6Ospf6InterfaceArrayOutput() GetRouterOspf6Ospf6InterfaceArrayOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceArray) ToGetRouterOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceArrayOutput)
}

type GetRouterOspf6Ospf6InterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6Interface)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceOutput) ToGetRouterOspf6Ospf6InterfaceOutput() GetRouterOspf6Ospf6InterfaceOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceOutput) ToGetRouterOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceOutput {
	return o
}

// A.B.C.D, in IPv4 address format.
func (o GetRouterOspf6Ospf6InterfaceOutput) AreaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.AreaId }).(pulumi.StringOutput)
}

// Authentication mode.
func (o GetRouterOspf6Ospf6InterfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.Authentication }).(pulumi.StringOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD).
func (o GetRouterOspf6Ospf6InterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetRouterOspf6Ospf6InterfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.Cost }).(pulumi.IntOutput)
}

// Dead interval.
func (o GetRouterOspf6Ospf6InterfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetRouterOspf6Ospf6InterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o GetRouterOspf6Ospf6InterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.Interface }).(pulumi.StringOutput)
}

// Authentication algorithm.
func (o GetRouterOspf6Ospf6InterfaceOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetRouterOspf6Ospf6InterfaceOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetRouterOspf6Ospf6InterfaceOutput) IpsecKeys() GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) []GetRouterOspf6Ospf6InterfaceIpsecKey { return v.IpsecKeys }).(GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetRouterOspf6Ospf6InterfaceOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// MTU for OSPFv3 packets.
func (o GetRouterOspf6Ospf6InterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignoring MTU field in DBD packets.
func (o GetRouterOspf6Ospf6InterfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Passive interface name.
func (o GetRouterOspf6Ospf6InterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.Name }).(pulumi.StringOutput)
}

// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o GetRouterOspf6Ospf6InterfaceOutput) Neighbors() GetRouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) []GetRouterOspf6Ospf6InterfaceNeighbor { return v.Neighbors }).(GetRouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

// Network type.
func (o GetRouterOspf6Ospf6InterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// priority
func (o GetRouterOspf6Ospf6InterfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.Priority }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o GetRouterOspf6Ospf6InterfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// status
func (o GetRouterOspf6Ospf6InterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) string { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o GetRouterOspf6Ospf6InterfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6Interface) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetRouterOspf6Ospf6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6Interface)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceArrayOutput) ToGetRouterOspf6Ospf6InterfaceArrayOutput() GetRouterOspf6Ospf6InterfaceArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceArrayOutput) ToGetRouterOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6Ospf6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6Ospf6Interface {
		return vs[0].([]GetRouterOspf6Ospf6Interface)[vs[1].(int)]
	}).(GetRouterOspf6Ospf6InterfaceOutput)
}

type GetRouterOspf6Ospf6InterfaceIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetRouterOspf6Ospf6InterfaceIpsecKeyInput is an input type that accepts GetRouterOspf6Ospf6InterfaceIpsecKeyArgs and GetRouterOspf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceIpsecKeyInput` via:
//
//	GetRouterOspf6Ospf6InterfaceIpsecKeyArgs{...}
type GetRouterOspf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyOutput
	ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyOutput
}

type GetRouterOspf6Ospf6InterfaceIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetRouterOspf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceIpsecKeyArgs) ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceIpsecKeyArgs) ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

// GetRouterOspf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts GetRouterOspf6Ospf6InterfaceIpsecKeyArray and GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	GetRouterOspf6Ospf6InterfaceIpsecKeyArray{ GetRouterOspf6Ospf6InterfaceIpsecKeyArgs{...} }
type GetRouterOspf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
	ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
}

type GetRouterOspf6Ospf6InterfaceIpsecKeyArray []GetRouterOspf6Ospf6InterfaceIpsecKeyInput

func (GetRouterOspf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceIpsecKeyArray) ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceIpsecKeyArray) ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

type GetRouterOspf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) ToGetRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetRouterOspf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToGetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6Ospf6InterfaceIpsecKey {
		return vs[0].([]GetRouterOspf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(GetRouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

type GetRouterOspf6Ospf6InterfaceNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 string `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval int `pulumi:"pollInterval"`
	// priority
	Priority int `pulumi:"priority"`
}

// GetRouterOspf6Ospf6InterfaceNeighborInput is an input type that accepts GetRouterOspf6Ospf6InterfaceNeighborArgs and GetRouterOspf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceNeighborInput` via:
//
//	GetRouterOspf6Ospf6InterfaceNeighborArgs{...}
type GetRouterOspf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceNeighborOutput() GetRouterOspf6Ospf6InterfaceNeighborOutput
	ToGetRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceNeighborOutput
}

type GetRouterOspf6Ospf6InterfaceNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 pulumi.StringInput `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntInput `pulumi:"pollInterval"`
	// priority
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (GetRouterOspf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceNeighborArgs) ToGetRouterOspf6Ospf6InterfaceNeighborOutput() GetRouterOspf6Ospf6InterfaceNeighborOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceNeighborArgs) ToGetRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceNeighborOutput)
}

// GetRouterOspf6Ospf6InterfaceNeighborArrayInput is an input type that accepts GetRouterOspf6Ospf6InterfaceNeighborArray and GetRouterOspf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6Ospf6InterfaceNeighborArrayInput` via:
//
//	GetRouterOspf6Ospf6InterfaceNeighborArray{ GetRouterOspf6Ospf6InterfaceNeighborArgs{...} }
type GetRouterOspf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutput() GetRouterOspf6Ospf6InterfaceNeighborArrayOutput
	ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) GetRouterOspf6Ospf6InterfaceNeighborArrayOutput
}

type GetRouterOspf6Ospf6InterfaceNeighborArray []GetRouterOspf6Ospf6InterfaceNeighborInput

func (GetRouterOspf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i GetRouterOspf6Ospf6InterfaceNeighborArray) ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutput() GetRouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6Ospf6InterfaceNeighborArray) ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

type GetRouterOspf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) ToGetRouterOspf6Ospf6InterfaceNeighborOutput() GetRouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) ToGetRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceNeighbor) int { return v.Cost }).(pulumi.IntOutput)
}

// IPv6 link local address of the neighbor.
func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceNeighbor) string { return v.Ip6 }).(pulumi.StringOutput)
}

// Poll interval time in seconds.
func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceNeighbor) int { return v.PollInterval }).(pulumi.IntOutput)
}

// priority
func (o GetRouterOspf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Ospf6InterfaceNeighbor) int { return v.Priority }).(pulumi.IntOutput)
}

type GetRouterOspf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o GetRouterOspf6Ospf6InterfaceNeighborArrayOutput) ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutput() GetRouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceNeighborArrayOutput) ToGetRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) GetRouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o GetRouterOspf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6Ospf6InterfaceNeighbor {
		return vs[0].([]GetRouterOspf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(GetRouterOspf6Ospf6InterfaceNeighborOutput)
}

type GetRouterOspf6PassiveInterface struct {
	// Passive interface name.
	Name string `pulumi:"name"`
}

// GetRouterOspf6PassiveInterfaceInput is an input type that accepts GetRouterOspf6PassiveInterfaceArgs and GetRouterOspf6PassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRouterOspf6PassiveInterfaceInput` via:
//
//	GetRouterOspf6PassiveInterfaceArgs{...}
type GetRouterOspf6PassiveInterfaceInput interface {
	pulumi.Input

	ToGetRouterOspf6PassiveInterfaceOutput() GetRouterOspf6PassiveInterfaceOutput
	ToGetRouterOspf6PassiveInterfaceOutputWithContext(context.Context) GetRouterOspf6PassiveInterfaceOutput
}

type GetRouterOspf6PassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterOspf6PassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6PassiveInterface)(nil)).Elem()
}

func (i GetRouterOspf6PassiveInterfaceArgs) ToGetRouterOspf6PassiveInterfaceOutput() GetRouterOspf6PassiveInterfaceOutput {
	return i.ToGetRouterOspf6PassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRouterOspf6PassiveInterfaceArgs) ToGetRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) GetRouterOspf6PassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6PassiveInterfaceOutput)
}

// GetRouterOspf6PassiveInterfaceArrayInput is an input type that accepts GetRouterOspf6PassiveInterfaceArray and GetRouterOspf6PassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6PassiveInterfaceArrayInput` via:
//
//	GetRouterOspf6PassiveInterfaceArray{ GetRouterOspf6PassiveInterfaceArgs{...} }
type GetRouterOspf6PassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6PassiveInterfaceArrayOutput() GetRouterOspf6PassiveInterfaceArrayOutput
	ToGetRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Context) GetRouterOspf6PassiveInterfaceArrayOutput
}

type GetRouterOspf6PassiveInterfaceArray []GetRouterOspf6PassiveInterfaceInput

func (GetRouterOspf6PassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6PassiveInterface)(nil)).Elem()
}

func (i GetRouterOspf6PassiveInterfaceArray) ToGetRouterOspf6PassiveInterfaceArrayOutput() GetRouterOspf6PassiveInterfaceArrayOutput {
	return i.ToGetRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6PassiveInterfaceArray) ToGetRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspf6PassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6PassiveInterfaceArrayOutput)
}

type GetRouterOspf6PassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6PassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6PassiveInterface)(nil)).Elem()
}

func (o GetRouterOspf6PassiveInterfaceOutput) ToGetRouterOspf6PassiveInterfaceOutput() GetRouterOspf6PassiveInterfaceOutput {
	return o
}

func (o GetRouterOspf6PassiveInterfaceOutput) ToGetRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) GetRouterOspf6PassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o GetRouterOspf6PassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6PassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterOspf6PassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6PassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6PassiveInterface)(nil)).Elem()
}

func (o GetRouterOspf6PassiveInterfaceArrayOutput) ToGetRouterOspf6PassiveInterfaceArrayOutput() GetRouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterOspf6PassiveInterfaceArrayOutput) ToGetRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterOspf6PassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6PassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6PassiveInterface {
		return vs[0].([]GetRouterOspf6PassiveInterface)[vs[1].(int)]
	}).(GetRouterOspf6PassiveInterfaceOutput)
}

type GetRouterOspf6Redistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterOspf6RedistributeInput is an input type that accepts GetRouterOspf6RedistributeArgs and GetRouterOspf6RedistributeOutput values.
// You can construct a concrete instance of `GetRouterOspf6RedistributeInput` via:
//
//	GetRouterOspf6RedistributeArgs{...}
type GetRouterOspf6RedistributeInput interface {
	pulumi.Input

	ToGetRouterOspf6RedistributeOutput() GetRouterOspf6RedistributeOutput
	ToGetRouterOspf6RedistributeOutputWithContext(context.Context) GetRouterOspf6RedistributeOutput
}

type GetRouterOspf6RedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterOspf6RedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Redistribute)(nil)).Elem()
}

func (i GetRouterOspf6RedistributeArgs) ToGetRouterOspf6RedistributeOutput() GetRouterOspf6RedistributeOutput {
	return i.ToGetRouterOspf6RedistributeOutputWithContext(context.Background())
}

func (i GetRouterOspf6RedistributeArgs) ToGetRouterOspf6RedistributeOutputWithContext(ctx context.Context) GetRouterOspf6RedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6RedistributeOutput)
}

// GetRouterOspf6RedistributeArrayInput is an input type that accepts GetRouterOspf6RedistributeArray and GetRouterOspf6RedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6RedistributeArrayInput` via:
//
//	GetRouterOspf6RedistributeArray{ GetRouterOspf6RedistributeArgs{...} }
type GetRouterOspf6RedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6RedistributeArrayOutput() GetRouterOspf6RedistributeArrayOutput
	ToGetRouterOspf6RedistributeArrayOutputWithContext(context.Context) GetRouterOspf6RedistributeArrayOutput
}

type GetRouterOspf6RedistributeArray []GetRouterOspf6RedistributeInput

func (GetRouterOspf6RedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Redistribute)(nil)).Elem()
}

func (i GetRouterOspf6RedistributeArray) ToGetRouterOspf6RedistributeArrayOutput() GetRouterOspf6RedistributeArrayOutput {
	return i.ToGetRouterOspf6RedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6RedistributeArray) ToGetRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) GetRouterOspf6RedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6RedistributeArrayOutput)
}

type GetRouterOspf6RedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6RedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6Redistribute)(nil)).Elem()
}

func (o GetRouterOspf6RedistributeOutput) ToGetRouterOspf6RedistributeOutput() GetRouterOspf6RedistributeOutput {
	return o
}

func (o GetRouterOspf6RedistributeOutput) ToGetRouterOspf6RedistributeOutputWithContext(ctx context.Context) GetRouterOspf6RedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRouterOspf6RedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6Redistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRouterOspf6RedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Redistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Passive interface name.
func (o GetRouterOspf6RedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Redistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterOspf6RedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Redistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRouterOspf6RedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6Redistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterOspf6RedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6RedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6Redistribute)(nil)).Elem()
}

func (o GetRouterOspf6RedistributeArrayOutput) ToGetRouterOspf6RedistributeArrayOutput() GetRouterOspf6RedistributeArrayOutput {
	return o
}

func (o GetRouterOspf6RedistributeArrayOutput) ToGetRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) GetRouterOspf6RedistributeArrayOutput {
	return o
}

func (o GetRouterOspf6RedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6RedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6Redistribute {
		return vs[0].([]GetRouterOspf6Redistribute)[vs[1].(int)]
	}).(GetRouterOspf6RedistributeOutput)
}

type GetRouterOspf6SummaryAddress struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Summary address entry ID.
	Id int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetRouterOspf6SummaryAddressInput is an input type that accepts GetRouterOspf6SummaryAddressArgs and GetRouterOspf6SummaryAddressOutput values.
// You can construct a concrete instance of `GetRouterOspf6SummaryAddressInput` via:
//
//	GetRouterOspf6SummaryAddressArgs{...}
type GetRouterOspf6SummaryAddressInput interface {
	pulumi.Input

	ToGetRouterOspf6SummaryAddressOutput() GetRouterOspf6SummaryAddressOutput
	ToGetRouterOspf6SummaryAddressOutputWithContext(context.Context) GetRouterOspf6SummaryAddressOutput
}

type GetRouterOspf6SummaryAddressArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetRouterOspf6SummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6SummaryAddress)(nil)).Elem()
}

func (i GetRouterOspf6SummaryAddressArgs) ToGetRouterOspf6SummaryAddressOutput() GetRouterOspf6SummaryAddressOutput {
	return i.ToGetRouterOspf6SummaryAddressOutputWithContext(context.Background())
}

func (i GetRouterOspf6SummaryAddressArgs) ToGetRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) GetRouterOspf6SummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6SummaryAddressOutput)
}

// GetRouterOspf6SummaryAddressArrayInput is an input type that accepts GetRouterOspf6SummaryAddressArray and GetRouterOspf6SummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterOspf6SummaryAddressArrayInput` via:
//
//	GetRouterOspf6SummaryAddressArray{ GetRouterOspf6SummaryAddressArgs{...} }
type GetRouterOspf6SummaryAddressArrayInput interface {
	pulumi.Input

	ToGetRouterOspf6SummaryAddressArrayOutput() GetRouterOspf6SummaryAddressArrayOutput
	ToGetRouterOspf6SummaryAddressArrayOutputWithContext(context.Context) GetRouterOspf6SummaryAddressArrayOutput
}

type GetRouterOspf6SummaryAddressArray []GetRouterOspf6SummaryAddressInput

func (GetRouterOspf6SummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6SummaryAddress)(nil)).Elem()
}

func (i GetRouterOspf6SummaryAddressArray) ToGetRouterOspf6SummaryAddressArrayOutput() GetRouterOspf6SummaryAddressArrayOutput {
	return i.ToGetRouterOspf6SummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterOspf6SummaryAddressArray) ToGetRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterOspf6SummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspf6SummaryAddressArrayOutput)
}

type GetRouterOspf6SummaryAddressOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6SummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspf6SummaryAddress)(nil)).Elem()
}

func (o GetRouterOspf6SummaryAddressOutput) ToGetRouterOspf6SummaryAddressOutput() GetRouterOspf6SummaryAddressOutput {
	return o
}

func (o GetRouterOspf6SummaryAddressOutput) ToGetRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) GetRouterOspf6SummaryAddressOutput {
	return o
}

// Enable/disable advertise status.
func (o GetRouterOspf6SummaryAddressOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6SummaryAddress) string { return v.Advertise }).(pulumi.StringOutput)
}

// Summary address entry ID.
func (o GetRouterOspf6SummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6SummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix.
func (o GetRouterOspf6SummaryAddressOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspf6SummaryAddress) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Tag value.
func (o GetRouterOspf6SummaryAddressOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspf6SummaryAddress) int { return v.Tag }).(pulumi.IntOutput)
}

type GetRouterOspf6SummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspf6SummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspf6SummaryAddress)(nil)).Elem()
}

func (o GetRouterOspf6SummaryAddressArrayOutput) ToGetRouterOspf6SummaryAddressArrayOutput() GetRouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o GetRouterOspf6SummaryAddressArrayOutput) ToGetRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o GetRouterOspf6SummaryAddressArrayOutput) Index(i pulumi.IntInput) GetRouterOspf6SummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspf6SummaryAddress {
		return vs[0].([]GetRouterOspf6SummaryAddress)[vs[1].(int)]
	}).(GetRouterOspf6SummaryAddressOutput)
}

type GetRouterOspfArea struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost int `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists []GetRouterOspfAreaFilterList `pulumi:"filterLists"`
	// Distribute list entry ID.
	Id string `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
	NssaDefaultInformationOriginate string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes.
	NssaDefaultInformationOriginateMetricType string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution string `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole string `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges []GetRouterOspfAreaRange `pulumi:"ranges"`
	// Enable/disable shortcut option.
	Shortcut string `pulumi:"shortcut"`
	// Stub summary setting.
	StubType string `pulumi:"stubType"`
	// Area type setting.
	Type string `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []GetRouterOspfAreaVirtualLink `pulumi:"virtualLinks"`
}

// GetRouterOspfAreaInput is an input type that accepts GetRouterOspfAreaArgs and GetRouterOspfAreaOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaInput` via:
//
//	GetRouterOspfAreaArgs{...}
type GetRouterOspfAreaInput interface {
	pulumi.Input

	ToGetRouterOspfAreaOutput() GetRouterOspfAreaOutput
	ToGetRouterOspfAreaOutputWithContext(context.Context) GetRouterOspfAreaOutput
}

type GetRouterOspfAreaArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntInput `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists GetRouterOspfAreaFilterListArrayInput `pulumi:"filterLists"`
	// Distribute list entry ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
	NssaDefaultInformationOriginate pulumi.StringInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes.
	NssaDefaultInformationOriginateMetricType pulumi.StringInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution pulumi.StringInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole pulumi.StringInput `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges GetRouterOspfAreaRangeArrayInput `pulumi:"ranges"`
	// Enable/disable shortcut option.
	Shortcut pulumi.StringInput `pulumi:"shortcut"`
	// Stub summary setting.
	StubType pulumi.StringInput `pulumi:"stubType"`
	// Area type setting.
	Type pulumi.StringInput `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks GetRouterOspfAreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (GetRouterOspfAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfArea)(nil)).Elem()
}

func (i GetRouterOspfAreaArgs) ToGetRouterOspfAreaOutput() GetRouterOspfAreaOutput {
	return i.ToGetRouterOspfAreaOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaArgs) ToGetRouterOspfAreaOutputWithContext(ctx context.Context) GetRouterOspfAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaOutput)
}

// GetRouterOspfAreaArrayInput is an input type that accepts GetRouterOspfAreaArray and GetRouterOspfAreaArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaArrayInput` via:
//
//	GetRouterOspfAreaArray{ GetRouterOspfAreaArgs{...} }
type GetRouterOspfAreaArrayInput interface {
	pulumi.Input

	ToGetRouterOspfAreaArrayOutput() GetRouterOspfAreaArrayOutput
	ToGetRouterOspfAreaArrayOutputWithContext(context.Context) GetRouterOspfAreaArrayOutput
}

type GetRouterOspfAreaArray []GetRouterOspfAreaInput

func (GetRouterOspfAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfArea)(nil)).Elem()
}

func (i GetRouterOspfAreaArray) ToGetRouterOspfAreaArrayOutput() GetRouterOspfAreaArrayOutput {
	return i.ToGetRouterOspfAreaArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaArray) ToGetRouterOspfAreaArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaArrayOutput)
}

type GetRouterOspfAreaOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfArea)(nil)).Elem()
}

func (o GetRouterOspfAreaOutput) ToGetRouterOspfAreaOutput() GetRouterOspfAreaOutput {
	return o
}

func (o GetRouterOspfAreaOutput) ToGetRouterOspfAreaOutputWithContext(ctx context.Context) GetRouterOspfAreaOutput {
	return o
}

// Authentication type.
func (o GetRouterOspfAreaOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.Authentication }).(pulumi.StringOutput)
}

// Comment.
func (o GetRouterOspfAreaOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.Comments }).(pulumi.StringOutput)
}

// Summary default cost of stub or NSSA area.
func (o GetRouterOspfAreaOutput) DefaultCost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfArea) int { return v.DefaultCost }).(pulumi.IntOutput)
}

// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
func (o GetRouterOspfAreaOutput) FilterLists() GetRouterOspfAreaFilterListArrayOutput {
	return o.ApplyT(func(v GetRouterOspfArea) []GetRouterOspfAreaFilterList { return v.FilterLists }).(GetRouterOspfAreaFilterListArrayOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfAreaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.Id }).(pulumi.StringOutput)
}

// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
func (o GetRouterOspfAreaOutput) NssaDefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.NssaDefaultInformationOriginate }).(pulumi.StringOutput)
}

// OSPF default metric.
func (o GetRouterOspfAreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfArea) int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntOutput)
}

// OSPF metric type for default routes.
func (o GetRouterOspfAreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringOutput)
}

// Enable/disable redistribute into NSSA area.
func (o GetRouterOspfAreaOutput) NssaRedistribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.NssaRedistribution }).(pulumi.StringOutput)
}

// NSSA translator role type.
func (o GetRouterOspfAreaOutput) NssaTranslatorRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.NssaTranslatorRole }).(pulumi.StringOutput)
}

// OSPF area range configuration. The structure of `range` block is documented below.
func (o GetRouterOspfAreaOutput) Ranges() GetRouterOspfAreaRangeArrayOutput {
	return o.ApplyT(func(v GetRouterOspfArea) []GetRouterOspfAreaRange { return v.Ranges }).(GetRouterOspfAreaRangeArrayOutput)
}

// Enable/disable shortcut option.
func (o GetRouterOspfAreaOutput) Shortcut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.Shortcut }).(pulumi.StringOutput)
}

// Stub summary setting.
func (o GetRouterOspfAreaOutput) StubType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.StubType }).(pulumi.StringOutput)
}

// Area type setting.
func (o GetRouterOspfAreaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfArea) string { return v.Type }).(pulumi.StringOutput)
}

// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
func (o GetRouterOspfAreaOutput) VirtualLinks() GetRouterOspfAreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v GetRouterOspfArea) []GetRouterOspfAreaVirtualLink { return v.VirtualLinks }).(GetRouterOspfAreaVirtualLinkArrayOutput)
}

type GetRouterOspfAreaArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfArea)(nil)).Elem()
}

func (o GetRouterOspfAreaArrayOutput) ToGetRouterOspfAreaArrayOutput() GetRouterOspfAreaArrayOutput {
	return o
}

func (o GetRouterOspfAreaArrayOutput) ToGetRouterOspfAreaArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaArrayOutput {
	return o
}

func (o GetRouterOspfAreaArrayOutput) Index(i pulumi.IntInput) GetRouterOspfAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfArea {
		return vs[0].([]GetRouterOspfArea)[vs[1].(int)]
	}).(GetRouterOspfAreaOutput)
}

type GetRouterOspfAreaFilterList struct {
	// Direction.
	Direction string `pulumi:"direction"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Access-list or prefix-list name.
	List string `pulumi:"list"`
}

// GetRouterOspfAreaFilterListInput is an input type that accepts GetRouterOspfAreaFilterListArgs and GetRouterOspfAreaFilterListOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaFilterListInput` via:
//
//	GetRouterOspfAreaFilterListArgs{...}
type GetRouterOspfAreaFilterListInput interface {
	pulumi.Input

	ToGetRouterOspfAreaFilterListOutput() GetRouterOspfAreaFilterListOutput
	ToGetRouterOspfAreaFilterListOutputWithContext(context.Context) GetRouterOspfAreaFilterListOutput
}

type GetRouterOspfAreaFilterListArgs struct {
	// Direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Access-list or prefix-list name.
	List pulumi.StringInput `pulumi:"list"`
}

func (GetRouterOspfAreaFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaFilterList)(nil)).Elem()
}

func (i GetRouterOspfAreaFilterListArgs) ToGetRouterOspfAreaFilterListOutput() GetRouterOspfAreaFilterListOutput {
	return i.ToGetRouterOspfAreaFilterListOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaFilterListArgs) ToGetRouterOspfAreaFilterListOutputWithContext(ctx context.Context) GetRouterOspfAreaFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaFilterListOutput)
}

// GetRouterOspfAreaFilterListArrayInput is an input type that accepts GetRouterOspfAreaFilterListArray and GetRouterOspfAreaFilterListArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaFilterListArrayInput` via:
//
//	GetRouterOspfAreaFilterListArray{ GetRouterOspfAreaFilterListArgs{...} }
type GetRouterOspfAreaFilterListArrayInput interface {
	pulumi.Input

	ToGetRouterOspfAreaFilterListArrayOutput() GetRouterOspfAreaFilterListArrayOutput
	ToGetRouterOspfAreaFilterListArrayOutputWithContext(context.Context) GetRouterOspfAreaFilterListArrayOutput
}

type GetRouterOspfAreaFilterListArray []GetRouterOspfAreaFilterListInput

func (GetRouterOspfAreaFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaFilterList)(nil)).Elem()
}

func (i GetRouterOspfAreaFilterListArray) ToGetRouterOspfAreaFilterListArrayOutput() GetRouterOspfAreaFilterListArrayOutput {
	return i.ToGetRouterOspfAreaFilterListArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaFilterListArray) ToGetRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaFilterListArrayOutput)
}

type GetRouterOspfAreaFilterListOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaFilterList)(nil)).Elem()
}

func (o GetRouterOspfAreaFilterListOutput) ToGetRouterOspfAreaFilterListOutput() GetRouterOspfAreaFilterListOutput {
	return o
}

func (o GetRouterOspfAreaFilterListOutput) ToGetRouterOspfAreaFilterListOutputWithContext(ctx context.Context) GetRouterOspfAreaFilterListOutput {
	return o
}

// Direction.
func (o GetRouterOspfAreaFilterListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaFilterList) string { return v.Direction }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfAreaFilterListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaFilterList) int { return v.Id }).(pulumi.IntOutput)
}

// Access-list or prefix-list name.
func (o GetRouterOspfAreaFilterListOutput) List() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaFilterList) string { return v.List }).(pulumi.StringOutput)
}

type GetRouterOspfAreaFilterListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaFilterList)(nil)).Elem()
}

func (o GetRouterOspfAreaFilterListArrayOutput) ToGetRouterOspfAreaFilterListArrayOutput() GetRouterOspfAreaFilterListArrayOutput {
	return o
}

func (o GetRouterOspfAreaFilterListArrayOutput) ToGetRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaFilterListArrayOutput {
	return o
}

func (o GetRouterOspfAreaFilterListArrayOutput) Index(i pulumi.IntInput) GetRouterOspfAreaFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfAreaFilterList {
		return vs[0].([]GetRouterOspfAreaFilterList)[vs[1].(int)]
	}).(GetRouterOspfAreaFilterListOutput)
}

type GetRouterOspfAreaRange struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// Substitute prefix.
	Substitute string `pulumi:"substitute"`
	// Enable/disable substitute status.
	SubstituteStatus string `pulumi:"substituteStatus"`
}

// GetRouterOspfAreaRangeInput is an input type that accepts GetRouterOspfAreaRangeArgs and GetRouterOspfAreaRangeOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaRangeInput` via:
//
//	GetRouterOspfAreaRangeArgs{...}
type GetRouterOspfAreaRangeInput interface {
	pulumi.Input

	ToGetRouterOspfAreaRangeOutput() GetRouterOspfAreaRangeOutput
	ToGetRouterOspfAreaRangeOutputWithContext(context.Context) GetRouterOspfAreaRangeOutput
}

type GetRouterOspfAreaRangeArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Substitute prefix.
	Substitute pulumi.StringInput `pulumi:"substitute"`
	// Enable/disable substitute status.
	SubstituteStatus pulumi.StringInput `pulumi:"substituteStatus"`
}

func (GetRouterOspfAreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaRange)(nil)).Elem()
}

func (i GetRouterOspfAreaRangeArgs) ToGetRouterOspfAreaRangeOutput() GetRouterOspfAreaRangeOutput {
	return i.ToGetRouterOspfAreaRangeOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaRangeArgs) ToGetRouterOspfAreaRangeOutputWithContext(ctx context.Context) GetRouterOspfAreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaRangeOutput)
}

// GetRouterOspfAreaRangeArrayInput is an input type that accepts GetRouterOspfAreaRangeArray and GetRouterOspfAreaRangeArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaRangeArrayInput` via:
//
//	GetRouterOspfAreaRangeArray{ GetRouterOspfAreaRangeArgs{...} }
type GetRouterOspfAreaRangeArrayInput interface {
	pulumi.Input

	ToGetRouterOspfAreaRangeArrayOutput() GetRouterOspfAreaRangeArrayOutput
	ToGetRouterOspfAreaRangeArrayOutputWithContext(context.Context) GetRouterOspfAreaRangeArrayOutput
}

type GetRouterOspfAreaRangeArray []GetRouterOspfAreaRangeInput

func (GetRouterOspfAreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaRange)(nil)).Elem()
}

func (i GetRouterOspfAreaRangeArray) ToGetRouterOspfAreaRangeArrayOutput() GetRouterOspfAreaRangeArrayOutput {
	return i.ToGetRouterOspfAreaRangeArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaRangeArray) ToGetRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaRangeArrayOutput)
}

type GetRouterOspfAreaRangeOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaRange)(nil)).Elem()
}

func (o GetRouterOspfAreaRangeOutput) ToGetRouterOspfAreaRangeOutput() GetRouterOspfAreaRangeOutput {
	return o
}

func (o GetRouterOspfAreaRangeOutput) ToGetRouterOspfAreaRangeOutputWithContext(ctx context.Context) GetRouterOspfAreaRangeOutput {
	return o
}

// Enable/disable advertise status.
func (o GetRouterOspfAreaRangeOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaRange) string { return v.Advertise }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfAreaRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaRange) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetRouterOspfAreaRangeOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaRange) string { return v.Prefix }).(pulumi.StringOutput)
}

// Substitute prefix.
func (o GetRouterOspfAreaRangeOutput) Substitute() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaRange) string { return v.Substitute }).(pulumi.StringOutput)
}

// Enable/disable substitute status.
func (o GetRouterOspfAreaRangeOutput) SubstituteStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaRange) string { return v.SubstituteStatus }).(pulumi.StringOutput)
}

type GetRouterOspfAreaRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaRange)(nil)).Elem()
}

func (o GetRouterOspfAreaRangeArrayOutput) ToGetRouterOspfAreaRangeArrayOutput() GetRouterOspfAreaRangeArrayOutput {
	return o
}

func (o GetRouterOspfAreaRangeArrayOutput) ToGetRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaRangeArrayOutput {
	return o
}

func (o GetRouterOspfAreaRangeArrayOutput) Index(i pulumi.IntInput) GetRouterOspfAreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfAreaRange {
		return vs[0].([]GetRouterOspfAreaRange)[vs[1].(int)]
	}).(GetRouterOspfAreaRangeOutput)
}

type GetRouterOspfAreaVirtualLink struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey string `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain string `pulumi:"keychain"`
	// MD5 key.
	Md5Key string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []GetRouterOspfAreaVirtualLinkMd5Key `pulumi:"md5Keys"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Peer IP.
	Peer string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetRouterOspfAreaVirtualLinkInput is an input type that accepts GetRouterOspfAreaVirtualLinkArgs and GetRouterOspfAreaVirtualLinkOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaVirtualLinkInput` via:
//
//	GetRouterOspfAreaVirtualLinkArgs{...}
type GetRouterOspfAreaVirtualLinkInput interface {
	pulumi.Input

	ToGetRouterOspfAreaVirtualLinkOutput() GetRouterOspfAreaVirtualLinkOutput
	ToGetRouterOspfAreaVirtualLinkOutputWithContext(context.Context) GetRouterOspfAreaVirtualLinkOutput
}

type GetRouterOspfAreaVirtualLinkArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringInput `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain pulumi.StringInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys GetRouterOspfAreaVirtualLinkMd5KeyArrayInput `pulumi:"md5Keys"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Peer IP.
	Peer pulumi.StringInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetRouterOspfAreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i GetRouterOspfAreaVirtualLinkArgs) ToGetRouterOspfAreaVirtualLinkOutput() GetRouterOspfAreaVirtualLinkOutput {
	return i.ToGetRouterOspfAreaVirtualLinkOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaVirtualLinkArgs) ToGetRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaVirtualLinkOutput)
}

// GetRouterOspfAreaVirtualLinkArrayInput is an input type that accepts GetRouterOspfAreaVirtualLinkArray and GetRouterOspfAreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaVirtualLinkArrayInput` via:
//
//	GetRouterOspfAreaVirtualLinkArray{ GetRouterOspfAreaVirtualLinkArgs{...} }
type GetRouterOspfAreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToGetRouterOspfAreaVirtualLinkArrayOutput() GetRouterOspfAreaVirtualLinkArrayOutput
	ToGetRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Context) GetRouterOspfAreaVirtualLinkArrayOutput
}

type GetRouterOspfAreaVirtualLinkArray []GetRouterOspfAreaVirtualLinkInput

func (GetRouterOspfAreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i GetRouterOspfAreaVirtualLinkArray) ToGetRouterOspfAreaVirtualLinkArrayOutput() GetRouterOspfAreaVirtualLinkArrayOutput {
	return i.ToGetRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaVirtualLinkArray) ToGetRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaVirtualLinkArrayOutput)
}

type GetRouterOspfAreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o GetRouterOspfAreaVirtualLinkOutput) ToGetRouterOspfAreaVirtualLinkOutput() GetRouterOspfAreaVirtualLinkOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkOutput) ToGetRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkOutput {
	return o
}

// Authentication type.
func (o GetRouterOspfAreaVirtualLinkOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Authentication }).(pulumi.StringOutput)
}

// Authentication key.
func (o GetRouterOspfAreaVirtualLinkOutput) AuthenticationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.AuthenticationKey }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetRouterOspfAreaVirtualLinkOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetRouterOspfAreaVirtualLinkOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Message-digest key-chain name.
func (o GetRouterOspfAreaVirtualLinkOutput) Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Keychain }).(pulumi.StringOutput)
}

// MD5 key.
func (o GetRouterOspfAreaVirtualLinkOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Authentication MD5 key-chain name.
func (o GetRouterOspfAreaVirtualLinkOutput) Md5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Md5Keychain }).(pulumi.StringOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
func (o GetRouterOspfAreaVirtualLinkOutput) Md5Keys() GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) []GetRouterOspfAreaVirtualLinkMd5Key { return v.Md5Keys }).(GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

// Redistribute name.
func (o GetRouterOspfAreaVirtualLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Name }).(pulumi.StringOutput)
}

// Peer IP.
func (o GetRouterOspfAreaVirtualLinkOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) string { return v.Peer }).(pulumi.StringOutput)
}

// Retransmit interval.
func (o GetRouterOspfAreaVirtualLinkOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Transmit delay.
func (o GetRouterOspfAreaVirtualLinkOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLink) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetRouterOspfAreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o GetRouterOspfAreaVirtualLinkArrayOutput) ToGetRouterOspfAreaVirtualLinkArrayOutput() GetRouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkArrayOutput) ToGetRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) GetRouterOspfAreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfAreaVirtualLink {
		return vs[0].([]GetRouterOspfAreaVirtualLink)[vs[1].(int)]
	}).(GetRouterOspfAreaVirtualLinkOutput)
}

type GetRouterOspfAreaVirtualLinkMd5Key struct {
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Password for the key.
	KeyString string `pulumi:"keyString"`
}

// GetRouterOspfAreaVirtualLinkMd5KeyInput is an input type that accepts GetRouterOspfAreaVirtualLinkMd5KeyArgs and GetRouterOspfAreaVirtualLinkMd5KeyOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaVirtualLinkMd5KeyInput` via:
//
//	GetRouterOspfAreaVirtualLinkMd5KeyArgs{...}
type GetRouterOspfAreaVirtualLinkMd5KeyInput interface {
	pulumi.Input

	ToGetRouterOspfAreaVirtualLinkMd5KeyOutput() GetRouterOspfAreaVirtualLinkMd5KeyOutput
	ToGetRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Context) GetRouterOspfAreaVirtualLinkMd5KeyOutput
}

type GetRouterOspfAreaVirtualLinkMd5KeyArgs struct {
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringInput `pulumi:"keyString"`
}

func (GetRouterOspfAreaVirtualLinkMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i GetRouterOspfAreaVirtualLinkMd5KeyArgs) ToGetRouterOspfAreaVirtualLinkMd5KeyOutput() GetRouterOspfAreaVirtualLinkMd5KeyOutput {
	return i.ToGetRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaVirtualLinkMd5KeyArgs) ToGetRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaVirtualLinkMd5KeyOutput)
}

// GetRouterOspfAreaVirtualLinkMd5KeyArrayInput is an input type that accepts GetRouterOspfAreaVirtualLinkMd5KeyArray and GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfAreaVirtualLinkMd5KeyArrayInput` via:
//
//	GetRouterOspfAreaVirtualLinkMd5KeyArray{ GetRouterOspfAreaVirtualLinkMd5KeyArgs{...} }
type GetRouterOspfAreaVirtualLinkMd5KeyArrayInput interface {
	pulumi.Input

	ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutput() GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput
	ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Context) GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput
}

type GetRouterOspfAreaVirtualLinkMd5KeyArray []GetRouterOspfAreaVirtualLinkMd5KeyInput

func (GetRouterOspfAreaVirtualLinkMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i GetRouterOspfAreaVirtualLinkMd5KeyArray) ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutput() GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return i.ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfAreaVirtualLinkMd5KeyArray) ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

type GetRouterOspfAreaVirtualLinkMd5KeyOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaVirtualLinkMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o GetRouterOspfAreaVirtualLinkMd5KeyOutput) ToGetRouterOspfAreaVirtualLinkMd5KeyOutput() GetRouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkMd5KeyOutput) ToGetRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

// Distribute list entry ID.
func (o GetRouterOspfAreaVirtualLinkMd5KeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLinkMd5Key) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key.
func (o GetRouterOspfAreaVirtualLinkMd5KeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfAreaVirtualLinkMd5Key) string { return v.KeyString }).(pulumi.StringOutput)
}

type GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutput() GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToGetRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput) Index(i pulumi.IntInput) GetRouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfAreaVirtualLinkMd5Key {
		return vs[0].([]GetRouterOspfAreaVirtualLinkMd5Key)[vs[1].(int)]
	}).(GetRouterOspfAreaVirtualLinkMd5KeyOutput)
}

type GetRouterOspfDistributeList struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Protocol type.
	Protocol string `pulumi:"protocol"`
}

// GetRouterOspfDistributeListInput is an input type that accepts GetRouterOspfDistributeListArgs and GetRouterOspfDistributeListOutput values.
// You can construct a concrete instance of `GetRouterOspfDistributeListInput` via:
//
//	GetRouterOspfDistributeListArgs{...}
type GetRouterOspfDistributeListInput interface {
	pulumi.Input

	ToGetRouterOspfDistributeListOutput() GetRouterOspfDistributeListOutput
	ToGetRouterOspfDistributeListOutputWithContext(context.Context) GetRouterOspfDistributeListOutput
}

type GetRouterOspfDistributeListArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Protocol type.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetRouterOspfDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfDistributeList)(nil)).Elem()
}

func (i GetRouterOspfDistributeListArgs) ToGetRouterOspfDistributeListOutput() GetRouterOspfDistributeListOutput {
	return i.ToGetRouterOspfDistributeListOutputWithContext(context.Background())
}

func (i GetRouterOspfDistributeListArgs) ToGetRouterOspfDistributeListOutputWithContext(ctx context.Context) GetRouterOspfDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfDistributeListOutput)
}

// GetRouterOspfDistributeListArrayInput is an input type that accepts GetRouterOspfDistributeListArray and GetRouterOspfDistributeListArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfDistributeListArrayInput` via:
//
//	GetRouterOspfDistributeListArray{ GetRouterOspfDistributeListArgs{...} }
type GetRouterOspfDistributeListArrayInput interface {
	pulumi.Input

	ToGetRouterOspfDistributeListArrayOutput() GetRouterOspfDistributeListArrayOutput
	ToGetRouterOspfDistributeListArrayOutputWithContext(context.Context) GetRouterOspfDistributeListArrayOutput
}

type GetRouterOspfDistributeListArray []GetRouterOspfDistributeListInput

func (GetRouterOspfDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfDistributeList)(nil)).Elem()
}

func (i GetRouterOspfDistributeListArray) ToGetRouterOspfDistributeListArrayOutput() GetRouterOspfDistributeListArrayOutput {
	return i.ToGetRouterOspfDistributeListArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfDistributeListArray) ToGetRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) GetRouterOspfDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfDistributeListArrayOutput)
}

type GetRouterOspfDistributeListOutput struct{ *pulumi.OutputState }

func (GetRouterOspfDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfDistributeList)(nil)).Elem()
}

func (o GetRouterOspfDistributeListOutput) ToGetRouterOspfDistributeListOutput() GetRouterOspfDistributeListOutput {
	return o
}

func (o GetRouterOspfDistributeListOutput) ToGetRouterOspfDistributeListOutputWithContext(ctx context.Context) GetRouterOspfDistributeListOutput {
	return o
}

// Access list name.
func (o GetRouterOspfDistributeListOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfDistributeList) string { return v.AccessList }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Protocol type.
func (o GetRouterOspfDistributeListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfDistributeList) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetRouterOspfDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfDistributeList)(nil)).Elem()
}

func (o GetRouterOspfDistributeListArrayOutput) ToGetRouterOspfDistributeListArrayOutput() GetRouterOspfDistributeListArrayOutput {
	return o
}

func (o GetRouterOspfDistributeListArrayOutput) ToGetRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) GetRouterOspfDistributeListArrayOutput {
	return o
}

func (o GetRouterOspfDistributeListArrayOutput) Index(i pulumi.IntInput) GetRouterOspfDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfDistributeList {
		return vs[0].([]GetRouterOspfDistributeList)[vs[1].(int)]
	}).(GetRouterOspfDistributeListOutput)
}

type GetRouterOspfNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip string `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval int `pulumi:"pollInterval"`
	// Priority.
	Priority int `pulumi:"priority"`
}

// GetRouterOspfNeighborInput is an input type that accepts GetRouterOspfNeighborArgs and GetRouterOspfNeighborOutput values.
// You can construct a concrete instance of `GetRouterOspfNeighborInput` via:
//
//	GetRouterOspfNeighborArgs{...}
type GetRouterOspfNeighborInput interface {
	pulumi.Input

	ToGetRouterOspfNeighborOutput() GetRouterOspfNeighborOutput
	ToGetRouterOspfNeighborOutputWithContext(context.Context) GetRouterOspfNeighborOutput
}

type GetRouterOspfNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntInput `pulumi:"pollInterval"`
	// Priority.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (GetRouterOspfNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfNeighbor)(nil)).Elem()
}

func (i GetRouterOspfNeighborArgs) ToGetRouterOspfNeighborOutput() GetRouterOspfNeighborOutput {
	return i.ToGetRouterOspfNeighborOutputWithContext(context.Background())
}

func (i GetRouterOspfNeighborArgs) ToGetRouterOspfNeighborOutputWithContext(ctx context.Context) GetRouterOspfNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfNeighborOutput)
}

// GetRouterOspfNeighborArrayInput is an input type that accepts GetRouterOspfNeighborArray and GetRouterOspfNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfNeighborArrayInput` via:
//
//	GetRouterOspfNeighborArray{ GetRouterOspfNeighborArgs{...} }
type GetRouterOspfNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterOspfNeighborArrayOutput() GetRouterOspfNeighborArrayOutput
	ToGetRouterOspfNeighborArrayOutputWithContext(context.Context) GetRouterOspfNeighborArrayOutput
}

type GetRouterOspfNeighborArray []GetRouterOspfNeighborInput

func (GetRouterOspfNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfNeighbor)(nil)).Elem()
}

func (i GetRouterOspfNeighborArray) ToGetRouterOspfNeighborArrayOutput() GetRouterOspfNeighborArrayOutput {
	return i.ToGetRouterOspfNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfNeighborArray) ToGetRouterOspfNeighborArrayOutputWithContext(ctx context.Context) GetRouterOspfNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfNeighborArrayOutput)
}

type GetRouterOspfNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterOspfNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfNeighbor)(nil)).Elem()
}

func (o GetRouterOspfNeighborOutput) ToGetRouterOspfNeighborOutput() GetRouterOspfNeighborOutput {
	return o
}

func (o GetRouterOspfNeighborOutput) ToGetRouterOspfNeighborOutputWithContext(ctx context.Context) GetRouterOspfNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetRouterOspfNeighborOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfNeighbor) int { return v.Cost }).(pulumi.IntOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// Interface IP address of the neighbor.
func (o GetRouterOspfNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

// Poll interval time in seconds.
func (o GetRouterOspfNeighborOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfNeighbor) int { return v.PollInterval }).(pulumi.IntOutput)
}

// Priority.
func (o GetRouterOspfNeighborOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfNeighbor) int { return v.Priority }).(pulumi.IntOutput)
}

type GetRouterOspfNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfNeighbor)(nil)).Elem()
}

func (o GetRouterOspfNeighborArrayOutput) ToGetRouterOspfNeighborArrayOutput() GetRouterOspfNeighborArrayOutput {
	return o
}

func (o GetRouterOspfNeighborArrayOutput) ToGetRouterOspfNeighborArrayOutputWithContext(ctx context.Context) GetRouterOspfNeighborArrayOutput {
	return o
}

func (o GetRouterOspfNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterOspfNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfNeighbor {
		return vs[0].([]GetRouterOspfNeighbor)[vs[1].(int)]
	}).(GetRouterOspfNeighborOutput)
}

type GetRouterOspfNetwork struct {
	// Attach the network to area.
	Area string `pulumi:"area"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterOspfNetworkInput is an input type that accepts GetRouterOspfNetworkArgs and GetRouterOspfNetworkOutput values.
// You can construct a concrete instance of `GetRouterOspfNetworkInput` via:
//
//	GetRouterOspfNetworkArgs{...}
type GetRouterOspfNetworkInput interface {
	pulumi.Input

	ToGetRouterOspfNetworkOutput() GetRouterOspfNetworkOutput
	ToGetRouterOspfNetworkOutputWithContext(context.Context) GetRouterOspfNetworkOutput
}

type GetRouterOspfNetworkArgs struct {
	// Attach the network to area.
	Area pulumi.StringInput `pulumi:"area"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterOspfNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfNetwork)(nil)).Elem()
}

func (i GetRouterOspfNetworkArgs) ToGetRouterOspfNetworkOutput() GetRouterOspfNetworkOutput {
	return i.ToGetRouterOspfNetworkOutputWithContext(context.Background())
}

func (i GetRouterOspfNetworkArgs) ToGetRouterOspfNetworkOutputWithContext(ctx context.Context) GetRouterOspfNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfNetworkOutput)
}

// GetRouterOspfNetworkArrayInput is an input type that accepts GetRouterOspfNetworkArray and GetRouterOspfNetworkArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfNetworkArrayInput` via:
//
//	GetRouterOspfNetworkArray{ GetRouterOspfNetworkArgs{...} }
type GetRouterOspfNetworkArrayInput interface {
	pulumi.Input

	ToGetRouterOspfNetworkArrayOutput() GetRouterOspfNetworkArrayOutput
	ToGetRouterOspfNetworkArrayOutputWithContext(context.Context) GetRouterOspfNetworkArrayOutput
}

type GetRouterOspfNetworkArray []GetRouterOspfNetworkInput

func (GetRouterOspfNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfNetwork)(nil)).Elem()
}

func (i GetRouterOspfNetworkArray) ToGetRouterOspfNetworkArrayOutput() GetRouterOspfNetworkArrayOutput {
	return i.ToGetRouterOspfNetworkArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfNetworkArray) ToGetRouterOspfNetworkArrayOutputWithContext(ctx context.Context) GetRouterOspfNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfNetworkArrayOutput)
}

type GetRouterOspfNetworkOutput struct{ *pulumi.OutputState }

func (GetRouterOspfNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfNetwork)(nil)).Elem()
}

func (o GetRouterOspfNetworkOutput) ToGetRouterOspfNetworkOutput() GetRouterOspfNetworkOutput {
	return o
}

func (o GetRouterOspfNetworkOutput) ToGetRouterOspfNetworkOutputWithContext(ctx context.Context) GetRouterOspfNetworkOutput {
	return o
}

// Attach the network to area.
func (o GetRouterOspfNetworkOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfNetwork) string { return v.Area }).(pulumi.StringOutput)
}

// Comment.
func (o GetRouterOspfNetworkOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfNetwork) string { return v.Comments }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetRouterOspfNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterOspfNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfNetwork)(nil)).Elem()
}

func (o GetRouterOspfNetworkArrayOutput) ToGetRouterOspfNetworkArrayOutput() GetRouterOspfNetworkArrayOutput {
	return o
}

func (o GetRouterOspfNetworkArrayOutput) ToGetRouterOspfNetworkArrayOutputWithContext(ctx context.Context) GetRouterOspfNetworkArrayOutput {
	return o
}

func (o GetRouterOspfNetworkArrayOutput) Index(i pulumi.IntInput) GetRouterOspfNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfNetwork {
		return vs[0].([]GetRouterOspfNetwork)[vs[1].(int)]
	}).(GetRouterOspfNetworkOutput)
}

type GetRouterOspfOspfInterface struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs.
	DatabaseFilterOut string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface string `pulumi:"interface"`
	// Interface IP address of the neighbor.
	Ip string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain string `pulumi:"keychain"`
	// MD5 key.
	Md5Key string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []GetRouterOspfOspfInterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu int `pulumi:"mtu"`
	// Enable/disable ignore MTU.
	MtuIgnore string `pulumi:"mtuIgnore"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Network type.
	NetworkType string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength int `pulumi:"prefixLength"`
	// Priority.
	Priority int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// status
	Status string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetRouterOspfOspfInterfaceInput is an input type that accepts GetRouterOspfOspfInterfaceArgs and GetRouterOspfOspfInterfaceOutput values.
// You can construct a concrete instance of `GetRouterOspfOspfInterfaceInput` via:
//
//	GetRouterOspfOspfInterfaceArgs{...}
type GetRouterOspfOspfInterfaceInput interface {
	pulumi.Input

	ToGetRouterOspfOspfInterfaceOutput() GetRouterOspfOspfInterfaceOutput
	ToGetRouterOspfOspfInterfaceOutputWithContext(context.Context) GetRouterOspfOspfInterfaceOutput
}

type GetRouterOspfOspfInterfaceArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringInput `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs.
	DatabaseFilterOut pulumi.StringInput `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntInput `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain pulumi.StringInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys GetRouterOspfOspfInterfaceMd5KeyArrayInput `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu pulumi.IntInput `pulumi:"mtu"`
	// Enable/disable ignore MTU.
	MtuIgnore pulumi.StringInput `pulumi:"mtuIgnore"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Prefix length.
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntInput `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetRouterOspfOspfInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfOspfInterface)(nil)).Elem()
}

func (i GetRouterOspfOspfInterfaceArgs) ToGetRouterOspfOspfInterfaceOutput() GetRouterOspfOspfInterfaceOutput {
	return i.ToGetRouterOspfOspfInterfaceOutputWithContext(context.Background())
}

func (i GetRouterOspfOspfInterfaceArgs) ToGetRouterOspfOspfInterfaceOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfOspfInterfaceOutput)
}

// GetRouterOspfOspfInterfaceArrayInput is an input type that accepts GetRouterOspfOspfInterfaceArray and GetRouterOspfOspfInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfOspfInterfaceArrayInput` via:
//
//	GetRouterOspfOspfInterfaceArray{ GetRouterOspfOspfInterfaceArgs{...} }
type GetRouterOspfOspfInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterOspfOspfInterfaceArrayOutput() GetRouterOspfOspfInterfaceArrayOutput
	ToGetRouterOspfOspfInterfaceArrayOutputWithContext(context.Context) GetRouterOspfOspfInterfaceArrayOutput
}

type GetRouterOspfOspfInterfaceArray []GetRouterOspfOspfInterfaceInput

func (GetRouterOspfOspfInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfOspfInterface)(nil)).Elem()
}

func (i GetRouterOspfOspfInterfaceArray) ToGetRouterOspfOspfInterfaceArrayOutput() GetRouterOspfOspfInterfaceArrayOutput {
	return i.ToGetRouterOspfOspfInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfOspfInterfaceArray) ToGetRouterOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfOspfInterfaceArrayOutput)
}

type GetRouterOspfOspfInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterOspfOspfInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfOspfInterface)(nil)).Elem()
}

func (o GetRouterOspfOspfInterfaceOutput) ToGetRouterOspfOspfInterfaceOutput() GetRouterOspfOspfInterfaceOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceOutput) ToGetRouterOspfOspfInterfaceOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceOutput {
	return o
}

// Authentication type.
func (o GetRouterOspfOspfInterfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Authentication }).(pulumi.StringOutput)
}

// Authentication key.
func (o GetRouterOspfOspfInterfaceOutput) AuthenticationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.AuthenticationKey }).(pulumi.StringOutput)
}

// Bidirectional Forwarding Detection (BFD).
func (o GetRouterOspfOspfInterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Comment.
func (o GetRouterOspfOspfInterfaceOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Comments }).(pulumi.StringOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetRouterOspfOspfInterfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.Cost }).(pulumi.IntOutput)
}

// Enable/disable control of flooding out LSAs.
func (o GetRouterOspfOspfInterfaceOutput) DatabaseFilterOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.DatabaseFilterOut }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetRouterOspfOspfInterfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetRouterOspfOspfInterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Number of hello packets within dead interval.
func (o GetRouterOspfOspfInterfaceOutput) HelloMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.HelloMultiplier }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o GetRouterOspfOspfInterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Interface }).(pulumi.StringOutput)
}

// Interface IP address of the neighbor.
func (o GetRouterOspfOspfInterfaceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Ip }).(pulumi.StringOutput)
}

// Message-digest key-chain name.
func (o GetRouterOspfOspfInterfaceOutput) Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Keychain }).(pulumi.StringOutput)
}

// MD5 key.
func (o GetRouterOspfOspfInterfaceOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Authentication MD5 key-chain name.
func (o GetRouterOspfOspfInterfaceOutput) Md5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Md5Keychain }).(pulumi.StringOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
func (o GetRouterOspfOspfInterfaceOutput) Md5Keys() GetRouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) []GetRouterOspfOspfInterfaceMd5Key { return v.Md5Keys }).(GetRouterOspfOspfInterfaceMd5KeyArrayOutput)
}

// MTU for database description packets.
func (o GetRouterOspfOspfInterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignore MTU.
func (o GetRouterOspfOspfInterfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Redistribute name.
func (o GetRouterOspfOspfInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Network type.
func (o GetRouterOspfOspfInterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Prefix length.
func (o GetRouterOspfOspfInterfaceOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Priority.
func (o GetRouterOspfOspfInterfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.Priority }).(pulumi.IntOutput)
}

// Graceful restart neighbor resynchronization timeout.
func (o GetRouterOspfOspfInterfaceOutput) ResyncTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.ResyncTimeout }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o GetRouterOspfOspfInterfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// status
func (o GetRouterOspfOspfInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) string { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o GetRouterOspfOspfInterfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterface) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetRouterOspfOspfInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfOspfInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfOspfInterface)(nil)).Elem()
}

func (o GetRouterOspfOspfInterfaceArrayOutput) ToGetRouterOspfOspfInterfaceArrayOutput() GetRouterOspfOspfInterfaceArrayOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceArrayOutput) ToGetRouterOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceArrayOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterOspfOspfInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfOspfInterface {
		return vs[0].([]GetRouterOspfOspfInterface)[vs[1].(int)]
	}).(GetRouterOspfOspfInterfaceOutput)
}

type GetRouterOspfOspfInterfaceMd5Key struct {
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Password for the key.
	KeyString string `pulumi:"keyString"`
}

// GetRouterOspfOspfInterfaceMd5KeyInput is an input type that accepts GetRouterOspfOspfInterfaceMd5KeyArgs and GetRouterOspfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `GetRouterOspfOspfInterfaceMd5KeyInput` via:
//
//	GetRouterOspfOspfInterfaceMd5KeyArgs{...}
type GetRouterOspfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToGetRouterOspfOspfInterfaceMd5KeyOutput() GetRouterOspfOspfInterfaceMd5KeyOutput
	ToGetRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Context) GetRouterOspfOspfInterfaceMd5KeyOutput
}

type GetRouterOspfOspfInterfaceMd5KeyArgs struct {
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringInput `pulumi:"keyString"`
}

func (GetRouterOspfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i GetRouterOspfOspfInterfaceMd5KeyArgs) ToGetRouterOspfOspfInterfaceMd5KeyOutput() GetRouterOspfOspfInterfaceMd5KeyOutput {
	return i.ToGetRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i GetRouterOspfOspfInterfaceMd5KeyArgs) ToGetRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfOspfInterfaceMd5KeyOutput)
}

// GetRouterOspfOspfInterfaceMd5KeyArrayInput is an input type that accepts GetRouterOspfOspfInterfaceMd5KeyArray and GetRouterOspfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfOspfInterfaceMd5KeyArrayInput` via:
//
//	GetRouterOspfOspfInterfaceMd5KeyArray{ GetRouterOspfOspfInterfaceMd5KeyArgs{...} }
type GetRouterOspfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToGetRouterOspfOspfInterfaceMd5KeyArrayOutput() GetRouterOspfOspfInterfaceMd5KeyArrayOutput
	ToGetRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) GetRouterOspfOspfInterfaceMd5KeyArrayOutput
}

type GetRouterOspfOspfInterfaceMd5KeyArray []GetRouterOspfOspfInterfaceMd5KeyInput

func (GetRouterOspfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i GetRouterOspfOspfInterfaceMd5KeyArray) ToGetRouterOspfOspfInterfaceMd5KeyArrayOutput() GetRouterOspfOspfInterfaceMd5KeyArrayOutput {
	return i.ToGetRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfOspfInterfaceMd5KeyArray) ToGetRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfOspfInterfaceMd5KeyArrayOutput)
}

type GetRouterOspfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (GetRouterOspfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o GetRouterOspfOspfInterfaceMd5KeyOutput) ToGetRouterOspfOspfInterfaceMd5KeyOutput() GetRouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceMd5KeyOutput) ToGetRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

// Distribute list entry ID.
func (o GetRouterOspfOspfInterfaceMd5KeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterfaceMd5Key) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key.
func (o GetRouterOspfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfOspfInterfaceMd5Key) string { return v.KeyString }).(pulumi.StringOutput)
}

type GetRouterOspfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o GetRouterOspfOspfInterfaceMd5KeyArrayOutput) ToGetRouterOspfOspfInterfaceMd5KeyArrayOutput() GetRouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceMd5KeyArrayOutput) ToGetRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) GetRouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o GetRouterOspfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) GetRouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfOspfInterfaceMd5Key {
		return vs[0].([]GetRouterOspfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(GetRouterOspfOspfInterfaceMd5KeyOutput)
}

type GetRouterOspfPassiveInterface struct {
	// Redistribute name.
	Name string `pulumi:"name"`
}

// GetRouterOspfPassiveInterfaceInput is an input type that accepts GetRouterOspfPassiveInterfaceArgs and GetRouterOspfPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRouterOspfPassiveInterfaceInput` via:
//
//	GetRouterOspfPassiveInterfaceArgs{...}
type GetRouterOspfPassiveInterfaceInput interface {
	pulumi.Input

	ToGetRouterOspfPassiveInterfaceOutput() GetRouterOspfPassiveInterfaceOutput
	ToGetRouterOspfPassiveInterfaceOutputWithContext(context.Context) GetRouterOspfPassiveInterfaceOutput
}

type GetRouterOspfPassiveInterfaceArgs struct {
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterOspfPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfPassiveInterface)(nil)).Elem()
}

func (i GetRouterOspfPassiveInterfaceArgs) ToGetRouterOspfPassiveInterfaceOutput() GetRouterOspfPassiveInterfaceOutput {
	return i.ToGetRouterOspfPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRouterOspfPassiveInterfaceArgs) ToGetRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterOspfPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfPassiveInterfaceOutput)
}

// GetRouterOspfPassiveInterfaceArrayInput is an input type that accepts GetRouterOspfPassiveInterfaceArray and GetRouterOspfPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfPassiveInterfaceArrayInput` via:
//
//	GetRouterOspfPassiveInterfaceArray{ GetRouterOspfPassiveInterfaceArgs{...} }
type GetRouterOspfPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterOspfPassiveInterfaceArrayOutput() GetRouterOspfPassiveInterfaceArrayOutput
	ToGetRouterOspfPassiveInterfaceArrayOutputWithContext(context.Context) GetRouterOspfPassiveInterfaceArrayOutput
}

type GetRouterOspfPassiveInterfaceArray []GetRouterOspfPassiveInterfaceInput

func (GetRouterOspfPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfPassiveInterface)(nil)).Elem()
}

func (i GetRouterOspfPassiveInterfaceArray) ToGetRouterOspfPassiveInterfaceArrayOutput() GetRouterOspfPassiveInterfaceArrayOutput {
	return i.ToGetRouterOspfPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfPassiveInterfaceArray) ToGetRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspfPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfPassiveInterfaceArrayOutput)
}

type GetRouterOspfPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterOspfPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfPassiveInterface)(nil)).Elem()
}

func (o GetRouterOspfPassiveInterfaceOutput) ToGetRouterOspfPassiveInterfaceOutput() GetRouterOspfPassiveInterfaceOutput {
	return o
}

func (o GetRouterOspfPassiveInterfaceOutput) ToGetRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterOspfPassiveInterfaceOutput {
	return o
}

// Redistribute name.
func (o GetRouterOspfPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterOspfPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfPassiveInterface)(nil)).Elem()
}

func (o GetRouterOspfPassiveInterfaceArrayOutput) ToGetRouterOspfPassiveInterfaceArrayOutput() GetRouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterOspfPassiveInterfaceArrayOutput) ToGetRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterOspfPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterOspfPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfPassiveInterface {
		return vs[0].([]GetRouterOspfPassiveInterface)[vs[1].(int)]
	}).(GetRouterOspfPassiveInterfaceOutput)
}

type GetRouterOspfRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetRouterOspfRedistributeInput is an input type that accepts GetRouterOspfRedistributeArgs and GetRouterOspfRedistributeOutput values.
// You can construct a concrete instance of `GetRouterOspfRedistributeInput` via:
//
//	GetRouterOspfRedistributeArgs{...}
type GetRouterOspfRedistributeInput interface {
	pulumi.Input

	ToGetRouterOspfRedistributeOutput() GetRouterOspfRedistributeOutput
	ToGetRouterOspfRedistributeOutputWithContext(context.Context) GetRouterOspfRedistributeOutput
}

type GetRouterOspfRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetRouterOspfRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfRedistribute)(nil)).Elem()
}

func (i GetRouterOspfRedistributeArgs) ToGetRouterOspfRedistributeOutput() GetRouterOspfRedistributeOutput {
	return i.ToGetRouterOspfRedistributeOutputWithContext(context.Background())
}

func (i GetRouterOspfRedistributeArgs) ToGetRouterOspfRedistributeOutputWithContext(ctx context.Context) GetRouterOspfRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfRedistributeOutput)
}

// GetRouterOspfRedistributeArrayInput is an input type that accepts GetRouterOspfRedistributeArray and GetRouterOspfRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfRedistributeArrayInput` via:
//
//	GetRouterOspfRedistributeArray{ GetRouterOspfRedistributeArgs{...} }
type GetRouterOspfRedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterOspfRedistributeArrayOutput() GetRouterOspfRedistributeArrayOutput
	ToGetRouterOspfRedistributeArrayOutputWithContext(context.Context) GetRouterOspfRedistributeArrayOutput
}

type GetRouterOspfRedistributeArray []GetRouterOspfRedistributeInput

func (GetRouterOspfRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfRedistribute)(nil)).Elem()
}

func (i GetRouterOspfRedistributeArray) ToGetRouterOspfRedistributeArrayOutput() GetRouterOspfRedistributeArrayOutput {
	return i.ToGetRouterOspfRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfRedistributeArray) ToGetRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) GetRouterOspfRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfRedistributeArrayOutput)
}

type GetRouterOspfRedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterOspfRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfRedistribute)(nil)).Elem()
}

func (o GetRouterOspfRedistributeOutput) ToGetRouterOspfRedistributeOutput() GetRouterOspfRedistributeOutput {
	return o
}

func (o GetRouterOspfRedistributeOutput) ToGetRouterOspfRedistributeOutputWithContext(ctx context.Context) GetRouterOspfRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRouterOspfRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRouterOspfRedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Redistribute name.
func (o GetRouterOspfRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterOspfRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRouterOspfRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

// Tag value.
func (o GetRouterOspfRedistributeOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfRedistribute) int { return v.Tag }).(pulumi.IntOutput)
}

type GetRouterOspfRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfRedistribute)(nil)).Elem()
}

func (o GetRouterOspfRedistributeArrayOutput) ToGetRouterOspfRedistributeArrayOutput() GetRouterOspfRedistributeArrayOutput {
	return o
}

func (o GetRouterOspfRedistributeArrayOutput) ToGetRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) GetRouterOspfRedistributeArrayOutput {
	return o
}

func (o GetRouterOspfRedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterOspfRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfRedistribute {
		return vs[0].([]GetRouterOspfRedistribute)[vs[1].(int)]
	}).(GetRouterOspfRedistributeOutput)
}

type GetRouterOspfSummaryAddress struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetRouterOspfSummaryAddressInput is an input type that accepts GetRouterOspfSummaryAddressArgs and GetRouterOspfSummaryAddressOutput values.
// You can construct a concrete instance of `GetRouterOspfSummaryAddressInput` via:
//
//	GetRouterOspfSummaryAddressArgs{...}
type GetRouterOspfSummaryAddressInput interface {
	pulumi.Input

	ToGetRouterOspfSummaryAddressOutput() GetRouterOspfSummaryAddressOutput
	ToGetRouterOspfSummaryAddressOutputWithContext(context.Context) GetRouterOspfSummaryAddressOutput
}

type GetRouterOspfSummaryAddressArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetRouterOspfSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfSummaryAddress)(nil)).Elem()
}

func (i GetRouterOspfSummaryAddressArgs) ToGetRouterOspfSummaryAddressOutput() GetRouterOspfSummaryAddressOutput {
	return i.ToGetRouterOspfSummaryAddressOutputWithContext(context.Background())
}

func (i GetRouterOspfSummaryAddressArgs) ToGetRouterOspfSummaryAddressOutputWithContext(ctx context.Context) GetRouterOspfSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfSummaryAddressOutput)
}

// GetRouterOspfSummaryAddressArrayInput is an input type that accepts GetRouterOspfSummaryAddressArray and GetRouterOspfSummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterOspfSummaryAddressArrayInput` via:
//
//	GetRouterOspfSummaryAddressArray{ GetRouterOspfSummaryAddressArgs{...} }
type GetRouterOspfSummaryAddressArrayInput interface {
	pulumi.Input

	ToGetRouterOspfSummaryAddressArrayOutput() GetRouterOspfSummaryAddressArrayOutput
	ToGetRouterOspfSummaryAddressArrayOutputWithContext(context.Context) GetRouterOspfSummaryAddressArrayOutput
}

type GetRouterOspfSummaryAddressArray []GetRouterOspfSummaryAddressInput

func (GetRouterOspfSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfSummaryAddress)(nil)).Elem()
}

func (i GetRouterOspfSummaryAddressArray) ToGetRouterOspfSummaryAddressArrayOutput() GetRouterOspfSummaryAddressArrayOutput {
	return i.ToGetRouterOspfSummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterOspfSummaryAddressArray) ToGetRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterOspfSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterOspfSummaryAddressArrayOutput)
}

type GetRouterOspfSummaryAddressOutput struct{ *pulumi.OutputState }

func (GetRouterOspfSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterOspfSummaryAddress)(nil)).Elem()
}

func (o GetRouterOspfSummaryAddressOutput) ToGetRouterOspfSummaryAddressOutput() GetRouterOspfSummaryAddressOutput {
	return o
}

func (o GetRouterOspfSummaryAddressOutput) ToGetRouterOspfSummaryAddressOutputWithContext(ctx context.Context) GetRouterOspfSummaryAddressOutput {
	return o
}

// Enable/disable advertise status.
func (o GetRouterOspfSummaryAddressOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfSummaryAddress) string { return v.Advertise }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetRouterOspfSummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfSummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetRouterOspfSummaryAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterOspfSummaryAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

// Tag value.
func (o GetRouterOspfSummaryAddressOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterOspfSummaryAddress) int { return v.Tag }).(pulumi.IntOutput)
}

type GetRouterOspfSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterOspfSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterOspfSummaryAddress)(nil)).Elem()
}

func (o GetRouterOspfSummaryAddressArrayOutput) ToGetRouterOspfSummaryAddressArrayOutput() GetRouterOspfSummaryAddressArrayOutput {
	return o
}

func (o GetRouterOspfSummaryAddressArrayOutput) ToGetRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) GetRouterOspfSummaryAddressArrayOutput {
	return o
}

func (o GetRouterOspfSummaryAddressArrayOutput) Index(i pulumi.IntInput) GetRouterOspfSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterOspfSummaryAddress {
		return vs[0].([]GetRouterOspfSummaryAddress)[vs[1].(int)]
	}).(GetRouterOspfSummaryAddressOutput)
}

type GetRouterPolicy6Dstaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicy6DstaddrInput is an input type that accepts GetRouterPolicy6DstaddrArgs and GetRouterPolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetRouterPolicy6DstaddrInput` via:
//
//	GetRouterPolicy6DstaddrArgs{...}
type GetRouterPolicy6DstaddrInput interface {
	pulumi.Input

	ToGetRouterPolicy6DstaddrOutput() GetRouterPolicy6DstaddrOutput
	ToGetRouterPolicy6DstaddrOutputWithContext(context.Context) GetRouterPolicy6DstaddrOutput
}

type GetRouterPolicy6DstaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6Dstaddr)(nil)).Elem()
}

func (i GetRouterPolicy6DstaddrArgs) ToGetRouterPolicy6DstaddrOutput() GetRouterPolicy6DstaddrOutput {
	return i.ToGetRouterPolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetRouterPolicy6DstaddrArgs) ToGetRouterPolicy6DstaddrOutputWithContext(ctx context.Context) GetRouterPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6DstaddrOutput)
}

// GetRouterPolicy6DstaddrArrayInput is an input type that accepts GetRouterPolicy6DstaddrArray and GetRouterPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicy6DstaddrArrayInput` via:
//
//	GetRouterPolicy6DstaddrArray{ GetRouterPolicy6DstaddrArgs{...} }
type GetRouterPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetRouterPolicy6DstaddrArrayOutput() GetRouterPolicy6DstaddrArrayOutput
	ToGetRouterPolicy6DstaddrArrayOutputWithContext(context.Context) GetRouterPolicy6DstaddrArrayOutput
}

type GetRouterPolicy6DstaddrArray []GetRouterPolicy6DstaddrInput

func (GetRouterPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6Dstaddr)(nil)).Elem()
}

func (i GetRouterPolicy6DstaddrArray) ToGetRouterPolicy6DstaddrArrayOutput() GetRouterPolicy6DstaddrArrayOutput {
	return i.ToGetRouterPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicy6DstaddrArray) ToGetRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6DstaddrArrayOutput)
}

type GetRouterPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6Dstaddr)(nil)).Elem()
}

func (o GetRouterPolicy6DstaddrOutput) ToGetRouterPolicy6DstaddrOutput() GetRouterPolicy6DstaddrOutput {
	return o
}

func (o GetRouterPolicy6DstaddrOutput) ToGetRouterPolicy6DstaddrOutputWithContext(ctx context.Context) GetRouterPolicy6DstaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6Dstaddr)(nil)).Elem()
}

func (o GetRouterPolicy6DstaddrArrayOutput) ToGetRouterPolicy6DstaddrArrayOutput() GetRouterPolicy6DstaddrArrayOutput {
	return o
}

func (o GetRouterPolicy6DstaddrArrayOutput) ToGetRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicy6DstaddrArrayOutput {
	return o
}

func (o GetRouterPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetRouterPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicy6Dstaddr {
		return vs[0].([]GetRouterPolicy6Dstaddr)[vs[1].(int)]
	}).(GetRouterPolicy6DstaddrOutput)
}

type GetRouterPolicy6InternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicy6InternetServiceCustomInput is an input type that accepts GetRouterPolicy6InternetServiceCustomArgs and GetRouterPolicy6InternetServiceCustomOutput values.
// You can construct a concrete instance of `GetRouterPolicy6InternetServiceCustomInput` via:
//
//	GetRouterPolicy6InternetServiceCustomArgs{...}
type GetRouterPolicy6InternetServiceCustomInput interface {
	pulumi.Input

	ToGetRouterPolicy6InternetServiceCustomOutput() GetRouterPolicy6InternetServiceCustomOutput
	ToGetRouterPolicy6InternetServiceCustomOutputWithContext(context.Context) GetRouterPolicy6InternetServiceCustomOutput
}

type GetRouterPolicy6InternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicy6InternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i GetRouterPolicy6InternetServiceCustomArgs) ToGetRouterPolicy6InternetServiceCustomOutput() GetRouterPolicy6InternetServiceCustomOutput {
	return i.ToGetRouterPolicy6InternetServiceCustomOutputWithContext(context.Background())
}

func (i GetRouterPolicy6InternetServiceCustomArgs) ToGetRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6InternetServiceCustomOutput)
}

// GetRouterPolicy6InternetServiceCustomArrayInput is an input type that accepts GetRouterPolicy6InternetServiceCustomArray and GetRouterPolicy6InternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicy6InternetServiceCustomArrayInput` via:
//
//	GetRouterPolicy6InternetServiceCustomArray{ GetRouterPolicy6InternetServiceCustomArgs{...} }
type GetRouterPolicy6InternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetRouterPolicy6InternetServiceCustomArrayOutput() GetRouterPolicy6InternetServiceCustomArrayOutput
	ToGetRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Context) GetRouterPolicy6InternetServiceCustomArrayOutput
}

type GetRouterPolicy6InternetServiceCustomArray []GetRouterPolicy6InternetServiceCustomInput

func (GetRouterPolicy6InternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i GetRouterPolicy6InternetServiceCustomArray) ToGetRouterPolicy6InternetServiceCustomArrayOutput() GetRouterPolicy6InternetServiceCustomArrayOutput {
	return i.ToGetRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicy6InternetServiceCustomArray) ToGetRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6InternetServiceCustomArrayOutput)
}

type GetRouterPolicy6InternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6InternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o GetRouterPolicy6InternetServiceCustomOutput) ToGetRouterPolicy6InternetServiceCustomOutput() GetRouterPolicy6InternetServiceCustomOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceCustomOutput) ToGetRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicy6InternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicy6InternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicy6InternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6InternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o GetRouterPolicy6InternetServiceCustomArrayOutput) ToGetRouterPolicy6InternetServiceCustomArrayOutput() GetRouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceCustomArrayOutput) ToGetRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetRouterPolicy6InternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicy6InternetServiceCustom {
		return vs[0].([]GetRouterPolicy6InternetServiceCustom)[vs[1].(int)]
	}).(GetRouterPolicy6InternetServiceCustomOutput)
}

type GetRouterPolicy6InternetServiceId struct {
	// Destination Internet Service ID.
	Id int `pulumi:"id"`
}

// GetRouterPolicy6InternetServiceIdInput is an input type that accepts GetRouterPolicy6InternetServiceIdArgs and GetRouterPolicy6InternetServiceIdOutput values.
// You can construct a concrete instance of `GetRouterPolicy6InternetServiceIdInput` via:
//
//	GetRouterPolicy6InternetServiceIdArgs{...}
type GetRouterPolicy6InternetServiceIdInput interface {
	pulumi.Input

	ToGetRouterPolicy6InternetServiceIdOutput() GetRouterPolicy6InternetServiceIdOutput
	ToGetRouterPolicy6InternetServiceIdOutputWithContext(context.Context) GetRouterPolicy6InternetServiceIdOutput
}

type GetRouterPolicy6InternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetRouterPolicy6InternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i GetRouterPolicy6InternetServiceIdArgs) ToGetRouterPolicy6InternetServiceIdOutput() GetRouterPolicy6InternetServiceIdOutput {
	return i.ToGetRouterPolicy6InternetServiceIdOutputWithContext(context.Background())
}

func (i GetRouterPolicy6InternetServiceIdArgs) ToGetRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6InternetServiceIdOutput)
}

// GetRouterPolicy6InternetServiceIdArrayInput is an input type that accepts GetRouterPolicy6InternetServiceIdArray and GetRouterPolicy6InternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicy6InternetServiceIdArrayInput` via:
//
//	GetRouterPolicy6InternetServiceIdArray{ GetRouterPolicy6InternetServiceIdArgs{...} }
type GetRouterPolicy6InternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetRouterPolicy6InternetServiceIdArrayOutput() GetRouterPolicy6InternetServiceIdArrayOutput
	ToGetRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Context) GetRouterPolicy6InternetServiceIdArrayOutput
}

type GetRouterPolicy6InternetServiceIdArray []GetRouterPolicy6InternetServiceIdInput

func (GetRouterPolicy6InternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i GetRouterPolicy6InternetServiceIdArray) ToGetRouterPolicy6InternetServiceIdArrayOutput() GetRouterPolicy6InternetServiceIdArrayOutput {
	return i.ToGetRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicy6InternetServiceIdArray) ToGetRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6InternetServiceIdArrayOutput)
}

type GetRouterPolicy6InternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6InternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o GetRouterPolicy6InternetServiceIdOutput) ToGetRouterPolicy6InternetServiceIdOutput() GetRouterPolicy6InternetServiceIdOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceIdOutput) ToGetRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o GetRouterPolicy6InternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPolicy6InternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetRouterPolicy6InternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6InternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o GetRouterPolicy6InternetServiceIdArrayOutput) ToGetRouterPolicy6InternetServiceIdArrayOutput() GetRouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceIdArrayOutput) ToGetRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) GetRouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o GetRouterPolicy6InternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetRouterPolicy6InternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicy6InternetServiceId {
		return vs[0].([]GetRouterPolicy6InternetServiceId)[vs[1].(int)]
	}).(GetRouterPolicy6InternetServiceIdOutput)
}

type GetRouterPolicy6Srcaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicy6SrcaddrInput is an input type that accepts GetRouterPolicy6SrcaddrArgs and GetRouterPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetRouterPolicy6SrcaddrInput` via:
//
//	GetRouterPolicy6SrcaddrArgs{...}
type GetRouterPolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetRouterPolicy6SrcaddrOutput() GetRouterPolicy6SrcaddrOutput
	ToGetRouterPolicy6SrcaddrOutputWithContext(context.Context) GetRouterPolicy6SrcaddrOutput
}

type GetRouterPolicy6SrcaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6Srcaddr)(nil)).Elem()
}

func (i GetRouterPolicy6SrcaddrArgs) ToGetRouterPolicy6SrcaddrOutput() GetRouterPolicy6SrcaddrOutput {
	return i.ToGetRouterPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetRouterPolicy6SrcaddrArgs) ToGetRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) GetRouterPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6SrcaddrOutput)
}

// GetRouterPolicy6SrcaddrArrayInput is an input type that accepts GetRouterPolicy6SrcaddrArray and GetRouterPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicy6SrcaddrArrayInput` via:
//
//	GetRouterPolicy6SrcaddrArray{ GetRouterPolicy6SrcaddrArgs{...} }
type GetRouterPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetRouterPolicy6SrcaddrArrayOutput() GetRouterPolicy6SrcaddrArrayOutput
	ToGetRouterPolicy6SrcaddrArrayOutputWithContext(context.Context) GetRouterPolicy6SrcaddrArrayOutput
}

type GetRouterPolicy6SrcaddrArray []GetRouterPolicy6SrcaddrInput

func (GetRouterPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6Srcaddr)(nil)).Elem()
}

func (i GetRouterPolicy6SrcaddrArray) ToGetRouterPolicy6SrcaddrArrayOutput() GetRouterPolicy6SrcaddrArrayOutput {
	return i.ToGetRouterPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicy6SrcaddrArray) ToGetRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicy6SrcaddrArrayOutput)
}

type GetRouterPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicy6Srcaddr)(nil)).Elem()
}

func (o GetRouterPolicy6SrcaddrOutput) ToGetRouterPolicy6SrcaddrOutput() GetRouterPolicy6SrcaddrOutput {
	return o
}

func (o GetRouterPolicy6SrcaddrOutput) ToGetRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) GetRouterPolicy6SrcaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicy6Srcaddr)(nil)).Elem()
}

func (o GetRouterPolicy6SrcaddrArrayOutput) ToGetRouterPolicy6SrcaddrArrayOutput() GetRouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetRouterPolicy6SrcaddrArrayOutput) ToGetRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetRouterPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetRouterPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicy6Srcaddr {
		return vs[0].([]GetRouterPolicy6Srcaddr)[vs[1].(int)]
	}).(GetRouterPolicy6SrcaddrOutput)
}

type GetRouterPolicyDst struct {
	// IP and mask.
	Subnet string `pulumi:"subnet"`
}

// GetRouterPolicyDstInput is an input type that accepts GetRouterPolicyDstArgs and GetRouterPolicyDstOutput values.
// You can construct a concrete instance of `GetRouterPolicyDstInput` via:
//
//	GetRouterPolicyDstArgs{...}
type GetRouterPolicyDstInput interface {
	pulumi.Input

	ToGetRouterPolicyDstOutput() GetRouterPolicyDstOutput
	ToGetRouterPolicyDstOutputWithContext(context.Context) GetRouterPolicyDstOutput
}

type GetRouterPolicyDstArgs struct {
	// IP and mask.
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetRouterPolicyDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyDst)(nil)).Elem()
}

func (i GetRouterPolicyDstArgs) ToGetRouterPolicyDstOutput() GetRouterPolicyDstOutput {
	return i.ToGetRouterPolicyDstOutputWithContext(context.Background())
}

func (i GetRouterPolicyDstArgs) ToGetRouterPolicyDstOutputWithContext(ctx context.Context) GetRouterPolicyDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyDstOutput)
}

// GetRouterPolicyDstArrayInput is an input type that accepts GetRouterPolicyDstArray and GetRouterPolicyDstArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicyDstArrayInput` via:
//
//	GetRouterPolicyDstArray{ GetRouterPolicyDstArgs{...} }
type GetRouterPolicyDstArrayInput interface {
	pulumi.Input

	ToGetRouterPolicyDstArrayOutput() GetRouterPolicyDstArrayOutput
	ToGetRouterPolicyDstArrayOutputWithContext(context.Context) GetRouterPolicyDstArrayOutput
}

type GetRouterPolicyDstArray []GetRouterPolicyDstInput

func (GetRouterPolicyDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyDst)(nil)).Elem()
}

func (i GetRouterPolicyDstArray) ToGetRouterPolicyDstArrayOutput() GetRouterPolicyDstArrayOutput {
	return i.ToGetRouterPolicyDstArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicyDstArray) ToGetRouterPolicyDstArrayOutputWithContext(ctx context.Context) GetRouterPolicyDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyDstArrayOutput)
}

type GetRouterPolicyDstOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyDst)(nil)).Elem()
}

func (o GetRouterPolicyDstOutput) ToGetRouterPolicyDstOutput() GetRouterPolicyDstOutput {
	return o
}

func (o GetRouterPolicyDstOutput) ToGetRouterPolicyDstOutputWithContext(ctx context.Context) GetRouterPolicyDstOutput {
	return o
}

// IP and mask.
func (o GetRouterPolicyDstOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicyDst) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetRouterPolicyDstArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyDst)(nil)).Elem()
}

func (o GetRouterPolicyDstArrayOutput) ToGetRouterPolicyDstArrayOutput() GetRouterPolicyDstArrayOutput {
	return o
}

func (o GetRouterPolicyDstArrayOutput) ToGetRouterPolicyDstArrayOutputWithContext(ctx context.Context) GetRouterPolicyDstArrayOutput {
	return o
}

func (o GetRouterPolicyDstArrayOutput) Index(i pulumi.IntInput) GetRouterPolicyDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicyDst {
		return vs[0].([]GetRouterPolicyDst)[vs[1].(int)]
	}).(GetRouterPolicyDstOutput)
}

type GetRouterPolicyDstaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicyDstaddrInput is an input type that accepts GetRouterPolicyDstaddrArgs and GetRouterPolicyDstaddrOutput values.
// You can construct a concrete instance of `GetRouterPolicyDstaddrInput` via:
//
//	GetRouterPolicyDstaddrArgs{...}
type GetRouterPolicyDstaddrInput interface {
	pulumi.Input

	ToGetRouterPolicyDstaddrOutput() GetRouterPolicyDstaddrOutput
	ToGetRouterPolicyDstaddrOutputWithContext(context.Context) GetRouterPolicyDstaddrOutput
}

type GetRouterPolicyDstaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyDstaddr)(nil)).Elem()
}

func (i GetRouterPolicyDstaddrArgs) ToGetRouterPolicyDstaddrOutput() GetRouterPolicyDstaddrOutput {
	return i.ToGetRouterPolicyDstaddrOutputWithContext(context.Background())
}

func (i GetRouterPolicyDstaddrArgs) ToGetRouterPolicyDstaddrOutputWithContext(ctx context.Context) GetRouterPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyDstaddrOutput)
}

// GetRouterPolicyDstaddrArrayInput is an input type that accepts GetRouterPolicyDstaddrArray and GetRouterPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicyDstaddrArrayInput` via:
//
//	GetRouterPolicyDstaddrArray{ GetRouterPolicyDstaddrArgs{...} }
type GetRouterPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetRouterPolicyDstaddrArrayOutput() GetRouterPolicyDstaddrArrayOutput
	ToGetRouterPolicyDstaddrArrayOutputWithContext(context.Context) GetRouterPolicyDstaddrArrayOutput
}

type GetRouterPolicyDstaddrArray []GetRouterPolicyDstaddrInput

func (GetRouterPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyDstaddr)(nil)).Elem()
}

func (i GetRouterPolicyDstaddrArray) ToGetRouterPolicyDstaddrArrayOutput() GetRouterPolicyDstaddrArrayOutput {
	return i.ToGetRouterPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicyDstaddrArray) ToGetRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyDstaddrArrayOutput)
}

type GetRouterPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyDstaddr)(nil)).Elem()
}

func (o GetRouterPolicyDstaddrOutput) ToGetRouterPolicyDstaddrOutput() GetRouterPolicyDstaddrOutput {
	return o
}

func (o GetRouterPolicyDstaddrOutput) ToGetRouterPolicyDstaddrOutputWithContext(ctx context.Context) GetRouterPolicyDstaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyDstaddr)(nil)).Elem()
}

func (o GetRouterPolicyDstaddrArrayOutput) ToGetRouterPolicyDstaddrArrayOutput() GetRouterPolicyDstaddrArrayOutput {
	return o
}

func (o GetRouterPolicyDstaddrArrayOutput) ToGetRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicyDstaddrArrayOutput {
	return o
}

func (o GetRouterPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetRouterPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicyDstaddr {
		return vs[0].([]GetRouterPolicyDstaddr)[vs[1].(int)]
	}).(GetRouterPolicyDstaddrOutput)
}

type GetRouterPolicyInputDevice struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicyInputDeviceInput is an input type that accepts GetRouterPolicyInputDeviceArgs and GetRouterPolicyInputDeviceOutput values.
// You can construct a concrete instance of `GetRouterPolicyInputDeviceInput` via:
//
//	GetRouterPolicyInputDeviceArgs{...}
type GetRouterPolicyInputDeviceInput interface {
	pulumi.Input

	ToGetRouterPolicyInputDeviceOutput() GetRouterPolicyInputDeviceOutput
	ToGetRouterPolicyInputDeviceOutputWithContext(context.Context) GetRouterPolicyInputDeviceOutput
}

type GetRouterPolicyInputDeviceArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicyInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInputDevice)(nil)).Elem()
}

func (i GetRouterPolicyInputDeviceArgs) ToGetRouterPolicyInputDeviceOutput() GetRouterPolicyInputDeviceOutput {
	return i.ToGetRouterPolicyInputDeviceOutputWithContext(context.Background())
}

func (i GetRouterPolicyInputDeviceArgs) ToGetRouterPolicyInputDeviceOutputWithContext(ctx context.Context) GetRouterPolicyInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInputDeviceOutput)
}

// GetRouterPolicyInputDeviceArrayInput is an input type that accepts GetRouterPolicyInputDeviceArray and GetRouterPolicyInputDeviceArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicyInputDeviceArrayInput` via:
//
//	GetRouterPolicyInputDeviceArray{ GetRouterPolicyInputDeviceArgs{...} }
type GetRouterPolicyInputDeviceArrayInput interface {
	pulumi.Input

	ToGetRouterPolicyInputDeviceArrayOutput() GetRouterPolicyInputDeviceArrayOutput
	ToGetRouterPolicyInputDeviceArrayOutputWithContext(context.Context) GetRouterPolicyInputDeviceArrayOutput
}

type GetRouterPolicyInputDeviceArray []GetRouterPolicyInputDeviceInput

func (GetRouterPolicyInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInputDevice)(nil)).Elem()
}

func (i GetRouterPolicyInputDeviceArray) ToGetRouterPolicyInputDeviceArrayOutput() GetRouterPolicyInputDeviceArrayOutput {
	return i.ToGetRouterPolicyInputDeviceArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicyInputDeviceArray) ToGetRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) GetRouterPolicyInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInputDeviceArrayOutput)
}

type GetRouterPolicyInputDeviceOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInputDevice)(nil)).Elem()
}

func (o GetRouterPolicyInputDeviceOutput) ToGetRouterPolicyInputDeviceOutput() GetRouterPolicyInputDeviceOutput {
	return o
}

func (o GetRouterPolicyInputDeviceOutput) ToGetRouterPolicyInputDeviceOutputWithContext(ctx context.Context) GetRouterPolicyInputDeviceOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicyInputDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicyInputDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicyInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInputDevice)(nil)).Elem()
}

func (o GetRouterPolicyInputDeviceArrayOutput) ToGetRouterPolicyInputDeviceArrayOutput() GetRouterPolicyInputDeviceArrayOutput {
	return o
}

func (o GetRouterPolicyInputDeviceArrayOutput) ToGetRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) GetRouterPolicyInputDeviceArrayOutput {
	return o
}

func (o GetRouterPolicyInputDeviceArrayOutput) Index(i pulumi.IntInput) GetRouterPolicyInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicyInputDevice {
		return vs[0].([]GetRouterPolicyInputDevice)[vs[1].(int)]
	}).(GetRouterPolicyInputDeviceOutput)
}

type GetRouterPolicyInternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicyInternetServiceCustomInput is an input type that accepts GetRouterPolicyInternetServiceCustomArgs and GetRouterPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetRouterPolicyInternetServiceCustomInput` via:
//
//	GetRouterPolicyInternetServiceCustomArgs{...}
type GetRouterPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetRouterPolicyInternetServiceCustomOutput() GetRouterPolicyInternetServiceCustomOutput
	ToGetRouterPolicyInternetServiceCustomOutputWithContext(context.Context) GetRouterPolicyInternetServiceCustomOutput
}

type GetRouterPolicyInternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetRouterPolicyInternetServiceCustomArgs) ToGetRouterPolicyInternetServiceCustomOutput() GetRouterPolicyInternetServiceCustomOutput {
	return i.ToGetRouterPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetRouterPolicyInternetServiceCustomArgs) ToGetRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInternetServiceCustomOutput)
}

// GetRouterPolicyInternetServiceCustomArrayInput is an input type that accepts GetRouterPolicyInternetServiceCustomArray and GetRouterPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicyInternetServiceCustomArrayInput` via:
//
//	GetRouterPolicyInternetServiceCustomArray{ GetRouterPolicyInternetServiceCustomArgs{...} }
type GetRouterPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetRouterPolicyInternetServiceCustomArrayOutput() GetRouterPolicyInternetServiceCustomArrayOutput
	ToGetRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetRouterPolicyInternetServiceCustomArrayOutput
}

type GetRouterPolicyInternetServiceCustomArray []GetRouterPolicyInternetServiceCustomInput

func (GetRouterPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetRouterPolicyInternetServiceCustomArray) ToGetRouterPolicyInternetServiceCustomArrayOutput() GetRouterPolicyInternetServiceCustomArrayOutput {
	return i.ToGetRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicyInternetServiceCustomArray) ToGetRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInternetServiceCustomArrayOutput)
}

type GetRouterPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetRouterPolicyInternetServiceCustomOutput) ToGetRouterPolicyInternetServiceCustomOutput() GetRouterPolicyInternetServiceCustomOutput {
	return o
}

func (o GetRouterPolicyInternetServiceCustomOutput) ToGetRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetRouterPolicyInternetServiceCustomArrayOutput) ToGetRouterPolicyInternetServiceCustomArrayOutput() GetRouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetRouterPolicyInternetServiceCustomArrayOutput) ToGetRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetRouterPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetRouterPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicyInternetServiceCustom {
		return vs[0].([]GetRouterPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetRouterPolicyInternetServiceCustomOutput)
}

type GetRouterPolicyInternetServiceId struct {
	// Destination Internet Service ID.
	Id int `pulumi:"id"`
}

// GetRouterPolicyInternetServiceIdInput is an input type that accepts GetRouterPolicyInternetServiceIdArgs and GetRouterPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetRouterPolicyInternetServiceIdInput` via:
//
//	GetRouterPolicyInternetServiceIdArgs{...}
type GetRouterPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetRouterPolicyInternetServiceIdOutput() GetRouterPolicyInternetServiceIdOutput
	ToGetRouterPolicyInternetServiceIdOutputWithContext(context.Context) GetRouterPolicyInternetServiceIdOutput
}

type GetRouterPolicyInternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetRouterPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInternetServiceId)(nil)).Elem()
}

func (i GetRouterPolicyInternetServiceIdArgs) ToGetRouterPolicyInternetServiceIdOutput() GetRouterPolicyInternetServiceIdOutput {
	return i.ToGetRouterPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetRouterPolicyInternetServiceIdArgs) ToGetRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInternetServiceIdOutput)
}

// GetRouterPolicyInternetServiceIdArrayInput is an input type that accepts GetRouterPolicyInternetServiceIdArray and GetRouterPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicyInternetServiceIdArrayInput` via:
//
//	GetRouterPolicyInternetServiceIdArray{ GetRouterPolicyInternetServiceIdArgs{...} }
type GetRouterPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetRouterPolicyInternetServiceIdArrayOutput() GetRouterPolicyInternetServiceIdArrayOutput
	ToGetRouterPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetRouterPolicyInternetServiceIdArrayOutput
}

type GetRouterPolicyInternetServiceIdArray []GetRouterPolicyInternetServiceIdInput

func (GetRouterPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInternetServiceId)(nil)).Elem()
}

func (i GetRouterPolicyInternetServiceIdArray) ToGetRouterPolicyInternetServiceIdArrayOutput() GetRouterPolicyInternetServiceIdArrayOutput {
	return i.ToGetRouterPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicyInternetServiceIdArray) ToGetRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicyInternetServiceIdArrayOutput)
}

type GetRouterPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicyInternetServiceId)(nil)).Elem()
}

func (o GetRouterPolicyInternetServiceIdOutput) ToGetRouterPolicyInternetServiceIdOutput() GetRouterPolicyInternetServiceIdOutput {
	return o
}

func (o GetRouterPolicyInternetServiceIdOutput) ToGetRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o GetRouterPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetRouterPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicyInternetServiceId)(nil)).Elem()
}

func (o GetRouterPolicyInternetServiceIdArrayOutput) ToGetRouterPolicyInternetServiceIdArrayOutput() GetRouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetRouterPolicyInternetServiceIdArrayOutput) ToGetRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetRouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetRouterPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetRouterPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicyInternetServiceId {
		return vs[0].([]GetRouterPolicyInternetServiceId)[vs[1].(int)]
	}).(GetRouterPolicyInternetServiceIdOutput)
}

type GetRouterPolicySrc struct {
	// IP and mask.
	Subnet string `pulumi:"subnet"`
}

// GetRouterPolicySrcInput is an input type that accepts GetRouterPolicySrcArgs and GetRouterPolicySrcOutput values.
// You can construct a concrete instance of `GetRouterPolicySrcInput` via:
//
//	GetRouterPolicySrcArgs{...}
type GetRouterPolicySrcInput interface {
	pulumi.Input

	ToGetRouterPolicySrcOutput() GetRouterPolicySrcOutput
	ToGetRouterPolicySrcOutputWithContext(context.Context) GetRouterPolicySrcOutput
}

type GetRouterPolicySrcArgs struct {
	// IP and mask.
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetRouterPolicySrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicySrc)(nil)).Elem()
}

func (i GetRouterPolicySrcArgs) ToGetRouterPolicySrcOutput() GetRouterPolicySrcOutput {
	return i.ToGetRouterPolicySrcOutputWithContext(context.Background())
}

func (i GetRouterPolicySrcArgs) ToGetRouterPolicySrcOutputWithContext(ctx context.Context) GetRouterPolicySrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicySrcOutput)
}

// GetRouterPolicySrcArrayInput is an input type that accepts GetRouterPolicySrcArray and GetRouterPolicySrcArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicySrcArrayInput` via:
//
//	GetRouterPolicySrcArray{ GetRouterPolicySrcArgs{...} }
type GetRouterPolicySrcArrayInput interface {
	pulumi.Input

	ToGetRouterPolicySrcArrayOutput() GetRouterPolicySrcArrayOutput
	ToGetRouterPolicySrcArrayOutputWithContext(context.Context) GetRouterPolicySrcArrayOutput
}

type GetRouterPolicySrcArray []GetRouterPolicySrcInput

func (GetRouterPolicySrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicySrc)(nil)).Elem()
}

func (i GetRouterPolicySrcArray) ToGetRouterPolicySrcArrayOutput() GetRouterPolicySrcArrayOutput {
	return i.ToGetRouterPolicySrcArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicySrcArray) ToGetRouterPolicySrcArrayOutputWithContext(ctx context.Context) GetRouterPolicySrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicySrcArrayOutput)
}

type GetRouterPolicySrcOutput struct{ *pulumi.OutputState }

func (GetRouterPolicySrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicySrc)(nil)).Elem()
}

func (o GetRouterPolicySrcOutput) ToGetRouterPolicySrcOutput() GetRouterPolicySrcOutput {
	return o
}

func (o GetRouterPolicySrcOutput) ToGetRouterPolicySrcOutputWithContext(ctx context.Context) GetRouterPolicySrcOutput {
	return o
}

// IP and mask.
func (o GetRouterPolicySrcOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicySrc) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetRouterPolicySrcArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicySrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicySrc)(nil)).Elem()
}

func (o GetRouterPolicySrcArrayOutput) ToGetRouterPolicySrcArrayOutput() GetRouterPolicySrcArrayOutput {
	return o
}

func (o GetRouterPolicySrcArrayOutput) ToGetRouterPolicySrcArrayOutputWithContext(ctx context.Context) GetRouterPolicySrcArrayOutput {
	return o
}

func (o GetRouterPolicySrcArrayOutput) Index(i pulumi.IntInput) GetRouterPolicySrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicySrc {
		return vs[0].([]GetRouterPolicySrc)[vs[1].(int)]
	}).(GetRouterPolicySrcOutput)
}

type GetRouterPolicySrcaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetRouterPolicySrcaddrInput is an input type that accepts GetRouterPolicySrcaddrArgs and GetRouterPolicySrcaddrOutput values.
// You can construct a concrete instance of `GetRouterPolicySrcaddrInput` via:
//
//	GetRouterPolicySrcaddrArgs{...}
type GetRouterPolicySrcaddrInput interface {
	pulumi.Input

	ToGetRouterPolicySrcaddrOutput() GetRouterPolicySrcaddrOutput
	ToGetRouterPolicySrcaddrOutputWithContext(context.Context) GetRouterPolicySrcaddrOutput
}

type GetRouterPolicySrcaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicySrcaddr)(nil)).Elem()
}

func (i GetRouterPolicySrcaddrArgs) ToGetRouterPolicySrcaddrOutput() GetRouterPolicySrcaddrOutput {
	return i.ToGetRouterPolicySrcaddrOutputWithContext(context.Background())
}

func (i GetRouterPolicySrcaddrArgs) ToGetRouterPolicySrcaddrOutputWithContext(ctx context.Context) GetRouterPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicySrcaddrOutput)
}

// GetRouterPolicySrcaddrArrayInput is an input type that accepts GetRouterPolicySrcaddrArray and GetRouterPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetRouterPolicySrcaddrArrayInput` via:
//
//	GetRouterPolicySrcaddrArray{ GetRouterPolicySrcaddrArgs{...} }
type GetRouterPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetRouterPolicySrcaddrArrayOutput() GetRouterPolicySrcaddrArrayOutput
	ToGetRouterPolicySrcaddrArrayOutputWithContext(context.Context) GetRouterPolicySrcaddrArrayOutput
}

type GetRouterPolicySrcaddrArray []GetRouterPolicySrcaddrInput

func (GetRouterPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicySrcaddr)(nil)).Elem()
}

func (i GetRouterPolicySrcaddrArray) ToGetRouterPolicySrcaddrArrayOutput() GetRouterPolicySrcaddrArrayOutput {
	return i.ToGetRouterPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetRouterPolicySrcaddrArray) ToGetRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPolicySrcaddrArrayOutput)
}

type GetRouterPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetRouterPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPolicySrcaddr)(nil)).Elem()
}

func (o GetRouterPolicySrcaddrOutput) ToGetRouterPolicySrcaddrOutput() GetRouterPolicySrcaddrOutput {
	return o
}

func (o GetRouterPolicySrcaddrOutput) ToGetRouterPolicySrcaddrOutputWithContext(ctx context.Context) GetRouterPolicySrcaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetRouterPolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPolicySrcaddr)(nil)).Elem()
}

func (o GetRouterPolicySrcaddrArrayOutput) ToGetRouterPolicySrcaddrArrayOutput() GetRouterPolicySrcaddrArrayOutput {
	return o
}

func (o GetRouterPolicySrcaddrArrayOutput) ToGetRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetRouterPolicySrcaddrArrayOutput {
	return o
}

func (o GetRouterPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetRouterPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPolicySrcaddr {
		return vs[0].([]GetRouterPolicySrcaddr)[vs[1].(int)]
	}).(GetRouterPolicySrcaddrOutput)
}

type GetRouterPrefixlist6Rule struct {
	// Permit or deny packets that match this rule.
	Action string `pulumi:"action"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge int `pulumi:"ge"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le int `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterPrefixlist6RuleInput is an input type that accepts GetRouterPrefixlist6RuleArgs and GetRouterPrefixlist6RuleOutput values.
// You can construct a concrete instance of `GetRouterPrefixlist6RuleInput` via:
//
//	GetRouterPrefixlist6RuleArgs{...}
type GetRouterPrefixlist6RuleInput interface {
	pulumi.Input

	ToGetRouterPrefixlist6RuleOutput() GetRouterPrefixlist6RuleOutput
	ToGetRouterPrefixlist6RuleOutputWithContext(context.Context) GetRouterPrefixlist6RuleOutput
}

type GetRouterPrefixlist6RuleArgs struct {
	// Permit or deny packets that match this rule.
	Action pulumi.StringInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge pulumi.IntInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le pulumi.IntInput `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterPrefixlist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPrefixlist6Rule)(nil)).Elem()
}

func (i GetRouterPrefixlist6RuleArgs) ToGetRouterPrefixlist6RuleOutput() GetRouterPrefixlist6RuleOutput {
	return i.ToGetRouterPrefixlist6RuleOutputWithContext(context.Background())
}

func (i GetRouterPrefixlist6RuleArgs) ToGetRouterPrefixlist6RuleOutputWithContext(ctx context.Context) GetRouterPrefixlist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPrefixlist6RuleOutput)
}

// GetRouterPrefixlist6RuleArrayInput is an input type that accepts GetRouterPrefixlist6RuleArray and GetRouterPrefixlist6RuleArrayOutput values.
// You can construct a concrete instance of `GetRouterPrefixlist6RuleArrayInput` via:
//
//	GetRouterPrefixlist6RuleArray{ GetRouterPrefixlist6RuleArgs{...} }
type GetRouterPrefixlist6RuleArrayInput interface {
	pulumi.Input

	ToGetRouterPrefixlist6RuleArrayOutput() GetRouterPrefixlist6RuleArrayOutput
	ToGetRouterPrefixlist6RuleArrayOutputWithContext(context.Context) GetRouterPrefixlist6RuleArrayOutput
}

type GetRouterPrefixlist6RuleArray []GetRouterPrefixlist6RuleInput

func (GetRouterPrefixlist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPrefixlist6Rule)(nil)).Elem()
}

func (i GetRouterPrefixlist6RuleArray) ToGetRouterPrefixlist6RuleArrayOutput() GetRouterPrefixlist6RuleArrayOutput {
	return i.ToGetRouterPrefixlist6RuleArrayOutputWithContext(context.Background())
}

func (i GetRouterPrefixlist6RuleArray) ToGetRouterPrefixlist6RuleArrayOutputWithContext(ctx context.Context) GetRouterPrefixlist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPrefixlist6RuleArrayOutput)
}

type GetRouterPrefixlist6RuleOutput struct{ *pulumi.OutputState }

func (GetRouterPrefixlist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPrefixlist6Rule)(nil)).Elem()
}

func (o GetRouterPrefixlist6RuleOutput) ToGetRouterPrefixlist6RuleOutput() GetRouterPrefixlist6RuleOutput {
	return o
}

func (o GetRouterPrefixlist6RuleOutput) ToGetRouterPrefixlist6RuleOutputWithContext(ctx context.Context) GetRouterPrefixlist6RuleOutput {
	return o
}

// Permit or deny packets that match this rule.
func (o GetRouterPrefixlist6RuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) string { return v.Action }).(pulumi.StringOutput)
}

// Flags.
func (o GetRouterPrefixlist6RuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) int { return v.Flags }).(pulumi.IntOutput)
}

// Minimum prefix length to be matched (0 - 128).
func (o GetRouterPrefixlist6RuleOutput) Ge() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) int { return v.Ge }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetRouterPrefixlist6RuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum prefix length to be matched (0 - 128).
func (o GetRouterPrefixlist6RuleOutput) Le() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) int { return v.Le }).(pulumi.IntOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetRouterPrefixlist6RuleOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPrefixlist6Rule) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterPrefixlist6RuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPrefixlist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPrefixlist6Rule)(nil)).Elem()
}

func (o GetRouterPrefixlist6RuleArrayOutput) ToGetRouterPrefixlist6RuleArrayOutput() GetRouterPrefixlist6RuleArrayOutput {
	return o
}

func (o GetRouterPrefixlist6RuleArrayOutput) ToGetRouterPrefixlist6RuleArrayOutputWithContext(ctx context.Context) GetRouterPrefixlist6RuleArrayOutput {
	return o
}

func (o GetRouterPrefixlist6RuleArrayOutput) Index(i pulumi.IntInput) GetRouterPrefixlist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPrefixlist6Rule {
		return vs[0].([]GetRouterPrefixlist6Rule)[vs[1].(int)]
	}).(GetRouterPrefixlist6RuleOutput)
}

type GetRouterPrefixlistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge int `pulumi:"ge"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le int `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix string `pulumi:"prefix"`
}

// GetRouterPrefixlistRuleInput is an input type that accepts GetRouterPrefixlistRuleArgs and GetRouterPrefixlistRuleOutput values.
// You can construct a concrete instance of `GetRouterPrefixlistRuleInput` via:
//
//	GetRouterPrefixlistRuleArgs{...}
type GetRouterPrefixlistRuleInput interface {
	pulumi.Input

	ToGetRouterPrefixlistRuleOutput() GetRouterPrefixlistRuleOutput
	ToGetRouterPrefixlistRuleOutputWithContext(context.Context) GetRouterPrefixlistRuleOutput
}

type GetRouterPrefixlistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge pulumi.IntInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le pulumi.IntInput `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterPrefixlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPrefixlistRule)(nil)).Elem()
}

func (i GetRouterPrefixlistRuleArgs) ToGetRouterPrefixlistRuleOutput() GetRouterPrefixlistRuleOutput {
	return i.ToGetRouterPrefixlistRuleOutputWithContext(context.Background())
}

func (i GetRouterPrefixlistRuleArgs) ToGetRouterPrefixlistRuleOutputWithContext(ctx context.Context) GetRouterPrefixlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPrefixlistRuleOutput)
}

// GetRouterPrefixlistRuleArrayInput is an input type that accepts GetRouterPrefixlistRuleArray and GetRouterPrefixlistRuleArrayOutput values.
// You can construct a concrete instance of `GetRouterPrefixlistRuleArrayInput` via:
//
//	GetRouterPrefixlistRuleArray{ GetRouterPrefixlistRuleArgs{...} }
type GetRouterPrefixlistRuleArrayInput interface {
	pulumi.Input

	ToGetRouterPrefixlistRuleArrayOutput() GetRouterPrefixlistRuleArrayOutput
	ToGetRouterPrefixlistRuleArrayOutputWithContext(context.Context) GetRouterPrefixlistRuleArrayOutput
}

type GetRouterPrefixlistRuleArray []GetRouterPrefixlistRuleInput

func (GetRouterPrefixlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPrefixlistRule)(nil)).Elem()
}

func (i GetRouterPrefixlistRuleArray) ToGetRouterPrefixlistRuleArrayOutput() GetRouterPrefixlistRuleArrayOutput {
	return i.ToGetRouterPrefixlistRuleArrayOutputWithContext(context.Background())
}

func (i GetRouterPrefixlistRuleArray) ToGetRouterPrefixlistRuleArrayOutputWithContext(ctx context.Context) GetRouterPrefixlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterPrefixlistRuleArrayOutput)
}

type GetRouterPrefixlistRuleOutput struct{ *pulumi.OutputState }

func (GetRouterPrefixlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterPrefixlistRule)(nil)).Elem()
}

func (o GetRouterPrefixlistRuleOutput) ToGetRouterPrefixlistRuleOutput() GetRouterPrefixlistRuleOutput {
	return o
}

func (o GetRouterPrefixlistRuleOutput) ToGetRouterPrefixlistRuleOutputWithContext(ctx context.Context) GetRouterPrefixlistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetRouterPrefixlistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) string { return v.Action }).(pulumi.StringOutput)
}

// Flags.
func (o GetRouterPrefixlistRuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) int { return v.Flags }).(pulumi.IntOutput)
}

// Minimum prefix length to be matched (0 - 32).
func (o GetRouterPrefixlistRuleOutput) Ge() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) int { return v.Ge }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetRouterPrefixlistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum prefix length to be matched (0 - 32).
func (o GetRouterPrefixlistRuleOutput) Le() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) int { return v.Le }).(pulumi.IntOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetRouterPrefixlistRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterPrefixlistRule) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterPrefixlistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterPrefixlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterPrefixlistRule)(nil)).Elem()
}

func (o GetRouterPrefixlistRuleArrayOutput) ToGetRouterPrefixlistRuleArrayOutput() GetRouterPrefixlistRuleArrayOutput {
	return o
}

func (o GetRouterPrefixlistRuleArrayOutput) ToGetRouterPrefixlistRuleArrayOutputWithContext(ctx context.Context) GetRouterPrefixlistRuleArrayOutput {
	return o
}

func (o GetRouterPrefixlistRuleArrayOutput) Index(i pulumi.IntInput) GetRouterPrefixlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterPrefixlistRule {
		return vs[0].([]GetRouterPrefixlistRule)[vs[1].(int)]
	}).(GetRouterPrefixlistRuleOutput)
}

type GetRouterRipDistance struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance int `pulumi:"distance"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterRipDistanceInput is an input type that accepts GetRouterRipDistanceArgs and GetRouterRipDistanceOutput values.
// You can construct a concrete instance of `GetRouterRipDistanceInput` via:
//
//	GetRouterRipDistanceArgs{...}
type GetRouterRipDistanceInput interface {
	pulumi.Input

	ToGetRouterRipDistanceOutput() GetRouterRipDistanceOutput
	ToGetRouterRipDistanceOutputWithContext(context.Context) GetRouterRipDistanceOutput
}

type GetRouterRipDistanceArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterRipDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipDistance)(nil)).Elem()
}

func (i GetRouterRipDistanceArgs) ToGetRouterRipDistanceOutput() GetRouterRipDistanceOutput {
	return i.ToGetRouterRipDistanceOutputWithContext(context.Background())
}

func (i GetRouterRipDistanceArgs) ToGetRouterRipDistanceOutputWithContext(ctx context.Context) GetRouterRipDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipDistanceOutput)
}

// GetRouterRipDistanceArrayInput is an input type that accepts GetRouterRipDistanceArray and GetRouterRipDistanceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipDistanceArrayInput` via:
//
//	GetRouterRipDistanceArray{ GetRouterRipDistanceArgs{...} }
type GetRouterRipDistanceArrayInput interface {
	pulumi.Input

	ToGetRouterRipDistanceArrayOutput() GetRouterRipDistanceArrayOutput
	ToGetRouterRipDistanceArrayOutputWithContext(context.Context) GetRouterRipDistanceArrayOutput
}

type GetRouterRipDistanceArray []GetRouterRipDistanceInput

func (GetRouterRipDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipDistance)(nil)).Elem()
}

func (i GetRouterRipDistanceArray) ToGetRouterRipDistanceArrayOutput() GetRouterRipDistanceArrayOutput {
	return i.ToGetRouterRipDistanceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipDistanceArray) ToGetRouterRipDistanceArrayOutputWithContext(ctx context.Context) GetRouterRipDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipDistanceArrayOutput)
}

type GetRouterRipDistanceOutput struct{ *pulumi.OutputState }

func (GetRouterRipDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipDistance)(nil)).Elem()
}

func (o GetRouterRipDistanceOutput) ToGetRouterRipDistanceOutput() GetRouterRipDistanceOutput {
	return o
}

func (o GetRouterRipDistanceOutput) ToGetRouterRipDistanceOutputWithContext(ctx context.Context) GetRouterRipDistanceOutput {
	return o
}

// Access list name.
func (o GetRouterRipDistanceOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistance) string { return v.AccessList }).(pulumi.StringOutput)
}

// Distance (1 - 255).
func (o GetRouterRipDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// Offset-list ID.
func (o GetRouterRipDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetRouterRipDistanceOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistance) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterRipDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipDistance)(nil)).Elem()
}

func (o GetRouterRipDistanceArrayOutput) ToGetRouterRipDistanceArrayOutput() GetRouterRipDistanceArrayOutput {
	return o
}

func (o GetRouterRipDistanceArrayOutput) ToGetRouterRipDistanceArrayOutputWithContext(ctx context.Context) GetRouterRipDistanceArrayOutput {
	return o
}

func (o GetRouterRipDistanceArrayOutput) Index(i pulumi.IntInput) GetRouterRipDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipDistance {
		return vs[0].([]GetRouterRipDistance)[vs[1].(int)]
	}).(GetRouterRipDistanceOutput)
}

type GetRouterRipDistributeList struct {
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname string `pulumi:"listname"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipDistributeListInput is an input type that accepts GetRouterRipDistributeListArgs and GetRouterRipDistributeListOutput values.
// You can construct a concrete instance of `GetRouterRipDistributeListInput` via:
//
//	GetRouterRipDistributeListArgs{...}
type GetRouterRipDistributeListInput interface {
	pulumi.Input

	ToGetRouterRipDistributeListOutput() GetRouterRipDistributeListOutput
	ToGetRouterRipDistributeListOutputWithContext(context.Context) GetRouterRipDistributeListOutput
}

type GetRouterRipDistributeListArgs struct {
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringInput `pulumi:"listname"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipDistributeList)(nil)).Elem()
}

func (i GetRouterRipDistributeListArgs) ToGetRouterRipDistributeListOutput() GetRouterRipDistributeListOutput {
	return i.ToGetRouterRipDistributeListOutputWithContext(context.Background())
}

func (i GetRouterRipDistributeListArgs) ToGetRouterRipDistributeListOutputWithContext(ctx context.Context) GetRouterRipDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipDistributeListOutput)
}

// GetRouterRipDistributeListArrayInput is an input type that accepts GetRouterRipDistributeListArray and GetRouterRipDistributeListArrayOutput values.
// You can construct a concrete instance of `GetRouterRipDistributeListArrayInput` via:
//
//	GetRouterRipDistributeListArray{ GetRouterRipDistributeListArgs{...} }
type GetRouterRipDistributeListArrayInput interface {
	pulumi.Input

	ToGetRouterRipDistributeListArrayOutput() GetRouterRipDistributeListArrayOutput
	ToGetRouterRipDistributeListArrayOutputWithContext(context.Context) GetRouterRipDistributeListArrayOutput
}

type GetRouterRipDistributeListArray []GetRouterRipDistributeListInput

func (GetRouterRipDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipDistributeList)(nil)).Elem()
}

func (i GetRouterRipDistributeListArray) ToGetRouterRipDistributeListArrayOutput() GetRouterRipDistributeListArrayOutput {
	return i.ToGetRouterRipDistributeListArrayOutputWithContext(context.Background())
}

func (i GetRouterRipDistributeListArray) ToGetRouterRipDistributeListArrayOutputWithContext(ctx context.Context) GetRouterRipDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipDistributeListArrayOutput)
}

type GetRouterRipDistributeListOutput struct{ *pulumi.OutputState }

func (GetRouterRipDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipDistributeList)(nil)).Elem()
}

func (o GetRouterRipDistributeListOutput) ToGetRouterRipDistributeListOutput() GetRouterRipDistributeListOutput {
	return o
}

func (o GetRouterRipDistributeListOutput) ToGetRouterRipDistributeListOutputWithContext(ctx context.Context) GetRouterRipDistributeListOutput {
	return o
}

// Offset list direction.
func (o GetRouterRipDistributeListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistributeList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRouterRipDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipDistributeListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistributeList) string { return v.Interface }).(pulumi.StringOutput)
}

// Distribute access/prefix list name.
func (o GetRouterRipDistributeListOutput) Listname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistributeList) string { return v.Listname }).(pulumi.StringOutput)
}

// status
func (o GetRouterRipDistributeListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipDistributeList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipDistributeList)(nil)).Elem()
}

func (o GetRouterRipDistributeListArrayOutput) ToGetRouterRipDistributeListArrayOutput() GetRouterRipDistributeListArrayOutput {
	return o
}

func (o GetRouterRipDistributeListArrayOutput) ToGetRouterRipDistributeListArrayOutputWithContext(ctx context.Context) GetRouterRipDistributeListArrayOutput {
	return o
}

func (o GetRouterRipDistributeListArrayOutput) Index(i pulumi.IntInput) GetRouterRipDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipDistributeList {
		return vs[0].([]GetRouterRipDistributeList)[vs[1].(int)]
	}).(GetRouterRipDistributeListOutput)
}

type GetRouterRipInterface struct {
	// Authentication key-chain name.
	AuthKeychain string `pulumi:"authKeychain"`
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// Authentication string/password.
	AuthString string `pulumi:"authString"`
	// flags
	Flags int `pulumi:"flags"`
	// Interface name.
	Name string `pulumi:"name"`
	// Receive version.
	ReceiveVersion string `pulumi:"receiveVersion"`
	// Send version.
	SendVersion string `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets.
	SendVersion2Broadcast string `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon.
	SplitHorizon string `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus string `pulumi:"splitHorizonStatus"`
}

// GetRouterRipInterfaceInput is an input type that accepts GetRouterRipInterfaceArgs and GetRouterRipInterfaceOutput values.
// You can construct a concrete instance of `GetRouterRipInterfaceInput` via:
//
//	GetRouterRipInterfaceArgs{...}
type GetRouterRipInterfaceInput interface {
	pulumi.Input

	ToGetRouterRipInterfaceOutput() GetRouterRipInterfaceOutput
	ToGetRouterRipInterfaceOutputWithContext(context.Context) GetRouterRipInterfaceOutput
}

type GetRouterRipInterfaceArgs struct {
	// Authentication key-chain name.
	AuthKeychain pulumi.StringInput `pulumi:"authKeychain"`
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// Authentication string/password.
	AuthString pulumi.StringInput `pulumi:"authString"`
	// flags
	Flags pulumi.IntInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Receive version.
	ReceiveVersion pulumi.StringInput `pulumi:"receiveVersion"`
	// Send version.
	SendVersion pulumi.StringInput `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets.
	SendVersion2Broadcast pulumi.StringInput `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon.
	SplitHorizon pulumi.StringInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus pulumi.StringInput `pulumi:"splitHorizonStatus"`
}

func (GetRouterRipInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipInterface)(nil)).Elem()
}

func (i GetRouterRipInterfaceArgs) ToGetRouterRipInterfaceOutput() GetRouterRipInterfaceOutput {
	return i.ToGetRouterRipInterfaceOutputWithContext(context.Background())
}

func (i GetRouterRipInterfaceArgs) ToGetRouterRipInterfaceOutputWithContext(ctx context.Context) GetRouterRipInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipInterfaceOutput)
}

// GetRouterRipInterfaceArrayInput is an input type that accepts GetRouterRipInterfaceArray and GetRouterRipInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipInterfaceArrayInput` via:
//
//	GetRouterRipInterfaceArray{ GetRouterRipInterfaceArgs{...} }
type GetRouterRipInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterRipInterfaceArrayOutput() GetRouterRipInterfaceArrayOutput
	ToGetRouterRipInterfaceArrayOutputWithContext(context.Context) GetRouterRipInterfaceArrayOutput
}

type GetRouterRipInterfaceArray []GetRouterRipInterfaceInput

func (GetRouterRipInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipInterface)(nil)).Elem()
}

func (i GetRouterRipInterfaceArray) ToGetRouterRipInterfaceArrayOutput() GetRouterRipInterfaceArrayOutput {
	return i.ToGetRouterRipInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipInterfaceArray) ToGetRouterRipInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipInterfaceArrayOutput)
}

type GetRouterRipInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterRipInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipInterface)(nil)).Elem()
}

func (o GetRouterRipInterfaceOutput) ToGetRouterRipInterfaceOutput() GetRouterRipInterfaceOutput {
	return o
}

func (o GetRouterRipInterfaceOutput) ToGetRouterRipInterfaceOutputWithContext(ctx context.Context) GetRouterRipInterfaceOutput {
	return o
}

// Authentication key-chain name.
func (o GetRouterRipInterfaceOutput) AuthKeychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.AuthKeychain }).(pulumi.StringOutput)
}

// Authentication mode.
func (o GetRouterRipInterfaceOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Authentication string/password.
func (o GetRouterRipInterfaceOutput) AuthString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.AuthString }).(pulumi.StringOutput)
}

// flags
func (o GetRouterRipInterfaceOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipInterface) int { return v.Flags }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Receive version.
func (o GetRouterRipInterfaceOutput) ReceiveVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.ReceiveVersion }).(pulumi.StringOutput)
}

// Send version.
func (o GetRouterRipInterfaceOutput) SendVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.SendVersion }).(pulumi.StringOutput)
}

// Enable/disable broadcast version 1 compatible packets.
func (o GetRouterRipInterfaceOutput) SendVersion2Broadcast() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.SendVersion2Broadcast }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRouterRipInterfaceOutput) SplitHorizon() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.SplitHorizon }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRouterRipInterfaceOutput) SplitHorizonStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipInterface) string { return v.SplitHorizonStatus }).(pulumi.StringOutput)
}

type GetRouterRipInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipInterface)(nil)).Elem()
}

func (o GetRouterRipInterfaceArrayOutput) ToGetRouterRipInterfaceArrayOutput() GetRouterRipInterfaceArrayOutput {
	return o
}

func (o GetRouterRipInterfaceArrayOutput) ToGetRouterRipInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipInterfaceArrayOutput {
	return o
}

func (o GetRouterRipInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterRipInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipInterface {
		return vs[0].([]GetRouterRipInterface)[vs[1].(int)]
	}).(GetRouterRipInterfaceOutput)
}

type GetRouterRipNeighbor struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// IP address.
	Ip string `pulumi:"ip"`
}

// GetRouterRipNeighborInput is an input type that accepts GetRouterRipNeighborArgs and GetRouterRipNeighborOutput values.
// You can construct a concrete instance of `GetRouterRipNeighborInput` via:
//
//	GetRouterRipNeighborArgs{...}
type GetRouterRipNeighborInput interface {
	pulumi.Input

	ToGetRouterRipNeighborOutput() GetRouterRipNeighborOutput
	ToGetRouterRipNeighborOutputWithContext(context.Context) GetRouterRipNeighborOutput
}

type GetRouterRipNeighborArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetRouterRipNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipNeighbor)(nil)).Elem()
}

func (i GetRouterRipNeighborArgs) ToGetRouterRipNeighborOutput() GetRouterRipNeighborOutput {
	return i.ToGetRouterRipNeighborOutputWithContext(context.Background())
}

func (i GetRouterRipNeighborArgs) ToGetRouterRipNeighborOutputWithContext(ctx context.Context) GetRouterRipNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipNeighborOutput)
}

// GetRouterRipNeighborArrayInput is an input type that accepts GetRouterRipNeighborArray and GetRouterRipNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterRipNeighborArrayInput` via:
//
//	GetRouterRipNeighborArray{ GetRouterRipNeighborArgs{...} }
type GetRouterRipNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterRipNeighborArrayOutput() GetRouterRipNeighborArrayOutput
	ToGetRouterRipNeighborArrayOutputWithContext(context.Context) GetRouterRipNeighborArrayOutput
}

type GetRouterRipNeighborArray []GetRouterRipNeighborInput

func (GetRouterRipNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipNeighbor)(nil)).Elem()
}

func (i GetRouterRipNeighborArray) ToGetRouterRipNeighborArrayOutput() GetRouterRipNeighborArrayOutput {
	return i.ToGetRouterRipNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterRipNeighborArray) ToGetRouterRipNeighborArrayOutputWithContext(ctx context.Context) GetRouterRipNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipNeighborArrayOutput)
}

type GetRouterRipNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterRipNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipNeighbor)(nil)).Elem()
}

func (o GetRouterRipNeighborOutput) ToGetRouterRipNeighborOutput() GetRouterRipNeighborOutput {
	return o
}

func (o GetRouterRipNeighborOutput) ToGetRouterRipNeighborOutputWithContext(ctx context.Context) GetRouterRipNeighborOutput {
	return o
}

// Offset-list ID.
func (o GetRouterRipNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// IP address.
func (o GetRouterRipNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

type GetRouterRipNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipNeighbor)(nil)).Elem()
}

func (o GetRouterRipNeighborArrayOutput) ToGetRouterRipNeighborArrayOutput() GetRouterRipNeighborArrayOutput {
	return o
}

func (o GetRouterRipNeighborArrayOutput) ToGetRouterRipNeighborArrayOutputWithContext(ctx context.Context) GetRouterRipNeighborArrayOutput {
	return o
}

func (o GetRouterRipNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterRipNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipNeighbor {
		return vs[0].([]GetRouterRipNeighbor)[vs[1].(int)]
	}).(GetRouterRipNeighborOutput)
}

type GetRouterRipNetwork struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterRipNetworkInput is an input type that accepts GetRouterRipNetworkArgs and GetRouterRipNetworkOutput values.
// You can construct a concrete instance of `GetRouterRipNetworkInput` via:
//
//	GetRouterRipNetworkArgs{...}
type GetRouterRipNetworkInput interface {
	pulumi.Input

	ToGetRouterRipNetworkOutput() GetRouterRipNetworkOutput
	ToGetRouterRipNetworkOutputWithContext(context.Context) GetRouterRipNetworkOutput
}

type GetRouterRipNetworkArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterRipNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipNetwork)(nil)).Elem()
}

func (i GetRouterRipNetworkArgs) ToGetRouterRipNetworkOutput() GetRouterRipNetworkOutput {
	return i.ToGetRouterRipNetworkOutputWithContext(context.Background())
}

func (i GetRouterRipNetworkArgs) ToGetRouterRipNetworkOutputWithContext(ctx context.Context) GetRouterRipNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipNetworkOutput)
}

// GetRouterRipNetworkArrayInput is an input type that accepts GetRouterRipNetworkArray and GetRouterRipNetworkArrayOutput values.
// You can construct a concrete instance of `GetRouterRipNetworkArrayInput` via:
//
//	GetRouterRipNetworkArray{ GetRouterRipNetworkArgs{...} }
type GetRouterRipNetworkArrayInput interface {
	pulumi.Input

	ToGetRouterRipNetworkArrayOutput() GetRouterRipNetworkArrayOutput
	ToGetRouterRipNetworkArrayOutputWithContext(context.Context) GetRouterRipNetworkArrayOutput
}

type GetRouterRipNetworkArray []GetRouterRipNetworkInput

func (GetRouterRipNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipNetwork)(nil)).Elem()
}

func (i GetRouterRipNetworkArray) ToGetRouterRipNetworkArrayOutput() GetRouterRipNetworkArrayOutput {
	return i.ToGetRouterRipNetworkArrayOutputWithContext(context.Background())
}

func (i GetRouterRipNetworkArray) ToGetRouterRipNetworkArrayOutputWithContext(ctx context.Context) GetRouterRipNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipNetworkArrayOutput)
}

type GetRouterRipNetworkOutput struct{ *pulumi.OutputState }

func (GetRouterRipNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipNetwork)(nil)).Elem()
}

func (o GetRouterRipNetworkOutput) ToGetRouterRipNetworkOutput() GetRouterRipNetworkOutput {
	return o
}

func (o GetRouterRipNetworkOutput) ToGetRouterRipNetworkOutputWithContext(ctx context.Context) GetRouterRipNetworkOutput {
	return o
}

// Offset-list ID.
func (o GetRouterRipNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetRouterRipNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterRipNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipNetwork)(nil)).Elem()
}

func (o GetRouterRipNetworkArrayOutput) ToGetRouterRipNetworkArrayOutput() GetRouterRipNetworkArrayOutput {
	return o
}

func (o GetRouterRipNetworkArrayOutput) ToGetRouterRipNetworkArrayOutputWithContext(ctx context.Context) GetRouterRipNetworkArrayOutput {
	return o
}

func (o GetRouterRipNetworkArrayOutput) Index(i pulumi.IntInput) GetRouterRipNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipNetwork {
		return vs[0].([]GetRouterRipNetwork)[vs[1].(int)]
	}).(GetRouterRipNetworkOutput)
}

type GetRouterRipOffsetList struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// offset
	Offset int `pulumi:"offset"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipOffsetListInput is an input type that accepts GetRouterRipOffsetListArgs and GetRouterRipOffsetListOutput values.
// You can construct a concrete instance of `GetRouterRipOffsetListInput` via:
//
//	GetRouterRipOffsetListArgs{...}
type GetRouterRipOffsetListInput interface {
	pulumi.Input

	ToGetRouterRipOffsetListOutput() GetRouterRipOffsetListOutput
	ToGetRouterRipOffsetListOutputWithContext(context.Context) GetRouterRipOffsetListOutput
}

type GetRouterRipOffsetListArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntInput `pulumi:"offset"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipOffsetList)(nil)).Elem()
}

func (i GetRouterRipOffsetListArgs) ToGetRouterRipOffsetListOutput() GetRouterRipOffsetListOutput {
	return i.ToGetRouterRipOffsetListOutputWithContext(context.Background())
}

func (i GetRouterRipOffsetListArgs) ToGetRouterRipOffsetListOutputWithContext(ctx context.Context) GetRouterRipOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipOffsetListOutput)
}

// GetRouterRipOffsetListArrayInput is an input type that accepts GetRouterRipOffsetListArray and GetRouterRipOffsetListArrayOutput values.
// You can construct a concrete instance of `GetRouterRipOffsetListArrayInput` via:
//
//	GetRouterRipOffsetListArray{ GetRouterRipOffsetListArgs{...} }
type GetRouterRipOffsetListArrayInput interface {
	pulumi.Input

	ToGetRouterRipOffsetListArrayOutput() GetRouterRipOffsetListArrayOutput
	ToGetRouterRipOffsetListArrayOutputWithContext(context.Context) GetRouterRipOffsetListArrayOutput
}

type GetRouterRipOffsetListArray []GetRouterRipOffsetListInput

func (GetRouterRipOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipOffsetList)(nil)).Elem()
}

func (i GetRouterRipOffsetListArray) ToGetRouterRipOffsetListArrayOutput() GetRouterRipOffsetListArrayOutput {
	return i.ToGetRouterRipOffsetListArrayOutputWithContext(context.Background())
}

func (i GetRouterRipOffsetListArray) ToGetRouterRipOffsetListArrayOutputWithContext(ctx context.Context) GetRouterRipOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipOffsetListArrayOutput)
}

type GetRouterRipOffsetListOutput struct{ *pulumi.OutputState }

func (GetRouterRipOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipOffsetList)(nil)).Elem()
}

func (o GetRouterRipOffsetListOutput) ToGetRouterRipOffsetListOutput() GetRouterRipOffsetListOutput {
	return o
}

func (o GetRouterRipOffsetListOutput) ToGetRouterRipOffsetListOutputWithContext(ctx context.Context) GetRouterRipOffsetListOutput {
	return o
}

// Access list name.
func (o GetRouterRipOffsetListOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) string { return v.AccessList }).(pulumi.StringOutput)
}

// Offset list direction.
func (o GetRouterRipOffsetListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRouterRipOffsetListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipOffsetListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) string { return v.Interface }).(pulumi.StringOutput)
}

// offset
func (o GetRouterRipOffsetListOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) int { return v.Offset }).(pulumi.IntOutput)
}

// status
func (o GetRouterRipOffsetListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipOffsetList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipOffsetListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipOffsetList)(nil)).Elem()
}

func (o GetRouterRipOffsetListArrayOutput) ToGetRouterRipOffsetListArrayOutput() GetRouterRipOffsetListArrayOutput {
	return o
}

func (o GetRouterRipOffsetListArrayOutput) ToGetRouterRipOffsetListArrayOutputWithContext(ctx context.Context) GetRouterRipOffsetListArrayOutput {
	return o
}

func (o GetRouterRipOffsetListArrayOutput) Index(i pulumi.IntInput) GetRouterRipOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipOffsetList {
		return vs[0].([]GetRouterRipOffsetList)[vs[1].(int)]
	}).(GetRouterRipOffsetListOutput)
}

type GetRouterRipPassiveInterface struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetRouterRipPassiveInterfaceInput is an input type that accepts GetRouterRipPassiveInterfaceArgs and GetRouterRipPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRouterRipPassiveInterfaceInput` via:
//
//	GetRouterRipPassiveInterfaceArgs{...}
type GetRouterRipPassiveInterfaceInput interface {
	pulumi.Input

	ToGetRouterRipPassiveInterfaceOutput() GetRouterRipPassiveInterfaceOutput
	ToGetRouterRipPassiveInterfaceOutputWithContext(context.Context) GetRouterRipPassiveInterfaceOutput
}

type GetRouterRipPassiveInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterRipPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipPassiveInterface)(nil)).Elem()
}

func (i GetRouterRipPassiveInterfaceArgs) ToGetRouterRipPassiveInterfaceOutput() GetRouterRipPassiveInterfaceOutput {
	return i.ToGetRouterRipPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRouterRipPassiveInterfaceArgs) ToGetRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterRipPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipPassiveInterfaceOutput)
}

// GetRouterRipPassiveInterfaceArrayInput is an input type that accepts GetRouterRipPassiveInterfaceArray and GetRouterRipPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipPassiveInterfaceArrayInput` via:
//
//	GetRouterRipPassiveInterfaceArray{ GetRouterRipPassiveInterfaceArgs{...} }
type GetRouterRipPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterRipPassiveInterfaceArrayOutput() GetRouterRipPassiveInterfaceArrayOutput
	ToGetRouterRipPassiveInterfaceArrayOutputWithContext(context.Context) GetRouterRipPassiveInterfaceArrayOutput
}

type GetRouterRipPassiveInterfaceArray []GetRouterRipPassiveInterfaceInput

func (GetRouterRipPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipPassiveInterface)(nil)).Elem()
}

func (i GetRouterRipPassiveInterfaceArray) ToGetRouterRipPassiveInterfaceArrayOutput() GetRouterRipPassiveInterfaceArrayOutput {
	return i.ToGetRouterRipPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipPassiveInterfaceArray) ToGetRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipPassiveInterfaceArrayOutput)
}

type GetRouterRipPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterRipPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipPassiveInterface)(nil)).Elem()
}

func (o GetRouterRipPassiveInterfaceOutput) ToGetRouterRipPassiveInterfaceOutput() GetRouterRipPassiveInterfaceOutput {
	return o
}

func (o GetRouterRipPassiveInterfaceOutput) ToGetRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterRipPassiveInterfaceOutput {
	return o
}

// Interface name.
func (o GetRouterRipPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterRipPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipPassiveInterface)(nil)).Elem()
}

func (o GetRouterRipPassiveInterfaceArrayOutput) ToGetRouterRipPassiveInterfaceArrayOutput() GetRouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterRipPassiveInterfaceArrayOutput) ToGetRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterRipPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterRipPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipPassiveInterface {
		return vs[0].([]GetRouterRipPassiveInterface)[vs[1].(int)]
	}).(GetRouterRipPassiveInterfaceOutput)
}

type GetRouterRipRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipRedistributeInput is an input type that accepts GetRouterRipRedistributeArgs and GetRouterRipRedistributeOutput values.
// You can construct a concrete instance of `GetRouterRipRedistributeInput` via:
//
//	GetRouterRipRedistributeArgs{...}
type GetRouterRipRedistributeInput interface {
	pulumi.Input

	ToGetRouterRipRedistributeOutput() GetRouterRipRedistributeOutput
	ToGetRouterRipRedistributeOutputWithContext(context.Context) GetRouterRipRedistributeOutput
}

type GetRouterRipRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipRedistribute)(nil)).Elem()
}

func (i GetRouterRipRedistributeArgs) ToGetRouterRipRedistributeOutput() GetRouterRipRedistributeOutput {
	return i.ToGetRouterRipRedistributeOutputWithContext(context.Background())
}

func (i GetRouterRipRedistributeArgs) ToGetRouterRipRedistributeOutputWithContext(ctx context.Context) GetRouterRipRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipRedistributeOutput)
}

// GetRouterRipRedistributeArrayInput is an input type that accepts GetRouterRipRedistributeArray and GetRouterRipRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterRipRedistributeArrayInput` via:
//
//	GetRouterRipRedistributeArray{ GetRouterRipRedistributeArgs{...} }
type GetRouterRipRedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterRipRedistributeArrayOutput() GetRouterRipRedistributeArrayOutput
	ToGetRouterRipRedistributeArrayOutputWithContext(context.Context) GetRouterRipRedistributeArrayOutput
}

type GetRouterRipRedistributeArray []GetRouterRipRedistributeInput

func (GetRouterRipRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipRedistribute)(nil)).Elem()
}

func (i GetRouterRipRedistributeArray) ToGetRouterRipRedistributeArrayOutput() GetRouterRipRedistributeArrayOutput {
	return i.ToGetRouterRipRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterRipRedistributeArray) ToGetRouterRipRedistributeArrayOutputWithContext(ctx context.Context) GetRouterRipRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipRedistributeArrayOutput)
}

type GetRouterRipRedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterRipRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipRedistribute)(nil)).Elem()
}

func (o GetRouterRipRedistributeOutput) ToGetRouterRipRedistributeOutput() GetRouterRipRedistributeOutput {
	return o
}

func (o GetRouterRipRedistributeOutput) ToGetRouterRipRedistributeOutputWithContext(ctx context.Context) GetRouterRipRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRouterRipRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterRipRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRouterRipRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipRedistribute)(nil)).Elem()
}

func (o GetRouterRipRedistributeArrayOutput) ToGetRouterRipRedistributeArrayOutput() GetRouterRipRedistributeArrayOutput {
	return o
}

func (o GetRouterRipRedistributeArrayOutput) ToGetRouterRipRedistributeArrayOutputWithContext(ctx context.Context) GetRouterRipRedistributeArrayOutput {
	return o
}

func (o GetRouterRipRedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterRipRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipRedistribute {
		return vs[0].([]GetRouterRipRedistribute)[vs[1].(int)]
	}).(GetRouterRipRedistributeOutput)
}

type GetRouterRipngAggregateAddress struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterRipngAggregateAddressInput is an input type that accepts GetRouterRipngAggregateAddressArgs and GetRouterRipngAggregateAddressOutput values.
// You can construct a concrete instance of `GetRouterRipngAggregateAddressInput` via:
//
//	GetRouterRipngAggregateAddressArgs{...}
type GetRouterRipngAggregateAddressInput interface {
	pulumi.Input

	ToGetRouterRipngAggregateAddressOutput() GetRouterRipngAggregateAddressOutput
	ToGetRouterRipngAggregateAddressOutputWithContext(context.Context) GetRouterRipngAggregateAddressOutput
}

type GetRouterRipngAggregateAddressArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterRipngAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngAggregateAddress)(nil)).Elem()
}

func (i GetRouterRipngAggregateAddressArgs) ToGetRouterRipngAggregateAddressOutput() GetRouterRipngAggregateAddressOutput {
	return i.ToGetRouterRipngAggregateAddressOutputWithContext(context.Background())
}

func (i GetRouterRipngAggregateAddressArgs) ToGetRouterRipngAggregateAddressOutputWithContext(ctx context.Context) GetRouterRipngAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngAggregateAddressOutput)
}

// GetRouterRipngAggregateAddressArrayInput is an input type that accepts GetRouterRipngAggregateAddressArray and GetRouterRipngAggregateAddressArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngAggregateAddressArrayInput` via:
//
//	GetRouterRipngAggregateAddressArray{ GetRouterRipngAggregateAddressArgs{...} }
type GetRouterRipngAggregateAddressArrayInput interface {
	pulumi.Input

	ToGetRouterRipngAggregateAddressArrayOutput() GetRouterRipngAggregateAddressArrayOutput
	ToGetRouterRipngAggregateAddressArrayOutputWithContext(context.Context) GetRouterRipngAggregateAddressArrayOutput
}

type GetRouterRipngAggregateAddressArray []GetRouterRipngAggregateAddressInput

func (GetRouterRipngAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngAggregateAddress)(nil)).Elem()
}

func (i GetRouterRipngAggregateAddressArray) ToGetRouterRipngAggregateAddressArrayOutput() GetRouterRipngAggregateAddressArrayOutput {
	return i.ToGetRouterRipngAggregateAddressArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngAggregateAddressArray) ToGetRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) GetRouterRipngAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngAggregateAddressArrayOutput)
}

type GetRouterRipngAggregateAddressOutput struct{ *pulumi.OutputState }

func (GetRouterRipngAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngAggregateAddress)(nil)).Elem()
}

func (o GetRouterRipngAggregateAddressOutput) ToGetRouterRipngAggregateAddressOutput() GetRouterRipngAggregateAddressOutput {
	return o
}

func (o GetRouterRipngAggregateAddressOutput) ToGetRouterRipngAggregateAddressOutputWithContext(ctx context.Context) GetRouterRipngAggregateAddressOutput {
	return o
}

// Offset-list ID.
func (o GetRouterRipngAggregateAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngAggregateAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Aggregate address prefix.
func (o GetRouterRipngAggregateAddressOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngAggregateAddress) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterRipngAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngAggregateAddress)(nil)).Elem()
}

func (o GetRouterRipngAggregateAddressArrayOutput) ToGetRouterRipngAggregateAddressArrayOutput() GetRouterRipngAggregateAddressArrayOutput {
	return o
}

func (o GetRouterRipngAggregateAddressArrayOutput) ToGetRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) GetRouterRipngAggregateAddressArrayOutput {
	return o
}

func (o GetRouterRipngAggregateAddressArrayOutput) Index(i pulumi.IntInput) GetRouterRipngAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngAggregateAddress {
		return vs[0].([]GetRouterRipngAggregateAddress)[vs[1].(int)]
	}).(GetRouterRipngAggregateAddressOutput)
}

type GetRouterRipngDistance struct {
	// IPv6 access list name.
	AccessList6 string `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance int `pulumi:"distance"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRouterRipngDistanceInput is an input type that accepts GetRouterRipngDistanceArgs and GetRouterRipngDistanceOutput values.
// You can construct a concrete instance of `GetRouterRipngDistanceInput` via:
//
//	GetRouterRipngDistanceArgs{...}
type GetRouterRipngDistanceInput interface {
	pulumi.Input

	ToGetRouterRipngDistanceOutput() GetRouterRipngDistanceOutput
	ToGetRouterRipngDistanceOutputWithContext(context.Context) GetRouterRipngDistanceOutput
}

type GetRouterRipngDistanceArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringInput `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRouterRipngDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngDistance)(nil)).Elem()
}

func (i GetRouterRipngDistanceArgs) ToGetRouterRipngDistanceOutput() GetRouterRipngDistanceOutput {
	return i.ToGetRouterRipngDistanceOutputWithContext(context.Background())
}

func (i GetRouterRipngDistanceArgs) ToGetRouterRipngDistanceOutputWithContext(ctx context.Context) GetRouterRipngDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngDistanceOutput)
}

// GetRouterRipngDistanceArrayInput is an input type that accepts GetRouterRipngDistanceArray and GetRouterRipngDistanceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngDistanceArrayInput` via:
//
//	GetRouterRipngDistanceArray{ GetRouterRipngDistanceArgs{...} }
type GetRouterRipngDistanceArrayInput interface {
	pulumi.Input

	ToGetRouterRipngDistanceArrayOutput() GetRouterRipngDistanceArrayOutput
	ToGetRouterRipngDistanceArrayOutputWithContext(context.Context) GetRouterRipngDistanceArrayOutput
}

type GetRouterRipngDistanceArray []GetRouterRipngDistanceInput

func (GetRouterRipngDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngDistance)(nil)).Elem()
}

func (i GetRouterRipngDistanceArray) ToGetRouterRipngDistanceArrayOutput() GetRouterRipngDistanceArrayOutput {
	return i.ToGetRouterRipngDistanceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngDistanceArray) ToGetRouterRipngDistanceArrayOutputWithContext(ctx context.Context) GetRouterRipngDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngDistanceArrayOutput)
}

type GetRouterRipngDistanceOutput struct{ *pulumi.OutputState }

func (GetRouterRipngDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngDistance)(nil)).Elem()
}

func (o GetRouterRipngDistanceOutput) ToGetRouterRipngDistanceOutput() GetRouterRipngDistanceOutput {
	return o
}

func (o GetRouterRipngDistanceOutput) ToGetRouterRipngDistanceOutputWithContext(ctx context.Context) GetRouterRipngDistanceOutput {
	return o
}

// IPv6 access list name.
func (o GetRouterRipngDistanceOutput) AccessList6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistance) string { return v.AccessList6 }).(pulumi.StringOutput)
}

// Distance (1 - 255).
func (o GetRouterRipngDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// Offset-list ID.
func (o GetRouterRipngDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Aggregate address prefix.
func (o GetRouterRipngDistanceOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistance) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRouterRipngDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngDistance)(nil)).Elem()
}

func (o GetRouterRipngDistanceArrayOutput) ToGetRouterRipngDistanceArrayOutput() GetRouterRipngDistanceArrayOutput {
	return o
}

func (o GetRouterRipngDistanceArrayOutput) ToGetRouterRipngDistanceArrayOutputWithContext(ctx context.Context) GetRouterRipngDistanceArrayOutput {
	return o
}

func (o GetRouterRipngDistanceArrayOutput) Index(i pulumi.IntInput) GetRouterRipngDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngDistance {
		return vs[0].([]GetRouterRipngDistance)[vs[1].(int)]
	}).(GetRouterRipngDistanceOutput)
}

type GetRouterRipngDistributeList struct {
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname string `pulumi:"listname"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipngDistributeListInput is an input type that accepts GetRouterRipngDistributeListArgs and GetRouterRipngDistributeListOutput values.
// You can construct a concrete instance of `GetRouterRipngDistributeListInput` via:
//
//	GetRouterRipngDistributeListArgs{...}
type GetRouterRipngDistributeListInput interface {
	pulumi.Input

	ToGetRouterRipngDistributeListOutput() GetRouterRipngDistributeListOutput
	ToGetRouterRipngDistributeListOutputWithContext(context.Context) GetRouterRipngDistributeListOutput
}

type GetRouterRipngDistributeListArgs struct {
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringInput `pulumi:"listname"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipngDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngDistributeList)(nil)).Elem()
}

func (i GetRouterRipngDistributeListArgs) ToGetRouterRipngDistributeListOutput() GetRouterRipngDistributeListOutput {
	return i.ToGetRouterRipngDistributeListOutputWithContext(context.Background())
}

func (i GetRouterRipngDistributeListArgs) ToGetRouterRipngDistributeListOutputWithContext(ctx context.Context) GetRouterRipngDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngDistributeListOutput)
}

// GetRouterRipngDistributeListArrayInput is an input type that accepts GetRouterRipngDistributeListArray and GetRouterRipngDistributeListArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngDistributeListArrayInput` via:
//
//	GetRouterRipngDistributeListArray{ GetRouterRipngDistributeListArgs{...} }
type GetRouterRipngDistributeListArrayInput interface {
	pulumi.Input

	ToGetRouterRipngDistributeListArrayOutput() GetRouterRipngDistributeListArrayOutput
	ToGetRouterRipngDistributeListArrayOutputWithContext(context.Context) GetRouterRipngDistributeListArrayOutput
}

type GetRouterRipngDistributeListArray []GetRouterRipngDistributeListInput

func (GetRouterRipngDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngDistributeList)(nil)).Elem()
}

func (i GetRouterRipngDistributeListArray) ToGetRouterRipngDistributeListArrayOutput() GetRouterRipngDistributeListArrayOutput {
	return i.ToGetRouterRipngDistributeListArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngDistributeListArray) ToGetRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) GetRouterRipngDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngDistributeListArrayOutput)
}

type GetRouterRipngDistributeListOutput struct{ *pulumi.OutputState }

func (GetRouterRipngDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngDistributeList)(nil)).Elem()
}

func (o GetRouterRipngDistributeListOutput) ToGetRouterRipngDistributeListOutput() GetRouterRipngDistributeListOutput {
	return o
}

func (o GetRouterRipngDistributeListOutput) ToGetRouterRipngDistributeListOutputWithContext(ctx context.Context) GetRouterRipngDistributeListOutput {
	return o
}

// Offset list direction.
func (o GetRouterRipngDistributeListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistributeList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRouterRipngDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipngDistributeListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistributeList) string { return v.Interface }).(pulumi.StringOutput)
}

// Distribute access/prefix list name.
func (o GetRouterRipngDistributeListOutput) Listname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistributeList) string { return v.Listname }).(pulumi.StringOutput)
}

// status
func (o GetRouterRipngDistributeListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngDistributeList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipngDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngDistributeList)(nil)).Elem()
}

func (o GetRouterRipngDistributeListArrayOutput) ToGetRouterRipngDistributeListArrayOutput() GetRouterRipngDistributeListArrayOutput {
	return o
}

func (o GetRouterRipngDistributeListArrayOutput) ToGetRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) GetRouterRipngDistributeListArrayOutput {
	return o
}

func (o GetRouterRipngDistributeListArrayOutput) Index(i pulumi.IntInput) GetRouterRipngDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngDistributeList {
		return vs[0].([]GetRouterRipngDistributeList)[vs[1].(int)]
	}).(GetRouterRipngDistributeListOutput)
}

type GetRouterRipngInterface struct {
	// Flags.
	Flags int `pulumi:"flags"`
	// Interface name.
	Name string `pulumi:"name"`
	// Enable/disable split horizon.
	SplitHorizon string `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus string `pulumi:"splitHorizonStatus"`
}

// GetRouterRipngInterfaceInput is an input type that accepts GetRouterRipngInterfaceArgs and GetRouterRipngInterfaceOutput values.
// You can construct a concrete instance of `GetRouterRipngInterfaceInput` via:
//
//	GetRouterRipngInterfaceArgs{...}
type GetRouterRipngInterfaceInput interface {
	pulumi.Input

	ToGetRouterRipngInterfaceOutput() GetRouterRipngInterfaceOutput
	ToGetRouterRipngInterfaceOutputWithContext(context.Context) GetRouterRipngInterfaceOutput
}

type GetRouterRipngInterfaceArgs struct {
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Enable/disable split horizon.
	SplitHorizon pulumi.StringInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus pulumi.StringInput `pulumi:"splitHorizonStatus"`
}

func (GetRouterRipngInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngInterface)(nil)).Elem()
}

func (i GetRouterRipngInterfaceArgs) ToGetRouterRipngInterfaceOutput() GetRouterRipngInterfaceOutput {
	return i.ToGetRouterRipngInterfaceOutputWithContext(context.Background())
}

func (i GetRouterRipngInterfaceArgs) ToGetRouterRipngInterfaceOutputWithContext(ctx context.Context) GetRouterRipngInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngInterfaceOutput)
}

// GetRouterRipngInterfaceArrayInput is an input type that accepts GetRouterRipngInterfaceArray and GetRouterRipngInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngInterfaceArrayInput` via:
//
//	GetRouterRipngInterfaceArray{ GetRouterRipngInterfaceArgs{...} }
type GetRouterRipngInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterRipngInterfaceArrayOutput() GetRouterRipngInterfaceArrayOutput
	ToGetRouterRipngInterfaceArrayOutputWithContext(context.Context) GetRouterRipngInterfaceArrayOutput
}

type GetRouterRipngInterfaceArray []GetRouterRipngInterfaceInput

func (GetRouterRipngInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngInterface)(nil)).Elem()
}

func (i GetRouterRipngInterfaceArray) ToGetRouterRipngInterfaceArrayOutput() GetRouterRipngInterfaceArrayOutput {
	return i.ToGetRouterRipngInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngInterfaceArray) ToGetRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipngInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngInterfaceArrayOutput)
}

type GetRouterRipngInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterRipngInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngInterface)(nil)).Elem()
}

func (o GetRouterRipngInterfaceOutput) ToGetRouterRipngInterfaceOutput() GetRouterRipngInterfaceOutput {
	return o
}

func (o GetRouterRipngInterfaceOutput) ToGetRouterRipngInterfaceOutputWithContext(ctx context.Context) GetRouterRipngInterfaceOutput {
	return o
}

// Flags.
func (o GetRouterRipngInterfaceOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngInterface) int { return v.Flags }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipngInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRouterRipngInterfaceOutput) SplitHorizon() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngInterface) string { return v.SplitHorizon }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRouterRipngInterfaceOutput) SplitHorizonStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngInterface) string { return v.SplitHorizonStatus }).(pulumi.StringOutput)
}

type GetRouterRipngInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngInterface)(nil)).Elem()
}

func (o GetRouterRipngInterfaceArrayOutput) ToGetRouterRipngInterfaceArrayOutput() GetRouterRipngInterfaceArrayOutput {
	return o
}

func (o GetRouterRipngInterfaceArrayOutput) ToGetRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipngInterfaceArrayOutput {
	return o
}

func (o GetRouterRipngInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterRipngInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngInterface {
		return vs[0].([]GetRouterRipngInterface)[vs[1].(int)]
	}).(GetRouterRipngInterfaceOutput)
}

type GetRouterRipngNeighbor struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 string `pulumi:"ip6"`
}

// GetRouterRipngNeighborInput is an input type that accepts GetRouterRipngNeighborArgs and GetRouterRipngNeighborOutput values.
// You can construct a concrete instance of `GetRouterRipngNeighborInput` via:
//
//	GetRouterRipngNeighborArgs{...}
type GetRouterRipngNeighborInput interface {
	pulumi.Input

	ToGetRouterRipngNeighborOutput() GetRouterRipngNeighborOutput
	ToGetRouterRipngNeighborOutputWithContext(context.Context) GetRouterRipngNeighborOutput
}

type GetRouterRipngNeighborArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 pulumi.StringInput `pulumi:"ip6"`
}

func (GetRouterRipngNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngNeighbor)(nil)).Elem()
}

func (i GetRouterRipngNeighborArgs) ToGetRouterRipngNeighborOutput() GetRouterRipngNeighborOutput {
	return i.ToGetRouterRipngNeighborOutputWithContext(context.Background())
}

func (i GetRouterRipngNeighborArgs) ToGetRouterRipngNeighborOutputWithContext(ctx context.Context) GetRouterRipngNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngNeighborOutput)
}

// GetRouterRipngNeighborArrayInput is an input type that accepts GetRouterRipngNeighborArray and GetRouterRipngNeighborArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngNeighborArrayInput` via:
//
//	GetRouterRipngNeighborArray{ GetRouterRipngNeighborArgs{...} }
type GetRouterRipngNeighborArrayInput interface {
	pulumi.Input

	ToGetRouterRipngNeighborArrayOutput() GetRouterRipngNeighborArrayOutput
	ToGetRouterRipngNeighborArrayOutputWithContext(context.Context) GetRouterRipngNeighborArrayOutput
}

type GetRouterRipngNeighborArray []GetRouterRipngNeighborInput

func (GetRouterRipngNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngNeighbor)(nil)).Elem()
}

func (i GetRouterRipngNeighborArray) ToGetRouterRipngNeighborArrayOutput() GetRouterRipngNeighborArrayOutput {
	return i.ToGetRouterRipngNeighborArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngNeighborArray) ToGetRouterRipngNeighborArrayOutputWithContext(ctx context.Context) GetRouterRipngNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngNeighborArrayOutput)
}

type GetRouterRipngNeighborOutput struct{ *pulumi.OutputState }

func (GetRouterRipngNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngNeighbor)(nil)).Elem()
}

func (o GetRouterRipngNeighborOutput) ToGetRouterRipngNeighborOutput() GetRouterRipngNeighborOutput {
	return o
}

func (o GetRouterRipngNeighborOutput) ToGetRouterRipngNeighborOutputWithContext(ctx context.Context) GetRouterRipngNeighborOutput {
	return o
}

// Offset-list ID.
func (o GetRouterRipngNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipngNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv6 link-local address.
func (o GetRouterRipngNeighborOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngNeighbor) string { return v.Ip6 }).(pulumi.StringOutput)
}

type GetRouterRipngNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngNeighbor)(nil)).Elem()
}

func (o GetRouterRipngNeighborArrayOutput) ToGetRouterRipngNeighborArrayOutput() GetRouterRipngNeighborArrayOutput {
	return o
}

func (o GetRouterRipngNeighborArrayOutput) ToGetRouterRipngNeighborArrayOutputWithContext(ctx context.Context) GetRouterRipngNeighborArrayOutput {
	return o
}

func (o GetRouterRipngNeighborArrayOutput) Index(i pulumi.IntInput) GetRouterRipngNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngNeighbor {
		return vs[0].([]GetRouterRipngNeighbor)[vs[1].(int)]
	}).(GetRouterRipngNeighborOutput)
}

type GetRouterRipngNetwork struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRouterRipngNetworkInput is an input type that accepts GetRouterRipngNetworkArgs and GetRouterRipngNetworkOutput values.
// You can construct a concrete instance of `GetRouterRipngNetworkInput` via:
//
//	GetRouterRipngNetworkArgs{...}
type GetRouterRipngNetworkInput interface {
	pulumi.Input

	ToGetRouterRipngNetworkOutput() GetRouterRipngNetworkOutput
	ToGetRouterRipngNetworkOutputWithContext(context.Context) GetRouterRipngNetworkOutput
}

type GetRouterRipngNetworkArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRouterRipngNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngNetwork)(nil)).Elem()
}

func (i GetRouterRipngNetworkArgs) ToGetRouterRipngNetworkOutput() GetRouterRipngNetworkOutput {
	return i.ToGetRouterRipngNetworkOutputWithContext(context.Background())
}

func (i GetRouterRipngNetworkArgs) ToGetRouterRipngNetworkOutputWithContext(ctx context.Context) GetRouterRipngNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngNetworkOutput)
}

// GetRouterRipngNetworkArrayInput is an input type that accepts GetRouterRipngNetworkArray and GetRouterRipngNetworkArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngNetworkArrayInput` via:
//
//	GetRouterRipngNetworkArray{ GetRouterRipngNetworkArgs{...} }
type GetRouterRipngNetworkArrayInput interface {
	pulumi.Input

	ToGetRouterRipngNetworkArrayOutput() GetRouterRipngNetworkArrayOutput
	ToGetRouterRipngNetworkArrayOutputWithContext(context.Context) GetRouterRipngNetworkArrayOutput
}

type GetRouterRipngNetworkArray []GetRouterRipngNetworkInput

func (GetRouterRipngNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngNetwork)(nil)).Elem()
}

func (i GetRouterRipngNetworkArray) ToGetRouterRipngNetworkArrayOutput() GetRouterRipngNetworkArrayOutput {
	return i.ToGetRouterRipngNetworkArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngNetworkArray) ToGetRouterRipngNetworkArrayOutputWithContext(ctx context.Context) GetRouterRipngNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngNetworkArrayOutput)
}

type GetRouterRipngNetworkOutput struct{ *pulumi.OutputState }

func (GetRouterRipngNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngNetwork)(nil)).Elem()
}

func (o GetRouterRipngNetworkOutput) ToGetRouterRipngNetworkOutput() GetRouterRipngNetworkOutput {
	return o
}

func (o GetRouterRipngNetworkOutput) ToGetRouterRipngNetworkOutputWithContext(ctx context.Context) GetRouterRipngNetworkOutput {
	return o
}

// Offset-list ID.
func (o GetRouterRipngNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Network IPv6 link-local prefix.
func (o GetRouterRipngNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRouterRipngNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngNetwork)(nil)).Elem()
}

func (o GetRouterRipngNetworkArrayOutput) ToGetRouterRipngNetworkArrayOutput() GetRouterRipngNetworkArrayOutput {
	return o
}

func (o GetRouterRipngNetworkArrayOutput) ToGetRouterRipngNetworkArrayOutputWithContext(ctx context.Context) GetRouterRipngNetworkArrayOutput {
	return o
}

func (o GetRouterRipngNetworkArrayOutput) Index(i pulumi.IntInput) GetRouterRipngNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngNetwork {
		return vs[0].([]GetRouterRipngNetwork)[vs[1].(int)]
	}).(GetRouterRipngNetworkOutput)
}

type GetRouterRipngOffsetList struct {
	// IPv6 access list name.
	AccessList6 string `pulumi:"accessList6"`
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// offset
	Offset int `pulumi:"offset"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipngOffsetListInput is an input type that accepts GetRouterRipngOffsetListArgs and GetRouterRipngOffsetListOutput values.
// You can construct a concrete instance of `GetRouterRipngOffsetListInput` via:
//
//	GetRouterRipngOffsetListArgs{...}
type GetRouterRipngOffsetListInput interface {
	pulumi.Input

	ToGetRouterRipngOffsetListOutput() GetRouterRipngOffsetListOutput
	ToGetRouterRipngOffsetListOutputWithContext(context.Context) GetRouterRipngOffsetListOutput
}

type GetRouterRipngOffsetListArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringInput `pulumi:"accessList6"`
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntInput `pulumi:"offset"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipngOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngOffsetList)(nil)).Elem()
}

func (i GetRouterRipngOffsetListArgs) ToGetRouterRipngOffsetListOutput() GetRouterRipngOffsetListOutput {
	return i.ToGetRouterRipngOffsetListOutputWithContext(context.Background())
}

func (i GetRouterRipngOffsetListArgs) ToGetRouterRipngOffsetListOutputWithContext(ctx context.Context) GetRouterRipngOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngOffsetListOutput)
}

// GetRouterRipngOffsetListArrayInput is an input type that accepts GetRouterRipngOffsetListArray and GetRouterRipngOffsetListArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngOffsetListArrayInput` via:
//
//	GetRouterRipngOffsetListArray{ GetRouterRipngOffsetListArgs{...} }
type GetRouterRipngOffsetListArrayInput interface {
	pulumi.Input

	ToGetRouterRipngOffsetListArrayOutput() GetRouterRipngOffsetListArrayOutput
	ToGetRouterRipngOffsetListArrayOutputWithContext(context.Context) GetRouterRipngOffsetListArrayOutput
}

type GetRouterRipngOffsetListArray []GetRouterRipngOffsetListInput

func (GetRouterRipngOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngOffsetList)(nil)).Elem()
}

func (i GetRouterRipngOffsetListArray) ToGetRouterRipngOffsetListArrayOutput() GetRouterRipngOffsetListArrayOutput {
	return i.ToGetRouterRipngOffsetListArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngOffsetListArray) ToGetRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) GetRouterRipngOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngOffsetListArrayOutput)
}

type GetRouterRipngOffsetListOutput struct{ *pulumi.OutputState }

func (GetRouterRipngOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngOffsetList)(nil)).Elem()
}

func (o GetRouterRipngOffsetListOutput) ToGetRouterRipngOffsetListOutput() GetRouterRipngOffsetListOutput {
	return o
}

func (o GetRouterRipngOffsetListOutput) ToGetRouterRipngOffsetListOutputWithContext(ctx context.Context) GetRouterRipngOffsetListOutput {
	return o
}

// IPv6 access list name.
func (o GetRouterRipngOffsetListOutput) AccessList6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) string { return v.AccessList6 }).(pulumi.StringOutput)
}

// Offset list direction.
func (o GetRouterRipngOffsetListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRouterRipngOffsetListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipngOffsetListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) string { return v.Interface }).(pulumi.StringOutput)
}

// offset
func (o GetRouterRipngOffsetListOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) int { return v.Offset }).(pulumi.IntOutput)
}

// status
func (o GetRouterRipngOffsetListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngOffsetList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipngOffsetListArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngOffsetList)(nil)).Elem()
}

func (o GetRouterRipngOffsetListArrayOutput) ToGetRouterRipngOffsetListArrayOutput() GetRouterRipngOffsetListArrayOutput {
	return o
}

func (o GetRouterRipngOffsetListArrayOutput) ToGetRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) GetRouterRipngOffsetListArrayOutput {
	return o
}

func (o GetRouterRipngOffsetListArrayOutput) Index(i pulumi.IntInput) GetRouterRipngOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngOffsetList {
		return vs[0].([]GetRouterRipngOffsetList)[vs[1].(int)]
	}).(GetRouterRipngOffsetListOutput)
}

type GetRouterRipngPassiveInterface struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetRouterRipngPassiveInterfaceInput is an input type that accepts GetRouterRipngPassiveInterfaceArgs and GetRouterRipngPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRouterRipngPassiveInterfaceInput` via:
//
//	GetRouterRipngPassiveInterfaceArgs{...}
type GetRouterRipngPassiveInterfaceInput interface {
	pulumi.Input

	ToGetRouterRipngPassiveInterfaceOutput() GetRouterRipngPassiveInterfaceOutput
	ToGetRouterRipngPassiveInterfaceOutputWithContext(context.Context) GetRouterRipngPassiveInterfaceOutput
}

type GetRouterRipngPassiveInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouterRipngPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngPassiveInterface)(nil)).Elem()
}

func (i GetRouterRipngPassiveInterfaceArgs) ToGetRouterRipngPassiveInterfaceOutput() GetRouterRipngPassiveInterfaceOutput {
	return i.ToGetRouterRipngPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRouterRipngPassiveInterfaceArgs) ToGetRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterRipngPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngPassiveInterfaceOutput)
}

// GetRouterRipngPassiveInterfaceArrayInput is an input type that accepts GetRouterRipngPassiveInterfaceArray and GetRouterRipngPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngPassiveInterfaceArrayInput` via:
//
//	GetRouterRipngPassiveInterfaceArray{ GetRouterRipngPassiveInterfaceArgs{...} }
type GetRouterRipngPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterRipngPassiveInterfaceArrayOutput() GetRouterRipngPassiveInterfaceArrayOutput
	ToGetRouterRipngPassiveInterfaceArrayOutputWithContext(context.Context) GetRouterRipngPassiveInterfaceArrayOutput
}

type GetRouterRipngPassiveInterfaceArray []GetRouterRipngPassiveInterfaceInput

func (GetRouterRipngPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngPassiveInterface)(nil)).Elem()
}

func (i GetRouterRipngPassiveInterfaceArray) ToGetRouterRipngPassiveInterfaceArrayOutput() GetRouterRipngPassiveInterfaceArrayOutput {
	return i.ToGetRouterRipngPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngPassiveInterfaceArray) ToGetRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipngPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngPassiveInterfaceArrayOutput)
}

type GetRouterRipngPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterRipngPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngPassiveInterface)(nil)).Elem()
}

func (o GetRouterRipngPassiveInterfaceOutput) ToGetRouterRipngPassiveInterfaceOutput() GetRouterRipngPassiveInterfaceOutput {
	return o
}

func (o GetRouterRipngPassiveInterfaceOutput) ToGetRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) GetRouterRipngPassiveInterfaceOutput {
	return o
}

// Interface name.
func (o GetRouterRipngPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouterRipngPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngPassiveInterface)(nil)).Elem()
}

func (o GetRouterRipngPassiveInterfaceArrayOutput) ToGetRouterRipngPassiveInterfaceArrayOutput() GetRouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterRipngPassiveInterfaceArrayOutput) ToGetRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o GetRouterRipngPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterRipngPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngPassiveInterface {
		return vs[0].([]GetRouterRipngPassiveInterface)[vs[1].(int)]
	}).(GetRouterRipngPassiveInterfaceOutput)
}

type GetRouterRipngRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetRouterRipngRedistributeInput is an input type that accepts GetRouterRipngRedistributeArgs and GetRouterRipngRedistributeOutput values.
// You can construct a concrete instance of `GetRouterRipngRedistributeInput` via:
//
//	GetRouterRipngRedistributeArgs{...}
type GetRouterRipngRedistributeInput interface {
	pulumi.Input

	ToGetRouterRipngRedistributeOutput() GetRouterRipngRedistributeOutput
	ToGetRouterRipngRedistributeOutputWithContext(context.Context) GetRouterRipngRedistributeOutput
}

type GetRouterRipngRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouterRipngRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngRedistribute)(nil)).Elem()
}

func (i GetRouterRipngRedistributeArgs) ToGetRouterRipngRedistributeOutput() GetRouterRipngRedistributeOutput {
	return i.ToGetRouterRipngRedistributeOutputWithContext(context.Background())
}

func (i GetRouterRipngRedistributeArgs) ToGetRouterRipngRedistributeOutputWithContext(ctx context.Context) GetRouterRipngRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngRedistributeOutput)
}

// GetRouterRipngRedistributeArrayInput is an input type that accepts GetRouterRipngRedistributeArray and GetRouterRipngRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRouterRipngRedistributeArrayInput` via:
//
//	GetRouterRipngRedistributeArray{ GetRouterRipngRedistributeArgs{...} }
type GetRouterRipngRedistributeArrayInput interface {
	pulumi.Input

	ToGetRouterRipngRedistributeArrayOutput() GetRouterRipngRedistributeArrayOutput
	ToGetRouterRipngRedistributeArrayOutputWithContext(context.Context) GetRouterRipngRedistributeArrayOutput
}

type GetRouterRipngRedistributeArray []GetRouterRipngRedistributeInput

func (GetRouterRipngRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngRedistribute)(nil)).Elem()
}

func (i GetRouterRipngRedistributeArray) ToGetRouterRipngRedistributeArrayOutput() GetRouterRipngRedistributeArrayOutput {
	return i.ToGetRouterRipngRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRouterRipngRedistributeArray) ToGetRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) GetRouterRipngRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRipngRedistributeArrayOutput)
}

type GetRouterRipngRedistributeOutput struct{ *pulumi.OutputState }

func (GetRouterRipngRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRipngRedistribute)(nil)).Elem()
}

func (o GetRouterRipngRedistributeOutput) ToGetRouterRipngRedistributeOutput() GetRouterRipngRedistributeOutput {
	return o
}

func (o GetRouterRipngRedistributeOutput) ToGetRouterRipngRedistributeOutputWithContext(ctx context.Context) GetRouterRipngRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRouterRipngRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRipngRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRouterRipngRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRouterRipngRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRouterRipngRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRipngRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouterRipngRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRipngRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRipngRedistribute)(nil)).Elem()
}

func (o GetRouterRipngRedistributeArrayOutput) ToGetRouterRipngRedistributeArrayOutput() GetRouterRipngRedistributeArrayOutput {
	return o
}

func (o GetRouterRipngRedistributeArrayOutput) ToGetRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) GetRouterRipngRedistributeArrayOutput {
	return o
}

func (o GetRouterRipngRedistributeArrayOutput) Index(i pulumi.IntInput) GetRouterRipngRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRipngRedistribute {
		return vs[0].([]GetRouterRipngRedistribute)[vs[1].(int)]
	}).(GetRouterRipngRedistributeOutput)
}

type GetRouterRoutemapRule struct {
	// Action.
	Action string `pulumi:"action"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath string `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity string `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities.
	MatchCommunityExact string `pulumi:"matchCommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags int `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface string `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address string `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop string `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress string `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop string `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric int `pulumi:"matchMetric"`
	// Match BGP origin code.
	MatchOrigin string `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType string `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag int `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf int `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs int `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp string `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath.
	SetAspathAction string `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths []GetRouterRoutemapRuleSetAspath `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute.
	SetAtomicAggregate string `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities []GetRouterRoutemapRuleSetCommunity `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community.
	SetCommunityAdditive string `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete string `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress int `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife int `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse int `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress int `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife int `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts []GetRouterRoutemapRuleSetExtcommunityRt `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos []GetRouterRoutemapRuleSetExtcommunitySoo `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags int `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop string `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal string `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop string `pulumi:"setIpNexthop"`
	// BGP local preference path attribute.
	SetLocalPreference int `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric int `pulumi:"setMetric"`
	// Metric type.
	SetMetricType string `pulumi:"setMetricType"`
	// BGP origin code.
	SetOrigin string `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId string `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority int `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag int `pulumi:"setRouteTag"`
	// Tag value.
	SetTag int `pulumi:"setTag"`
	// BGP weight for routing table.
	SetWeight int `pulumi:"setWeight"`
}

// GetRouterRoutemapRuleInput is an input type that accepts GetRouterRoutemapRuleArgs and GetRouterRoutemapRuleOutput values.
// You can construct a concrete instance of `GetRouterRoutemapRuleInput` via:
//
//	GetRouterRoutemapRuleArgs{...}
type GetRouterRoutemapRuleInput interface {
	pulumi.Input

	ToGetRouterRoutemapRuleOutput() GetRouterRoutemapRuleOutput
	ToGetRouterRoutemapRuleOutputWithContext(context.Context) GetRouterRoutemapRuleOutput
}

type GetRouterRoutemapRuleArgs struct {
	// Action.
	Action pulumi.StringInput `pulumi:"action"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath pulumi.StringInput `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity pulumi.StringInput `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities.
	MatchCommunityExact pulumi.StringInput `pulumi:"matchCommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags pulumi.IntInput `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface pulumi.StringInput `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address pulumi.StringInput `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop pulumi.StringInput `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress pulumi.StringInput `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop pulumi.StringInput `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric pulumi.IntInput `pulumi:"matchMetric"`
	// Match BGP origin code.
	MatchOrigin pulumi.StringInput `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType pulumi.StringInput `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag pulumi.IntInput `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf pulumi.IntInput `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs pulumi.IntInput `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp pulumi.StringInput `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath.
	SetAspathAction pulumi.StringInput `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths GetRouterRoutemapRuleSetAspathArrayInput `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute.
	SetAtomicAggregate pulumi.StringInput `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities GetRouterRoutemapRuleSetCommunityArrayInput `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community.
	SetCommunityAdditive pulumi.StringInput `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete pulumi.StringInput `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress pulumi.IntInput `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife pulumi.IntInput `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse pulumi.IntInput `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress pulumi.IntInput `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife pulumi.IntInput `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts GetRouterRoutemapRuleSetExtcommunityRtArrayInput `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos GetRouterRoutemapRuleSetExtcommunitySooArrayInput `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags pulumi.IntInput `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop pulumi.StringInput `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal pulumi.StringInput `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop pulumi.StringInput `pulumi:"setIpNexthop"`
	// BGP local preference path attribute.
	SetLocalPreference pulumi.IntInput `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric pulumi.IntInput `pulumi:"setMetric"`
	// Metric type.
	SetMetricType pulumi.StringInput `pulumi:"setMetricType"`
	// BGP origin code.
	SetOrigin pulumi.StringInput `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId pulumi.StringInput `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority pulumi.IntInput `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag pulumi.IntInput `pulumi:"setRouteTag"`
	// Tag value.
	SetTag pulumi.IntInput `pulumi:"setTag"`
	// BGP weight for routing table.
	SetWeight pulumi.IntInput `pulumi:"setWeight"`
}

func (GetRouterRoutemapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRoutemapRule)(nil)).Elem()
}

func (i GetRouterRoutemapRuleArgs) ToGetRouterRoutemapRuleOutput() GetRouterRoutemapRuleOutput {
	return i.ToGetRouterRoutemapRuleOutputWithContext(context.Background())
}

func (i GetRouterRoutemapRuleArgs) ToGetRouterRoutemapRuleOutputWithContext(ctx context.Context) GetRouterRoutemapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRoutemapRuleOutput)
}

// GetRouterRoutemapRuleArrayInput is an input type that accepts GetRouterRoutemapRuleArray and GetRouterRoutemapRuleArrayOutput values.
// You can construct a concrete instance of `GetRouterRoutemapRuleArrayInput` via:
//
//	GetRouterRoutemapRuleArray{ GetRouterRoutemapRuleArgs{...} }
type GetRouterRoutemapRuleArrayInput interface {
	pulumi.Input

	ToGetRouterRoutemapRuleArrayOutput() GetRouterRoutemapRuleArrayOutput
	ToGetRouterRoutemapRuleArrayOutputWithContext(context.Context) GetRouterRoutemapRuleArrayOutput
}

type GetRouterRoutemapRuleArray []GetRouterRoutemapRuleInput

func (GetRouterRoutemapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRoutemapRule)(nil)).Elem()
}

func (i GetRouterRoutemapRuleArray) ToGetRouterRoutemapRuleArrayOutput() GetRouterRoutemapRuleArrayOutput {
	return i.ToGetRouterRoutemapRuleArrayOutputWithContext(context.Background())
}

func (i GetRouterRoutemapRuleArray) ToGetRouterRoutemapRuleArrayOutputWithContext(ctx context.Context) GetRouterRoutemapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterRoutemapRuleArrayOutput)
}

type GetRouterRoutemapRuleOutput struct{ *pulumi.OutputState }

func (GetRouterRoutemapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterRoutemapRule)(nil)).Elem()
}

func (o GetRouterRoutemapRuleOutput) ToGetRouterRoutemapRuleOutput() GetRouterRoutemapRuleOutput {
	return o
}

func (o GetRouterRoutemapRuleOutput) ToGetRouterRoutemapRuleOutputWithContext(ctx context.Context) GetRouterRoutemapRuleOutput {
	return o
}

// Action.
func (o GetRouterRoutemapRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.Action }).(pulumi.StringOutput)
}

// Rule ID.
func (o GetRouterRoutemapRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.Id }).(pulumi.IntOutput)
}

// Match BGP AS path list.
func (o GetRouterRoutemapRuleOutput) MatchAsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchAsPath }).(pulumi.StringOutput)
}

// Match BGP community list.
func (o GetRouterRoutemapRuleOutput) MatchCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchCommunity }).(pulumi.StringOutput)
}

// Enable/disable exact matching of communities.
func (o GetRouterRoutemapRuleOutput) MatchCommunityExact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchCommunityExact }).(pulumi.StringOutput)
}

// BGP flag value to match (0 - 65535)
func (o GetRouterRoutemapRuleOutput) MatchFlags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.MatchFlags }).(pulumi.IntOutput)
}

// Match interface configuration.
func (o GetRouterRoutemapRuleOutput) MatchInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchInterface }).(pulumi.StringOutput)
}

// Match IPv6 address permitted by access-list6 or prefix-list6.
func (o GetRouterRoutemapRuleOutput) MatchIp6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchIp6Address }).(pulumi.StringOutput)
}

// Match next hop IPv6 address passed by access-list6 or prefix-list6.
func (o GetRouterRoutemapRuleOutput) MatchIp6Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchIp6Nexthop }).(pulumi.StringOutput)
}

// Match IP address permitted by access-list or prefix-list.
func (o GetRouterRoutemapRuleOutput) MatchIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchIpAddress }).(pulumi.StringOutput)
}

// Match next hop IP address passed by access-list or prefix-list.
func (o GetRouterRoutemapRuleOutput) MatchIpNexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchIpNexthop }).(pulumi.StringOutput)
}

// Match metric for redistribute routes.
func (o GetRouterRoutemapRuleOutput) MatchMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.MatchMetric }).(pulumi.IntOutput)
}

// Match BGP origin code.
func (o GetRouterRoutemapRuleOutput) MatchOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchOrigin }).(pulumi.StringOutput)
}

// Match route type.
func (o GetRouterRoutemapRuleOutput) MatchRouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.MatchRouteType }).(pulumi.StringOutput)
}

// Match tag.
func (o GetRouterRoutemapRuleOutput) MatchTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.MatchTag }).(pulumi.IntOutput)
}

// Match VRF ID.
func (o GetRouterRoutemapRuleOutput) MatchVrf() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.MatchVrf }).(pulumi.IntOutput)
}

// BGP aggregator AS.
func (o GetRouterRoutemapRuleOutput) SetAggregatorAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetAggregatorAs }).(pulumi.IntOutput)
}

// BGP aggregator IP.
func (o GetRouterRoutemapRuleOutput) SetAggregatorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetAggregatorIp }).(pulumi.StringOutput)
}

// Specify preferred action of set-aspath.
func (o GetRouterRoutemapRuleOutput) SetAspathAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetAspathAction }).(pulumi.StringOutput)
}

// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
func (o GetRouterRoutemapRuleOutput) SetAspaths() GetRouterRoutemapRuleSetAspathArrayOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) []GetRouterRoutemapRuleSetAspath { return v.SetAspaths }).(GetRouterRoutemapRuleSetAspathArrayOutput)
}

// Enable/disable BGP atomic aggregate attribute.
func (o GetRouterRoutemapRuleOutput) SetAtomicAggregate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetAtomicAggregate }).(pulumi.StringOutput)
}

// BGP community attribute. The structure of `setCommunity` block is documented below.
func (o GetRouterRoutemapRuleOutput) SetCommunities() GetRouterRoutemapRuleSetCommunityArrayOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) []GetRouterRoutemapRuleSetCommunity { return v.SetCommunities }).(GetRouterRoutemapRuleSetCommunityArrayOutput)
}

// Enable/disable adding set-community to existing community.
func (o GetRouterRoutemapRuleOutput) SetCommunityAdditive() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetCommunityAdditive }).(pulumi.StringOutput)
}

// Delete communities matching community list.
func (o GetRouterRoutemapRuleOutput) SetCommunityDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetCommunityDelete }).(pulumi.StringOutput)
}

// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
func (o GetRouterRoutemapRuleOutput) SetDampeningMaxSuppress() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetDampeningMaxSuppress }).(pulumi.IntOutput)
}

// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
func (o GetRouterRoutemapRuleOutput) SetDampeningReachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetDampeningReachabilityHalfLife }).(pulumi.IntOutput)
}

// Value to start reusing a route (1 - 20000, 0 = unset).
func (o GetRouterRoutemapRuleOutput) SetDampeningReuse() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetDampeningReuse }).(pulumi.IntOutput)
}

// Value to start suppressing a route (1 - 20000, 0 = unset).
func (o GetRouterRoutemapRuleOutput) SetDampeningSuppress() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetDampeningSuppress }).(pulumi.IntOutput)
}

// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
func (o GetRouterRoutemapRuleOutput) SetDampeningUnreachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetDampeningUnreachabilityHalfLife }).(pulumi.IntOutput)
}

// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
func (o GetRouterRoutemapRuleOutput) SetExtcommunityRts() GetRouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) []GetRouterRoutemapRuleSetExtcommunityRt { return v.SetExtcommunityRts }).(GetRouterRoutemapRuleSetExtcommunityRtArrayOutput)
}

// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
func (o GetRouterRoutemapRuleOutput) SetExtcommunitySoos() GetRouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) []GetRouterRoutemapRuleSetExtcommunitySoo { return v.SetExtcommunitySoos }).(GetRouterRoutemapRuleSetExtcommunitySooArrayOutput)
}

// BGP flags value (0 - 65535)
func (o GetRouterRoutemapRuleOutput) SetFlags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetFlags }).(pulumi.IntOutput)
}

// IPv6 global address of next hop.
func (o GetRouterRoutemapRuleOutput) SetIp6Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetIp6Nexthop }).(pulumi.StringOutput)
}

// IPv6 local address of next hop.
func (o GetRouterRoutemapRuleOutput) SetIp6NexthopLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetIp6NexthopLocal }).(pulumi.StringOutput)
}

// IP address of next hop.
func (o GetRouterRoutemapRuleOutput) SetIpNexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetIpNexthop }).(pulumi.StringOutput)
}

// BGP local preference path attribute.
func (o GetRouterRoutemapRuleOutput) SetLocalPreference() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetLocalPreference }).(pulumi.IntOutput)
}

// Metric value.
func (o GetRouterRoutemapRuleOutput) SetMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetMetric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRouterRoutemapRuleOutput) SetMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetMetricType }).(pulumi.StringOutput)
}

// BGP origin code.
func (o GetRouterRoutemapRuleOutput) SetOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetOrigin }).(pulumi.StringOutput)
}

// BGP originator ID attribute.
func (o GetRouterRoutemapRuleOutput) SetOriginatorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) string { return v.SetOriginatorId }).(pulumi.StringOutput)
}

// Priority for routing table.
func (o GetRouterRoutemapRuleOutput) SetPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetPriority }).(pulumi.IntOutput)
}

// Route tag for routing table.
func (o GetRouterRoutemapRuleOutput) SetRouteTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetRouteTag }).(pulumi.IntOutput)
}

// Tag value.
func (o GetRouterRoutemapRuleOutput) SetTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetTag }).(pulumi.IntOutput)
}

// BGP weight for routing table.
func (o GetRouterRoutemapRuleOutput) SetWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterRoutemapRule) int { return v.SetWeight }).(pulumi.IntOutput)
}

type GetRouterRoutemapRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouterRoutemapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterRoutemapRule)(nil)).Elem()
}

func (o GetRouterRoutemapRuleArrayOutput) ToGetRouterRoutemapRuleArrayOutput() GetRouterRoutemapRuleArrayOutput {
	return o
}

func (o GetRouterRoutemapRuleArrayOutput) ToGetRouterRoutemapRuleArrayOutputWithContext(ctx context.Context) GetRouterRoutemapRuleArrayOutput {
	return o
}

func (o GetRouterRoutemapRuleArrayOutput) Index(i pulumi.IntInput) GetRouterRoutemapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterRoutemapRule {
		return vs[0].([]GetRouterRoutemapRule)[vs[1].(int)]
	}).(GetRouterRoutemapRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterProfileFortiguardCategoryInput)(nil)).Elem(), VideofilterProfileFortiguardCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterProfileFortiguardCategoryPtrInput)(nil)).Elem(), VideofilterProfileFortiguardCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterProfileFortiguardCategoryFilterInput)(nil)).Elem(), VideofilterProfileFortiguardCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterProfileFortiguardCategoryFilterArrayInput)(nil)).Elem(), VideofilterProfileFortiguardCategoryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterYoutubechannelfilterEntryInput)(nil)).Elem(), VideofilterYoutubechannelfilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterYoutubechannelfilterEntryArrayInput)(nil)).Elem(), VideofilterYoutubechannelfilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileMsrpInput)(nil)).Elem(), VoipProfileMsrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileMsrpPtrInput)(nil)).Elem(), VoipProfileMsrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileSccpInput)(nil)).Elem(), VoipProfileSccpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileSccpPtrInput)(nil)).Elem(), VoipProfileSccpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileSipInput)(nil)).Elem(), VoipProfileSipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoipProfileSipPtrInput)(nil)).Elem(), VoipProfileSipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessInput)(nil)).Elem(), VpnOcvpnForticlientAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessPtrInput)(nil)).Elem(), VpnOcvpnForticlientAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupInput)(nil)).Elem(), VpnOcvpnForticlientAccessAuthGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupArrayInput)(nil)).Elem(), VpnOcvpnForticlientAccessAuthGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupOverlayInput)(nil)).Elem(), VpnOcvpnForticlientAccessAuthGroupOverlayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnForticlientAccessAuthGroupOverlayArrayInput)(nil)).Elem(), VpnOcvpnForticlientAccessAuthGroupOverlayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnOverlayInput)(nil)).Elem(), VpnOcvpnOverlayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnOverlayArrayInput)(nil)).Elem(), VpnOcvpnOverlayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnOverlaySubnetInput)(nil)).Elem(), VpnOcvpnOverlaySubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnOverlaySubnetArrayInput)(nil)).Elem(), VpnOcvpnOverlaySubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnWanInterfaceInput)(nil)).Elem(), VpnOcvpnWanInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnOcvpnWanInterfaceArrayInput)(nil)).Elem(), VpnOcvpnWanInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpncertificateSettingCrlVerificationInput)(nil)).Elem(), VpncertificateSettingCrlVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpncertificateSettingCrlVerificationPtrInput)(nil)).Elem(), VpncertificateSettingCrlVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecConcentratorMemberInput)(nil)).Elem(), VpnipsecConcentratorMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecConcentratorMemberArrayInput)(nil)).Elem(), VpnipsecConcentratorMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecFecMappingInput)(nil)).Elem(), VpnipsecFecMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecFecMappingArrayInput)(nil)).Elem(), VpnipsecFecMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1BackupGatewayInput)(nil)).Elem(), VpnipsecPhase1BackupGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1BackupGatewayArrayInput)(nil)).Elem(), VpnipsecPhase1BackupGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1CertificateInput)(nil)).Elem(), VpnipsecPhase1CertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1CertificateArrayInput)(nil)).Elem(), VpnipsecPhase1CertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1Ipv4ExcludeRangeInput)(nil)).Elem(), VpnipsecPhase1Ipv4ExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1Ipv4ExcludeRangeArrayInput)(nil)).Elem(), VpnipsecPhase1Ipv4ExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1Ipv6ExcludeRangeInput)(nil)).Elem(), VpnipsecPhase1Ipv6ExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1Ipv6ExcludeRangeArrayInput)(nil)).Elem(), VpnipsecPhase1Ipv6ExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceBackupGatewayInput)(nil)).Elem(), VpnipsecPhase1interfaceBackupGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceBackupGatewayArrayInput)(nil)).Elem(), VpnipsecPhase1interfaceBackupGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceCertificateInput)(nil)).Elem(), VpnipsecPhase1interfaceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceCertificateArrayInput)(nil)).Elem(), VpnipsecPhase1interfaceCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceIpv4ExcludeRangeInput)(nil)).Elem(), VpnipsecPhase1interfaceIpv4ExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceIpv4ExcludeRangeArrayInput)(nil)).Elem(), VpnipsecPhase1interfaceIpv4ExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceIpv6ExcludeRangeInput)(nil)).Elem(), VpnipsecPhase1interfaceIpv6ExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnipsecPhase1interfaceIpv6ExcludeRangeArrayInput)(nil)).Elem(), VpnipsecPhase1interfaceIpv6ExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleGroupInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleGroupArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress6Input)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddress6ArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddressInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceAddressArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceInterfaceInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleSourceInterfaceArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleSourceInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleUserInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsAuthenticationRuleUserArrayInput)(nil)).Elem(), VpnsslSettingsAuthenticationRuleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceAddress6Input)(nil)).Elem(), VpnsslSettingsSourceAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceAddress6ArrayInput)(nil)).Elem(), VpnsslSettingsSourceAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceAddressInput)(nil)).Elem(), VpnsslSettingsSourceAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceAddressArrayInput)(nil)).Elem(), VpnsslSettingsSourceAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceInterfaceInput)(nil)).Elem(), VpnsslSettingsSourceInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsSourceInterfaceArrayInput)(nil)).Elem(), VpnsslSettingsSourceInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsTunnelIpPoolInput)(nil)).Elem(), VpnsslSettingsTunnelIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsTunnelIpPoolArrayInput)(nil)).Elem(), VpnsslSettingsTunnelIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsTunnelIpv6PoolInput)(nil)).Elem(), VpnsslSettingsTunnelIpv6PoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslSettingsTunnelIpv6PoolArrayInput)(nil)).Elem(), VpnsslSettingsTunnelIpv6PoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListInput)(nil)).Elem(), VpnsslwebHostchecksoftwareCheckItemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListArrayInput)(nil)).Elem(), VpnsslwebHostchecksoftwareCheckItemListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListMd5Input)(nil)).Elem(), VpnsslwebHostchecksoftwareCheckItemListMd5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareCheckItemListMd5ArrayInput)(nil)).Elem(), VpnsslwebHostchecksoftwareCheckItemListMd5Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupArrayInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupBookmarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkArrayInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkFormDataInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupBookmarkFormDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayInput)(nil)).Elem(), VpnsslwebPortalBookmarkGroupBookmarkFormDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalHostCheckPolicyInput)(nil)).Elem(), VpnsslwebPortalHostCheckPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalHostCheckPolicyArrayInput)(nil)).Elem(), VpnsslwebPortalHostCheckPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpPoolInput)(nil)).Elem(), VpnsslwebPortalIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpPoolArrayInput)(nil)).Elem(), VpnsslwebPortalIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpv6PoolInput)(nil)).Elem(), VpnsslwebPortalIpv6PoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpv6PoolArrayInput)(nil)).Elem(), VpnsslwebPortalIpv6PoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpv6SplitTunnelingRoutingAddressInput)(nil)).Elem(), VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayInput)(nil)).Elem(), VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleInput)(nil)).Elem(), VpnsslwebPortalMacAddrCheckRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleArrayInput)(nil)).Elem(), VpnsslwebPortalMacAddrCheckRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleMacAddrListInput)(nil)).Elem(), VpnsslwebPortalMacAddrCheckRuleMacAddrListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayInput)(nil)).Elem(), VpnsslwebPortalMacAddrCheckRuleMacAddrListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalOsCheckListInput)(nil)).Elem(), VpnsslwebPortalOsCheckListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalOsCheckListArrayInput)(nil)).Elem(), VpnsslwebPortalOsCheckListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalSplitDnInput)(nil)).Elem(), VpnsslwebPortalSplitDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalSplitDnArrayInput)(nil)).Elem(), VpnsslwebPortalSplitDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalSplitTunnelingRoutingAddressInput)(nil)).Elem(), VpnsslwebPortalSplitTunnelingRoutingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebPortalSplitTunnelingRoutingAddressArrayInput)(nil)).Elem(), VpnsslwebPortalSplitTunnelingRoutingAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkInput)(nil)).Elem(), VpnsslwebUserbookmarkBookmarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkArrayInput)(nil)).Elem(), VpnsslwebUserbookmarkBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkFormDataInput)(nil)).Elem(), VpnsslwebUserbookmarkBookmarkFormDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUserbookmarkBookmarkFormDataArrayInput)(nil)).Elem(), VpnsslwebUserbookmarkBookmarkFormDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkInput)(nil)).Elem(), VpnsslwebUsergroupbookmarkBookmarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkArrayInput)(nil)).Elem(), VpnsslwebUsergroupbookmarkBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkFormDataInput)(nil)).Elem(), VpnsslwebUsergroupbookmarkBookmarkFormDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebUsergroupbookmarkBookmarkFormDataArrayInput)(nil)).Elem(), VpnsslwebUsergroupbookmarkBookmarkFormDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListInput)(nil)).Elem(), WafProfileAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListPtrInput)(nil)).Elem(), WafProfileAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListBlockedAddressInput)(nil)).Elem(), WafProfileAddressListBlockedAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListBlockedAddressArrayInput)(nil)).Elem(), WafProfileAddressListBlockedAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListTrustedAddressInput)(nil)).Elem(), WafProfileAddressListTrustedAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileAddressListTrustedAddressArrayInput)(nil)).Elem(), WafProfileAddressListTrustedAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintInput)(nil)).Elem(), WafProfileConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintPtrInput)(nil)).Elem(), WafProfileConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintContentLengthInput)(nil)).Elem(), WafProfileConstraintContentLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintContentLengthPtrInput)(nil)).Elem(), WafProfileConstraintContentLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintExceptionInput)(nil)).Elem(), WafProfileConstraintExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintExceptionArrayInput)(nil)).Elem(), WafProfileConstraintExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintHeaderLengthInput)(nil)).Elem(), WafProfileConstraintHeaderLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintHeaderLengthPtrInput)(nil)).Elem(), WafProfileConstraintHeaderLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintHostnameInput)(nil)).Elem(), WafProfileConstraintHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintHostnamePtrInput)(nil)).Elem(), WafProfileConstraintHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintLineLengthInput)(nil)).Elem(), WafProfileConstraintLineLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintLineLengthPtrInput)(nil)).Elem(), WafProfileConstraintLineLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMalformedInput)(nil)).Elem(), WafProfileConstraintMalformedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMalformedPtrInput)(nil)).Elem(), WafProfileConstraintMalformedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxCookieInput)(nil)).Elem(), WafProfileConstraintMaxCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxCookiePtrInput)(nil)).Elem(), WafProfileConstraintMaxCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxHeaderLineInput)(nil)).Elem(), WafProfileConstraintMaxHeaderLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxHeaderLinePtrInput)(nil)).Elem(), WafProfileConstraintMaxHeaderLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxRangeSegmentInput)(nil)).Elem(), WafProfileConstraintMaxRangeSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxRangeSegmentPtrInput)(nil)).Elem(), WafProfileConstraintMaxRangeSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxUrlParamInput)(nil)).Elem(), WafProfileConstraintMaxUrlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMaxUrlParamPtrInput)(nil)).Elem(), WafProfileConstraintMaxUrlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMethodInput)(nil)).Elem(), WafProfileConstraintMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintMethodPtrInput)(nil)).Elem(), WafProfileConstraintMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintParamLengthInput)(nil)).Elem(), WafProfileConstraintParamLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintParamLengthPtrInput)(nil)).Elem(), WafProfileConstraintParamLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintUrlParamLengthInput)(nil)).Elem(), WafProfileConstraintUrlParamLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintUrlParamLengthPtrInput)(nil)).Elem(), WafProfileConstraintUrlParamLengthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintVersionInput)(nil)).Elem(), WafProfileConstraintVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileConstraintVersionPtrInput)(nil)).Elem(), WafProfileConstraintVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileMethodInput)(nil)).Elem(), WafProfileMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileMethodPtrInput)(nil)).Elem(), WafProfileMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileMethodMethodPolicyInput)(nil)).Elem(), WafProfileMethodMethodPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileMethodMethodPolicyArrayInput)(nil)).Elem(), WafProfileMethodMethodPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureInput)(nil)).Elem(), WafProfileSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignaturePtrInput)(nil)).Elem(), WafProfileSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureCustomSignatureInput)(nil)).Elem(), WafProfileSignatureCustomSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureCustomSignatureArrayInput)(nil)).Elem(), WafProfileSignatureCustomSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureDisabledSignatureInput)(nil)).Elem(), WafProfileSignatureDisabledSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureDisabledSignatureArrayInput)(nil)).Elem(), WafProfileSignatureDisabledSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureDisabledSubClassInput)(nil)).Elem(), WafProfileSignatureDisabledSubClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureDisabledSubClassArrayInput)(nil)).Elem(), WafProfileSignatureDisabledSubClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureMainClassInput)(nil)).Elem(), WafProfileSignatureMainClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileSignatureMainClassArrayInput)(nil)).Elem(), WafProfileSignatureMainClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileUrlAccessInput)(nil)).Elem(), WafProfileUrlAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileUrlAccessArrayInput)(nil)).Elem(), WafProfileUrlAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileUrlAccessAccessPatternInput)(nil)).Elem(), WafProfileUrlAccessAccessPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileUrlAccessAccessPatternArrayInput)(nil)).Elem(), WafProfileUrlAccessAccessPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptCacheserviceDstPeerInput)(nil)).Elem(), WanoptCacheserviceDstPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptCacheserviceDstPeerArrayInput)(nil)).Elem(), WanoptCacheserviceDstPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptCacheserviceSrcPeerInput)(nil)).Elem(), WanoptCacheserviceSrcPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptCacheserviceSrcPeerArrayInput)(nil)).Elem(), WanoptCacheserviceSrcPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleHostDomainNameSuffixInput)(nil)).Elem(), WanoptContentdeliverynetworkruleHostDomainNameSuffixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleHostDomainNameSuffixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleContentIdInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleContentIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleContentIdPtrInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleContentIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleMatchEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleMatchEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryPatternInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleMatchEntryPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleMatchEntryPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleSkipEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleSkipEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryPatternInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleSkipEntryPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayInput)(nil)).Elem(), WanoptContentdeliverynetworkruleRuleSkipEntryPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileCifsInput)(nil)).Elem(), WanoptProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileCifsPtrInput)(nil)).Elem(), WanoptProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileFtpInput)(nil)).Elem(), WanoptProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileFtpPtrInput)(nil)).Elem(), WanoptProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileHttpInput)(nil)).Elem(), WanoptProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileHttpPtrInput)(nil)).Elem(), WanoptProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileMapiInput)(nil)).Elem(), WanoptProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileMapiPtrInput)(nil)).Elem(), WanoptProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileTcpInput)(nil)).Elem(), WanoptProfileTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileTcpPtrInput)(nil)).Elem(), WanoptProfileTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterContentEntryInput)(nil)).Elem(), WebfilterContentEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterContentEntryArrayInput)(nil)).Elem(), WebfilterContentEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterContentheaderEntryInput)(nil)).Elem(), WebfilterContentheaderEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterContentheaderEntryArrayInput)(nil)).Elem(), WebfilterContentheaderEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishInput)(nil)).Elem(), WebfilterProfileAntiphishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishPtrInput)(nil)).Elem(), WebfilterProfileAntiphishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishCustomPatternInput)(nil)).Elem(), WebfilterProfileAntiphishCustomPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishCustomPatternArrayInput)(nil)).Elem(), WebfilterProfileAntiphishCustomPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishInspectionEntryInput)(nil)).Elem(), WebfilterProfileAntiphishInspectionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileAntiphishInspectionEntryArrayInput)(nil)).Elem(), WebfilterProfileAntiphishInspectionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterInput)(nil)).Elem(), WebfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterPtrInput)(nil)).Elem(), WebfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterEntryInput)(nil)).Elem(), WebfilterProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterEntryArrayInput)(nil)).Elem(), WebfilterProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterEntryFileTypeInput)(nil)).Elem(), WebfilterProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), WebfilterProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfInput)(nil)).Elem(), WebfilterProfileFtgdWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfPtrInput)(nil)).Elem(), WebfilterProfileFtgdWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfFilterInput)(nil)).Elem(), WebfilterProfileFtgdWfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfFilterArrayInput)(nil)).Elem(), WebfilterProfileFtgdWfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfFilterAuthUsrGrpInput)(nil)).Elem(), WebfilterProfileFtgdWfFilterAuthUsrGrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfFilterAuthUsrGrpArrayInput)(nil)).Elem(), WebfilterProfileFtgdWfFilterAuthUsrGrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfQuotaInput)(nil)).Elem(), WebfilterProfileFtgdWfQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileFtgdWfQuotaArrayInput)(nil)).Elem(), WebfilterProfileFtgdWfQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverrideInput)(nil)).Elem(), WebfilterProfileOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverridePtrInput)(nil)).Elem(), WebfilterProfileOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverrideOvrdUserGroupInput)(nil)).Elem(), WebfilterProfileOverrideOvrdUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverrideOvrdUserGroupArrayInput)(nil)).Elem(), WebfilterProfileOverrideOvrdUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverrideProfileInput)(nil)).Elem(), WebfilterProfileOverrideProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileOverrideProfileArrayInput)(nil)).Elem(), WebfilterProfileOverrideProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWebInput)(nil)).Elem(), WebfilterProfileWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWebPtrInput)(nil)).Elem(), WebfilterProfileWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWebKeywordMatchInput)(nil)).Elem(), WebfilterProfileWebKeywordMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWebKeywordMatchArrayInput)(nil)).Elem(), WebfilterProfileWebKeywordMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWispServerInput)(nil)).Elem(), WebfilterProfileWispServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileWispServerArrayInput)(nil)).Elem(), WebfilterProfileWispServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileYoutubeChannelFilterInput)(nil)).Elem(), WebfilterProfileYoutubeChannelFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterProfileYoutubeChannelFilterArrayInput)(nil)).Elem(), WebfilterProfileYoutubeChannelFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterUrlfilterEntryInput)(nil)).Elem(), WebfilterUrlfilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterUrlfilterEntryArrayInput)(nil)).Elem(), WebfilterUrlfilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicyInput)(nil)).Elem(), WebproxyExplicitPacPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicyArrayInput)(nil)).Elem(), WebproxyExplicitPacPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicyDstaddrInput)(nil)).Elem(), WebproxyExplicitPacPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicyDstaddrArrayInput)(nil)).Elem(), WebproxyExplicitPacPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr6Input)(nil)).Elem(), WebproxyExplicitPacPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddr6ArrayInput)(nil)).Elem(), WebproxyExplicitPacPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddrInput)(nil)).Elem(), WebproxyExplicitPacPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitPacPolicySrcaddrArrayInput)(nil)).Elem(), WebproxyExplicitPacPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyForwardservergroupServerListInput)(nil)).Elem(), WebproxyForwardservergroupServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyForwardservergroupServerListArrayInput)(nil)).Elem(), WebproxyForwardservergroupServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr6Input)(nil)).Elem(), WebproxyGlobalLearnClientIpSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddr6ArrayInput)(nil)).Elem(), WebproxyGlobalLearnClientIpSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddrInput)(nil)).Elem(), WebproxyGlobalLearnClientIpSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyGlobalLearnClientIpSrcaddrArrayInput)(nil)).Elem(), WebproxyGlobalLearnClientIpSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderInput)(nil)).Elem(), WebproxyProfileHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderArrayInput)(nil)).Elem(), WebproxyProfileHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderDstaddr6Input)(nil)).Elem(), WebproxyProfileHeaderDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderDstaddr6ArrayInput)(nil)).Elem(), WebproxyProfileHeaderDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderDstaddrInput)(nil)).Elem(), WebproxyProfileHeaderDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyProfileHeaderDstaddrArrayInput)(nil)).Elem(), WebproxyProfileHeaderDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv4RuleInput)(nil)).Elem(), WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayInput)(nil)).Elem(), WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv6RuleInput)(nil)).Elem(), WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayInput)(nil)).Elem(), WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAddrgrpAddressInput)(nil)).Elem(), WirelesscontrollerAddrgrpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerAddrgrpAddressArrayInput)(nil)).Elem(), WirelesscontrollerAddrgrpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerApcfgprofileCommandListInput)(nil)).Elem(), WirelesscontrollerApcfgprofileCommandListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerApcfgprofileCommandListArrayInput)(nil)).Elem(), WirelesscontrollerApcfgprofileCommandListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerArrpprofileDarrpOptimizeScheduleInput)(nil)).Elem(), WirelesscontrollerArrpprofileDarrpOptimizeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayInput)(nil)).Elem(), WirelesscontrollerArrpprofileDarrpOptimizeScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerBonjourprofilePolicyListInput)(nil)).Elem(), WirelesscontrollerBonjourprofilePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerBonjourprofilePolicyListArrayInput)(nil)).Elem(), WirelesscontrollerBonjourprofilePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerIntercontrollerInterControllerPeerInput)(nil)).Elem(), WirelesscontrollerIntercontrollerInterControllerPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerIntercontrollerInterControllerPeerArrayInput)(nil)).Elem(), WirelesscontrollerIntercontrollerInterControllerPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupArrayInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupMpskKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupMpskKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayInput)(nil)).Elem(), WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBeInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmBeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBeArrayInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmBeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBkInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmBkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmBkArrayInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmBkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmViInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmViArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmViArrayInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmViArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVoInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmVoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerQosprofileDscpWmmVoArrayInput)(nil)).Elem(), WirelesscontrollerQosprofileDscpWmmVoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSettingDarrpOptimizeScheduleInput)(nil)).Elem(), WirelesscontrollerSettingDarrpOptimizeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSettingDarrpOptimizeScheduleArrayInput)(nil)).Elem(), WirelesscontrollerSettingDarrpOptimizeScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSettingOffendingSsidInput)(nil)).Elem(), WirelesscontrollerSettingOffendingSsidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSettingOffendingSsidArrayInput)(nil)).Elem(), WirelesscontrollerSettingOffendingSsidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpCommunityInput)(nil)).Elem(), WirelesscontrollerSnmpCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpCommunityArrayInput)(nil)).Elem(), WirelesscontrollerSnmpCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpCommunityHostInput)(nil)).Elem(), WirelesscontrollerSnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpCommunityHostArrayInput)(nil)).Elem(), WirelesscontrollerSnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpUserInput)(nil)).Elem(), WirelesscontrollerSnmpUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerSnmpUserArrayInput)(nil)).Elem(), WirelesscontrollerSnmpUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerTimersDarrpTimeInput)(nil)).Elem(), WirelesscontrollerTimersDarrpTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerTimersDarrpTimeArrayInput)(nil)).Elem(), WirelesscontrollerTimersDarrpTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMacFilterListInput)(nil)).Elem(), WirelesscontrollerVapMacFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMacFilterListArrayInput)(nil)).Elem(), WirelesscontrollerVapMacFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMpskKeyInput)(nil)).Elem(), WirelesscontrollerVapMpskKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMpskKeyArrayInput)(nil)).Elem(), WirelesscontrollerVapMpskKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMpskKeyMpskScheduleInput)(nil)).Elem(), WirelesscontrollerVapMpskKeyMpskScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapMpskKeyMpskScheduleArrayInput)(nil)).Elem(), WirelesscontrollerVapMpskKeyMpskScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapPortalMessageOverridesInput)(nil)).Elem(), WirelesscontrollerVapPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapPortalMessageOverridesPtrInput)(nil)).Elem(), WirelesscontrollerVapPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapRadiusMacAuthUsergroupInput)(nil)).Elem(), WirelesscontrollerVapRadiusMacAuthUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapRadiusMacAuthUsergroupArrayInput)(nil)).Elem(), WirelesscontrollerVapRadiusMacAuthUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapSelectedUsergroupInput)(nil)).Elem(), WirelesscontrollerVapSelectedUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapSelectedUsergroupArrayInput)(nil)).Elem(), WirelesscontrollerVapSelectedUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapUsergroupInput)(nil)).Elem(), WirelesscontrollerVapUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapUsergroupArrayInput)(nil)).Elem(), WirelesscontrollerVapUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapVlanNameInput)(nil)).Elem(), WirelesscontrollerVapVlanNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapVlanNameArrayInput)(nil)).Elem(), WirelesscontrollerVapVlanNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapVlanPoolInput)(nil)).Elem(), WirelesscontrollerVapVlanPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapVlanPoolArrayInput)(nil)).Elem(), WirelesscontrollerVapVlanPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapgroupVapInput)(nil)).Elem(), WirelesscontrollerVapgroupVapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerVapgroupVapArrayInput)(nil)).Elem(), WirelesscontrollerVapgroupVapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWidsprofileApBgscanDisableScheduleInput)(nil)).Elem(), WirelesscontrollerWidsprofileApBgscanDisableScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayInput)(nil)).Elem(), WirelesscontrollerWidsprofileApBgscanDisableScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpLanInput)(nil)).Elem(), WirelesscontrollerWtpLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpLanPtrInput)(nil)).Elem(), WirelesscontrollerWtpLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1Input)(nil)).Elem(), WirelesscontrollerWtpRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1PtrInput)(nil)).Elem(), WirelesscontrollerWtpRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1ChannelInput)(nil)).Elem(), WirelesscontrollerWtpRadio1ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio1ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1VapInput)(nil)).Elem(), WirelesscontrollerWtpRadio1VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio1VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio1VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2Input)(nil)).Elem(), WirelesscontrollerWtpRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2PtrInput)(nil)).Elem(), WirelesscontrollerWtpRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2ChannelInput)(nil)).Elem(), WirelesscontrollerWtpRadio2ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio2ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2VapInput)(nil)).Elem(), WirelesscontrollerWtpRadio2VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio2VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio2VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3Input)(nil)).Elem(), WirelesscontrollerWtpRadio3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3PtrInput)(nil)).Elem(), WirelesscontrollerWtpRadio3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3ChannelInput)(nil)).Elem(), WirelesscontrollerWtpRadio3ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio3ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3VapInput)(nil)).Elem(), WirelesscontrollerWtpRadio3VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio3VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio3VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4Input)(nil)).Elem(), WirelesscontrollerWtpRadio4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4PtrInput)(nil)).Elem(), WirelesscontrollerWtpRadio4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4ChannelInput)(nil)).Elem(), WirelesscontrollerWtpRadio4ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio4ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4VapInput)(nil)).Elem(), WirelesscontrollerWtpRadio4VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpRadio4VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpRadio4VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpSplitTunnelingAclInput)(nil)).Elem(), WirelesscontrollerWtpSplitTunnelingAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpSplitTunnelingAclArrayInput)(nil)).Elem(), WirelesscontrollerWtpSplitTunnelingAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpgroupWtpInput)(nil)).Elem(), WirelesscontrollerWtpgroupWtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpgroupWtpArrayInput)(nil)).Elem(), WirelesscontrollerWtpgroupWtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileDenyMacListInput)(nil)).Elem(), WirelesscontrollerWtpprofileDenyMacListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileDenyMacListArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileDenyMacListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileEslSesDongleInput)(nil)).Elem(), WirelesscontrollerWtpprofileEslSesDongleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileEslSesDonglePtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileEslSesDongleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLanInput)(nil)).Elem(), WirelesscontrollerWtpprofileLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLanPtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLbsInput)(nil)).Elem(), WirelesscontrollerWtpprofileLbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLbsPtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileLbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLedScheduleInput)(nil)).Elem(), WirelesscontrollerWtpprofileLedScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileLedScheduleArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileLedScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofilePlatformInput)(nil)).Elem(), WirelesscontrollerWtpprofilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofilePlatformPtrInput)(nil)).Elem(), WirelesscontrollerWtpprofilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1Input)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1PtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1ChannelInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1VapInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio1VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio1VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2Input)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2PtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2ChannelInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2VapInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio2VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio2VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3Input)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3PtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3ChannelInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3VapInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio3VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio3VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4Input)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4PtrInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4ChannelInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4ChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4ChannelArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4ChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4VapInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4VapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileRadio4VapArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileRadio4VapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileSplitTunnelingAclInput)(nil)).Elem(), WirelesscontrollerWtpprofileSplitTunnelingAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelesscontrollerWtpprofileSplitTunnelingAclArrayInput)(nil)).Elem(), WirelesscontrollerWtpprofileSplitTunnelingAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListInput)(nil)).Elem(), Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqproamingconsortiumOiListInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameValueListInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenuenameValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenueurlValueListInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenueurlValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenueurlValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameValueListInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpoperatornameValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpoperatornameValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20HsprofileOsuProviderInput)(nil)).Elem(), Wirelesscontrollerhotspot20HsprofileOsuProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20HsprofileOsuProviderArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20HsprofileOsuProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20IconIconListInput)(nil)).Elem(), Wirelesscontrollerhotspot20IconIconListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20IconIconListArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20IconIconListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpExceptInput)(nil)).Elem(), Wirelesscontrollerhotspot20QosmapDscpExceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpExceptArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20QosmapDscpExceptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpRangeInput)(nil)).Elem(), Wirelesscontrollerhotspot20QosmapDscpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20QosmapDscpRangeArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20QosmapDscpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6ListInput)(nil)).Elem(), GetFirewallAddress6ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6ListArrayInput)(nil)).Elem(), GetFirewallAddress6ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6MacaddrInput)(nil)).Elem(), GetFirewallAddress6MacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6MacaddrArrayInput)(nil)).Elem(), GetFirewallAddress6MacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6SubnetSegmentInput)(nil)).Elem(), GetFirewallAddress6SubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6SubnetSegmentArrayInput)(nil)).Elem(), GetFirewallAddress6SubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6TaggingInput)(nil)).Elem(), GetFirewallAddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6TaggingArrayInput)(nil)).Elem(), GetFirewallAddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6TaggingTagInput)(nil)).Elem(), GetFirewallAddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6TaggingTagArrayInput)(nil)).Elem(), GetFirewallAddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentInput)(nil)).Elem(), GetFirewallAddress6templateSubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentArrayInput)(nil)).Elem(), GetFirewallAddress6templateSubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentValueInput)(nil)).Elem(), GetFirewallAddress6templateSubnetSegmentValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddress6templateSubnetSegmentValueArrayInput)(nil)).Elem(), GetFirewallAddress6templateSubnetSegmentValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressFssoGroupInput)(nil)).Elem(), GetFirewallAddressFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressFssoGroupArrayInput)(nil)).Elem(), GetFirewallAddressFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressListInput)(nil)).Elem(), GetFirewallAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressListArrayInput)(nil)).Elem(), GetFirewallAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressMacaddrInput)(nil)).Elem(), GetFirewallAddressMacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressMacaddrArrayInput)(nil)).Elem(), GetFirewallAddressMacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressTaggingInput)(nil)).Elem(), GetFirewallAddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressTaggingArrayInput)(nil)).Elem(), GetFirewallAddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressTaggingTagInput)(nil)).Elem(), GetFirewallAddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressTaggingTagArrayInput)(nil)).Elem(), GetFirewallAddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6MemberInput)(nil)).Elem(), GetFirewallAddrgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6MemberArrayInput)(nil)).Elem(), GetFirewallAddrgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6TaggingInput)(nil)).Elem(), GetFirewallAddrgrp6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6TaggingArrayInput)(nil)).Elem(), GetFirewallAddrgrp6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6TaggingTagInput)(nil)).Elem(), GetFirewallAddrgrp6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrp6TaggingTagArrayInput)(nil)).Elem(), GetFirewallAddrgrp6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpExcludeMemberInput)(nil)).Elem(), GetFirewallAddrgrpExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpExcludeMemberArrayInput)(nil)).Elem(), GetFirewallAddrgrpExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpMemberInput)(nil)).Elem(), GetFirewallAddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpMemberArrayInput)(nil)).Elem(), GetFirewallAddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpTaggingInput)(nil)).Elem(), GetFirewallAddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpTaggingArrayInput)(nil)).Elem(), GetFirewallAddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpTaggingTagInput)(nil)).Elem(), GetFirewallAddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddrgrpTaggingTagArrayInput)(nil)).Elem(), GetFirewallAddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr6Input)(nil)).Elem(), GetFirewallCentralsnatmapDstAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstAddr6ArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapDstAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstAddrInput)(nil)).Elem(), GetFirewallCentralsnatmapDstAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstAddrArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapDstAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstintfInput)(nil)).Elem(), GetFirewallCentralsnatmapDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapDstintfArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool6Input)(nil)).Elem(), GetFirewallCentralsnatmapNatIppool6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapNatIppool6ArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapNatIppool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapNatIppoolInput)(nil)).Elem(), GetFirewallCentralsnatmapNatIppoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapNatIppoolArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapNatIppoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr6Input)(nil)).Elem(), GetFirewallCentralsnatmapOrigAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddr6ArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapOrigAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddrInput)(nil)).Elem(), GetFirewallCentralsnatmapOrigAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapOrigAddrArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapOrigAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapSrcintfInput)(nil)).Elem(), GetFirewallCentralsnatmapSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallCentralsnatmapSrcintfArrayInput)(nil)).Elem(), GetFirewallCentralsnatmapSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6AnomalyInput)(nil)).Elem(), GetFirewallDoSpolicy6AnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6AnomalyArrayInput)(nil)).Elem(), GetFirewallDoSpolicy6AnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6DstaddrInput)(nil)).Elem(), GetFirewallDoSpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6DstaddrArrayInput)(nil)).Elem(), GetFirewallDoSpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6ServiceInput)(nil)).Elem(), GetFirewallDoSpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6ServiceArrayInput)(nil)).Elem(), GetFirewallDoSpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6SrcaddrInput)(nil)).Elem(), GetFirewallDoSpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicy6SrcaddrArrayInput)(nil)).Elem(), GetFirewallDoSpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyAnomalyInput)(nil)).Elem(), GetFirewallDoSpolicyAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyAnomalyArrayInput)(nil)).Elem(), GetFirewallDoSpolicyAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyDstaddrInput)(nil)).Elem(), GetFirewallDoSpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyDstaddrArrayInput)(nil)).Elem(), GetFirewallDoSpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyServiceInput)(nil)).Elem(), GetFirewallDoSpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicyServiceArrayInput)(nil)).Elem(), GetFirewallDoSpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicySrcaddrInput)(nil)).Elem(), GetFirewallDoSpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDoSpolicySrcaddrArrayInput)(nil)).Elem(), GetFirewallDoSpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryArrayInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst6Input)(nil)).Elem(), GetFirewallInternetservicecustomEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryDst6ArrayInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryDstInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryDstArrayInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryPortRangeInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomEntryPortRangeArrayInput)(nil)).Elem(), GetFirewallInternetservicecustomEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomgroupMemberInput)(nil)).Elem(), GetFirewallInternetservicecustomgroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicecustomgroupMemberArrayInput)(nil)).Elem(), GetFirewallInternetservicecustomgroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryInput)(nil)).Elem(), GetFirewallInternetservicedefinitionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryArrayInput)(nil)).Elem(), GetFirewallInternetservicedefinitionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryPortRangeInput)(nil)).Elem(), GetFirewallInternetservicedefinitionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicedefinitionEntryPortRangeArrayInput)(nil)).Elem(), GetFirewallInternetservicedefinitionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIp6RangeInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIpRangeInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryIpRangeArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryPortRangeInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionDisableEntryPortRangeArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionDisableEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst6Input)(nil)).Elem(), GetFirewallInternetserviceextensionEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDst6ArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDstInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryDstArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryPortRangeInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetserviceextensionEntryPortRangeArrayInput)(nil)).Elem(), GetFirewallInternetserviceextensionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicegroupMemberInput)(nil)).Elem(), GetFirewallInternetservicegroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInternetservicegroupMemberArrayInput)(nil)).Elem(), GetFirewallInternetservicegroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddress6TaggingInput)(nil)).Elem(), GetFirewallMulticastaddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddress6TaggingArrayInput)(nil)).Elem(), GetFirewallMulticastaddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddress6TaggingTagInput)(nil)).Elem(), GetFirewallMulticastaddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddress6TaggingTagArrayInput)(nil)).Elem(), GetFirewallMulticastaddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddressTaggingInput)(nil)).Elem(), GetFirewallMulticastaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddressTaggingArrayInput)(nil)).Elem(), GetFirewallMulticastaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddressTaggingTagInput)(nil)).Elem(), GetFirewallMulticastaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMulticastaddressTaggingTagArrayInput)(nil)).Elem(), GetFirewallMulticastaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46DstaddrInput)(nil)).Elem(), GetFirewallPolicy46DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46DstaddrArrayInput)(nil)).Elem(), GetFirewallPolicy46DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46PoolnameInput)(nil)).Elem(), GetFirewallPolicy46PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46PoolnameArrayInput)(nil)).Elem(), GetFirewallPolicy46PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46ServiceInput)(nil)).Elem(), GetFirewallPolicy46ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46ServiceArrayInput)(nil)).Elem(), GetFirewallPolicy46ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46SrcaddrInput)(nil)).Elem(), GetFirewallPolicy46SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy46SrcaddrArrayInput)(nil)).Elem(), GetFirewallPolicy46SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64DstaddrInput)(nil)).Elem(), GetFirewallPolicy64DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64DstaddrArrayInput)(nil)).Elem(), GetFirewallPolicy64DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64PoolnameInput)(nil)).Elem(), GetFirewallPolicy64PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64PoolnameArrayInput)(nil)).Elem(), GetFirewallPolicy64PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64ServiceInput)(nil)).Elem(), GetFirewallPolicy64ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64ServiceArrayInput)(nil)).Elem(), GetFirewallPolicy64ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64SrcaddrInput)(nil)).Elem(), GetFirewallPolicy64SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy64SrcaddrArrayInput)(nil)).Elem(), GetFirewallPolicy64SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6AppCategoryInput)(nil)).Elem(), GetFirewallPolicy6AppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6AppCategoryArrayInput)(nil)).Elem(), GetFirewallPolicy6AppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6AppGroupInput)(nil)).Elem(), GetFirewallPolicy6AppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6AppGroupArrayInput)(nil)).Elem(), GetFirewallPolicy6AppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6ApplicationInput)(nil)).Elem(), GetFirewallPolicy6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6ApplicationArrayInput)(nil)).Elem(), GetFirewallPolicy6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6CustomLogFieldInput)(nil)).Elem(), GetFirewallPolicy6CustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6CustomLogFieldArrayInput)(nil)).Elem(), GetFirewallPolicy6CustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DeviceInput)(nil)).Elem(), GetFirewallPolicy6DeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DeviceArrayInput)(nil)).Elem(), GetFirewallPolicy6DeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DstaddrInput)(nil)).Elem(), GetFirewallPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DstaddrArrayInput)(nil)).Elem(), GetFirewallPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DstintfInput)(nil)).Elem(), GetFirewallPolicy6DstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6DstintfArrayInput)(nil)).Elem(), GetFirewallPolicy6DstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6FssoGroupInput)(nil)).Elem(), GetFirewallPolicy6FssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6FssoGroupArrayInput)(nil)).Elem(), GetFirewallPolicy6FssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6GroupInput)(nil)).Elem(), GetFirewallPolicy6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6GroupArrayInput)(nil)).Elem(), GetFirewallPolicy6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6PoolnameInput)(nil)).Elem(), GetFirewallPolicy6PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6PoolnameArrayInput)(nil)).Elem(), GetFirewallPolicy6PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6ServiceInput)(nil)).Elem(), GetFirewallPolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6ServiceArrayInput)(nil)).Elem(), GetFirewallPolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SrcaddrInput)(nil)).Elem(), GetFirewallPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SrcaddrArrayInput)(nil)).Elem(), GetFirewallPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SrcintfInput)(nil)).Elem(), GetFirewallPolicy6SrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SrcintfArrayInput)(nil)).Elem(), GetFirewallPolicy6SrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SslMirrorIntfInput)(nil)).Elem(), GetFirewallPolicy6SslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6SslMirrorIntfArrayInput)(nil)).Elem(), GetFirewallPolicy6SslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6UrlCategoryInput)(nil)).Elem(), GetFirewallPolicy6UrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6UrlCategoryArrayInput)(nil)).Elem(), GetFirewallPolicy6UrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6UserInput)(nil)).Elem(), GetFirewallPolicy6UserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicy6UserArrayInput)(nil)).Elem(), GetFirewallPolicy6UserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyAppCategoryInput)(nil)).Elem(), GetFirewallPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyAppCategoryArrayInput)(nil)).Elem(), GetFirewallPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyAppGroupInput)(nil)).Elem(), GetFirewallPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyAppGroupArrayInput)(nil)).Elem(), GetFirewallPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyApplicationInput)(nil)).Elem(), GetFirewallPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyApplicationArrayInput)(nil)).Elem(), GetFirewallPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyCustomLogFieldInput)(nil)).Elem(), GetFirewallPolicyCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyCustomLogFieldArrayInput)(nil)).Elem(), GetFirewallPolicyCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDeviceInput)(nil)).Elem(), GetFirewallPolicyDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDeviceArrayInput)(nil)).Elem(), GetFirewallPolicyDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstaddr6Input)(nil)).Elem(), GetFirewallPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstaddr6ArrayInput)(nil)).Elem(), GetFirewallPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstaddrInput)(nil)).Elem(), GetFirewallPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstaddrArrayInput)(nil)).Elem(), GetFirewallPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstintfInput)(nil)).Elem(), GetFirewallPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDstintfArrayInput)(nil)).Elem(), GetFirewallPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyFssoGroupInput)(nil)).Elem(), GetFirewallPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyFssoGroupArrayInput)(nil)).Elem(), GetFirewallPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyGroupInput)(nil)).Elem(), GetFirewallPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyGroupArrayInput)(nil)).Elem(), GetFirewallPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6CustomInput)(nil)).Elem(), GetFirewallPolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6CustomArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6CustomGroupInput)(nil)).Elem(), GetFirewallPolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6GroupInput)(nil)).Elem(), GetFirewallPolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6GroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6NameInput)(nil)).Elem(), GetFirewallPolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6NameArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcGroupInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcNameInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetService6SrcNameArrayInput)(nil)).Elem(), GetFirewallPolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomInput)(nil)).Elem(), GetFirewallPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetFirewallPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceGroupInput)(nil)).Elem(), GetFirewallPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceIdInput)(nil)).Elem(), GetFirewallPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceNameInput)(nil)).Elem(), GetFirewallPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceNameArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcGroupInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcIdInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcNameInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), GetFirewallPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNetworkServiceDynamicInput)(nil)).Elem(), GetFirewallPolicyNetworkServiceDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNetworkServiceDynamicArrayInput)(nil)).Elem(), GetFirewallPolicyNetworkServiceDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNetworkServiceSrcDynamicInput)(nil)).Elem(), GetFirewallPolicyNetworkServiceSrcDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNetworkServiceSrcDynamicArrayInput)(nil)).Elem(), GetFirewallPolicyNetworkServiceSrcDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNtlmEnabledBrowserInput)(nil)).Elem(), GetFirewallPolicyNtlmEnabledBrowserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyNtlmEnabledBrowserArrayInput)(nil)).Elem(), GetFirewallPolicyNtlmEnabledBrowserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyPoolname6Input)(nil)).Elem(), GetFirewallPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyPoolname6ArrayInput)(nil)).Elem(), GetFirewallPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyPoolnameInput)(nil)).Elem(), GetFirewallPolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyPoolnameArrayInput)(nil)).Elem(), GetFirewallPolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyRtpAddrInput)(nil)).Elem(), GetFirewallPolicyRtpAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyRtpAddrArrayInput)(nil)).Elem(), GetFirewallPolicyRtpAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyServiceInput)(nil)).Elem(), GetFirewallPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyServiceArrayInput)(nil)).Elem(), GetFirewallPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySgtInput)(nil)).Elem(), GetFirewallPolicySgtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySgtArrayInput)(nil)).Elem(), GetFirewallPolicySgtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcVendorMacInput)(nil)).Elem(), GetFirewallPolicySrcVendorMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcVendorMacArrayInput)(nil)).Elem(), GetFirewallPolicySrcVendorMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcaddr6Input)(nil)).Elem(), GetFirewallPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcaddr6ArrayInput)(nil)).Elem(), GetFirewallPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcaddrInput)(nil)).Elem(), GetFirewallPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcaddrArrayInput)(nil)).Elem(), GetFirewallPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcintfInput)(nil)).Elem(), GetFirewallPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySrcintfArrayInput)(nil)).Elem(), GetFirewallPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySslMirrorIntfInput)(nil)).Elem(), GetFirewallPolicySslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicySslMirrorIntfArrayInput)(nil)).Elem(), GetFirewallPolicySslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyUrlCategoryInput)(nil)).Elem(), GetFirewallPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyUrlCategoryArrayInput)(nil)).Elem(), GetFirewallPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyUserInput)(nil)).Elem(), GetFirewallPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyUserArrayInput)(nil)).Elem(), GetFirewallPolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyZtnaEmsTagInput)(nil)).Elem(), GetFirewallPolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyZtnaEmsTagArrayInput)(nil)).Elem(), GetFirewallPolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyZtnaGeoTagInput)(nil)).Elem(), GetFirewallPolicyZtnaGeoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyZtnaGeoTagArrayInput)(nil)).Elem(), GetFirewallPolicyZtnaGeoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsCifArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsCifArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifServerKeytabInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsCifServerKeytabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsCifServerKeytabArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsCifServerKeytabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsDnInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsDnArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsFtpInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsFtpArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsHttpInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsHttpArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsImapInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsImapArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsImapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsMailSignatureInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsMailSignatureArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsMailSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsMapiInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsMapiArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsMapiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsNntpInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsNntpArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsPop3Input)(nil)).Elem(), GetFirewallProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsPop3ArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsPop3Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsSmtpInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsSmtpArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsSmtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsSshInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProfileprotocoloptionsSshArrayInput)(nil)).Elem(), GetFirewallProfileprotocoloptionsSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressApplicationInput)(nil)).Elem(), GetFirewallProxyaddressApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressApplicationArrayInput)(nil)).Elem(), GetFirewallProxyaddressApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressCategoryInput)(nil)).Elem(), GetFirewallProxyaddressCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressCategoryArrayInput)(nil)).Elem(), GetFirewallProxyaddressCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressHeaderGroupInput)(nil)).Elem(), GetFirewallProxyaddressHeaderGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressHeaderGroupArrayInput)(nil)).Elem(), GetFirewallProxyaddressHeaderGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressTaggingInput)(nil)).Elem(), GetFirewallProxyaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressTaggingArrayInput)(nil)).Elem(), GetFirewallProxyaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressTaggingTagInput)(nil)).Elem(), GetFirewallProxyaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddressTaggingTagArrayInput)(nil)).Elem(), GetFirewallProxyaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpMemberInput)(nil)).Elem(), GetFirewallProxyaddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpMemberArrayInput)(nil)).Elem(), GetFirewallProxyaddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingInput)(nil)).Elem(), GetFirewallProxyaddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingArrayInput)(nil)).Elem(), GetFirewallProxyaddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingTagInput)(nil)).Elem(), GetFirewallProxyaddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxyaddrgrpTaggingTagArrayInput)(nil)).Elem(), GetFirewallProxyaddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyAccessProxy6Input)(nil)).Elem(), GetFirewallProxypolicyAccessProxy6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyAccessProxy6ArrayInput)(nil)).Elem(), GetFirewallProxypolicyAccessProxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyAccessProxyInput)(nil)).Elem(), GetFirewallProxypolicyAccessProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyAccessProxyArrayInput)(nil)).Elem(), GetFirewallProxypolicyAccessProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstaddr6Input)(nil)).Elem(), GetFirewallProxypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstaddr6ArrayInput)(nil)).Elem(), GetFirewallProxypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstaddrInput)(nil)).Elem(), GetFirewallProxypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstaddrArrayInput)(nil)).Elem(), GetFirewallProxypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstintfInput)(nil)).Elem(), GetFirewallProxypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyDstintfArrayInput)(nil)).Elem(), GetFirewallProxypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyGroupInput)(nil)).Elem(), GetFirewallProxypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyGroupArrayInput)(nil)).Elem(), GetFirewallProxypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceGroupInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceIdInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceIdArrayInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceNameInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyInternetServiceNameArrayInput)(nil)).Elem(), GetFirewallProxypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyPoolnameInput)(nil)).Elem(), GetFirewallProxypolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyPoolnameArrayInput)(nil)).Elem(), GetFirewallProxypolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyServiceInput)(nil)).Elem(), GetFirewallProxypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyServiceArrayInput)(nil)).Elem(), GetFirewallProxypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcaddr6Input)(nil)).Elem(), GetFirewallProxypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcaddr6ArrayInput)(nil)).Elem(), GetFirewallProxypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcaddrInput)(nil)).Elem(), GetFirewallProxypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcaddrArrayInput)(nil)).Elem(), GetFirewallProxypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcintfInput)(nil)).Elem(), GetFirewallProxypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicySrcintfArrayInput)(nil)).Elem(), GetFirewallProxypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyUserInput)(nil)).Elem(), GetFirewallProxypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyUserArrayInput)(nil)).Elem(), GetFirewallProxypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyZtnaEmsTagInput)(nil)).Elem(), GetFirewallProxypolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallProxypolicyZtnaEmsTagArrayInput)(nil)).Elem(), GetFirewallProxypolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyAppCategoryInput)(nil)).Elem(), GetFirewallconsolidatedPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyAppCategoryArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyAppGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyAppGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyApplicationInput)(nil)).Elem(), GetFirewallconsolidatedPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyApplicationArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr4Input)(nil)).Elem(), GetFirewallconsolidatedPolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr4ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr6Input)(nil)).Elem(), GetFirewallconsolidatedPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstaddr6ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstintfInput)(nil)).Elem(), GetFirewallconsolidatedPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyDstintfArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyFssoGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyFssoGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceIdInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceNameInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceNameArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcGroupInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcIdInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcNameInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname4Input)(nil)).Elem(), GetFirewallconsolidatedPolicyPoolname4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname4ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyPoolname4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname6Input)(nil)).Elem(), GetFirewallconsolidatedPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyPoolname6ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyServiceInput)(nil)).Elem(), GetFirewallconsolidatedPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyServiceArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr4Input)(nil)).Elem(), GetFirewallconsolidatedPolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr4ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr6Input)(nil)).Elem(), GetFirewallconsolidatedPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcaddr6ArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcintfInput)(nil)).Elem(), GetFirewallconsolidatedPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicySrcintfArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyUrlCategoryInput)(nil)).Elem(), GetFirewallconsolidatedPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyUrlCategoryArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyUserInput)(nil)).Elem(), GetFirewallconsolidatedPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallconsolidatedPolicyUserArrayInput)(nil)).Elem(), GetFirewallconsolidatedPolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallscheduleGroupMemberInput)(nil)).Elem(), GetFirewallscheduleGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallscheduleGroupMemberArrayInput)(nil)).Elem(), GetFirewallscheduleGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceCustomAppCategoryInput)(nil)).Elem(), GetFirewallserviceCustomAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceCustomAppCategoryArrayInput)(nil)).Elem(), GetFirewallserviceCustomAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceCustomApplicationInput)(nil)).Elem(), GetFirewallserviceCustomApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceCustomApplicationArrayInput)(nil)).Elem(), GetFirewallserviceCustomApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceGroupMemberInput)(nil)).Elem(), GetFirewallserviceGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallserviceGroupMemberArrayInput)(nil)).Elem(), GetFirewallserviceGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallwildcardfqdnGroupMemberInput)(nil)).Elem(), GetFirewallwildcardfqdnGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallwildcardfqdnGroupMemberArrayInput)(nil)).Elem(), GetFirewallwildcardfqdnGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAccesslist6RuleInput)(nil)).Elem(), GetRouterAccesslist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAccesslist6RuleArrayInput)(nil)).Elem(), GetRouterAccesslist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAccesslistRuleInput)(nil)).Elem(), GetRouterAccesslistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAccesslistRuleArrayInput)(nil)).Elem(), GetRouterAccesslistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAspathlistRuleInput)(nil)).Elem(), GetRouterAspathlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterAspathlistRuleArrayInput)(nil)).Elem(), GetRouterAspathlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfd6MultihopTemplateInput)(nil)).Elem(), GetRouterBfd6MultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfd6MultihopTemplateArrayInput)(nil)).Elem(), GetRouterBfd6MultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfd6NeighborInput)(nil)).Elem(), GetRouterBfd6NeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfd6NeighborArrayInput)(nil)).Elem(), GetRouterBfd6NeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfdMultihopTemplateInput)(nil)).Elem(), GetRouterBfdMultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfdMultihopTemplateArrayInput)(nil)).Elem(), GetRouterBfdMultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfdNeighborInput)(nil)).Elem(), GetRouterBfdNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBfdNeighborArrayInput)(nil)).Elem(), GetRouterBfdNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAdminDistanceInput)(nil)).Elem(), GetRouterBgpAdminDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAdminDistanceArrayInput)(nil)).Elem(), GetRouterBgpAdminDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAggregateAddress6Input)(nil)).Elem(), GetRouterBgpAggregateAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAggregateAddress6ArrayInput)(nil)).Elem(), GetRouterBgpAggregateAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAggregateAddressInput)(nil)).Elem(), GetRouterBgpAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpAggregateAddressArrayInput)(nil)).Elem(), GetRouterBgpAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpConfederationPeerInput)(nil)).Elem(), GetRouterBgpConfederationPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpConfederationPeerArrayInput)(nil)).Elem(), GetRouterBgpConfederationPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborInput)(nil)).Elem(), GetRouterBgpNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborArrayInput)(nil)).Elem(), GetRouterBgpNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise6Input)(nil)).Elem(), GetRouterBgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), GetRouterBgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertiseInput)(nil)).Elem(), GetRouterBgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), GetRouterBgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborGroupInput)(nil)).Elem(), GetRouterBgpNeighborGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborGroupArrayInput)(nil)).Elem(), GetRouterBgpNeighborGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborRange6Input)(nil)).Elem(), GetRouterBgpNeighborRange6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborRange6ArrayInput)(nil)).Elem(), GetRouterBgpNeighborRange6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborRangeInput)(nil)).Elem(), GetRouterBgpNeighborRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNeighborRangeArrayInput)(nil)).Elem(), GetRouterBgpNeighborRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNetwork6Input)(nil)).Elem(), GetRouterBgpNetwork6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNetwork6ArrayInput)(nil)).Elem(), GetRouterBgpNetwork6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNetworkInput)(nil)).Elem(), GetRouterBgpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpNetworkArrayInput)(nil)).Elem(), GetRouterBgpNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpRedistribute6Input)(nil)).Elem(), GetRouterBgpRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpRedistribute6ArrayInput)(nil)).Elem(), GetRouterBgpRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpRedistributeInput)(nil)).Elem(), GetRouterBgpRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpRedistributeArrayInput)(nil)).Elem(), GetRouterBgpRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrf6Input)(nil)).Elem(), GetRouterBgpVrf6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrf6ArrayInput)(nil)).Elem(), GetRouterBgpVrf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrf6LeakTargetInput)(nil)).Elem(), GetRouterBgpVrf6LeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrf6LeakTargetArrayInput)(nil)).Elem(), GetRouterBgpVrf6LeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfInput)(nil)).Elem(), GetRouterBgpVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfArrayInput)(nil)).Elem(), GetRouterBgpVrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfExportRtInput)(nil)).Elem(), GetRouterBgpVrfExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfExportRtArrayInput)(nil)).Elem(), GetRouterBgpVrfExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfImportRtInput)(nil)).Elem(), GetRouterBgpVrfImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfImportRtArrayInput)(nil)).Elem(), GetRouterBgpVrfImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeak6Input)(nil)).Elem(), GetRouterBgpVrfLeak6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeak6ArrayInput)(nil)).Elem(), GetRouterBgpVrfLeak6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeak6TargetInput)(nil)).Elem(), GetRouterBgpVrfLeak6TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeak6TargetArrayInput)(nil)).Elem(), GetRouterBgpVrfLeak6TargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeakInput)(nil)).Elem(), GetRouterBgpVrfLeakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeakArrayInput)(nil)).Elem(), GetRouterBgpVrfLeakArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeakTargetInput)(nil)).Elem(), GetRouterBgpVrfLeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterBgpVrfLeakTargetArrayInput)(nil)).Elem(), GetRouterBgpVrfLeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterCommunitylistRuleInput)(nil)).Elem(), GetRouterCommunitylistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterCommunitylistRuleArrayInput)(nil)).Elem(), GetRouterCommunitylistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisIsisInterfaceInput)(nil)).Elem(), GetRouterIsisIsisInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisIsisInterfaceArrayInput)(nil)).Elem(), GetRouterIsisIsisInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisIsisNetInput)(nil)).Elem(), GetRouterIsisIsisNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisIsisNetArrayInput)(nil)).Elem(), GetRouterIsisIsisNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisRedistribute6Input)(nil)).Elem(), GetRouterIsisRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisRedistribute6ArrayInput)(nil)).Elem(), GetRouterIsisRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisRedistributeInput)(nil)).Elem(), GetRouterIsisRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisRedistributeArrayInput)(nil)).Elem(), GetRouterIsisRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisSummaryAddress6Input)(nil)).Elem(), GetRouterIsisSummaryAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisSummaryAddress6ArrayInput)(nil)).Elem(), GetRouterIsisSummaryAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisSummaryAddressInput)(nil)).Elem(), GetRouterIsisSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterIsisSummaryAddressArrayInput)(nil)).Elem(), GetRouterIsisSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterKeychainKeyInput)(nil)).Elem(), GetRouterKeychainKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterKeychainKeyArrayInput)(nil)).Elem(), GetRouterKeychainKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6InterfaceInput)(nil)).Elem(), GetRouterMulticast6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6InterfaceArrayInput)(nil)).Elem(), GetRouterMulticast6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6PimSmGlobalInput)(nil)).Elem(), GetRouterMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6PimSmGlobalArrayInput)(nil)).Elem(), GetRouterMulticast6PimSmGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6PimSmGlobalRpAddressInput)(nil)).Elem(), GetRouterMulticast6PimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticast6PimSmGlobalRpAddressArrayInput)(nil)).Elem(), GetRouterMulticast6PimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceInput)(nil)).Elem(), GetRouterMulticastInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceArrayInput)(nil)).Elem(), GetRouterMulticastInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceIgmpInput)(nil)).Elem(), GetRouterMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceIgmpArrayInput)(nil)).Elem(), GetRouterMulticastInterfaceIgmpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceJoinGroupInput)(nil)).Elem(), GetRouterMulticastInterfaceJoinGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastInterfaceJoinGroupArrayInput)(nil)).Elem(), GetRouterMulticastInterfaceJoinGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastPimSmGlobalInput)(nil)).Elem(), GetRouterMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastPimSmGlobalArrayInput)(nil)).Elem(), GetRouterMulticastPimSmGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastPimSmGlobalRpAddressInput)(nil)).Elem(), GetRouterMulticastPimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastPimSmGlobalRpAddressArrayInput)(nil)).Elem(), GetRouterMulticastPimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastflowFlowInput)(nil)).Elem(), GetRouterMulticastflowFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterMulticastflowFlowArrayInput)(nil)).Elem(), GetRouterMulticastflowFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaInput)(nil)).Elem(), GetRouterOspf6AreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaArrayInput)(nil)).Elem(), GetRouterOspf6AreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaIpsecKeyInput)(nil)).Elem(), GetRouterOspf6AreaIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaIpsecKeyArrayInput)(nil)).Elem(), GetRouterOspf6AreaIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaRangeInput)(nil)).Elem(), GetRouterOspf6AreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaRangeArrayInput)(nil)).Elem(), GetRouterOspf6AreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkInput)(nil)).Elem(), GetRouterOspf6AreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkArrayInput)(nil)).Elem(), GetRouterOspf6AreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkIpsecKeyInput)(nil)).Elem(), GetRouterOspf6AreaVirtualLinkIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6AreaVirtualLinkIpsecKeyArrayInput)(nil)).Elem(), GetRouterOspf6AreaVirtualLinkIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceArrayInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceNeighborInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), GetRouterOspf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6PassiveInterfaceInput)(nil)).Elem(), GetRouterOspf6PassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6PassiveInterfaceArrayInput)(nil)).Elem(), GetRouterOspf6PassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6RedistributeInput)(nil)).Elem(), GetRouterOspf6RedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6RedistributeArrayInput)(nil)).Elem(), GetRouterOspf6RedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6SummaryAddressInput)(nil)).Elem(), GetRouterOspf6SummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspf6SummaryAddressArrayInput)(nil)).Elem(), GetRouterOspf6SummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaInput)(nil)).Elem(), GetRouterOspfAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaArrayInput)(nil)).Elem(), GetRouterOspfAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaFilterListInput)(nil)).Elem(), GetRouterOspfAreaFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaFilterListArrayInput)(nil)).Elem(), GetRouterOspfAreaFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaRangeInput)(nil)).Elem(), GetRouterOspfAreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaRangeArrayInput)(nil)).Elem(), GetRouterOspfAreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaVirtualLinkInput)(nil)).Elem(), GetRouterOspfAreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaVirtualLinkArrayInput)(nil)).Elem(), GetRouterOspfAreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaVirtualLinkMd5KeyInput)(nil)).Elem(), GetRouterOspfAreaVirtualLinkMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfAreaVirtualLinkMd5KeyArrayInput)(nil)).Elem(), GetRouterOspfAreaVirtualLinkMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfDistributeListInput)(nil)).Elem(), GetRouterOspfDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfDistributeListArrayInput)(nil)).Elem(), GetRouterOspfDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfNeighborInput)(nil)).Elem(), GetRouterOspfNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfNeighborArrayInput)(nil)).Elem(), GetRouterOspfNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfNetworkInput)(nil)).Elem(), GetRouterOspfNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfNetworkArrayInput)(nil)).Elem(), GetRouterOspfNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfOspfInterfaceInput)(nil)).Elem(), GetRouterOspfOspfInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfOspfInterfaceArrayInput)(nil)).Elem(), GetRouterOspfOspfInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfOspfInterfaceMd5KeyInput)(nil)).Elem(), GetRouterOspfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), GetRouterOspfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfPassiveInterfaceInput)(nil)).Elem(), GetRouterOspfPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfPassiveInterfaceArrayInput)(nil)).Elem(), GetRouterOspfPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfRedistributeInput)(nil)).Elem(), GetRouterOspfRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfRedistributeArrayInput)(nil)).Elem(), GetRouterOspfRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfSummaryAddressInput)(nil)).Elem(), GetRouterOspfSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterOspfSummaryAddressArrayInput)(nil)).Elem(), GetRouterOspfSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6DstaddrInput)(nil)).Elem(), GetRouterPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6DstaddrArrayInput)(nil)).Elem(), GetRouterPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6InternetServiceCustomInput)(nil)).Elem(), GetRouterPolicy6InternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6InternetServiceCustomArrayInput)(nil)).Elem(), GetRouterPolicy6InternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6InternetServiceIdInput)(nil)).Elem(), GetRouterPolicy6InternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6InternetServiceIdArrayInput)(nil)).Elem(), GetRouterPolicy6InternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6SrcaddrInput)(nil)).Elem(), GetRouterPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicy6SrcaddrArrayInput)(nil)).Elem(), GetRouterPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyDstInput)(nil)).Elem(), GetRouterPolicyDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyDstArrayInput)(nil)).Elem(), GetRouterPolicyDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyDstaddrInput)(nil)).Elem(), GetRouterPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyDstaddrArrayInput)(nil)).Elem(), GetRouterPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInputDeviceInput)(nil)).Elem(), GetRouterPolicyInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInputDeviceArrayInput)(nil)).Elem(), GetRouterPolicyInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInternetServiceCustomInput)(nil)).Elem(), GetRouterPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetRouterPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInternetServiceIdInput)(nil)).Elem(), GetRouterPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetRouterPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicySrcInput)(nil)).Elem(), GetRouterPolicySrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicySrcArrayInput)(nil)).Elem(), GetRouterPolicySrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicySrcaddrInput)(nil)).Elem(), GetRouterPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPolicySrcaddrArrayInput)(nil)).Elem(), GetRouterPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPrefixlist6RuleInput)(nil)).Elem(), GetRouterPrefixlist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPrefixlist6RuleArrayInput)(nil)).Elem(), GetRouterPrefixlist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPrefixlistRuleInput)(nil)).Elem(), GetRouterPrefixlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterPrefixlistRuleArrayInput)(nil)).Elem(), GetRouterPrefixlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipDistanceInput)(nil)).Elem(), GetRouterRipDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipDistanceArrayInput)(nil)).Elem(), GetRouterRipDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipDistributeListInput)(nil)).Elem(), GetRouterRipDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipDistributeListArrayInput)(nil)).Elem(), GetRouterRipDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipInterfaceInput)(nil)).Elem(), GetRouterRipInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipInterfaceArrayInput)(nil)).Elem(), GetRouterRipInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipNeighborInput)(nil)).Elem(), GetRouterRipNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipNeighborArrayInput)(nil)).Elem(), GetRouterRipNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipNetworkInput)(nil)).Elem(), GetRouterRipNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipNetworkArrayInput)(nil)).Elem(), GetRouterRipNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipOffsetListInput)(nil)).Elem(), GetRouterRipOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipOffsetListArrayInput)(nil)).Elem(), GetRouterRipOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipPassiveInterfaceInput)(nil)).Elem(), GetRouterRipPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipPassiveInterfaceArrayInput)(nil)).Elem(), GetRouterRipPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipRedistributeInput)(nil)).Elem(), GetRouterRipRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipRedistributeArrayInput)(nil)).Elem(), GetRouterRipRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngAggregateAddressInput)(nil)).Elem(), GetRouterRipngAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngAggregateAddressArrayInput)(nil)).Elem(), GetRouterRipngAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngDistanceInput)(nil)).Elem(), GetRouterRipngDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngDistanceArrayInput)(nil)).Elem(), GetRouterRipngDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngDistributeListInput)(nil)).Elem(), GetRouterRipngDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngDistributeListArrayInput)(nil)).Elem(), GetRouterRipngDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngInterfaceInput)(nil)).Elem(), GetRouterRipngInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngInterfaceArrayInput)(nil)).Elem(), GetRouterRipngInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngNeighborInput)(nil)).Elem(), GetRouterRipngNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngNeighborArrayInput)(nil)).Elem(), GetRouterRipngNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngNetworkInput)(nil)).Elem(), GetRouterRipngNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngNetworkArrayInput)(nil)).Elem(), GetRouterRipngNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngOffsetListInput)(nil)).Elem(), GetRouterRipngOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngOffsetListArrayInput)(nil)).Elem(), GetRouterRipngOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngPassiveInterfaceInput)(nil)).Elem(), GetRouterRipngPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngPassiveInterfaceArrayInput)(nil)).Elem(), GetRouterRipngPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngRedistributeInput)(nil)).Elem(), GetRouterRipngRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRipngRedistributeArrayInput)(nil)).Elem(), GetRouterRipngRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRoutemapRuleInput)(nil)).Elem(), GetRouterRoutemapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterRoutemapRuleArrayInput)(nil)).Elem(), GetRouterRoutemapRuleArray{})
	pulumi.RegisterOutputType(VideofilterProfileFortiguardCategoryOutput{})
	pulumi.RegisterOutputType(VideofilterProfileFortiguardCategoryPtrOutput{})
	pulumi.RegisterOutputType(VideofilterProfileFortiguardCategoryFilterOutput{})
	pulumi.RegisterOutputType(VideofilterProfileFortiguardCategoryFilterArrayOutput{})
	pulumi.RegisterOutputType(VideofilterYoutubechannelfilterEntryOutput{})
	pulumi.RegisterOutputType(VideofilterYoutubechannelfilterEntryArrayOutput{})
	pulumi.RegisterOutputType(VoipProfileMsrpOutput{})
	pulumi.RegisterOutputType(VoipProfileMsrpPtrOutput{})
	pulumi.RegisterOutputType(VoipProfileSccpOutput{})
	pulumi.RegisterOutputType(VoipProfileSccpPtrOutput{})
	pulumi.RegisterOutputType(VoipProfileSipOutput{})
	pulumi.RegisterOutputType(VoipProfileSipPtrOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessPtrOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessAuthGroupOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessAuthGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessAuthGroupOverlayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnForticlientAccessAuthGroupOverlayArrayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnOverlayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnOverlayArrayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnOverlaySubnetOutput{})
	pulumi.RegisterOutputType(VpnOcvpnOverlaySubnetArrayOutput{})
	pulumi.RegisterOutputType(VpnOcvpnWanInterfaceOutput{})
	pulumi.RegisterOutputType(VpnOcvpnWanInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VpncertificateSettingCrlVerificationOutput{})
	pulumi.RegisterOutputType(VpncertificateSettingCrlVerificationPtrOutput{})
	pulumi.RegisterOutputType(VpnipsecConcentratorMemberOutput{})
	pulumi.RegisterOutputType(VpnipsecConcentratorMemberArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecFecMappingOutput{})
	pulumi.RegisterOutputType(VpnipsecFecMappingArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1BackupGatewayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1BackupGatewayArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1CertificateOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1CertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1Ipv4ExcludeRangeOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1Ipv4ExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1Ipv6ExcludeRangeOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1Ipv6ExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceBackupGatewayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceBackupGatewayArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceCertificateOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceIpv4ExcludeRangeOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceIpv4ExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceIpv6ExcludeRangeOutput{})
	pulumi.RegisterOutputType(VpnipsecPhase1interfaceIpv6ExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleGroupOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceAddress6Output{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceAddress6ArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceAddressOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceAddressArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceInterfaceOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleSourceInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleUserOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsAuthenticationRuleUserArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceAddress6Output{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceAddress6ArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceAddressOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceAddressArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceInterfaceOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsSourceInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsTunnelIpPoolOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsTunnelIpPoolArrayOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsTunnelIpv6PoolOutput{})
	pulumi.RegisterOutputType(VpnsslSettingsTunnelIpv6PoolArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareCheckItemListOutput{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareCheckItemListArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareCheckItemListMd5Output{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareCheckItemListMd5ArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupBookmarkOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupBookmarkArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupBookmarkFormDataOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalBookmarkGroupBookmarkFormDataArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalHostCheckPolicyOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalHostCheckPolicyArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpPoolOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpPoolArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpv6PoolOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpv6PoolArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpv6SplitTunnelingRoutingAddressOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalIpv6SplitTunnelingRoutingAddressArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalMacAddrCheckRuleOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalMacAddrCheckRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalMacAddrCheckRuleMacAddrListOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalMacAddrCheckRuleMacAddrListArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalOsCheckListOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalOsCheckListArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalSplitDnOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalSplitDnArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalSplitTunnelingRoutingAddressOutput{})
	pulumi.RegisterOutputType(VpnsslwebPortalSplitTunnelingRoutingAddressArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebUserbookmarkBookmarkOutput{})
	pulumi.RegisterOutputType(VpnsslwebUserbookmarkBookmarkArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebUserbookmarkBookmarkFormDataOutput{})
	pulumi.RegisterOutputType(VpnsslwebUserbookmarkBookmarkFormDataArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebUsergroupbookmarkBookmarkOutput{})
	pulumi.RegisterOutputType(VpnsslwebUsergroupbookmarkBookmarkArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebUsergroupbookmarkBookmarkFormDataOutput{})
	pulumi.RegisterOutputType(VpnsslwebUsergroupbookmarkBookmarkFormDataArrayOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListPtrOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListBlockedAddressOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListBlockedAddressArrayOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListTrustedAddressOutput{})
	pulumi.RegisterOutputType(WafProfileAddressListTrustedAddressArrayOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintContentLengthOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintContentLengthPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintExceptionOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintExceptionArrayOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintHeaderLengthOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintHeaderLengthPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintHostnameOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintHostnamePtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintLineLengthOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintLineLengthPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMalformedOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMalformedPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxCookieOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxCookiePtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxHeaderLineOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxHeaderLinePtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxRangeSegmentOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxRangeSegmentPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxUrlParamOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMaxUrlParamPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMethodOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintMethodPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintParamLengthOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintParamLengthPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintUrlParamLengthOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintUrlParamLengthPtrOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintVersionOutput{})
	pulumi.RegisterOutputType(WafProfileConstraintVersionPtrOutput{})
	pulumi.RegisterOutputType(WafProfileMethodOutput{})
	pulumi.RegisterOutputType(WafProfileMethodPtrOutput{})
	pulumi.RegisterOutputType(WafProfileMethodMethodPolicyOutput{})
	pulumi.RegisterOutputType(WafProfileMethodMethodPolicyArrayOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureOutput{})
	pulumi.RegisterOutputType(WafProfileSignaturePtrOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureCustomSignatureOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureCustomSignatureArrayOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureDisabledSignatureOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureDisabledSignatureArrayOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureDisabledSubClassOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureDisabledSubClassArrayOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureMainClassOutput{})
	pulumi.RegisterOutputType(WafProfileSignatureMainClassArrayOutput{})
	pulumi.RegisterOutputType(WafProfileUrlAccessOutput{})
	pulumi.RegisterOutputType(WafProfileUrlAccessArrayOutput{})
	pulumi.RegisterOutputType(WafProfileUrlAccessAccessPatternOutput{})
	pulumi.RegisterOutputType(WafProfileUrlAccessAccessPatternArrayOutput{})
	pulumi.RegisterOutputType(WanoptCacheserviceDstPeerOutput{})
	pulumi.RegisterOutputType(WanoptCacheserviceDstPeerArrayOutput{})
	pulumi.RegisterOutputType(WanoptCacheserviceSrcPeerOutput{})
	pulumi.RegisterOutputType(WanoptCacheserviceSrcPeerArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleHostDomainNameSuffixOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleHostDomainNameSuffixArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleContentIdOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleContentIdPtrOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleMatchEntryOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleMatchEntryArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleMatchEntryPatternOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleMatchEntryPatternArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleSkipEntryOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleSkipEntryArrayOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleSkipEntryPatternOutput{})
	pulumi.RegisterOutputType(WanoptContentdeliverynetworkruleRuleSkipEntryPatternArrayOutput{})
	pulumi.RegisterOutputType(WanoptProfileCifsOutput{})
	pulumi.RegisterOutputType(WanoptProfileCifsPtrOutput{})
	pulumi.RegisterOutputType(WanoptProfileFtpOutput{})
	pulumi.RegisterOutputType(WanoptProfileFtpPtrOutput{})
	pulumi.RegisterOutputType(WanoptProfileHttpOutput{})
	pulumi.RegisterOutputType(WanoptProfileHttpPtrOutput{})
	pulumi.RegisterOutputType(WanoptProfileMapiOutput{})
	pulumi.RegisterOutputType(WanoptProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(WanoptProfileTcpOutput{})
	pulumi.RegisterOutputType(WanoptProfileTcpPtrOutput{})
	pulumi.RegisterOutputType(WebfilterContentEntryOutput{})
	pulumi.RegisterOutputType(WebfilterContentEntryArrayOutput{})
	pulumi.RegisterOutputType(WebfilterContentheaderEntryOutput{})
	pulumi.RegisterOutputType(WebfilterContentheaderEntryArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishPtrOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishCustomPatternOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishCustomPatternArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishInspectionEntryOutput{})
	pulumi.RegisterOutputType(WebfilterProfileAntiphishInspectionEntryArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfPtrOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfFilterOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfFilterArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfFilterAuthUsrGrpOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfFilterAuthUsrGrpArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfQuotaOutput{})
	pulumi.RegisterOutputType(WebfilterProfileFtgdWfQuotaArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverrideOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverridePtrOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverrideOvrdUserGroupOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverrideOvrdUserGroupArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverrideProfileOutput{})
	pulumi.RegisterOutputType(WebfilterProfileOverrideProfileArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWebOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWebPtrOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWebKeywordMatchOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWebKeywordMatchArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWispServerOutput{})
	pulumi.RegisterOutputType(WebfilterProfileWispServerArrayOutput{})
	pulumi.RegisterOutputType(WebfilterProfileYoutubeChannelFilterOutput{})
	pulumi.RegisterOutputType(WebfilterProfileYoutubeChannelFilterArrayOutput{})
	pulumi.RegisterOutputType(WebfilterUrlfilterEntryOutput{})
	pulumi.RegisterOutputType(WebfilterUrlfilterEntryArrayOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicyOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicyArrayOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitPacPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(WebproxyForwardservergroupServerListOutput{})
	pulumi.RegisterOutputType(WebproxyForwardservergroupServerListArrayOutput{})
	pulumi.RegisterOutputType(WebproxyGlobalLearnClientIpSrcaddr6Output{})
	pulumi.RegisterOutputType(WebproxyGlobalLearnClientIpSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(WebproxyGlobalLearnClientIpSrcaddrOutput{})
	pulumi.RegisterOutputType(WebproxyGlobalLearnClientIpSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderOutput{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderArrayOutput{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderDstaddr6Output{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderDstaddrOutput{})
	pulumi.RegisterOutputType(WebproxyProfileHeaderDstaddrArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAccesscontrollistLayer3Ipv4RuleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAccesscontrollistLayer3Ipv4RuleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAccesscontrollistLayer3Ipv6RuleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAccesscontrollistLayer3Ipv6RuleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAddrgrpAddressOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerAddrgrpAddressArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerApcfgprofileCommandListOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerApcfgprofileCommandListArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerArrpprofileDarrpOptimizeScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerArrpprofileDarrpOptimizeScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerBonjourprofilePolicyListOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerBonjourprofilePolicyListArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerIntercontrollerInterControllerPeerOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerIntercontrollerInterControllerPeerArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupMpskKeyOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupMpskKeyArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerMpskprofileMpskGroupMpskKeyMpskScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmBeOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmBeArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmBkOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmBkArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmViOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmViArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmVoOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerQosprofileDscpWmmVoArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSettingDarrpOptimizeScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSettingDarrpOptimizeScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSettingOffendingSsidOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSettingOffendingSsidArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpCommunityOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpCommunityArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpUserOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerSnmpUserArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerTimersDarrpTimeOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerTimersDarrpTimeArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMacFilterListOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMacFilterListArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMpskKeyOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMpskKeyArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMpskKeyMpskScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapMpskKeyMpskScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapPortalMessageOverridesOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapPortalMessageOverridesPtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapRadiusMacAuthUsergroupOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapRadiusMacAuthUsergroupArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapSelectedUsergroupOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapSelectedUsergroupArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapUsergroupOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapUsergroupArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapVlanNameOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapVlanNameArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapVlanPoolOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapVlanPoolArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapgroupVapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerVapgroupVapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWidsprofileApBgscanDisableScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWidsprofileApBgscanDisableScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpLanOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpLanPtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio1VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio2VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio3VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpRadio4VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpSplitTunnelingAclOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpSplitTunnelingAclArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpgroupWtpOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpgroupWtpArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileDenyMacListOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileDenyMacListArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileEslSesDongleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileEslSesDonglePtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLanOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLanPtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLbsOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLbsPtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLedScheduleOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileLedScheduleArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofilePlatformOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofilePlatformPtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio1VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio2VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio3VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4Output{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4PtrOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4ChannelOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4ChannelArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4VapOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileRadio4VapArrayOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileSplitTunnelingAclOutput{})
	pulumi.RegisterOutputType(WirelesscontrollerWtpprofileSplitTunnelingAclArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpnairealmNaiListEapMethodAuthParamArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqproamingconsortiumOiListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqproamingconsortiumOiListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenuenameValueListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenueurlValueListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenueurlValueListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpadviceofchargeAocListPlanInfoArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpoperatornameValueListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuproviderFriendlyNameArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuproviderServiceDescriptionArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qposuprovidernaiNaiListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20HsprofileOsuProviderOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20HsprofileOsuProviderArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20IconIconListOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20IconIconListArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20QosmapDscpExceptOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20QosmapDscpExceptArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20QosmapDscpRangeOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20QosmapDscpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6ListOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6ListArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6MacaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6MacaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6SubnetSegmentOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6SubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6TaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6templateSubnetSegmentOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6templateSubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6templateSubnetSegmentValueOutput{})
	pulumi.RegisterOutputType(GetFirewallAddress6templateSubnetSegmentValueArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressFssoGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressListOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressListArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressMacaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressMacaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressTaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6MemberOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6TaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrp6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpExcludeMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallAddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstAddr6Output{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstAddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstAddrOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstAddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstintfOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapNatIppool6Output{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapNatIppool6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapNatIppoolOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapNatIppoolArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapOrigAddr6Output{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapOrigAddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapOrigAddrOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapOrigAddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapSrcintfOutput{})
	pulumi.RegisterOutputType(GetFirewallCentralsnatmapSrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6AnomalyOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6AnomalyArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyAnomalyOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyAnomalyArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallDoSpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryDst6Output{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryDstOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryDstArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomgroupMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicecustomgroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicedefinitionEntryOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicedefinitionEntryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicedefinitionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicedefinitionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryIp6RangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryIpRangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryDst6Output{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryDstOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryDstArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetserviceextensionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicegroupMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallInternetservicegroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddress6TaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddressTaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallMulticastaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46DstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46PoolnameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46ServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46SrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy46SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64DstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64PoolnameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64ServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64SrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy64SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6AppCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6AppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6AppGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6AppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6ApplicationOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6CustomLogFieldOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6CustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DeviceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DeviceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DstintfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6DstintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6FssoGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6FssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6GroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6GroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6PoolnameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6ServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SrcintfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SslMirrorIntfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6SslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6UrlCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6UrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6UserOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicy6UserArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyApplicationOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyCustomLogFieldOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDeviceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNetworkServiceDynamicOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNetworkServiceDynamicArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNetworkServiceSrcDynamicOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNetworkServiceSrcDynamicArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNtlmEnabledBrowserOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyNtlmEnabledBrowserArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyPoolname6Output{})
	pulumi.RegisterOutputType(GetFirewallPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyPoolnameOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyRtpAddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyRtpAddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySgtOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySgtArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcVendorMacOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcVendorMacArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySslMirrorIntfOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicySslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyUserOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyZtnaGeoTagOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyZtnaGeoTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsCifOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsCifArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsCifServerKeytabOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsCifServerKeytabArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsDnOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsDnArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsFtpOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsFtpArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsHttpOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsHttpArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsImapOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsImapArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsMailSignatureOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsMailSignatureArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsMapiOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsMapiArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsNntpOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsNntpArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsPop3Output{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsPop3ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsSmtpOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsSmtpArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsSshOutput{})
	pulumi.RegisterOutputType(GetFirewallProfileprotocoloptionsSshArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressApplicationOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressHeaderGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressHeaderGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressTaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(GetFirewallProxyaddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyAccessProxy6Output{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyAccessProxy6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyAccessProxyOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyAccessProxyArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyPoolnameOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyUserOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(GetFirewallProxypolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyApplicationOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstaddr4Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyPoolname4Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyPoolname4ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyPoolname6Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyServiceOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcaddr4Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyUserOutput{})
	pulumi.RegisterOutputType(GetFirewallconsolidatedPolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallscheduleGroupMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallscheduleGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceCustomAppCategoryOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceCustomAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceCustomApplicationOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceCustomApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceGroupMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallserviceGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallwildcardfqdnGroupMemberOutput{})
	pulumi.RegisterOutputType(GetFirewallwildcardfqdnGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetRouterAccesslist6RuleOutput{})
	pulumi.RegisterOutputType(GetRouterAccesslist6RuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterAccesslistRuleOutput{})
	pulumi.RegisterOutputType(GetRouterAccesslistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterAspathlistRuleOutput{})
	pulumi.RegisterOutputType(GetRouterAspathlistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBfd6MultihopTemplateOutput{})
	pulumi.RegisterOutputType(GetRouterBfd6MultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBfd6NeighborOutput{})
	pulumi.RegisterOutputType(GetRouterBfd6NeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBfdMultihopTemplateOutput{})
	pulumi.RegisterOutputType(GetRouterBfdMultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBfdNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterBfdNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpAdminDistanceOutput{})
	pulumi.RegisterOutputType(GetRouterBgpAdminDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpAggregateAddress6Output{})
	pulumi.RegisterOutputType(GetRouterBgpAggregateAddress6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpAggregateAddressOutput{})
	pulumi.RegisterOutputType(GetRouterBgpAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpConfederationPeerOutput{})
	pulumi.RegisterOutputType(GetRouterBgpConfederationPeerArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborGroupOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborGroupArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborRange6Output{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborRange6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborRangeOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNeighborRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNetwork6Output{})
	pulumi.RegisterOutputType(GetRouterBgpNetwork6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNetworkOutput{})
	pulumi.RegisterOutputType(GetRouterBgpNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpRedistribute6Output{})
	pulumi.RegisterOutputType(GetRouterBgpRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpRedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterBgpRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrf6Output{})
	pulumi.RegisterOutputType(GetRouterBgpVrf6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrf6LeakTargetOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrf6LeakTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfExportRtOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfExportRtArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfImportRtOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfImportRtArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeak6Output{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeak6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeak6TargetOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeak6TargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeakOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeakArrayOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeakTargetOutput{})
	pulumi.RegisterOutputType(GetRouterBgpVrfLeakTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouterCommunitylistRuleOutput{})
	pulumi.RegisterOutputType(GetRouterCommunitylistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisIsisInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterIsisIsisInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisIsisNetOutput{})
	pulumi.RegisterOutputType(GetRouterIsisIsisNetArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisRedistribute6Output{})
	pulumi.RegisterOutputType(GetRouterIsisRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisRedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterIsisRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisSummaryAddress6Output{})
	pulumi.RegisterOutputType(GetRouterIsisSummaryAddress6ArrayOutput{})
	pulumi.RegisterOutputType(GetRouterIsisSummaryAddressOutput{})
	pulumi.RegisterOutputType(GetRouterIsisSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterKeychainKeyOutput{})
	pulumi.RegisterOutputType(GetRouterKeychainKeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6InterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6PimSmGlobalOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6PimSmGlobalArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6PimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(GetRouterMulticast6PimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceIgmpOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceIgmpArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceJoinGroupOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastInterfaceJoinGroupArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastPimSmGlobalOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastPimSmGlobalArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastPimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastPimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastflowFlowOutput{})
	pulumi.RegisterOutputType(GetRouterMulticastflowFlowArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaRangeOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaVirtualLinkIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6PassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6PassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6RedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6RedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6SummaryAddressOutput{})
	pulumi.RegisterOutputType(GetRouterOspf6SummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaFilterListOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaFilterListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaRangeOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaVirtualLinkMd5KeyOutput{})
	pulumi.RegisterOutputType(GetRouterOspfAreaVirtualLinkMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfDistributeListOutput{})
	pulumi.RegisterOutputType(GetRouterOspfDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterOspfNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfNetworkOutput{})
	pulumi.RegisterOutputType(GetRouterOspfNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfOspfInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterOspfOspfInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(GetRouterOspfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterOspfPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfRedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterOspfRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterOspfSummaryAddressOutput{})
	pulumi.RegisterOutputType(GetRouterOspfSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6InternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6InternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6InternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6InternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetRouterPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyDstOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyDstArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInputDeviceOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetRouterPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicySrcOutput{})
	pulumi.RegisterOutputType(GetRouterPolicySrcArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetRouterPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPrefixlist6RuleOutput{})
	pulumi.RegisterOutputType(GetRouterPrefixlist6RuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterPrefixlistRuleOutput{})
	pulumi.RegisterOutputType(GetRouterPrefixlistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipDistanceOutput{})
	pulumi.RegisterOutputType(GetRouterRipDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipDistributeListOutput{})
	pulumi.RegisterOutputType(GetRouterRipDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterRipInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterRipNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipNetworkOutput{})
	pulumi.RegisterOutputType(GetRouterRipNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipOffsetListOutput{})
	pulumi.RegisterOutputType(GetRouterRipOffsetListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterRipPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipRedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterRipRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngAggregateAddressOutput{})
	pulumi.RegisterOutputType(GetRouterRipngAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngDistanceOutput{})
	pulumi.RegisterOutputType(GetRouterRipngDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngDistributeListOutput{})
	pulumi.RegisterOutputType(GetRouterRipngDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterRipngInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngNeighborOutput{})
	pulumi.RegisterOutputType(GetRouterRipngNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngNetworkOutput{})
	pulumi.RegisterOutputType(GetRouterRipngNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngOffsetListOutput{})
	pulumi.RegisterOutputType(GetRouterRipngOffsetListArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterRipngPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRipngRedistributeOutput{})
	pulumi.RegisterOutputType(GetRouterRipngRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRouterRoutemapRuleOutput{})
	pulumi.RegisterOutputType(GetRouterRoutemapRuleArrayOutput{})
}
