// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings for TACACS+ accounting. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// # LogTacacsAccounting Setting can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/logtacacsaccountingSetting:LogtacacsaccountingSetting labelname LogTacacsAccountingSetting
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/logtacacsaccountingSetting:LogtacacsaccountingSetting labelname LogTacacsAccountingSetting
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type LogtacacsaccountingSetting struct {
	pulumi.CustomResourceState

	// Address of TACACS+ server.
	Server pulumi.StringOutput `pulumi:"server"`
	// Key to access the TACACS+ server.
	ServerKey pulumi.StringPtrOutput `pulumi:"serverKey"`
	// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLogtacacsaccountingSetting registers a new resource with the given unique name, arguments, and options.
func NewLogtacacsaccountingSetting(ctx *pulumi.Context,
	name string, args *LogtacacsaccountingSettingArgs, opts ...pulumi.ResourceOption) (*LogtacacsaccountingSetting, error) {
	if args == nil {
		args = &LogtacacsaccountingSettingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogtacacsaccountingSetting
	err := ctx.RegisterResource("fortios:index/logtacacsaccountingSetting:LogtacacsaccountingSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogtacacsaccountingSetting gets an existing LogtacacsaccountingSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogtacacsaccountingSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogtacacsaccountingSettingState, opts ...pulumi.ResourceOption) (*LogtacacsaccountingSetting, error) {
	var resource LogtacacsaccountingSetting
	err := ctx.ReadResource("fortios:index/logtacacsaccountingSetting:LogtacacsaccountingSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogtacacsaccountingSetting resources.
type logtacacsaccountingSettingState struct {
	// Address of TACACS+ server.
	Server *string `pulumi:"server"`
	// Key to access the TACACS+ server.
	ServerKey *string `pulumi:"serverKey"`
	// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type LogtacacsaccountingSettingState struct {
	// Address of TACACS+ server.
	Server pulumi.StringPtrInput
	// Key to access the TACACS+ server.
	ServerKey pulumi.StringPtrInput
	// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LogtacacsaccountingSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logtacacsaccountingSettingState)(nil)).Elem()
}

type logtacacsaccountingSettingArgs struct {
	// Address of TACACS+ server.
	Server *string `pulumi:"server"`
	// Key to access the TACACS+ server.
	ServerKey *string `pulumi:"serverKey"`
	// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogtacacsaccountingSetting resource.
type LogtacacsaccountingSettingArgs struct {
	// Address of TACACS+ server.
	Server pulumi.StringPtrInput
	// Key to access the TACACS+ server.
	ServerKey pulumi.StringPtrInput
	// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LogtacacsaccountingSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logtacacsaccountingSettingArgs)(nil)).Elem()
}

type LogtacacsaccountingSettingInput interface {
	pulumi.Input

	ToLogtacacsaccountingSettingOutput() LogtacacsaccountingSettingOutput
	ToLogtacacsaccountingSettingOutputWithContext(ctx context.Context) LogtacacsaccountingSettingOutput
}

func (*LogtacacsaccountingSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogtacacsaccountingSetting)(nil)).Elem()
}

func (i *LogtacacsaccountingSetting) ToLogtacacsaccountingSettingOutput() LogtacacsaccountingSettingOutput {
	return i.ToLogtacacsaccountingSettingOutputWithContext(context.Background())
}

func (i *LogtacacsaccountingSetting) ToLogtacacsaccountingSettingOutputWithContext(ctx context.Context) LogtacacsaccountingSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtacacsaccountingSettingOutput)
}

// LogtacacsaccountingSettingArrayInput is an input type that accepts LogtacacsaccountingSettingArray and LogtacacsaccountingSettingArrayOutput values.
// You can construct a concrete instance of `LogtacacsaccountingSettingArrayInput` via:
//
//	LogtacacsaccountingSettingArray{ LogtacacsaccountingSettingArgs{...} }
type LogtacacsaccountingSettingArrayInput interface {
	pulumi.Input

	ToLogtacacsaccountingSettingArrayOutput() LogtacacsaccountingSettingArrayOutput
	ToLogtacacsaccountingSettingArrayOutputWithContext(context.Context) LogtacacsaccountingSettingArrayOutput
}

type LogtacacsaccountingSettingArray []LogtacacsaccountingSettingInput

func (LogtacacsaccountingSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogtacacsaccountingSetting)(nil)).Elem()
}

func (i LogtacacsaccountingSettingArray) ToLogtacacsaccountingSettingArrayOutput() LogtacacsaccountingSettingArrayOutput {
	return i.ToLogtacacsaccountingSettingArrayOutputWithContext(context.Background())
}

func (i LogtacacsaccountingSettingArray) ToLogtacacsaccountingSettingArrayOutputWithContext(ctx context.Context) LogtacacsaccountingSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtacacsaccountingSettingArrayOutput)
}

// LogtacacsaccountingSettingMapInput is an input type that accepts LogtacacsaccountingSettingMap and LogtacacsaccountingSettingMapOutput values.
// You can construct a concrete instance of `LogtacacsaccountingSettingMapInput` via:
//
//	LogtacacsaccountingSettingMap{ "key": LogtacacsaccountingSettingArgs{...} }
type LogtacacsaccountingSettingMapInput interface {
	pulumi.Input

	ToLogtacacsaccountingSettingMapOutput() LogtacacsaccountingSettingMapOutput
	ToLogtacacsaccountingSettingMapOutputWithContext(context.Context) LogtacacsaccountingSettingMapOutput
}

type LogtacacsaccountingSettingMap map[string]LogtacacsaccountingSettingInput

func (LogtacacsaccountingSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogtacacsaccountingSetting)(nil)).Elem()
}

func (i LogtacacsaccountingSettingMap) ToLogtacacsaccountingSettingMapOutput() LogtacacsaccountingSettingMapOutput {
	return i.ToLogtacacsaccountingSettingMapOutputWithContext(context.Background())
}

func (i LogtacacsaccountingSettingMap) ToLogtacacsaccountingSettingMapOutputWithContext(ctx context.Context) LogtacacsaccountingSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtacacsaccountingSettingMapOutput)
}

type LogtacacsaccountingSettingOutput struct{ *pulumi.OutputState }

func (LogtacacsaccountingSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogtacacsaccountingSetting)(nil)).Elem()
}

func (o LogtacacsaccountingSettingOutput) ToLogtacacsaccountingSettingOutput() LogtacacsaccountingSettingOutput {
	return o
}

func (o LogtacacsaccountingSettingOutput) ToLogtacacsaccountingSettingOutputWithContext(ctx context.Context) LogtacacsaccountingSettingOutput {
	return o
}

// Address of TACACS+ server.
func (o LogtacacsaccountingSettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *LogtacacsaccountingSetting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Key to access the TACACS+ server.
func (o LogtacacsaccountingSettingOutput) ServerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtacacsaccountingSetting) pulumi.StringPtrOutput { return v.ServerKey }).(pulumi.StringPtrOutput)
}

// Enable/disable TACACS+ accounting. Valid values: `enable`, `disable`.
func (o LogtacacsaccountingSettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogtacacsaccountingSetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LogtacacsaccountingSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtacacsaccountingSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogtacacsaccountingSettingArrayOutput struct{ *pulumi.OutputState }

func (LogtacacsaccountingSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogtacacsaccountingSetting)(nil)).Elem()
}

func (o LogtacacsaccountingSettingArrayOutput) ToLogtacacsaccountingSettingArrayOutput() LogtacacsaccountingSettingArrayOutput {
	return o
}

func (o LogtacacsaccountingSettingArrayOutput) ToLogtacacsaccountingSettingArrayOutputWithContext(ctx context.Context) LogtacacsaccountingSettingArrayOutput {
	return o
}

func (o LogtacacsaccountingSettingArrayOutput) Index(i pulumi.IntInput) LogtacacsaccountingSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogtacacsaccountingSetting {
		return vs[0].([]*LogtacacsaccountingSetting)[vs[1].(int)]
	}).(LogtacacsaccountingSettingOutput)
}

type LogtacacsaccountingSettingMapOutput struct{ *pulumi.OutputState }

func (LogtacacsaccountingSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogtacacsaccountingSetting)(nil)).Elem()
}

func (o LogtacacsaccountingSettingMapOutput) ToLogtacacsaccountingSettingMapOutput() LogtacacsaccountingSettingMapOutput {
	return o
}

func (o LogtacacsaccountingSettingMapOutput) ToLogtacacsaccountingSettingMapOutputWithContext(ctx context.Context) LogtacacsaccountingSettingMapOutput {
	return o
}

func (o LogtacacsaccountingSettingMapOutput) MapIndex(k pulumi.StringInput) LogtacacsaccountingSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogtacacsaccountingSetting {
		return vs[0].(map[string]*LogtacacsaccountingSetting)[vs[1].(string)]
	}).(LogtacacsaccountingSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogtacacsaccountingSettingInput)(nil)).Elem(), &LogtacacsaccountingSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogtacacsaccountingSettingArrayInput)(nil)).Elem(), LogtacacsaccountingSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogtacacsaccountingSettingMapInput)(nil)).Elem(), LogtacacsaccountingSettingMap{})
	pulumi.RegisterOutputType(LogtacacsaccountingSettingOutput{})
	pulumi.RegisterOutputType(LogtacacsaccountingSettingArrayOutput{})
	pulumi.RegisterOutputType(LogtacacsaccountingSettingMapOutput{})
}
