// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Show Internet Service application.
//
// ## Import
//
// # Firewall InternetService can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallInternetservice:FirewallInternetservice labelname {{fosid}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallInternetservice:FirewallInternetservice labelname {{fosid}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallInternetservice struct {
	pulumi.CustomResourceState

	// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
	Database pulumi.StringOutput `pulumi:"database"`
	// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Extra number of IPv6 ranges.
	ExtraIp6RangeNumber pulumi.IntOutput `pulumi:"extraIp6RangeNumber"`
	// Extra number of IP ranges.
	ExtraIpRangeNumber pulumi.IntOutput `pulumi:"extraIpRangeNumber"`
	// Internet Service ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Icon ID of Internet Service.
	IconId pulumi.IntOutput `pulumi:"iconId"`
	// Number of IPv6 ranges.
	Ip6RangeNumber pulumi.IntOutput `pulumi:"ip6RangeNumber"`
	// Total number of IP addresses.
	IpNumber pulumi.IntOutput `pulumi:"ipNumber"`
	// Total number of IP ranges.
	IpRangeNumber pulumi.IntOutput `pulumi:"ipRangeNumber"`
	// Internet Service name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates whether the Internet Service can be used.
	Obsolete pulumi.IntOutput `pulumi:"obsolete"`
	// Reputation level of the Internet Service.
	Reputation pulumi.IntOutput `pulumi:"reputation"`
	// Singular level of the Internet Service.
	Singularity pulumi.IntOutput `pulumi:"singularity"`
	// Second Level Domain.
	SldId pulumi.IntOutput `pulumi:"sldId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallInternetservice registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetservice(ctx *pulumi.Context,
	name string, args *FirewallInternetserviceArgs, opts ...pulumi.ResourceOption) (*FirewallInternetservice, error) {
	if args == nil {
		args = &FirewallInternetserviceArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallInternetservice
	err := ctx.RegisterResource("fortios:index/firewallInternetservice:FirewallInternetservice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetservice gets an existing FirewallInternetservice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetservice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetserviceState, opts ...pulumi.ResourceOption) (*FirewallInternetservice, error) {
	var resource FirewallInternetservice
	err := ctx.ReadResource("fortios:index/firewallInternetservice:FirewallInternetservice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetservice resources.
type firewallInternetserviceState struct {
	// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
	Database *string `pulumi:"database"`
	// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
	Direction *string `pulumi:"direction"`
	// Extra number of IPv6 ranges.
	ExtraIp6RangeNumber *int `pulumi:"extraIp6RangeNumber"`
	// Extra number of IP ranges.
	ExtraIpRangeNumber *int `pulumi:"extraIpRangeNumber"`
	// Internet Service ID.
	Fosid *int `pulumi:"fosid"`
	// Icon ID of Internet Service.
	IconId *int `pulumi:"iconId"`
	// Number of IPv6 ranges.
	Ip6RangeNumber *int `pulumi:"ip6RangeNumber"`
	// Total number of IP addresses.
	IpNumber *int `pulumi:"ipNumber"`
	// Total number of IP ranges.
	IpRangeNumber *int `pulumi:"ipRangeNumber"`
	// Internet Service name.
	Name *string `pulumi:"name"`
	// Indicates whether the Internet Service can be used.
	Obsolete *int `pulumi:"obsolete"`
	// Reputation level of the Internet Service.
	Reputation *int `pulumi:"reputation"`
	// Singular level of the Internet Service.
	Singularity *int `pulumi:"singularity"`
	// Second Level Domain.
	SldId *int `pulumi:"sldId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallInternetserviceState struct {
	// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
	Database pulumi.StringPtrInput
	// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
	Direction pulumi.StringPtrInput
	// Extra number of IPv6 ranges.
	ExtraIp6RangeNumber pulumi.IntPtrInput
	// Extra number of IP ranges.
	ExtraIpRangeNumber pulumi.IntPtrInput
	// Internet Service ID.
	Fosid pulumi.IntPtrInput
	// Icon ID of Internet Service.
	IconId pulumi.IntPtrInput
	// Number of IPv6 ranges.
	Ip6RangeNumber pulumi.IntPtrInput
	// Total number of IP addresses.
	IpNumber pulumi.IntPtrInput
	// Total number of IP ranges.
	IpRangeNumber pulumi.IntPtrInput
	// Internet Service name.
	Name pulumi.StringPtrInput
	// Indicates whether the Internet Service can be used.
	Obsolete pulumi.IntPtrInput
	// Reputation level of the Internet Service.
	Reputation pulumi.IntPtrInput
	// Singular level of the Internet Service.
	Singularity pulumi.IntPtrInput
	// Second Level Domain.
	SldId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetserviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetserviceState)(nil)).Elem()
}

type firewallInternetserviceArgs struct {
	// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
	Database *string `pulumi:"database"`
	// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
	Direction *string `pulumi:"direction"`
	// Extra number of IPv6 ranges.
	ExtraIp6RangeNumber *int `pulumi:"extraIp6RangeNumber"`
	// Extra number of IP ranges.
	ExtraIpRangeNumber *int `pulumi:"extraIpRangeNumber"`
	// Internet Service ID.
	Fosid *int `pulumi:"fosid"`
	// Icon ID of Internet Service.
	IconId *int `pulumi:"iconId"`
	// Number of IPv6 ranges.
	Ip6RangeNumber *int `pulumi:"ip6RangeNumber"`
	// Total number of IP addresses.
	IpNumber *int `pulumi:"ipNumber"`
	// Total number of IP ranges.
	IpRangeNumber *int `pulumi:"ipRangeNumber"`
	// Internet Service name.
	Name *string `pulumi:"name"`
	// Indicates whether the Internet Service can be used.
	Obsolete *int `pulumi:"obsolete"`
	// Reputation level of the Internet Service.
	Reputation *int `pulumi:"reputation"`
	// Singular level of the Internet Service.
	Singularity *int `pulumi:"singularity"`
	// Second Level Domain.
	SldId *int `pulumi:"sldId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetservice resource.
type FirewallInternetserviceArgs struct {
	// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
	Database pulumi.StringPtrInput
	// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
	Direction pulumi.StringPtrInput
	// Extra number of IPv6 ranges.
	ExtraIp6RangeNumber pulumi.IntPtrInput
	// Extra number of IP ranges.
	ExtraIpRangeNumber pulumi.IntPtrInput
	// Internet Service ID.
	Fosid pulumi.IntPtrInput
	// Icon ID of Internet Service.
	IconId pulumi.IntPtrInput
	// Number of IPv6 ranges.
	Ip6RangeNumber pulumi.IntPtrInput
	// Total number of IP addresses.
	IpNumber pulumi.IntPtrInput
	// Total number of IP ranges.
	IpRangeNumber pulumi.IntPtrInput
	// Internet Service name.
	Name pulumi.StringPtrInput
	// Indicates whether the Internet Service can be used.
	Obsolete pulumi.IntPtrInput
	// Reputation level of the Internet Service.
	Reputation pulumi.IntPtrInput
	// Singular level of the Internet Service.
	Singularity pulumi.IntPtrInput
	// Second Level Domain.
	SldId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetserviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetserviceArgs)(nil)).Elem()
}

type FirewallInternetserviceInput interface {
	pulumi.Input

	ToFirewallInternetserviceOutput() FirewallInternetserviceOutput
	ToFirewallInternetserviceOutputWithContext(ctx context.Context) FirewallInternetserviceOutput
}

func (*FirewallInternetservice) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetservice)(nil)).Elem()
}

func (i *FirewallInternetservice) ToFirewallInternetserviceOutput() FirewallInternetserviceOutput {
	return i.ToFirewallInternetserviceOutputWithContext(context.Background())
}

func (i *FirewallInternetservice) ToFirewallInternetserviceOutputWithContext(ctx context.Context) FirewallInternetserviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceOutput)
}

// FirewallInternetserviceArrayInput is an input type that accepts FirewallInternetserviceArray and FirewallInternetserviceArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceArrayInput` via:
//
//	FirewallInternetserviceArray{ FirewallInternetserviceArgs{...} }
type FirewallInternetserviceArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceArrayOutput() FirewallInternetserviceArrayOutput
	ToFirewallInternetserviceArrayOutputWithContext(context.Context) FirewallInternetserviceArrayOutput
}

type FirewallInternetserviceArray []FirewallInternetserviceInput

func (FirewallInternetserviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetservice)(nil)).Elem()
}

func (i FirewallInternetserviceArray) ToFirewallInternetserviceArrayOutput() FirewallInternetserviceArrayOutput {
	return i.ToFirewallInternetserviceArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceArray) ToFirewallInternetserviceArrayOutputWithContext(ctx context.Context) FirewallInternetserviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceArrayOutput)
}

// FirewallInternetserviceMapInput is an input type that accepts FirewallInternetserviceMap and FirewallInternetserviceMapOutput values.
// You can construct a concrete instance of `FirewallInternetserviceMapInput` via:
//
//	FirewallInternetserviceMap{ "key": FirewallInternetserviceArgs{...} }
type FirewallInternetserviceMapInput interface {
	pulumi.Input

	ToFirewallInternetserviceMapOutput() FirewallInternetserviceMapOutput
	ToFirewallInternetserviceMapOutputWithContext(context.Context) FirewallInternetserviceMapOutput
}

type FirewallInternetserviceMap map[string]FirewallInternetserviceInput

func (FirewallInternetserviceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetservice)(nil)).Elem()
}

func (i FirewallInternetserviceMap) ToFirewallInternetserviceMapOutput() FirewallInternetserviceMapOutput {
	return i.ToFirewallInternetserviceMapOutputWithContext(context.Background())
}

func (i FirewallInternetserviceMap) ToFirewallInternetserviceMapOutputWithContext(ctx context.Context) FirewallInternetserviceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceMapOutput)
}

type FirewallInternetserviceOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetservice)(nil)).Elem()
}

func (o FirewallInternetserviceOutput) ToFirewallInternetserviceOutput() FirewallInternetserviceOutput {
	return o
}

func (o FirewallInternetserviceOutput) ToFirewallInternetserviceOutputWithContext(ctx context.Context) FirewallInternetserviceOutput {
	return o
}

// Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
func (o FirewallInternetserviceOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.StringOutput { return v.Database }).(pulumi.StringOutput)
}

// How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
func (o FirewallInternetserviceOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Extra number of IPv6 ranges.
func (o FirewallInternetserviceOutput) ExtraIp6RangeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.ExtraIp6RangeNumber }).(pulumi.IntOutput)
}

// Extra number of IP ranges.
func (o FirewallInternetserviceOutput) ExtraIpRangeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.ExtraIpRangeNumber }).(pulumi.IntOutput)
}

// Internet Service ID.
func (o FirewallInternetserviceOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Icon ID of Internet Service.
func (o FirewallInternetserviceOutput) IconId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.IconId }).(pulumi.IntOutput)
}

// Number of IPv6 ranges.
func (o FirewallInternetserviceOutput) Ip6RangeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.Ip6RangeNumber }).(pulumi.IntOutput)
}

// Total number of IP addresses.
func (o FirewallInternetserviceOutput) IpNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.IpNumber }).(pulumi.IntOutput)
}

// Total number of IP ranges.
func (o FirewallInternetserviceOutput) IpRangeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.IpRangeNumber }).(pulumi.IntOutput)
}

// Internet Service name.
func (o FirewallInternetserviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the Internet Service can be used.
func (o FirewallInternetserviceOutput) Obsolete() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.Obsolete }).(pulumi.IntOutput)
}

// Reputation level of the Internet Service.
func (o FirewallInternetserviceOutput) Reputation() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.Reputation }).(pulumi.IntOutput)
}

// Singular level of the Internet Service.
func (o FirewallInternetserviceOutput) Singularity() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.Singularity }).(pulumi.IntOutput)
}

// Second Level Domain.
func (o FirewallInternetserviceOutput) SldId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.IntOutput { return v.SldId }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallInternetserviceOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetservice) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallInternetserviceArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetservice)(nil)).Elem()
}

func (o FirewallInternetserviceArrayOutput) ToFirewallInternetserviceArrayOutput() FirewallInternetserviceArrayOutput {
	return o
}

func (o FirewallInternetserviceArrayOutput) ToFirewallInternetserviceArrayOutputWithContext(ctx context.Context) FirewallInternetserviceArrayOutput {
	return o
}

func (o FirewallInternetserviceArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetservice {
		return vs[0].([]*FirewallInternetservice)[vs[1].(int)]
	}).(FirewallInternetserviceOutput)
}

type FirewallInternetserviceMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetservice)(nil)).Elem()
}

func (o FirewallInternetserviceMapOutput) ToFirewallInternetserviceMapOutput() FirewallInternetserviceMapOutput {
	return o
}

func (o FirewallInternetserviceMapOutput) ToFirewallInternetserviceMapOutputWithContext(ctx context.Context) FirewallInternetserviceMapOutput {
	return o
}

func (o FirewallInternetserviceMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetserviceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetservice {
		return vs[0].(map[string]*FirewallInternetservice)[vs[1].(string)]
	}).(FirewallInternetserviceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceInput)(nil)).Elem(), &FirewallInternetservice{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceArrayInput)(nil)).Elem(), FirewallInternetserviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceMapInput)(nil)).Elem(), FirewallInternetserviceMap{})
	pulumi.RegisterOutputType(FirewallInternetserviceOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceMapOutput{})
}
