// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg Admin can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgAdmin:SystemreplacemsgAdmin labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgAdmin:SystemreplacemsgAdmin labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgAdmin struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgAdmin registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgAdmin(ctx *pulumi.Context,
	name string, args *SystemreplacemsgAdminArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgAdmin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgAdmin
	err := ctx.RegisterResource("fortios:index/systemreplacemsgAdmin:SystemreplacemsgAdmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgAdmin gets an existing SystemreplacemsgAdmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgAdmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgAdminState, opts ...pulumi.ResourceOption) (*SystemreplacemsgAdmin, error) {
	var resource SystemreplacemsgAdmin
	err := ctx.ReadResource("fortios:index/systemreplacemsgAdmin:SystemreplacemsgAdmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgAdmin resources.
type systemreplacemsgAdminState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgAdminState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgAdminState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgAdminState)(nil)).Elem()
}

type systemreplacemsgAdminArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgAdmin resource.
type SystemreplacemsgAdminArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgAdminArgs)(nil)).Elem()
}

type SystemreplacemsgAdminInput interface {
	pulumi.Input

	ToSystemreplacemsgAdminOutput() SystemreplacemsgAdminOutput
	ToSystemreplacemsgAdminOutputWithContext(ctx context.Context) SystemreplacemsgAdminOutput
}

func (*SystemreplacemsgAdmin) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgAdmin)(nil)).Elem()
}

func (i *SystemreplacemsgAdmin) ToSystemreplacemsgAdminOutput() SystemreplacemsgAdminOutput {
	return i.ToSystemreplacemsgAdminOutputWithContext(context.Background())
}

func (i *SystemreplacemsgAdmin) ToSystemreplacemsgAdminOutputWithContext(ctx context.Context) SystemreplacemsgAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAdminOutput)
}

// SystemreplacemsgAdminArrayInput is an input type that accepts SystemreplacemsgAdminArray and SystemreplacemsgAdminArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgAdminArrayInput` via:
//
//	SystemreplacemsgAdminArray{ SystemreplacemsgAdminArgs{...} }
type SystemreplacemsgAdminArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgAdminArrayOutput() SystemreplacemsgAdminArrayOutput
	ToSystemreplacemsgAdminArrayOutputWithContext(context.Context) SystemreplacemsgAdminArrayOutput
}

type SystemreplacemsgAdminArray []SystemreplacemsgAdminInput

func (SystemreplacemsgAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgAdmin)(nil)).Elem()
}

func (i SystemreplacemsgAdminArray) ToSystemreplacemsgAdminArrayOutput() SystemreplacemsgAdminArrayOutput {
	return i.ToSystemreplacemsgAdminArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgAdminArray) ToSystemreplacemsgAdminArrayOutputWithContext(ctx context.Context) SystemreplacemsgAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAdminArrayOutput)
}

// SystemreplacemsgAdminMapInput is an input type that accepts SystemreplacemsgAdminMap and SystemreplacemsgAdminMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgAdminMapInput` via:
//
//	SystemreplacemsgAdminMap{ "key": SystemreplacemsgAdminArgs{...} }
type SystemreplacemsgAdminMapInput interface {
	pulumi.Input

	ToSystemreplacemsgAdminMapOutput() SystemreplacemsgAdminMapOutput
	ToSystemreplacemsgAdminMapOutputWithContext(context.Context) SystemreplacemsgAdminMapOutput
}

type SystemreplacemsgAdminMap map[string]SystemreplacemsgAdminInput

func (SystemreplacemsgAdminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgAdmin)(nil)).Elem()
}

func (i SystemreplacemsgAdminMap) ToSystemreplacemsgAdminMapOutput() SystemreplacemsgAdminMapOutput {
	return i.ToSystemreplacemsgAdminMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgAdminMap) ToSystemreplacemsgAdminMapOutputWithContext(ctx context.Context) SystemreplacemsgAdminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAdminMapOutput)
}

type SystemreplacemsgAdminOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgAdmin)(nil)).Elem()
}

func (o SystemreplacemsgAdminOutput) ToSystemreplacemsgAdminOutput() SystemreplacemsgAdminOutput {
	return o
}

func (o SystemreplacemsgAdminOutput) ToSystemreplacemsgAdminOutputWithContext(ctx context.Context) SystemreplacemsgAdminOutput {
	return o
}

// Message string.
func (o SystemreplacemsgAdminOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgAdmin) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgAdminOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAdmin) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgAdminOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAdmin) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgAdminOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAdmin) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgAdminOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgAdmin) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgAdmin)(nil)).Elem()
}

func (o SystemreplacemsgAdminArrayOutput) ToSystemreplacemsgAdminArrayOutput() SystemreplacemsgAdminArrayOutput {
	return o
}

func (o SystemreplacemsgAdminArrayOutput) ToSystemreplacemsgAdminArrayOutputWithContext(ctx context.Context) SystemreplacemsgAdminArrayOutput {
	return o
}

func (o SystemreplacemsgAdminArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgAdmin {
		return vs[0].([]*SystemreplacemsgAdmin)[vs[1].(int)]
	}).(SystemreplacemsgAdminOutput)
}

type SystemreplacemsgAdminMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAdminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgAdmin)(nil)).Elem()
}

func (o SystemreplacemsgAdminMapOutput) ToSystemreplacemsgAdminMapOutput() SystemreplacemsgAdminMapOutput {
	return o
}

func (o SystemreplacemsgAdminMapOutput) ToSystemreplacemsgAdminMapOutputWithContext(ctx context.Context) SystemreplacemsgAdminMapOutput {
	return o
}

func (o SystemreplacemsgAdminMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgAdminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgAdmin {
		return vs[0].(map[string]*SystemreplacemsgAdmin)[vs[1].(string)]
	}).(SystemreplacemsgAdminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAdminInput)(nil)).Elem(), &SystemreplacemsgAdmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAdminArrayInput)(nil)).Elem(), SystemreplacemsgAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAdminMapInput)(nil)).Elem(), SystemreplacemsgAdminMap{})
	pulumi.RegisterOutputType(SystemreplacemsgAdminOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgAdminMapOutput{})
}
