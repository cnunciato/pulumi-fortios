// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Filters for null device logging.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewLognulldeviceFilter(ctx, "trname", &fortios.LognulldeviceFilterArgs{
//				Anomaly:          pulumi.String("enable"),
//				Dns:              pulumi.String("enable"),
//				FilterType:       pulumi.String("include"),
//				ForwardTraffic:   pulumi.String("enable"),
//				Gtp:              pulumi.String("enable"),
//				LocalTraffic:     pulumi.String("enable"),
//				MulticastTraffic: pulumi.String("enable"),
//				Severity:         pulumi.String("information"),
//				SnifferTraffic:   pulumi.String("enable"),
//				Ssh:              pulumi.String("enable"),
//				Voip:             pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # LogNullDevice Filter can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/lognulldeviceFilter:LognulldeviceFilter labelname LogNullDeviceFilter
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/lognulldeviceFilter:LognulldeviceFilter labelname LogNullDeviceFilter
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type LognulldeviceFilter struct {
	pulumi.CustomResourceState

	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringOutput `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringOutput `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Null-device log filter.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringOutput `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LognulldeviceFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringOutput `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringOutput `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringOutput `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringOutput `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringOutput `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringOutput `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringOutput `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringOutput `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringOutput `pulumi:"ztnaTraffic"`
}

// NewLognulldeviceFilter registers a new resource with the given unique name, arguments, and options.
func NewLognulldeviceFilter(ctx *pulumi.Context,
	name string, args *LognulldeviceFilterArgs, opts ...pulumi.ResourceOption) (*LognulldeviceFilter, error) {
	if args == nil {
		args = &LognulldeviceFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LognulldeviceFilter
	err := ctx.RegisterResource("fortios:index/lognulldeviceFilter:LognulldeviceFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLognulldeviceFilter gets an existing LognulldeviceFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLognulldeviceFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LognulldeviceFilterState, opts ...pulumi.ResourceOption) (*LognulldeviceFilter, error) {
	var resource LognulldeviceFilter
	err := ctx.ReadResource("fortios:index/lognulldeviceFilter:LognulldeviceFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LognulldeviceFilter resources.
type lognulldeviceFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Null-device log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LognulldeviceFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

type LognulldeviceFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Null-device log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LognulldeviceFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LognulldeviceFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*lognulldeviceFilterState)(nil)).Elem()
}

type lognulldeviceFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Null-device log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LognulldeviceFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LognulldeviceFilter resource.
type LognulldeviceFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Null-device log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LognulldeviceFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LognulldeviceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lognulldeviceFilterArgs)(nil)).Elem()
}

type LognulldeviceFilterInput interface {
	pulumi.Input

	ToLognulldeviceFilterOutput() LognulldeviceFilterOutput
	ToLognulldeviceFilterOutputWithContext(ctx context.Context) LognulldeviceFilterOutput
}

func (*LognulldeviceFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LognulldeviceFilter)(nil)).Elem()
}

func (i *LognulldeviceFilter) ToLognulldeviceFilterOutput() LognulldeviceFilterOutput {
	return i.ToLognulldeviceFilterOutputWithContext(context.Background())
}

func (i *LognulldeviceFilter) ToLognulldeviceFilterOutputWithContext(ctx context.Context) LognulldeviceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LognulldeviceFilterOutput)
}

// LognulldeviceFilterArrayInput is an input type that accepts LognulldeviceFilterArray and LognulldeviceFilterArrayOutput values.
// You can construct a concrete instance of `LognulldeviceFilterArrayInput` via:
//
//	LognulldeviceFilterArray{ LognulldeviceFilterArgs{...} }
type LognulldeviceFilterArrayInput interface {
	pulumi.Input

	ToLognulldeviceFilterArrayOutput() LognulldeviceFilterArrayOutput
	ToLognulldeviceFilterArrayOutputWithContext(context.Context) LognulldeviceFilterArrayOutput
}

type LognulldeviceFilterArray []LognulldeviceFilterInput

func (LognulldeviceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LognulldeviceFilter)(nil)).Elem()
}

func (i LognulldeviceFilterArray) ToLognulldeviceFilterArrayOutput() LognulldeviceFilterArrayOutput {
	return i.ToLognulldeviceFilterArrayOutputWithContext(context.Background())
}

func (i LognulldeviceFilterArray) ToLognulldeviceFilterArrayOutputWithContext(ctx context.Context) LognulldeviceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LognulldeviceFilterArrayOutput)
}

// LognulldeviceFilterMapInput is an input type that accepts LognulldeviceFilterMap and LognulldeviceFilterMapOutput values.
// You can construct a concrete instance of `LognulldeviceFilterMapInput` via:
//
//	LognulldeviceFilterMap{ "key": LognulldeviceFilterArgs{...} }
type LognulldeviceFilterMapInput interface {
	pulumi.Input

	ToLognulldeviceFilterMapOutput() LognulldeviceFilterMapOutput
	ToLognulldeviceFilterMapOutputWithContext(context.Context) LognulldeviceFilterMapOutput
}

type LognulldeviceFilterMap map[string]LognulldeviceFilterInput

func (LognulldeviceFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LognulldeviceFilter)(nil)).Elem()
}

func (i LognulldeviceFilterMap) ToLognulldeviceFilterMapOutput() LognulldeviceFilterMapOutput {
	return i.ToLognulldeviceFilterMapOutputWithContext(context.Background())
}

func (i LognulldeviceFilterMap) ToLognulldeviceFilterMapOutputWithContext(ctx context.Context) LognulldeviceFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LognulldeviceFilterMapOutput)
}

type LognulldeviceFilterOutput struct{ *pulumi.OutputState }

func (LognulldeviceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LognulldeviceFilter)(nil)).Elem()
}

func (o LognulldeviceFilterOutput) ToLognulldeviceFilterOutput() LognulldeviceFilterOutput {
	return o
}

func (o LognulldeviceFilterOutput) ToLognulldeviceFilterOutputWithContext(ctx context.Context) LognulldeviceFilterOutput {
	return o
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o LognulldeviceFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Null-device log filter.
func (o LognulldeviceFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LognulldeviceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

// Free Style Filters The structure of `freeStyle` block is documented below.
func (o LognulldeviceFilterOutput) FreeStyles() LognulldeviceFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) LognulldeviceFilterFreeStyleArrayOutput { return v.FreeStyles }).(LognulldeviceFilterFreeStyleArrayOutput)
}

// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

// Enable/disable netscan discovery event logging.
func (o LognulldeviceFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

// Enable/disable netscan vulnerability event logging.
func (o LognulldeviceFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o LognulldeviceFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

// Enable/disable SSH logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LognulldeviceFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
func (o LognulldeviceFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LognulldeviceFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LognulldeviceFilterArrayOutput struct{ *pulumi.OutputState }

func (LognulldeviceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LognulldeviceFilter)(nil)).Elem()
}

func (o LognulldeviceFilterArrayOutput) ToLognulldeviceFilterArrayOutput() LognulldeviceFilterArrayOutput {
	return o
}

func (o LognulldeviceFilterArrayOutput) ToLognulldeviceFilterArrayOutputWithContext(ctx context.Context) LognulldeviceFilterArrayOutput {
	return o
}

func (o LognulldeviceFilterArrayOutput) Index(i pulumi.IntInput) LognulldeviceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LognulldeviceFilter {
		return vs[0].([]*LognulldeviceFilter)[vs[1].(int)]
	}).(LognulldeviceFilterOutput)
}

type LognulldeviceFilterMapOutput struct{ *pulumi.OutputState }

func (LognulldeviceFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LognulldeviceFilter)(nil)).Elem()
}

func (o LognulldeviceFilterMapOutput) ToLognulldeviceFilterMapOutput() LognulldeviceFilterMapOutput {
	return o
}

func (o LognulldeviceFilterMapOutput) ToLognulldeviceFilterMapOutputWithContext(ctx context.Context) LognulldeviceFilterMapOutput {
	return o
}

func (o LognulldeviceFilterMapOutput) MapIndex(k pulumi.StringInput) LognulldeviceFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LognulldeviceFilter {
		return vs[0].(map[string]*LognulldeviceFilter)[vs[1].(string)]
	}).(LognulldeviceFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LognulldeviceFilterInput)(nil)).Elem(), &LognulldeviceFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LognulldeviceFilterArrayInput)(nil)).Elem(), LognulldeviceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LognulldeviceFilterMapInput)(nil)).Elem(), LognulldeviceFilterMap{})
	pulumi.RegisterOutputType(LognulldeviceFilterOutput{})
	pulumi.RegisterOutputType(LognulldeviceFilterArrayOutput{})
	pulumi.RegisterOutputType(LognulldeviceFilterMapOutput{})
}
