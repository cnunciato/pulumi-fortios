// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports handling JSON RPC request for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgJsonrpcRequest(ctx, "test1", &fortios.FmgJsonrpcRequestArgs{
//				JsonContent: pulumi.String("{\n  \"method\": \"add\",\n  \"params\": [\n    {\n      \"data\": [\n        {\n          \"action\": \"accept\",\n          \"dstaddr\": [\"all\"],\n          \"dstintf\": \"any\",\n          \"name\": \"policytest\",\n          \"schedule\": \"none\",\n          \"service\": \"ALL\",\n          \"srcaddr\": \"all\",\n          \"srcintf\": \"any\",\n          \"internet-service\": \"enable\",\n          \"internet-service-id\": \"Alibaba-Web\",\n          \"internet-service-src\": \"enable\",\n          \"internet-service-src-id\": \"Alibaba-Web\",\n          \"users\": \"guest\",\n          \"groups\": \"Guest-group\"\n        }\n      ],\n      \"url\": \"/pm/config/adom/root/pkg/default/firewall/policy\"\n    }\n  ]\n}\n\n"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fortios.NewFmgJsonrpcRequest(ctx, "test2", &fortios.FmgJsonrpcRequestArgs{
//				JsonContent: pulumi.String("{\n  \"method\": \"add\",\n  \"params\": [\n    {\n      \"data\": [\n        {\n          \"ip\": \"192.168.1.2\",\n          \"name\": \"logserver4\",\n          \"port\": \"514\"\n        }\n      ],\n      \"url\": \"/cli/global/system/syslog\"\n    }\n  ]\n}\n\n"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fortios.NewFmgJsonrpcRequest(ctx, "test3", &fortios.FmgJsonrpcRequestArgs{
//				JsonContent: pulumi.String("{\n  \"method\": \"get\",\n  \"params\": [\n    {\n      \"url\": \"/cli/global/system/admin/user/APIUser\"\n    }\n  ]\n}\n\n"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgJsonrpcRequest struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// JSON RPC request, which should contain 'method' and 'params' parameters.
	JsonContent pulumi.StringOutput `pulumi:"jsonContent"`
	// JSON RPC request response data.
	Response pulumi.StringOutput `pulumi:"response"`
}

// NewFmgJsonrpcRequest registers a new resource with the given unique name, arguments, and options.
func NewFmgJsonrpcRequest(ctx *pulumi.Context,
	name string, args *FmgJsonrpcRequestArgs, opts ...pulumi.ResourceOption) (*FmgJsonrpcRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JsonContent == nil {
		return nil, errors.New("invalid value for required argument 'JsonContent'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FmgJsonrpcRequest
	err := ctx.RegisterResource("fortios:index/fmgJsonrpcRequest:FmgJsonrpcRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgJsonrpcRequest gets an existing FmgJsonrpcRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgJsonrpcRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgJsonrpcRequestState, opts ...pulumi.ResourceOption) (*FmgJsonrpcRequest, error) {
	var resource FmgJsonrpcRequest
	err := ctx.ReadResource("fortios:index/fmgJsonrpcRequest:FmgJsonrpcRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgJsonrpcRequest resources.
type fmgJsonrpcRequestState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// JSON RPC request, which should contain 'method' and 'params' parameters.
	JsonContent *string `pulumi:"jsonContent"`
	// JSON RPC request response data.
	Response *string `pulumi:"response"`
}

type FmgJsonrpcRequestState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// JSON RPC request, which should contain 'method' and 'params' parameters.
	JsonContent pulumi.StringPtrInput
	// JSON RPC request response data.
	Response pulumi.StringPtrInput
}

func (FmgJsonrpcRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgJsonrpcRequestState)(nil)).Elem()
}

type fmgJsonrpcRequestArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// JSON RPC request, which should contain 'method' and 'params' parameters.
	JsonContent string `pulumi:"jsonContent"`
}

// The set of arguments for constructing a FmgJsonrpcRequest resource.
type FmgJsonrpcRequestArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// JSON RPC request, which should contain 'method' and 'params' parameters.
	JsonContent pulumi.StringInput
}

func (FmgJsonrpcRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgJsonrpcRequestArgs)(nil)).Elem()
}

type FmgJsonrpcRequestInput interface {
	pulumi.Input

	ToFmgJsonrpcRequestOutput() FmgJsonrpcRequestOutput
	ToFmgJsonrpcRequestOutputWithContext(ctx context.Context) FmgJsonrpcRequestOutput
}

func (*FmgJsonrpcRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgJsonrpcRequest)(nil)).Elem()
}

func (i *FmgJsonrpcRequest) ToFmgJsonrpcRequestOutput() FmgJsonrpcRequestOutput {
	return i.ToFmgJsonrpcRequestOutputWithContext(context.Background())
}

func (i *FmgJsonrpcRequest) ToFmgJsonrpcRequestOutputWithContext(ctx context.Context) FmgJsonrpcRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgJsonrpcRequestOutput)
}

// FmgJsonrpcRequestArrayInput is an input type that accepts FmgJsonrpcRequestArray and FmgJsonrpcRequestArrayOutput values.
// You can construct a concrete instance of `FmgJsonrpcRequestArrayInput` via:
//
//	FmgJsonrpcRequestArray{ FmgJsonrpcRequestArgs{...} }
type FmgJsonrpcRequestArrayInput interface {
	pulumi.Input

	ToFmgJsonrpcRequestArrayOutput() FmgJsonrpcRequestArrayOutput
	ToFmgJsonrpcRequestArrayOutputWithContext(context.Context) FmgJsonrpcRequestArrayOutput
}

type FmgJsonrpcRequestArray []FmgJsonrpcRequestInput

func (FmgJsonrpcRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgJsonrpcRequest)(nil)).Elem()
}

func (i FmgJsonrpcRequestArray) ToFmgJsonrpcRequestArrayOutput() FmgJsonrpcRequestArrayOutput {
	return i.ToFmgJsonrpcRequestArrayOutputWithContext(context.Background())
}

func (i FmgJsonrpcRequestArray) ToFmgJsonrpcRequestArrayOutputWithContext(ctx context.Context) FmgJsonrpcRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgJsonrpcRequestArrayOutput)
}

// FmgJsonrpcRequestMapInput is an input type that accepts FmgJsonrpcRequestMap and FmgJsonrpcRequestMapOutput values.
// You can construct a concrete instance of `FmgJsonrpcRequestMapInput` via:
//
//	FmgJsonrpcRequestMap{ "key": FmgJsonrpcRequestArgs{...} }
type FmgJsonrpcRequestMapInput interface {
	pulumi.Input

	ToFmgJsonrpcRequestMapOutput() FmgJsonrpcRequestMapOutput
	ToFmgJsonrpcRequestMapOutputWithContext(context.Context) FmgJsonrpcRequestMapOutput
}

type FmgJsonrpcRequestMap map[string]FmgJsonrpcRequestInput

func (FmgJsonrpcRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgJsonrpcRequest)(nil)).Elem()
}

func (i FmgJsonrpcRequestMap) ToFmgJsonrpcRequestMapOutput() FmgJsonrpcRequestMapOutput {
	return i.ToFmgJsonrpcRequestMapOutputWithContext(context.Background())
}

func (i FmgJsonrpcRequestMap) ToFmgJsonrpcRequestMapOutputWithContext(ctx context.Context) FmgJsonrpcRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgJsonrpcRequestMapOutput)
}

type FmgJsonrpcRequestOutput struct{ *pulumi.OutputState }

func (FmgJsonrpcRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgJsonrpcRequest)(nil)).Elem()
}

func (o FmgJsonrpcRequestOutput) ToFmgJsonrpcRequestOutput() FmgJsonrpcRequestOutput {
	return o
}

func (o FmgJsonrpcRequestOutput) ToFmgJsonrpcRequestOutputWithContext(ctx context.Context) FmgJsonrpcRequestOutput {
	return o
}

// Comment.
func (o FmgJsonrpcRequestOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgJsonrpcRequest) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// JSON RPC request, which should contain 'method' and 'params' parameters.
func (o FmgJsonrpcRequestOutput) JsonContent() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgJsonrpcRequest) pulumi.StringOutput { return v.JsonContent }).(pulumi.StringOutput)
}

// JSON RPC request response data.
func (o FmgJsonrpcRequestOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgJsonrpcRequest) pulumi.StringOutput { return v.Response }).(pulumi.StringOutput)
}

type FmgJsonrpcRequestArrayOutput struct{ *pulumi.OutputState }

func (FmgJsonrpcRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgJsonrpcRequest)(nil)).Elem()
}

func (o FmgJsonrpcRequestArrayOutput) ToFmgJsonrpcRequestArrayOutput() FmgJsonrpcRequestArrayOutput {
	return o
}

func (o FmgJsonrpcRequestArrayOutput) ToFmgJsonrpcRequestArrayOutputWithContext(ctx context.Context) FmgJsonrpcRequestArrayOutput {
	return o
}

func (o FmgJsonrpcRequestArrayOutput) Index(i pulumi.IntInput) FmgJsonrpcRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgJsonrpcRequest {
		return vs[0].([]*FmgJsonrpcRequest)[vs[1].(int)]
	}).(FmgJsonrpcRequestOutput)
}

type FmgJsonrpcRequestMapOutput struct{ *pulumi.OutputState }

func (FmgJsonrpcRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgJsonrpcRequest)(nil)).Elem()
}

func (o FmgJsonrpcRequestMapOutput) ToFmgJsonrpcRequestMapOutput() FmgJsonrpcRequestMapOutput {
	return o
}

func (o FmgJsonrpcRequestMapOutput) ToFmgJsonrpcRequestMapOutputWithContext(ctx context.Context) FmgJsonrpcRequestMapOutput {
	return o
}

func (o FmgJsonrpcRequestMapOutput) MapIndex(k pulumi.StringInput) FmgJsonrpcRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgJsonrpcRequest {
		return vs[0].(map[string]*FmgJsonrpcRequest)[vs[1].(string)]
	}).(FmgJsonrpcRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgJsonrpcRequestInput)(nil)).Elem(), &FmgJsonrpcRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgJsonrpcRequestArrayInput)(nil)).Elem(), FmgJsonrpcRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgJsonrpcRequestMapInput)(nil)).Elem(), FmgJsonrpcRequestMap{})
	pulumi.RegisterOutputType(FmgJsonrpcRequestOutput{})
	pulumi.RegisterOutputType(FmgJsonrpcRequestArrayOutput{})
	pulumi.RegisterOutputType(FmgJsonrpcRequestMapOutput{})
}
