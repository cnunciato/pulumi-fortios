// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Override FortiAnalyzer settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewLogfortianalyzer3Overridesetting(ctx, "trname", &fortios.Logfortianalyzer3OverridesettingArgs{
//				__changeIp:                pulumi.Int(0),
//				ConnTimeout:               pulumi.Int(10),
//				EncAlgorithm:              pulumi.String("high"),
//				FazType:                   pulumi.Int(6),
//				HmacAlgorithm:             pulumi.String("sha256"),
//				IpsArchive:                pulumi.String("enable"),
//				MonitorFailureRetryPeriod: pulumi.Int(5),
//				MonitorKeepalivePeriod:    pulumi.Int(5),
//				Override:                  pulumi.String("disable"),
//				Reliable:                  pulumi.String("disable"),
//				SslMinProtoVersion:        pulumi.String("default"),
//				Status:                    pulumi.String("disable"),
//				UploadInterval:            pulumi.String("daily"),
//				UploadOption:              pulumi.String("5-minute"),
//				UploadTime:                pulumi.String("00:59"),
//				UseManagementVdom:         pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # LogFortianalyzer3 OverrideSetting can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/logfortianalyzer3Overridesetting:Logfortianalyzer3Overridesetting labelname LogFortianalyzer3OverrideSetting
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/logfortianalyzer3Overridesetting:Logfortianalyzer3Overridesetting labelname LogFortianalyzer3OverrideSetting
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type Logfortianalyzer3Overridesetting struct {
	pulumi.CustomResourceState

	// Hidden attribute.
	__changeIp pulumi.IntOutput `pulumi:"__changeIp"`
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringOutput `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
	CertificateVerification pulumi.StringOutput `pulumi:"certificateVerification"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntOutput `pulumi:"connTimeout"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringOutput `pulumi:"encAlgorithm"`
	// Hidden setting index of FortiAnalyzer.
	FazType pulumi.IntOutput `pulumi:"fazType"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringOutput `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringOutput `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntOutput `pulumi:"maxLogRate"`
	// Hidden management name of FortiAnalyzer.
	MgmtName pulumi.StringOutput `pulumi:"mgmtName"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntOutput `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntOutput `pulumi:"monitorKeepalivePeriod"`
	// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
	Override pulumi.StringOutput `pulumi:"override"`
	// Preshared-key used for auto-authorization on FortiAnalyzer.
	PresharedKey pulumi.StringOutput `pulumi:"presharedKey"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringOutput `pulumi:"priority"`
	// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Reliable pulumi.StringOutput `pulumi:"reliable"`
	// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
	Serials Logfortianalyzer3OverridesettingSerialArrayOutput `pulumi:"serials"`
	// The remote FortiAnalyzer.
	Server pulumi.StringOutput `pulumi:"server"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringOutput `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringOutput `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringOutput `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringOutput `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringOutput `pulumi:"uploadTime"`
	// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringOutput `pulumi:"useManagementVdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLogfortianalyzer3Overridesetting registers a new resource with the given unique name, arguments, and options.
func NewLogfortianalyzer3Overridesetting(ctx *pulumi.Context,
	name string, args *Logfortianalyzer3OverridesettingArgs, opts ...pulumi.ResourceOption) (*Logfortianalyzer3Overridesetting, error) {
	if args == nil {
		args = &Logfortianalyzer3OverridesettingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Logfortianalyzer3Overridesetting
	err := ctx.RegisterResource("fortios:index/logfortianalyzer3Overridesetting:Logfortianalyzer3Overridesetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogfortianalyzer3Overridesetting gets an existing Logfortianalyzer3Overridesetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogfortianalyzer3Overridesetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Logfortianalyzer3OverridesettingState, opts ...pulumi.ResourceOption) (*Logfortianalyzer3Overridesetting, error) {
	var resource Logfortianalyzer3Overridesetting
	err := ctx.ReadResource("fortios:index/logfortianalyzer3Overridesetting:Logfortianalyzer3Overridesetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Logfortianalyzer3Overridesetting resources.
type logfortianalyzer3OverridesettingState struct {
	// Hidden attribute.
	__changeIp *int `pulumi:"__changeIp"`
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig *string `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate *string `pulumi:"certificate"`
	// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
	CertificateVerification *string `pulumi:"certificateVerification"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout *int `pulumi:"connTimeout"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// Hidden setting index of FortiAnalyzer.
	FazType *int `pulumi:"fazType"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm *string `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive *string `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate *int `pulumi:"maxLogRate"`
	// Hidden management name of FortiAnalyzer.
	MgmtName *string `pulumi:"mgmtName"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod *int `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod *int `pulumi:"monitorKeepalivePeriod"`
	// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
	Override *string `pulumi:"override"`
	// Preshared-key used for auto-authorization on FortiAnalyzer.
	PresharedKey *string `pulumi:"presharedKey"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority *string `pulumi:"priority"`
	// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Reliable *string `pulumi:"reliable"`
	// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
	Serials []Logfortianalyzer3OverridesettingSerial `pulumi:"serials"`
	// The remote FortiAnalyzer.
	Server *string `pulumi:"server"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay *string `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval *string `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption *string `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime *string `pulumi:"uploadTime"`
	// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
	UseManagementVdom *string `pulumi:"useManagementVdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Logfortianalyzer3OverridesettingState struct {
	// Hidden attribute.
	__changeIp pulumi.IntPtrInput
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringPtrInput
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringPtrInput
	// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
	CertificateVerification pulumi.StringPtrInput
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// Hidden setting index of FortiAnalyzer.
	FazType pulumi.IntPtrInput
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringPtrInput
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntPtrInput
	// Hidden management name of FortiAnalyzer.
	MgmtName pulumi.StringPtrInput
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntPtrInput
	// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
	Override pulumi.StringPtrInput
	// Preshared-key used for auto-authorization on FortiAnalyzer.
	PresharedKey pulumi.StringPtrInput
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringPtrInput
	// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Reliable pulumi.StringPtrInput
	// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
	Serials Logfortianalyzer3OverridesettingSerialArrayInput
	// The remote FortiAnalyzer.
	Server pulumi.StringPtrInput
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringPtrInput
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringPtrInput
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringPtrInput
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringPtrInput
	// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Logfortianalyzer3OverridesettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logfortianalyzer3OverridesettingState)(nil)).Elem()
}

type logfortianalyzer3OverridesettingArgs struct {
	// Hidden attribute.
	__changeIp *int `pulumi:"__changeIp"`
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig *string `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate *string `pulumi:"certificate"`
	// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
	CertificateVerification *string `pulumi:"certificateVerification"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout *int `pulumi:"connTimeout"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// Hidden setting index of FortiAnalyzer.
	FazType *int `pulumi:"fazType"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm *string `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive *string `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate *int `pulumi:"maxLogRate"`
	// Hidden management name of FortiAnalyzer.
	MgmtName *string `pulumi:"mgmtName"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod *int `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod *int `pulumi:"monitorKeepalivePeriod"`
	// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
	Override *string `pulumi:"override"`
	// Preshared-key used for auto-authorization on FortiAnalyzer.
	PresharedKey *string `pulumi:"presharedKey"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority *string `pulumi:"priority"`
	// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Reliable *string `pulumi:"reliable"`
	// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
	Serials []Logfortianalyzer3OverridesettingSerial `pulumi:"serials"`
	// The remote FortiAnalyzer.
	Server *string `pulumi:"server"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay *string `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval *string `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption *string `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime *string `pulumi:"uploadTime"`
	// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
	UseManagementVdom *string `pulumi:"useManagementVdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Logfortianalyzer3Overridesetting resource.
type Logfortianalyzer3OverridesettingArgs struct {
	// Hidden attribute.
	__changeIp pulumi.IntPtrInput
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringPtrInput
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringPtrInput
	// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
	CertificateVerification pulumi.StringPtrInput
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// Hidden setting index of FortiAnalyzer.
	FazType pulumi.IntPtrInput
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringPtrInput
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntPtrInput
	// Hidden management name of FortiAnalyzer.
	MgmtName pulumi.StringPtrInput
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntPtrInput
	// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
	Override pulumi.StringPtrInput
	// Preshared-key used for auto-authorization on FortiAnalyzer.
	PresharedKey pulumi.StringPtrInput
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringPtrInput
	// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Reliable pulumi.StringPtrInput
	// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
	Serials Logfortianalyzer3OverridesettingSerialArrayInput
	// The remote FortiAnalyzer.
	Server pulumi.StringPtrInput
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringPtrInput
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringPtrInput
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringPtrInput
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringPtrInput
	// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Logfortianalyzer3OverridesettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logfortianalyzer3OverridesettingArgs)(nil)).Elem()
}

type Logfortianalyzer3OverridesettingInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridesettingOutput() Logfortianalyzer3OverridesettingOutput
	ToLogfortianalyzer3OverridesettingOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingOutput
}

func (*Logfortianalyzer3Overridesetting) ElementType() reflect.Type {
	return reflect.TypeOf((**Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (i *Logfortianalyzer3Overridesetting) ToLogfortianalyzer3OverridesettingOutput() Logfortianalyzer3OverridesettingOutput {
	return i.ToLogfortianalyzer3OverridesettingOutputWithContext(context.Background())
}

func (i *Logfortianalyzer3Overridesetting) ToLogfortianalyzer3OverridesettingOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridesettingOutput)
}

// Logfortianalyzer3OverridesettingArrayInput is an input type that accepts Logfortianalyzer3OverridesettingArray and Logfortianalyzer3OverridesettingArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridesettingArrayInput` via:
//
//	Logfortianalyzer3OverridesettingArray{ Logfortianalyzer3OverridesettingArgs{...} }
type Logfortianalyzer3OverridesettingArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridesettingArrayOutput() Logfortianalyzer3OverridesettingArrayOutput
	ToLogfortianalyzer3OverridesettingArrayOutputWithContext(context.Context) Logfortianalyzer3OverridesettingArrayOutput
}

type Logfortianalyzer3OverridesettingArray []Logfortianalyzer3OverridesettingInput

func (Logfortianalyzer3OverridesettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (i Logfortianalyzer3OverridesettingArray) ToLogfortianalyzer3OverridesettingArrayOutput() Logfortianalyzer3OverridesettingArrayOutput {
	return i.ToLogfortianalyzer3OverridesettingArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridesettingArray) ToLogfortianalyzer3OverridesettingArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridesettingArrayOutput)
}

// Logfortianalyzer3OverridesettingMapInput is an input type that accepts Logfortianalyzer3OverridesettingMap and Logfortianalyzer3OverridesettingMapOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridesettingMapInput` via:
//
//	Logfortianalyzer3OverridesettingMap{ "key": Logfortianalyzer3OverridesettingArgs{...} }
type Logfortianalyzer3OverridesettingMapInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridesettingMapOutput() Logfortianalyzer3OverridesettingMapOutput
	ToLogfortianalyzer3OverridesettingMapOutputWithContext(context.Context) Logfortianalyzer3OverridesettingMapOutput
}

type Logfortianalyzer3OverridesettingMap map[string]Logfortianalyzer3OverridesettingInput

func (Logfortianalyzer3OverridesettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (i Logfortianalyzer3OverridesettingMap) ToLogfortianalyzer3OverridesettingMapOutput() Logfortianalyzer3OverridesettingMapOutput {
	return i.ToLogfortianalyzer3OverridesettingMapOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridesettingMap) ToLogfortianalyzer3OverridesettingMapOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridesettingMapOutput)
}

type Logfortianalyzer3OverridesettingOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridesettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (o Logfortianalyzer3OverridesettingOutput) ToLogfortianalyzer3OverridesettingOutput() Logfortianalyzer3OverridesettingOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingOutput) ToLogfortianalyzer3OverridesettingOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingOutput {
	return o
}

// Hidden attribute.
func (o Logfortianalyzer3OverridesettingOutput) __changeIp() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.__changeIp }).(pulumi.IntOutput)
}

// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) AccessConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.AccessConfig }).(pulumi.StringOutput)
}

// Certificate used to communicate with FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

// Enable/disable identity verification of FortiAnalyzer by use of certificate. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) CertificateVerification() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.CertificateVerification }).(pulumi.StringOutput)
}

// FortiAnalyzer connection time-out in seconds (for status and log buffer).
func (o Logfortianalyzer3OverridesettingOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.ConnTimeout }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Logfortianalyzer3OverridesettingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable sending FortiAnalyzer log data with SSL encryption. Valid values: `high-medium`, `high`, `low`.
func (o Logfortianalyzer3OverridesettingOutput) EncAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.EncAlgorithm }).(pulumi.StringOutput)
}

// Hidden setting index of FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) FazType() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.FazType }).(pulumi.IntOutput)
}

// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
func (o Logfortianalyzer3OverridesettingOutput) HmacAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.HmacAlgorithm }).(pulumi.StringOutput)
}

// Specify outgoing interface to reach server.
func (o Logfortianalyzer3OverridesettingOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o Logfortianalyzer3OverridesettingOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) IpsArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.IpsArchive }).(pulumi.StringOutput)
}

// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
func (o Logfortianalyzer3OverridesettingOutput) MaxLogRate() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.MaxLogRate }).(pulumi.IntOutput)
}

// Hidden management name of FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) MgmtName() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.MgmtName }).(pulumi.StringOutput)
}

// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
func (o Logfortianalyzer3OverridesettingOutput) MonitorFailureRetryPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.MonitorFailureRetryPeriod }).(pulumi.IntOutput)
}

// Time between OFTP keepalives in seconds (for status and log buffer).
func (o Logfortianalyzer3OverridesettingOutput) MonitorKeepalivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.IntOutput { return v.MonitorKeepalivePeriod }).(pulumi.IntOutput)
}

// Enable/disable overriding FortiAnalyzer settings or use global settings. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) Override() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Override }).(pulumi.StringOutput)
}

// Preshared-key used for auto-authorization on FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) PresharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.PresharedKey }).(pulumi.StringOutput)
}

// Set log transmission priority. Valid values: `default`, `low`.
func (o Logfortianalyzer3OverridesettingOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

// Enable/disable reliable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) Reliable() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Reliable }).(pulumi.StringOutput)
}

// Serial numbers of the FortiAnalyzer. The structure of `serial` block is documented below.
func (o Logfortianalyzer3OverridesettingOutput) Serials() Logfortianalyzer3OverridesettingSerialArrayOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) Logfortianalyzer3OverridesettingSerialArrayOutput {
		return v.Serials
	}).(Logfortianalyzer3OverridesettingSerialArrayOutput)
}

// The remote FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
func (o Logfortianalyzer3OverridesettingOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
func (o Logfortianalyzer3OverridesettingOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Day of week (month) to upload logs.
func (o Logfortianalyzer3OverridesettingOutput) UploadDay() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.UploadDay }).(pulumi.StringOutput)
}

// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
func (o Logfortianalyzer3OverridesettingOutput) UploadInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.UploadInterval }).(pulumi.StringOutput)
}

// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
func (o Logfortianalyzer3OverridesettingOutput) UploadOption() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.UploadOption }).(pulumi.StringOutput)
}

// Time to upload logs (hh:mm).
func (o Logfortianalyzer3OverridesettingOutput) UploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.UploadTime }).(pulumi.StringOutput)
}

// Enable/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer. Valid values: `enable`, `disable`.
func (o Logfortianalyzer3OverridesettingOutput) UseManagementVdom() pulumi.StringOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringOutput { return v.UseManagementVdom }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Logfortianalyzer3OverridesettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Logfortianalyzer3Overridesetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Logfortianalyzer3OverridesettingArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridesettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (o Logfortianalyzer3OverridesettingArrayOutput) ToLogfortianalyzer3OverridesettingArrayOutput() Logfortianalyzer3OverridesettingArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingArrayOutput) ToLogfortianalyzer3OverridesettingArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer3OverridesettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Logfortianalyzer3Overridesetting {
		return vs[0].([]*Logfortianalyzer3Overridesetting)[vs[1].(int)]
	}).(Logfortianalyzer3OverridesettingOutput)
}

type Logfortianalyzer3OverridesettingMapOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridesettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Logfortianalyzer3Overridesetting)(nil)).Elem()
}

func (o Logfortianalyzer3OverridesettingMapOutput) ToLogfortianalyzer3OverridesettingMapOutput() Logfortianalyzer3OverridesettingMapOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingMapOutput) ToLogfortianalyzer3OverridesettingMapOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingMapOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingMapOutput) MapIndex(k pulumi.StringInput) Logfortianalyzer3OverridesettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Logfortianalyzer3Overridesetting {
		return vs[0].(map[string]*Logfortianalyzer3Overridesetting)[vs[1].(string)]
	}).(Logfortianalyzer3OverridesettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridesettingInput)(nil)).Elem(), &Logfortianalyzer3Overridesetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridesettingArrayInput)(nil)).Elem(), Logfortianalyzer3OverridesettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridesettingMapInput)(nil)).Elem(), Logfortianalyzer3OverridesettingMap{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridesettingOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridesettingArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridesettingMapOutput{})
}
