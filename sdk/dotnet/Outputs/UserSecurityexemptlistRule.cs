// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Outputs
{

    [OutputType]
    public sealed class UserSecurityexemptlistRule
    {
        /// <summary>
        /// Devices or device groups. The structure of `devices` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserSecurityexemptlistRuleDevice> Devices;
        /// <summary>
        /// Destination addresses or address groups. The structure of `dstaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserSecurityexemptlistRuleDstaddr> Dstaddrs;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Destination services. The structure of `service` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserSecurityexemptlistRuleService> Services;
        /// <summary>
        /// Source addresses or address groups. The structure of `srcaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserSecurityexemptlistRuleSrcaddr> Srcaddrs;

        [OutputConstructor]
        private UserSecurityexemptlistRule(
            ImmutableArray<Outputs.UserSecurityexemptlistRuleDevice> devices,

            ImmutableArray<Outputs.UserSecurityexemptlistRuleDstaddr> dstaddrs,

            int? id,

            ImmutableArray<Outputs.UserSecurityexemptlistRuleService> services,

            ImmutableArray<Outputs.UserSecurityexemptlistRuleSrcaddr> srcaddrs)
        {
            Devices = devices;
            Dstaddrs = dstaddrs;
            Id = id;
            Services = services;
            Srcaddrs = srcaddrs;
        }
    }
}
