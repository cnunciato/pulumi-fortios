// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// ## Import
    /// 
    /// System ApiUser can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemApiuser:SystemApiuser labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemApiuser:SystemApiuser labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/systemApiuser:SystemApiuser")]
    public partial class SystemApiuser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Admin user access profile.
        /// </summary>
        [Output("accprofile")]
        public Output<string> Accprofile { get; private set; } = null!;

        /// <summary>
        /// Admin user password.
        /// </summary>
        [Output("apiKey")]
        public Output<string?> ApiKey { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comments")]
        public Output<string?> Comments { get; private set; } = null!;

        /// <summary>
        /// Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
        /// </summary>
        [Output("corsAllowOrigin")]
        public Output<string> CorsAllowOrigin { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// User name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enable/disable peer authentication. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("peerAuth")]
        public Output<string> PeerAuth { get; private set; } = null!;

        /// <summary>
        /// Peer group name.
        /// </summary>
        [Output("peerGroup")]
        public Output<string> PeerGroup { get; private set; } = null!;

        /// <summary>
        /// Schedule name.
        /// </summary>
        [Output("schedule")]
        public Output<string> Schedule { get; private set; } = null!;

        /// <summary>
        /// Trusthost. The structure of `trusthost` block is documented below.
        /// </summary>
        [Output("trusthosts")]
        public Output<ImmutableArray<Outputs.SystemApiuserTrusthost>> Trusthosts { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;

        /// <summary>
        /// Virtual domains. The structure of `vdom` block is documented below.
        /// </summary>
        [Output("vdoms")]
        public Output<ImmutableArray<Outputs.SystemApiuserVdom>> Vdoms { get; private set; } = null!;


        /// <summary>
        /// Create a SystemApiuser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemApiuser(string name, SystemApiuserArgs args, CustomResourceOptions? options = null)
            : base("fortios:index/systemApiuser:SystemApiuser", name, args ?? new SystemApiuserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemApiuser(string name, Input<string> id, SystemApiuserState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/systemApiuser:SystemApiuser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
                AdditionalSecretOutputs =
                {
                    "apiKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemApiuser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemApiuser Get(string name, Input<string> id, SystemApiuserState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemApiuser(name, id, state, options);
        }
    }

    public sealed class SystemApiuserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Admin user access profile.
        /// </summary>
        [Input("accprofile", required: true)]
        public Input<string> Accprofile { get; set; } = null!;

        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// Admin user password.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
        /// </summary>
        [Input("corsAllowOrigin")]
        public Input<string>? CorsAllowOrigin { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// User name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable peer authentication. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("peerAuth")]
        public Input<string>? PeerAuth { get; set; }

        /// <summary>
        /// Peer group name.
        /// </summary>
        [Input("peerGroup")]
        public Input<string>? PeerGroup { get; set; }

        /// <summary>
        /// Schedule name.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        [Input("trusthosts")]
        private InputList<Inputs.SystemApiuserTrusthostArgs>? _trusthosts;

        /// <summary>
        /// Trusthost. The structure of `trusthost` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemApiuserTrusthostArgs> Trusthosts
        {
            get => _trusthosts ?? (_trusthosts = new InputList<Inputs.SystemApiuserTrusthostArgs>());
            set => _trusthosts = value;
        }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        [Input("vdoms")]
        private InputList<Inputs.SystemApiuserVdomArgs>? _vdoms;

        /// <summary>
        /// Virtual domains. The structure of `vdom` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemApiuserVdomArgs> Vdoms
        {
            get => _vdoms ?? (_vdoms = new InputList<Inputs.SystemApiuserVdomArgs>());
            set => _vdoms = value;
        }

        public SystemApiuserArgs()
        {
        }
        public static new SystemApiuserArgs Empty => new SystemApiuserArgs();
    }

    public sealed class SystemApiuserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Admin user access profile.
        /// </summary>
        [Input("accprofile")]
        public Input<string>? Accprofile { get; set; }

        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// Admin user password.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
        /// </summary>
        [Input("corsAllowOrigin")]
        public Input<string>? CorsAllowOrigin { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// User name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable peer authentication. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("peerAuth")]
        public Input<string>? PeerAuth { get; set; }

        /// <summary>
        /// Peer group name.
        /// </summary>
        [Input("peerGroup")]
        public Input<string>? PeerGroup { get; set; }

        /// <summary>
        /// Schedule name.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        [Input("trusthosts")]
        private InputList<Inputs.SystemApiuserTrusthostGetArgs>? _trusthosts;

        /// <summary>
        /// Trusthost. The structure of `trusthost` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemApiuserTrusthostGetArgs> Trusthosts
        {
            get => _trusthosts ?? (_trusthosts = new InputList<Inputs.SystemApiuserTrusthostGetArgs>());
            set => _trusthosts = value;
        }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        [Input("vdoms")]
        private InputList<Inputs.SystemApiuserVdomGetArgs>? _vdoms;

        /// <summary>
        /// Virtual domains. The structure of `vdom` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemApiuserVdomGetArgs> Vdoms
        {
            get => _vdoms ?? (_vdoms = new InputList<Inputs.SystemApiuserVdomGetArgs>());
            set => _vdoms = value;
        }

        public SystemApiuserState()
        {
        }
        public static new SystemApiuserState Empty => new SystemApiuserState();
    }
}
