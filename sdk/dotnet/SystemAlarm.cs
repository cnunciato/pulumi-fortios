// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure alarm.
    /// 
    /// ## Import
    /// 
    /// System Alarm can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemAlarm:SystemAlarm labelname SystemAlarm
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemAlarm:SystemAlarm labelname SystemAlarm
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/systemAlarm:SystemAlarm")]
    public partial class SystemAlarm : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable audible alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("audible")]
        public Output<string> Audible { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Alarm groups. The structure of `groups` block is documented below.
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.SystemAlarmGroup>> Groups { get; private set; } = null!;

        /// <summary>
        /// Enable/disable alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a SystemAlarm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemAlarm(string name, SystemAlarmArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/systemAlarm:SystemAlarm", name, args ?? new SystemAlarmArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemAlarm(string name, Input<string> id, SystemAlarmState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/systemAlarm:SystemAlarm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemAlarm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemAlarm Get(string name, Input<string> id, SystemAlarmState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemAlarm(name, id, state, options);
        }
    }

    public sealed class SystemAlarmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable audible alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("audible")]
        public Input<string>? Audible { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        [Input("groups")]
        private InputList<Inputs.SystemAlarmGroupArgs>? _groups;

        /// <summary>
        /// Alarm groups. The structure of `groups` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemAlarmGroupArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.SystemAlarmGroupArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Enable/disable alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SystemAlarmArgs()
        {
        }
        public static new SystemAlarmArgs Empty => new SystemAlarmArgs();
    }

    public sealed class SystemAlarmState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable audible alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("audible")]
        public Input<string>? Audible { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        [Input("groups")]
        private InputList<Inputs.SystemAlarmGroupGetArgs>? _groups;

        /// <summary>
        /// Alarm groups. The structure of `groups` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemAlarmGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.SystemAlarmGroupGetArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Enable/disable alarm. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SystemAlarmState()
        {
        }
        public static new SystemAlarmState Empty => new SystemAlarmState();
    }
}
