// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Exempt URLs from web proxy forwarding and caching.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname2 = new Fortios.WebproxyForwardserver("trname2", new()
    ///     {
    ///         AddrType = "fqdn",
    ///         Healthcheck = "disable",
    ///         Ip = "0.0.0.0",
    ///         Monitor = "http://www.google.com",
    ///         Port = 3128,
    ///         ServerDownOption = "block",
    ///     });
    /// 
    ///     var trname = new Fortios.WebproxyUrlmatch("trname", new()
    ///     {
    ///         CacheExemption = "disable",
    ///         ForwardServer = trname2.Name,
    ///         Status = "enable",
    ///         UrlPattern = "/examples/servlet/*Servlet",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WebProxy UrlMatch can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/webproxyUrlmatch:WebproxyUrlmatch labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/webproxyUrlmatch:WebproxyUrlmatch labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/webproxyUrlmatch:WebproxyUrlmatch")]
    public partial class WebproxyUrlmatch : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("cacheExemption")]
        public Output<string> CacheExemption { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Forward server name.
        /// </summary>
        [Output("forwardServer")]
        public Output<string> ForwardServer { get; private set; } = null!;

        /// <summary>
        /// Configure a name for the URL to be exempted.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// URL pattern to be exempted from web proxy forwarding and caching.
        /// </summary>
        [Output("urlPattern")]
        public Output<string> UrlPattern { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a WebproxyUrlmatch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebproxyUrlmatch(string name, WebproxyUrlmatchArgs args, CustomResourceOptions? options = null)
            : base("fortios:index/webproxyUrlmatch:WebproxyUrlmatch", name, args ?? new WebproxyUrlmatchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebproxyUrlmatch(string name, Input<string> id, WebproxyUrlmatchState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/webproxyUrlmatch:WebproxyUrlmatch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebproxyUrlmatch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebproxyUrlmatch Get(string name, Input<string> id, WebproxyUrlmatchState? state = null, CustomResourceOptions? options = null)
        {
            return new WebproxyUrlmatch(name, id, state, options);
        }
    }

    public sealed class WebproxyUrlmatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("cacheExemption")]
        public Input<string>? CacheExemption { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Forward server name.
        /// </summary>
        [Input("forwardServer")]
        public Input<string>? ForwardServer { get; set; }

        /// <summary>
        /// Configure a name for the URL to be exempted.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// URL pattern to be exempted from web proxy forwarding and caching.
        /// </summary>
        [Input("urlPattern", required: true)]
        public Input<string> UrlPattern { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WebproxyUrlmatchArgs()
        {
        }
        public static new WebproxyUrlmatchArgs Empty => new WebproxyUrlmatchArgs();
    }

    public sealed class WebproxyUrlmatchState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("cacheExemption")]
        public Input<string>? CacheExemption { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Forward server name.
        /// </summary>
        [Input("forwardServer")]
        public Input<string>? ForwardServer { get; set; }

        /// <summary>
        /// Configure a name for the URL to be exempted.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// URL pattern to be exempted from web proxy forwarding and caching.
        /// </summary>
        [Input("urlPattern")]
        public Input<string>? UrlPattern { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WebproxyUrlmatchState()
        {
        }
        public static new WebproxyUrlmatchState Empty => new WebproxyUrlmatchState();
    }
}
