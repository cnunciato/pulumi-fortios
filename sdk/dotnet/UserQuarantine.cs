// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure quarantine support.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.UserQuarantine("trname", new()
    ///     {
    ///         Quarantine = "enable",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// User Quarantine can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/userQuarantine:UserQuarantine labelname UserQuarantine
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/userQuarantine:UserQuarantine labelname UserQuarantine
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/userQuarantine:UserQuarantine")]
    public partial class UserQuarantine : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Firewall address group which includes all quarantine MAC address.
        /// </summary>
        [Output("firewallGroups")]
        public Output<string> FirewallGroups { get; private set; } = null!;

        /// <summary>
        /// Enable/disable quarantine. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("quarantine")]
        public Output<string> Quarantine { get; private set; } = null!;

        /// <summary>
        /// Quarantine entry to hold multiple MACs. The structure of `targets` block is documented below.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<Outputs.UserQuarantineTarget>> Targets { get; private set; } = null!;

        /// <summary>
        /// Traffic policy for quarantined MACs.
        /// </summary>
        [Output("trafficPolicy")]
        public Output<string> TrafficPolicy { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a UserQuarantine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserQuarantine(string name, UserQuarantineArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/userQuarantine:UserQuarantine", name, args ?? new UserQuarantineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserQuarantine(string name, Input<string> id, UserQuarantineState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/userQuarantine:UserQuarantine", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserQuarantine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserQuarantine Get(string name, Input<string> id, UserQuarantineState? state = null, CustomResourceOptions? options = null)
        {
            return new UserQuarantine(name, id, state, options);
        }
    }

    public sealed class UserQuarantineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Firewall address group which includes all quarantine MAC address.
        /// </summary>
        [Input("firewallGroups")]
        public Input<string>? FirewallGroups { get; set; }

        /// <summary>
        /// Enable/disable quarantine. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("quarantine")]
        public Input<string>? Quarantine { get; set; }

        [Input("targets")]
        private InputList<Inputs.UserQuarantineTargetArgs>? _targets;

        /// <summary>
        /// Quarantine entry to hold multiple MACs. The structure of `targets` block is documented below.
        /// </summary>
        public InputList<Inputs.UserQuarantineTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.UserQuarantineTargetArgs>());
            set => _targets = value;
        }

        /// <summary>
        /// Traffic policy for quarantined MACs.
        /// </summary>
        [Input("trafficPolicy")]
        public Input<string>? TrafficPolicy { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public UserQuarantineArgs()
        {
        }
        public static new UserQuarantineArgs Empty => new UserQuarantineArgs();
    }

    public sealed class UserQuarantineState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Firewall address group which includes all quarantine MAC address.
        /// </summary>
        [Input("firewallGroups")]
        public Input<string>? FirewallGroups { get; set; }

        /// <summary>
        /// Enable/disable quarantine. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("quarantine")]
        public Input<string>? Quarantine { get; set; }

        [Input("targets")]
        private InputList<Inputs.UserQuarantineTargetGetArgs>? _targets;

        /// <summary>
        /// Quarantine entry to hold multiple MACs. The structure of `targets` block is documented below.
        /// </summary>
        public InputList<Inputs.UserQuarantineTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.UserQuarantineTargetGetArgs>());
            set => _targets = value;
        }

        /// <summary>
        /// Traffic policy for quarantined MACs.
        /// </summary>
        [Input("trafficPolicy")]
        public Input<string>? TrafficPolicy { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public UserQuarantineState()
        {
        }
        public static new UserQuarantineState Empty => new UserQuarantineState();
    }
}
