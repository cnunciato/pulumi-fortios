// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    public static class GetFirewallshaperPeripshaperlist
    {
        /// <summary>
        /// Provides a list of `fortios.FirewallshaperPeripshaper`.
        /// </summary>
        public static Task<GetFirewallshaperPeripshaperlistResult> InvokeAsync(GetFirewallshaperPeripshaperlistArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallshaperPeripshaperlistResult>("fortios:index/getFirewallshaperPeripshaperlist:getFirewallshaperPeripshaperlist", args ?? new GetFirewallshaperPeripshaperlistArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a list of `fortios.FirewallshaperPeripshaper`.
        /// </summary>
        public static Output<GetFirewallshaperPeripshaperlistResult> Invoke(GetFirewallshaperPeripshaperlistInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallshaperPeripshaperlistResult>("fortios:index/getFirewallshaperPeripshaperlist:getFirewallshaperPeripshaperlist", args ?? new GetFirewallshaperPeripshaperlistInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallshaperPeripshaperlistArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter used to scope the list. See Filter results of datasource.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetFirewallshaperPeripshaperlistArgs()
        {
        }
        public static new GetFirewallshaperPeripshaperlistArgs Empty => new GetFirewallshaperPeripshaperlistArgs();
    }

    public sealed class GetFirewallshaperPeripshaperlistInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter used to scope the list. See Filter results of datasource.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetFirewallshaperPeripshaperlistInvokeArgs()
        {
        }
        public static new GetFirewallshaperPeripshaperlistInvokeArgs Empty => new GetFirewallshaperPeripshaperlistInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallshaperPeripshaperlistResult
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of the `fortios.FirewallshaperPeripshaper`.
        /// </summary>
        public readonly ImmutableArray<string> Namelists;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetFirewallshaperPeripshaperlistResult(
            string? filter,

            string id,

            ImmutableArray<string> namelists,

            string? vdomparam)
        {
            Filter = filter;
            Id = id;
            Namelists = namelists;
            Vdomparam = vdomparam;
        }
    }
}
