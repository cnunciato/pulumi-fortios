// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure virtual wire pairs.
    /// 
    /// ## Import
    /// 
    /// System VirtualWirePair can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemVirtualwirepair:SystemVirtualwirepair labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemVirtualwirepair:SystemVirtualwirepair labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/systemVirtualwirepair:SystemVirtualwirepair")]
    public partial class SystemVirtualwirepair : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Interfaces belong to the virtual-wire-pair. The structure of `member` block is documented below.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.SystemVirtualwirepairMember>> Members { get; private set; } = null!;

        /// <summary>
        /// Virtual-wire-pair name. Must be a unique interface name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;

        /// <summary>
        /// Set VLAN filters.
        /// </summary>
        [Output("vlanFilter")]
        public Output<string> VlanFilter { get; private set; } = null!;

        /// <summary>
        /// Enable/disable wildcard VLAN. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("wildcardVlan")]
        public Output<string> WildcardVlan { get; private set; } = null!;


        /// <summary>
        /// Create a SystemVirtualwirepair resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemVirtualwirepair(string name, SystemVirtualwirepairArgs args, CustomResourceOptions? options = null)
            : base("fortios:index/systemVirtualwirepair:SystemVirtualwirepair", name, args ?? new SystemVirtualwirepairArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemVirtualwirepair(string name, Input<string> id, SystemVirtualwirepairState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/systemVirtualwirepair:SystemVirtualwirepair", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemVirtualwirepair resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemVirtualwirepair Get(string name, Input<string> id, SystemVirtualwirepairState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemVirtualwirepair(name, id, state, options);
        }
    }

    public sealed class SystemVirtualwirepairArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        [Input("members", required: true)]
        private InputList<Inputs.SystemVirtualwirepairMemberArgs>? _members;

        /// <summary>
        /// Interfaces belong to the virtual-wire-pair. The structure of `member` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemVirtualwirepairMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.SystemVirtualwirepairMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Virtual-wire-pair name. Must be a unique interface name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Set VLAN filters.
        /// </summary>
        [Input("vlanFilter")]
        public Input<string>? VlanFilter { get; set; }

        /// <summary>
        /// Enable/disable wildcard VLAN. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wildcardVlan")]
        public Input<string>? WildcardVlan { get; set; }

        public SystemVirtualwirepairArgs()
        {
        }
        public static new SystemVirtualwirepairArgs Empty => new SystemVirtualwirepairArgs();
    }

    public sealed class SystemVirtualwirepairState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        [Input("members")]
        private InputList<Inputs.SystemVirtualwirepairMemberGetArgs>? _members;

        /// <summary>
        /// Interfaces belong to the virtual-wire-pair. The structure of `member` block is documented below.
        /// </summary>
        public InputList<Inputs.SystemVirtualwirepairMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.SystemVirtualwirepairMemberGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Virtual-wire-pair name. Must be a unique interface name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Set VLAN filters.
        /// </summary>
        [Input("vlanFilter")]
        public Input<string>? VlanFilter { get; set; }

        /// <summary>
        /// Enable/disable wildcard VLAN. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wildcardVlan")]
        public Input<string>? WildcardVlan { get; set; }

        public SystemVirtualwirepairState()
        {
        }
        public static new SystemVirtualwirepairState Empty => new SystemVirtualwirepairState();
    }
}
