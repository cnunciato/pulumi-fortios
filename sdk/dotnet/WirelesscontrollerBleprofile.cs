// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure Bluetooth Low Energy profile.
    /// 
    /// ## Import
    /// 
    /// WirelessController BleProfile can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile")]
    public partial class WirelesscontrollerBleprofile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advertising type. Valid values: `ibeacon`, `eddystone-uid`, `eddystone-url`.
        /// </summary>
        [Output("advertising")]
        public Output<string> Advertising { get; private set; } = null!;

        /// <summary>
        /// Beacon interval (default = 100 msec).
        /// </summary>
        [Output("beaconInterval")]
        public Output<int> BeaconInterval { get; private set; } = null!;

        /// <summary>
        /// Enable/disable Bluetooth Low Energy (BLE) scanning. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("bleScanning")]
        public Output<string> BleScanning { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comment")]
        public Output<string> Comment { get; private set; } = null!;

        /// <summary>
        /// Eddystone instance ID.
        /// </summary>
        [Output("eddystoneInstance")]
        public Output<string> EddystoneInstance { get; private set; } = null!;

        /// <summary>
        /// Eddystone namespace ID.
        /// </summary>
        [Output("eddystoneNamespace")]
        public Output<string> EddystoneNamespace { get; private set; } = null!;

        /// <summary>
        /// Eddystone URL.
        /// </summary>
        [Output("eddystoneUrl")]
        public Output<string> EddystoneUrl { get; private set; } = null!;

        /// <summary>
        /// Eddystone encoded URL hexadecimal string
        /// </summary>
        [Output("eddystoneUrlEncodeHex")]
        public Output<string> EddystoneUrlEncodeHex { get; private set; } = null!;

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Output("ibeaconUuid")]
        public Output<string> IbeaconUuid { get; private set; } = null!;

        /// <summary>
        /// Major ID.
        /// </summary>
        [Output("majorId")]
        public Output<int> MajorId { get; private set; } = null!;

        /// <summary>
        /// Minor ID.
        /// </summary>
        [Output("minorId")]
        public Output<int> MinorId { get; private set; } = null!;

        /// <summary>
        /// Bluetooth Low Energy profile name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Transmit power level (default = 0). Valid values: `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`.
        /// </summary>
        [Output("txpower")]
        public Output<string> Txpower { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a WirelesscontrollerBleprofile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelesscontrollerBleprofile(string name, WirelesscontrollerBleprofileArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile", name, args ?? new WirelesscontrollerBleprofileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelesscontrollerBleprofile(string name, Input<string> id, WirelesscontrollerBleprofileState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelesscontrollerBleprofile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelesscontrollerBleprofile Get(string name, Input<string> id, WirelesscontrollerBleprofileState? state = null, CustomResourceOptions? options = null)
        {
            return new WirelesscontrollerBleprofile(name, id, state, options);
        }
    }

    public sealed class WirelesscontrollerBleprofileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advertising type. Valid values: `ibeacon`, `eddystone-uid`, `eddystone-url`.
        /// </summary>
        [Input("advertising")]
        public Input<string>? Advertising { get; set; }

        /// <summary>
        /// Beacon interval (default = 100 msec).
        /// </summary>
        [Input("beaconInterval")]
        public Input<int>? BeaconInterval { get; set; }

        /// <summary>
        /// Enable/disable Bluetooth Low Energy (BLE) scanning. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("bleScanning")]
        public Input<string>? BleScanning { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Eddystone instance ID.
        /// </summary>
        [Input("eddystoneInstance")]
        public Input<string>? EddystoneInstance { get; set; }

        /// <summary>
        /// Eddystone namespace ID.
        /// </summary>
        [Input("eddystoneNamespace")]
        public Input<string>? EddystoneNamespace { get; set; }

        /// <summary>
        /// Eddystone URL.
        /// </summary>
        [Input("eddystoneUrl")]
        public Input<string>? EddystoneUrl { get; set; }

        /// <summary>
        /// Eddystone encoded URL hexadecimal string
        /// </summary>
        [Input("eddystoneUrlEncodeHex")]
        public Input<string>? EddystoneUrlEncodeHex { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("ibeaconUuid")]
        public Input<string>? IbeaconUuid { get; set; }

        /// <summary>
        /// Major ID.
        /// </summary>
        [Input("majorId")]
        public Input<int>? MajorId { get; set; }

        /// <summary>
        /// Minor ID.
        /// </summary>
        [Input("minorId")]
        public Input<int>? MinorId { get; set; }

        /// <summary>
        /// Bluetooth Low Energy profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Transmit power level (default = 0). Valid values: `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`.
        /// </summary>
        [Input("txpower")]
        public Input<string>? Txpower { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WirelesscontrollerBleprofileArgs()
        {
        }
        public static new WirelesscontrollerBleprofileArgs Empty => new WirelesscontrollerBleprofileArgs();
    }

    public sealed class WirelesscontrollerBleprofileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advertising type. Valid values: `ibeacon`, `eddystone-uid`, `eddystone-url`.
        /// </summary>
        [Input("advertising")]
        public Input<string>? Advertising { get; set; }

        /// <summary>
        /// Beacon interval (default = 100 msec).
        /// </summary>
        [Input("beaconInterval")]
        public Input<int>? BeaconInterval { get; set; }

        /// <summary>
        /// Enable/disable Bluetooth Low Energy (BLE) scanning. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("bleScanning")]
        public Input<string>? BleScanning { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Eddystone instance ID.
        /// </summary>
        [Input("eddystoneInstance")]
        public Input<string>? EddystoneInstance { get; set; }

        /// <summary>
        /// Eddystone namespace ID.
        /// </summary>
        [Input("eddystoneNamespace")]
        public Input<string>? EddystoneNamespace { get; set; }

        /// <summary>
        /// Eddystone URL.
        /// </summary>
        [Input("eddystoneUrl")]
        public Input<string>? EddystoneUrl { get; set; }

        /// <summary>
        /// Eddystone encoded URL hexadecimal string
        /// </summary>
        [Input("eddystoneUrlEncodeHex")]
        public Input<string>? EddystoneUrlEncodeHex { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("ibeaconUuid")]
        public Input<string>? IbeaconUuid { get; set; }

        /// <summary>
        /// Major ID.
        /// </summary>
        [Input("majorId")]
        public Input<int>? MajorId { get; set; }

        /// <summary>
        /// Minor ID.
        /// </summary>
        [Input("minorId")]
        public Input<int>? MinorId { get; set; }

        /// <summary>
        /// Bluetooth Low Energy profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Transmit power level (default = 0). Valid values: `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`.
        /// </summary>
        [Input("txpower")]
        public Input<string>? Txpower { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WirelesscontrollerBleprofileState()
        {
        }
        public static new WirelesscontrollerBleprofileState Empty => new WirelesscontrollerBleprofileState();
    }
}
