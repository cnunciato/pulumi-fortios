// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure global DPDK options. Applies to FortiOS Version `&gt;= 6.2.4`.
    /// 
    /// ## Import
    /// 
    /// Dpdk Global can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/dpdkGlobal:DpdkGlobal labelname DpdkGlobal
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/dpdkGlobal:DpdkGlobal labelname DpdkGlobal
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/dpdkGlobal:DpdkGlobal")]
    public partial class DpdkGlobal : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Enable/disable elasticbuffer support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("elasticbuffer")]
        public Output<string> Elasticbuffer { get; private set; } = null!;

        /// <summary>
        /// Percentage of main memory allocated to hugepages, which are available for DPDK operation.
        /// </summary>
        [Output("hugepagePercentage")]
        public Output<int> HugepagePercentage { get; private set; } = null!;

        /// <summary>
        /// Physical interfaces that enable DPDK. The structure of `interface` block is documented below.
        /// </summary>
        [Output("interfaces")]
        public Output<ImmutableArray<Outputs.DpdkGlobalInterface>> Interfaces { get; private set; } = null!;

        /// <summary>
        /// Enable/disable DPDK IPsec phase 2 offloading. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("ipsecOffload")]
        public Output<string> IpsecOffload { get; private set; } = null!;

        /// <summary>
        /// Percentage of main memory allocated to DPDK packet buffer.
        /// </summary>
        [Output("mbufpoolPercentage")]
        public Output<int> MbufpoolPercentage { get; private set; } = null!;

        /// <summary>
        /// Enable/disable multi-queue RX/TX support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("multiqueue")]
        public Output<string> Multiqueue { get; private set; } = null!;

        /// <summary>
        /// Enable/disable per-session accounting. Valid values: `disable`, `traffic-log-only`, `enable`.
        /// </summary>
        [Output("perSessionAccounting")]
        public Output<string> PerSessionAccounting { get; private set; } = null!;

        /// <summary>
        /// Enable/disable sleep-on-idle support for all FDH engines. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("sleepOnIdle")]
        public Output<string> SleepOnIdle { get; private set; } = null!;

        /// <summary>
        /// Enable/disable DPDK operation for the entire system. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a DpdkGlobal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DpdkGlobal(string name, DpdkGlobalArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/dpdkGlobal:DpdkGlobal", name, args ?? new DpdkGlobalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DpdkGlobal(string name, Input<string> id, DpdkGlobalState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/dpdkGlobal:DpdkGlobal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DpdkGlobal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DpdkGlobal Get(string name, Input<string> id, DpdkGlobalState? state = null, CustomResourceOptions? options = null)
        {
            return new DpdkGlobal(name, id, state, options);
        }
    }

    public sealed class DpdkGlobalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable elasticbuffer support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("elasticbuffer")]
        public Input<string>? Elasticbuffer { get; set; }

        /// <summary>
        /// Percentage of main memory allocated to hugepages, which are available for DPDK operation.
        /// </summary>
        [Input("hugepagePercentage")]
        public Input<int>? HugepagePercentage { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.DpdkGlobalInterfaceArgs>? _interfaces;

        /// <summary>
        /// Physical interfaces that enable DPDK. The structure of `interface` block is documented below.
        /// </summary>
        public InputList<Inputs.DpdkGlobalInterfaceArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.DpdkGlobalInterfaceArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// Enable/disable DPDK IPsec phase 2 offloading. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("ipsecOffload")]
        public Input<string>? IpsecOffload { get; set; }

        /// <summary>
        /// Percentage of main memory allocated to DPDK packet buffer.
        /// </summary>
        [Input("mbufpoolPercentage")]
        public Input<int>? MbufpoolPercentage { get; set; }

        /// <summary>
        /// Enable/disable multi-queue RX/TX support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("multiqueue")]
        public Input<string>? Multiqueue { get; set; }

        /// <summary>
        /// Enable/disable per-session accounting. Valid values: `disable`, `traffic-log-only`, `enable`.
        /// </summary>
        [Input("perSessionAccounting")]
        public Input<string>? PerSessionAccounting { get; set; }

        /// <summary>
        /// Enable/disable sleep-on-idle support for all FDH engines. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("sleepOnIdle")]
        public Input<string>? SleepOnIdle { get; set; }

        /// <summary>
        /// Enable/disable DPDK operation for the entire system. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public DpdkGlobalArgs()
        {
        }
        public static new DpdkGlobalArgs Empty => new DpdkGlobalArgs();
    }

    public sealed class DpdkGlobalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable elasticbuffer support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("elasticbuffer")]
        public Input<string>? Elasticbuffer { get; set; }

        /// <summary>
        /// Percentage of main memory allocated to hugepages, which are available for DPDK operation.
        /// </summary>
        [Input("hugepagePercentage")]
        public Input<int>? HugepagePercentage { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.DpdkGlobalInterfaceGetArgs>? _interfaces;

        /// <summary>
        /// Physical interfaces that enable DPDK. The structure of `interface` block is documented below.
        /// </summary>
        public InputList<Inputs.DpdkGlobalInterfaceGetArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.DpdkGlobalInterfaceGetArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// Enable/disable DPDK IPsec phase 2 offloading. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("ipsecOffload")]
        public Input<string>? IpsecOffload { get; set; }

        /// <summary>
        /// Percentage of main memory allocated to DPDK packet buffer.
        /// </summary>
        [Input("mbufpoolPercentage")]
        public Input<int>? MbufpoolPercentage { get; set; }

        /// <summary>
        /// Enable/disable multi-queue RX/TX support for all DPDK ports. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("multiqueue")]
        public Input<string>? Multiqueue { get; set; }

        /// <summary>
        /// Enable/disable per-session accounting. Valid values: `disable`, `traffic-log-only`, `enable`.
        /// </summary>
        [Input("perSessionAccounting")]
        public Input<string>? PerSessionAccounting { get; set; }

        /// <summary>
        /// Enable/disable sleep-on-idle support for all FDH engines. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("sleepOnIdle")]
        public Input<string>? SleepOnIdle { get; set; }

        /// <summary>
        /// Enable/disable DPDK operation for the entire system. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public DpdkGlobalState()
        {
        }
        public static new DpdkGlobalState Empty => new DpdkGlobalState();
    }
}
