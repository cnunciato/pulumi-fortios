// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure FortiSwitch QoS 802.1p.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.SwitchcontrollerqosDot1pmap("trname", new()
    ///     {
    ///         Priority0 = "queue-0",
    ///         Priority1 = "queue-0",
    ///         Priority2 = "queue-0",
    ///         Priority3 = "queue-0",
    ///         Priority4 = "queue-0",
    ///         Priority5 = "queue-0",
    ///         Priority6 = "queue-0",
    ///         Priority7 = "queue-0",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SwitchControllerQos Dot1PMap can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/switchcontrollerqosDot1pmap:SwitchcontrollerqosDot1pmap labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/switchcontrollerqosDot1pmap:SwitchcontrollerqosDot1pmap labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/switchcontrollerqosDot1pmap:SwitchcontrollerqosDot1pmap")]
    public partial class SwitchcontrollerqosDot1pmap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the 802.1p name.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("egressPriTagging")]
        public Output<string> EgressPriTagging { get; private set; } = null!;

        /// <summary>
        /// Dot1p map name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority0")]
        public Output<string> Priority0 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority1")]
        public Output<string> Priority1 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority2")]
        public Output<string> Priority2 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority3")]
        public Output<string> Priority3 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority4")]
        public Output<string> Priority4 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority5")]
        public Output<string> Priority5 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority6")]
        public Output<string> Priority6 { get; private set; } = null!;

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Output("priority7")]
        public Output<string> Priority7 { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a SwitchcontrollerqosDot1pmap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwitchcontrollerqosDot1pmap(string name, SwitchcontrollerqosDot1pmapArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/switchcontrollerqosDot1pmap:SwitchcontrollerqosDot1pmap", name, args ?? new SwitchcontrollerqosDot1pmapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwitchcontrollerqosDot1pmap(string name, Input<string> id, SwitchcontrollerqosDot1pmapState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/switchcontrollerqosDot1pmap:SwitchcontrollerqosDot1pmap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwitchcontrollerqosDot1pmap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwitchcontrollerqosDot1pmap Get(string name, Input<string> id, SwitchcontrollerqosDot1pmapState? state = null, CustomResourceOptions? options = null)
        {
            return new SwitchcontrollerqosDot1pmap(name, id, state, options);
        }
    }

    public sealed class SwitchcontrollerqosDot1pmapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the 802.1p name.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("egressPriTagging")]
        public Input<string>? EgressPriTagging { get; set; }

        /// <summary>
        /// Dot1p map name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority0")]
        public Input<string>? Priority0 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority1")]
        public Input<string>? Priority1 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority2")]
        public Input<string>? Priority2 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority3")]
        public Input<string>? Priority3 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority4")]
        public Input<string>? Priority4 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority5")]
        public Input<string>? Priority5 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority6")]
        public Input<string>? Priority6 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority7")]
        public Input<string>? Priority7 { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SwitchcontrollerqosDot1pmapArgs()
        {
        }
        public static new SwitchcontrollerqosDot1pmapArgs Empty => new SwitchcontrollerqosDot1pmapArgs();
    }

    public sealed class SwitchcontrollerqosDot1pmapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the 802.1p name.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("egressPriTagging")]
        public Input<string>? EgressPriTagging { get; set; }

        /// <summary>
        /// Dot1p map name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority0")]
        public Input<string>? Priority0 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority1")]
        public Input<string>? Priority1 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority2")]
        public Input<string>? Priority2 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority3")]
        public Input<string>? Priority3 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority4")]
        public Input<string>? Priority4 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority5")]
        public Input<string>? Priority5 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority6")]
        public Input<string>? Priority6 { get; set; }

        /// <summary>
        /// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
        /// </summary>
        [Input("priority7")]
        public Input<string>? Priority7 { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SwitchcontrollerqosDot1pmapState()
        {
        }
        public static new SwitchcontrollerqosDot1pmapState Empty => new SwitchcontrollerqosDot1pmapState();
    }
}
