// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    public static class GetRouterRoutemap
    {
        /// <summary>
        /// Use this data source to get information on an fortios router routemap
        /// </summary>
        public static Task<GetRouterRoutemapResult> InvokeAsync(GetRouterRoutemapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouterRoutemapResult>("fortios:index/getRouterRoutemap:getRouterRoutemap", args ?? new GetRouterRoutemapArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an fortios router routemap
        /// </summary>
        public static Output<GetRouterRoutemapResult> Invoke(GetRouterRoutemapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouterRoutemapResult>("fortios:index/getRouterRoutemap:getRouterRoutemap", args ?? new GetRouterRoutemapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouterRoutemapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the name of the desired router routemap.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetRouterRoutemapArgs()
        {
        }
        public static new GetRouterRoutemapArgs Empty => new GetRouterRoutemapArgs();
    }

    public sealed class GetRouterRoutemapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the name of the desired router routemap.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetRouterRoutemapInvokeArgs()
        {
        }
        public static new GetRouterRoutemapInvokeArgs Empty => new GetRouterRoutemapInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouterRoutemapResult
    {
        /// <summary>
        /// Optional comments.
        /// </summary>
        public readonly string Comments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Rule. The structure of `rule` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouterRoutemapRuleResult> Rules;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetRouterRoutemapResult(
            string comments,

            string id,

            string name,

            ImmutableArray<Outputs.GetRouterRoutemapRuleResult> rules,

            string? vdomparam)
        {
            Comments = comments;
            Id = id;
            Name = name;
            Rules = rules;
            Vdomparam = vdomparam;
        }
    }
}
