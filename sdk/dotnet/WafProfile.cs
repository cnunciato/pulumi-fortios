// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Web application firewall configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.WafProfile("trname", new()
    ///     {
    ///         ExtendedLog = "disable",
    ///         External = "disable",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Waf Profile can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wafProfile:WafProfile labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wafProfile:WafProfile labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/wafProfile:WafProfile")]
    public partial class WafProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Black address list and white address list. The structure of `address_list` block is documented below.
        /// </summary>
        [Output("addressList")]
        public Output<Outputs.WafProfileAddressList> AddressList { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
        /// </summary>
        [Output("constraint")]
        public Output<Outputs.WafProfileConstraint> Constraint { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Enable/disable extended logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("extendedLog")]
        public Output<string> ExtendedLog { get; private set; } = null!;

        /// <summary>
        /// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("external")]
        public Output<string> External { get; private set; } = null!;

        /// <summary>
        /// Method restriction. The structure of `method` block is documented below.
        /// </summary>
        [Output("method")]
        public Output<Outputs.WafProfileMethod> Method { get; private set; } = null!;

        /// <summary>
        /// WAF Profile name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// WAF signatures. The structure of `signature` block is documented below.
        /// </summary>
        [Output("signature")]
        public Output<Outputs.WafProfileSignature> Signature { get; private set; } = null!;

        /// <summary>
        /// URL access list The structure of `url_access` block is documented below.
        /// </summary>
        [Output("urlAccesses")]
        public Output<ImmutableArray<Outputs.WafProfileUrlAccess>> UrlAccesses { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a WafProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WafProfile(string name, WafProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/wafProfile:WafProfile", name, args ?? new WafProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WafProfile(string name, Input<string> id, WafProfileState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/wafProfile:WafProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WafProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WafProfile Get(string name, Input<string> id, WafProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new WafProfile(name, id, state, options);
        }
    }

    public sealed class WafProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Black address list and white address list. The structure of `address_list` block is documented below.
        /// </summary>
        [Input("addressList")]
        public Input<Inputs.WafProfileAddressListArgs>? AddressList { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
        /// </summary>
        [Input("constraint")]
        public Input<Inputs.WafProfileConstraintArgs>? Constraint { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable extended logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("extendedLog")]
        public Input<string>? ExtendedLog { get; set; }

        /// <summary>
        /// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("external")]
        public Input<string>? External { get; set; }

        /// <summary>
        /// Method restriction. The structure of `method` block is documented below.
        /// </summary>
        [Input("method")]
        public Input<Inputs.WafProfileMethodArgs>? Method { get; set; }

        /// <summary>
        /// WAF Profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// WAF signatures. The structure of `signature` block is documented below.
        /// </summary>
        [Input("signature")]
        public Input<Inputs.WafProfileSignatureArgs>? Signature { get; set; }

        [Input("urlAccesses")]
        private InputList<Inputs.WafProfileUrlAccessArgs>? _urlAccesses;

        /// <summary>
        /// URL access list The structure of `url_access` block is documented below.
        /// </summary>
        public InputList<Inputs.WafProfileUrlAccessArgs> UrlAccesses
        {
            get => _urlAccesses ?? (_urlAccesses = new InputList<Inputs.WafProfileUrlAccessArgs>());
            set => _urlAccesses = value;
        }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WafProfileArgs()
        {
        }
        public static new WafProfileArgs Empty => new WafProfileArgs();
    }

    public sealed class WafProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Black address list and white address list. The structure of `address_list` block is documented below.
        /// </summary>
        [Input("addressList")]
        public Input<Inputs.WafProfileAddressListGetArgs>? AddressList { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
        /// </summary>
        [Input("constraint")]
        public Input<Inputs.WafProfileConstraintGetArgs>? Constraint { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable extended logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("extendedLog")]
        public Input<string>? ExtendedLog { get; set; }

        /// <summary>
        /// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("external")]
        public Input<string>? External { get; set; }

        /// <summary>
        /// Method restriction. The structure of `method` block is documented below.
        /// </summary>
        [Input("method")]
        public Input<Inputs.WafProfileMethodGetArgs>? Method { get; set; }

        /// <summary>
        /// WAF Profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// WAF signatures. The structure of `signature` block is documented below.
        /// </summary>
        [Input("signature")]
        public Input<Inputs.WafProfileSignatureGetArgs>? Signature { get; set; }

        [Input("urlAccesses")]
        private InputList<Inputs.WafProfileUrlAccessGetArgs>? _urlAccesses;

        /// <summary>
        /// URL access list The structure of `url_access` block is documented below.
        /// </summary>
        public InputList<Inputs.WafProfileUrlAccessGetArgs> UrlAccesses
        {
            get => _urlAccesses ?? (_urlAccesses = new InputList<Inputs.WafProfileUrlAccessGetArgs>());
            set => _urlAccesses = value;
        }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public WafProfileState()
        {
        }
        public static new WafProfileState Empty => new WafProfileState();
    }
}
