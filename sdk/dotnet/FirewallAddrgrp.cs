// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure IPv4 address groups.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname1 = new Fortios.FirewallAddress("trname1", new()
    ///     {
    ///         AllowRouting = "disable",
    ///         CacheTtl = 0,
    ///         Color = 0,
    ///         EndIp = "255.0.0.0",
    ///         StartIp = "12.0.0.0",
    ///         Subnet = "12.0.0.0 255.0.0.0",
    ///         Type = "ipmask",
    ///         Visibility = "enable",
    ///         Wildcard = "12.0.0.0 255.0.0.0",
    ///     });
    /// 
    ///     var trname = new Fortios.FirewallAddrgrp("trname", new()
    ///     {
    ///         AllowRouting = "disable",
    ///         Color = 0,
    ///         Exclude = "disable",
    ///         Visibility = "enable",
    ///         Members = new[]
    ///         {
    ///             new Fortios.Inputs.FirewallAddrgrpMemberArgs
    ///             {
    ///                 Name = trname1.Name,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Firewall Addrgrp can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/firewallAddrgrp:FirewallAddrgrp labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/firewallAddrgrp:FirewallAddrgrp labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/firewallAddrgrp:FirewallAddrgrp")]
    public partial class FirewallAddrgrp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("allowRouting")]
        public Output<string> AllowRouting { get; private set; } = null!;

        /// <summary>
        /// Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// Color of icon on the GUI.
        /// </summary>
        [Output("color")]
        public Output<int> Color { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Enable/disable address exclusion. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("exclude")]
        public Output<string> Exclude { get; private set; } = null!;

        /// <summary>
        /// Address exclusion member. The structure of `exclude_member` block is documented below.
        /// </summary>
        [Output("excludeMembers")]
        public Output<ImmutableArray<Outputs.FirewallAddrgrpExcludeMember>> ExcludeMembers { get; private set; } = null!;

        /// <summary>
        /// Security Fabric global object setting. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("fabricObject")]
        public Output<string> FabricObject { get; private set; } = null!;

        /// <summary>
        /// Address objects contained within the group. The structure of `member` block is documented below.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.FirewallAddrgrpMember>> Members { get; private set; } = null!;

        /// <summary>
        /// Address group name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Config object tagging. The structure of `tagging` block is documented below.
        /// </summary>
        [Output("taggings")]
        public Output<ImmutableArray<Outputs.FirewallAddrgrpTagging>> Taggings { get; private set; } = null!;

        /// <summary>
        /// Address group type. Valid values: `default`, `folder`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;

        /// <summary>
        /// Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("visibility")]
        public Output<string> Visibility { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallAddrgrp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallAddrgrp(string name, FirewallAddrgrpArgs args, CustomResourceOptions? options = null)
            : base("fortios:index/firewallAddrgrp:FirewallAddrgrp", name, args ?? new FirewallAddrgrpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallAddrgrp(string name, Input<string> id, FirewallAddrgrpState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/firewallAddrgrp:FirewallAddrgrp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallAddrgrp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallAddrgrp Get(string name, Input<string> id, FirewallAddrgrpState? state = null, CustomResourceOptions? options = null)
        {
            return new FirewallAddrgrp(name, id, state, options);
        }
    }

    public sealed class FirewallAddrgrpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowRouting")]
        public Input<string>? AllowRouting { get; set; }

        /// <summary>
        /// Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Color of icon on the GUI.
        /// </summary>
        [Input("color")]
        public Input<int>? Color { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable address exclusion. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("exclude")]
        public Input<string>? Exclude { get; set; }

        [Input("excludeMembers")]
        private InputList<Inputs.FirewallAddrgrpExcludeMemberArgs>? _excludeMembers;

        /// <summary>
        /// Address exclusion member. The structure of `exclude_member` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpExcludeMemberArgs> ExcludeMembers
        {
            get => _excludeMembers ?? (_excludeMembers = new InputList<Inputs.FirewallAddrgrpExcludeMemberArgs>());
            set => _excludeMembers = value;
        }

        /// <summary>
        /// Security Fabric global object setting. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fabricObject")]
        public Input<string>? FabricObject { get; set; }

        [Input("members", required: true)]
        private InputList<Inputs.FirewallAddrgrpMemberArgs>? _members;

        /// <summary>
        /// Address objects contained within the group. The structure of `member` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.FirewallAddrgrpMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Address group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("taggings")]
        private InputList<Inputs.FirewallAddrgrpTaggingArgs>? _taggings;

        /// <summary>
        /// Config object tagging. The structure of `tagging` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpTaggingArgs> Taggings
        {
            get => _taggings ?? (_taggings = new InputList<Inputs.FirewallAddrgrpTaggingArgs>());
            set => _taggings = value;
        }

        /// <summary>
        /// Address group type. Valid values: `default`, `folder`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("visibility")]
        public Input<string>? Visibility { get; set; }

        public FirewallAddrgrpArgs()
        {
        }
        public static new FirewallAddrgrpArgs Empty => new FirewallAddrgrpArgs();
    }

    public sealed class FirewallAddrgrpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowRouting")]
        public Input<string>? AllowRouting { get; set; }

        /// <summary>
        /// Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Color of icon on the GUI.
        /// </summary>
        [Input("color")]
        public Input<int>? Color { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable address exclusion. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("exclude")]
        public Input<string>? Exclude { get; set; }

        [Input("excludeMembers")]
        private InputList<Inputs.FirewallAddrgrpExcludeMemberGetArgs>? _excludeMembers;

        /// <summary>
        /// Address exclusion member. The structure of `exclude_member` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpExcludeMemberGetArgs> ExcludeMembers
        {
            get => _excludeMembers ?? (_excludeMembers = new InputList<Inputs.FirewallAddrgrpExcludeMemberGetArgs>());
            set => _excludeMembers = value;
        }

        /// <summary>
        /// Security Fabric global object setting. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fabricObject")]
        public Input<string>? FabricObject { get; set; }

        [Input("members")]
        private InputList<Inputs.FirewallAddrgrpMemberGetArgs>? _members;

        /// <summary>
        /// Address objects contained within the group. The structure of `member` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.FirewallAddrgrpMemberGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Address group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("taggings")]
        private InputList<Inputs.FirewallAddrgrpTaggingGetArgs>? _taggings;

        /// <summary>
        /// Config object tagging. The structure of `tagging` block is documented below.
        /// </summary>
        public InputList<Inputs.FirewallAddrgrpTaggingGetArgs> Taggings
        {
            get => _taggings ?? (_taggings = new InputList<Inputs.FirewallAddrgrpTaggingGetArgs>());
            set => _taggings = value;
        }

        /// <summary>
        /// Address group type. Valid values: `default`, `folder`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("visibility")]
        public Input<string>? Visibility { get; set; }

        public FirewallAddrgrpState()
        {
        }
        public static new FirewallAddrgrpState Empty => new FirewallAddrgrpState();
    }
}
