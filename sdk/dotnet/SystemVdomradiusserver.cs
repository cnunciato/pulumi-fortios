// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM.
    /// 
    /// ## Import
    /// 
    /// System VdomRadiusServer can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemVdomradiusserver:SystemVdomradiusserver labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/systemVdomradiusserver:SystemVdomradiusserver labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/systemVdomradiusserver:SystemVdomradiusserver")]
    public partial class SystemVdomradiusserver : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the VDOM that you are adding the RADIUS server to.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
        /// </summary>
        [Output("radiusServerVdom")]
        public Output<string> RadiusServerVdom { get; private set; } = null!;

        /// <summary>
        /// Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a SystemVdomradiusserver resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemVdomradiusserver(string name, SystemVdomradiusserverArgs args, CustomResourceOptions? options = null)
            : base("fortios:index/systemVdomradiusserver:SystemVdomradiusserver", name, args ?? new SystemVdomradiusserverArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemVdomradiusserver(string name, Input<string> id, SystemVdomradiusserverState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/systemVdomradiusserver:SystemVdomradiusserver", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemVdomradiusserver resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemVdomradiusserver Get(string name, Input<string> id, SystemVdomradiusserverState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemVdomradiusserver(name, id, state, options);
        }
    }

    public sealed class SystemVdomradiusserverArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the VDOM that you are adding the RADIUS server to.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
        /// </summary>
        [Input("radiusServerVdom", required: true)]
        public Input<string> RadiusServerVdom { get; set; } = null!;

        /// <summary>
        /// Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SystemVdomradiusserverArgs()
        {
        }
        public static new SystemVdomradiusserverArgs Empty => new SystemVdomradiusserverArgs();
    }

    public sealed class SystemVdomradiusserverState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the VDOM that you are adding the RADIUS server to.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
        /// </summary>
        [Input("radiusServerVdom")]
        public Input<string>? RadiusServerVdom { get; set; }

        /// <summary>
        /// Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SystemVdomradiusserverState()
        {
        }
        public static new SystemVdomradiusserverState Empty => new SystemVdomradiusserverState();
    }
}
