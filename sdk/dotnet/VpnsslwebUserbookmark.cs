// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure SSL VPN user bookmark.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.VpnsslwebUserbookmark("trname", new()
    ///     {
    ///         CustomLang = "big5",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VpnSslWeb UserBookmark can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/vpnsslwebUserbookmark:VpnsslwebUserbookmark labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/vpnsslwebUserbookmark:VpnsslwebUserbookmark labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/vpnsslwebUserbookmark:VpnsslwebUserbookmark")]
    public partial class VpnsslwebUserbookmark : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Bookmark table. The structure of `bookmarks` block is documented below.
        /// </summary>
        [Output("bookmarks")]
        public Output<ImmutableArray<Outputs.VpnsslwebUserbookmarkBookmark>> Bookmarks { get; private set; } = null!;

        /// <summary>
        /// Personal language.
        /// </summary>
        [Output("customLang")]
        public Output<string> CustomLang { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// User and group name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a VpnsslwebUserbookmark resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnsslwebUserbookmark(string name, VpnsslwebUserbookmarkArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/vpnsslwebUserbookmark:VpnsslwebUserbookmark", name, args ?? new VpnsslwebUserbookmarkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpnsslwebUserbookmark(string name, Input<string> id, VpnsslwebUserbookmarkState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/vpnsslwebUserbookmark:VpnsslwebUserbookmark", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnsslwebUserbookmark resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnsslwebUserbookmark Get(string name, Input<string> id, VpnsslwebUserbookmarkState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnsslwebUserbookmark(name, id, state, options);
        }
    }

    public sealed class VpnsslwebUserbookmarkArgs : global::Pulumi.ResourceArgs
    {
        [Input("bookmarks")]
        private InputList<Inputs.VpnsslwebUserbookmarkBookmarkArgs>? _bookmarks;

        /// <summary>
        /// Bookmark table. The structure of `bookmarks` block is documented below.
        /// </summary>
        public InputList<Inputs.VpnsslwebUserbookmarkBookmarkArgs> Bookmarks
        {
            get => _bookmarks ?? (_bookmarks = new InputList<Inputs.VpnsslwebUserbookmarkBookmarkArgs>());
            set => _bookmarks = value;
        }

        /// <summary>
        /// Personal language.
        /// </summary>
        [Input("customLang")]
        public Input<string>? CustomLang { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// User and group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public VpnsslwebUserbookmarkArgs()
        {
        }
        public static new VpnsslwebUserbookmarkArgs Empty => new VpnsslwebUserbookmarkArgs();
    }

    public sealed class VpnsslwebUserbookmarkState : global::Pulumi.ResourceArgs
    {
        [Input("bookmarks")]
        private InputList<Inputs.VpnsslwebUserbookmarkBookmarkGetArgs>? _bookmarks;

        /// <summary>
        /// Bookmark table. The structure of `bookmarks` block is documented below.
        /// </summary>
        public InputList<Inputs.VpnsslwebUserbookmarkBookmarkGetArgs> Bookmarks
        {
            get => _bookmarks ?? (_bookmarks = new InputList<Inputs.VpnsslwebUserbookmarkBookmarkGetArgs>());
            set => _bookmarks = value;
        }

        /// <summary>
        /// Personal language.
        /// </summary>
        [Input("customLang")]
        public Input<string>? CustomLang { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// User and group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public VpnsslwebUserbookmarkState()
        {
        }
        public static new VpnsslwebUserbookmarkState Empty => new VpnsslwebUserbookmarkState();
    }
}
