// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios
{
    /// <summary>
    /// Configure terms and conditions. Applies to FortiOS Version `&gt;= 7.0.2`.
    /// 
    /// ## Import
    /// 
    /// WirelessControllerHotspot20 H2QpTermsAndConditions can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wirelesscontrollerhotspot20H2qptermsandconditions:Wirelesscontrollerhotspot20H2qptermsandconditions labelname {{name}}
    /// ```
    /// 
    ///  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    ///  $ pulumi import fortios:index/wirelesscontrollerhotspot20H2qptermsandconditions:Wirelesscontrollerhotspot20H2qptermsandconditions labelname {{name}}
    /// ```
    /// 
    ///  $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:index/wirelesscontrollerhotspot20H2qptermsandconditions:Wirelesscontrollerhotspot20H2qptermsandconditions")]
    public partial class Wirelesscontrollerhotspot20H2qptermsandconditions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Filename.
        /// </summary>
        [Output("filename")]
        public Output<string> Filename { get; private set; } = null!;

        /// <summary>
        /// Terms and Conditions ID.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Timestamp.
        /// </summary>
        [Output("timestamp")]
        public Output<int> Timestamp { get; private set; } = null!;

        /// <summary>
        /// URL.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Wirelesscontrollerhotspot20H2qptermsandconditions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Wirelesscontrollerhotspot20H2qptermsandconditions(string name, Wirelesscontrollerhotspot20H2qptermsandconditionsArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:index/wirelesscontrollerhotspot20H2qptermsandconditions:Wirelesscontrollerhotspot20H2qptermsandconditions", name, args ?? new Wirelesscontrollerhotspot20H2qptermsandconditionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Wirelesscontrollerhotspot20H2qptermsandconditions(string name, Input<string> id, Wirelesscontrollerhotspot20H2qptermsandconditionsState? state = null, CustomResourceOptions? options = null)
            : base("fortios:index/wirelesscontrollerhotspot20H2qptermsandconditions:Wirelesscontrollerhotspot20H2qptermsandconditions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Wirelesscontrollerhotspot20H2qptermsandconditions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Wirelesscontrollerhotspot20H2qptermsandconditions Get(string name, Input<string> id, Wirelesscontrollerhotspot20H2qptermsandconditionsState? state = null, CustomResourceOptions? options = null)
        {
            return new Wirelesscontrollerhotspot20H2qptermsandconditions(name, id, state, options);
        }
    }

    public sealed class Wirelesscontrollerhotspot20H2qptermsandconditionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Filename.
        /// </summary>
        [Input("filename")]
        public Input<string>? Filename { get; set; }

        /// <summary>
        /// Terms and Conditions ID.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Timestamp.
        /// </summary>
        [Input("timestamp")]
        public Input<int>? Timestamp { get; set; }

        /// <summary>
        /// URL.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public Wirelesscontrollerhotspot20H2qptermsandconditionsArgs()
        {
        }
        public static new Wirelesscontrollerhotspot20H2qptermsandconditionsArgs Empty => new Wirelesscontrollerhotspot20H2qptermsandconditionsArgs();
    }

    public sealed class Wirelesscontrollerhotspot20H2qptermsandconditionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Filename.
        /// </summary>
        [Input("filename")]
        public Input<string>? Filename { get; set; }

        /// <summary>
        /// Terms and Conditions ID.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Timestamp.
        /// </summary>
        [Input("timestamp")]
        public Input<int>? Timestamp { get; set; }

        /// <summary>
        /// URL.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public Wirelesscontrollerhotspot20H2qptermsandconditionsState()
        {
        }
        public static new Wirelesscontrollerhotspot20H2qptermsandconditionsState Empty => new Wirelesscontrollerhotspot20H2qptermsandconditionsState();
    }
}
